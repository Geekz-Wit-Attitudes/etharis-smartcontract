{
	"compiler": {
		"version": "0.8.20+commit.a1b79de6"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "idrxToken_",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "feeRecipient_",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "initialOwner_",
						"type": "address"
					}
				],
				"stateMutability": "payable",
				"type": "constructor"
			},
			{
				"inputs": [],
				"name": "AccessControlBadConfirmation",
				"type": "error"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "account",
						"type": "address"
					},
					{
						"internalType": "bytes32",
						"name": "neededRole",
						"type": "bytes32"
					}
				],
				"name": "AccessControlUnauthorizedAccount",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "AmountMustBeGreaterThanZero",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "BriefHashRequired",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "CannotCancelThisDeal",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "CannotWithdrawIDRX",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "ContentUrlRequired",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "CreatorCannotBeBrand",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "DeadlineMustBeInFuture",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "DeadlineNotPassed",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "DealAlreadyExists",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "DealAlreadyFunded",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "DealNotFound",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "DealNotFunded",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "FeeTooHigh",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "InsufficientAllowance",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "InsufficientBalance",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "InvalidAddress",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "InvalidAmount",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "InvalidDealID",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "InvalidDealStatus",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "NotAuthorized",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "PermitFailed",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "ReasonRequired",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "ReviewPeriodEnded",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "ReviewPeriodNotEnded",
				"type": "error"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "token",
						"type": "address"
					}
				],
				"name": "SafeERC20FailedOperation",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "SubmissionDeadlinePassed",
				"type": "error"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "string",
						"name": "dealId",
						"type": "string"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "creator",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "string",
						"name": "contentUrl",
						"type": "string"
					},
					{
						"indexed": false,
						"internalType": "uint64",
						"name": "reviewDeadline",
						"type": "uint64"
					}
				],
				"name": "ContentSubmitted",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "string",
						"name": "dealId",
						"type": "string"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "brand",
						"type": "address"
					}
				],
				"name": "DealApproved",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "string",
						"name": "dealId",
						"type": "string"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "initiator",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint96",
						"name": "refundAmount",
						"type": "uint96"
					}
				],
				"name": "DealCancelled",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "string",
						"name": "dealId",
						"type": "string"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "brand",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "creator",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint96",
						"name": "amount",
						"type": "uint96"
					},
					{
						"indexed": false,
						"internalType": "uint64",
						"name": "deadline",
						"type": "uint64"
					}
				],
				"name": "DealCreated",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "string",
						"name": "dealId",
						"type": "string"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "brand",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint96",
						"name": "amount",
						"type": "uint96"
					}
				],
				"name": "DealFunded",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "string",
						"name": "dealId",
						"type": "string"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "brand",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "string",
						"name": "reason",
						"type": "string"
					}
				],
				"name": "DisputeInitiated",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "string",
						"name": "dealId",
						"type": "string"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "creator",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "bool",
						"name": "acceptedDispute",
						"type": "bool"
					},
					{
						"indexed": false,
						"internalType": "uint96",
						"name": "creatorAmount",
						"type": "uint96"
					},
					{
						"indexed": false,
						"internalType": "uint96",
						"name": "brandRefund",
						"type": "uint96"
					}
				],
				"name": "DisputeResolved",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "oldRecipient",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "newRecipient",
						"type": "address"
					}
				],
				"name": "FeeRecipientUpdated",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "account",
						"type": "address"
					}
				],
				"name": "Paused",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "string",
						"name": "dealId",
						"type": "string"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "creator",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint96",
						"name": "amount",
						"type": "uint96"
					},
					{
						"indexed": false,
						"internalType": "uint96",
						"name": "platformFee",
						"type": "uint96"
					}
				],
				"name": "PaymentReleased",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint96",
						"name": "oldFee",
						"type": "uint96"
					},
					{
						"indexed": false,
						"internalType": "uint96",
						"name": "newFee",
						"type": "uint96"
					}
				],
				"name": "PlatformFeeUpdated",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "bytes32",
						"name": "role",
						"type": "bytes32"
					},
					{
						"indexed": true,
						"internalType": "bytes32",
						"name": "previousAdminRole",
						"type": "bytes32"
					},
					{
						"indexed": true,
						"internalType": "bytes32",
						"name": "newAdminRole",
						"type": "bytes32"
					}
				],
				"name": "RoleAdminChanged",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "bytes32",
						"name": "role",
						"type": "bytes32"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "account",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "sender",
						"type": "address"
					}
				],
				"name": "RoleGranted",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "bytes32",
						"name": "role",
						"type": "bytes32"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "account",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "sender",
						"type": "address"
					}
				],
				"name": "RoleRevoked",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "account",
						"type": "address"
					}
				],
				"name": "Unpaused",
				"type": "event"
			},
			{
				"inputs": [],
				"name": "DEFAULT_ADMIN_ROLE",
				"outputs": [
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "SERVER_ROLE",
				"outputs": [
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "_dealId",
						"type": "string"
					},
					{
						"internalType": "address",
						"name": "_creatorAddress",
						"type": "address"
					}
				],
				"name": "acceptDeal",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "_dealId",
						"type": "string"
					},
					{
						"internalType": "address",
						"name": "_brandAddress",
						"type": "address"
					}
				],
				"name": "approveDeal",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "_dealId",
						"type": "string"
					}
				],
				"name": "autoRefundAfterDeadline",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "_dealId",
						"type": "string"
					}
				],
				"name": "autoReleasePayment",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_brand",
						"type": "address"
					}
				],
				"name": "brandDeals",
				"outputs": [
					{
						"internalType": "string[]",
						"name": "",
						"type": "string[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "_dealId",
						"type": "string"
					}
				],
				"name": "canAutoRelease",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "_dealId",
						"type": "string"
					},
					{
						"internalType": "address",
						"name": "_brandAddress",
						"type": "address"
					}
				],
				"name": "cancelDeal",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "_dealId",
						"type": "string"
					},
					{
						"internalType": "address",
						"name": "_brandAddress",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_creatorAddress",
						"type": "address"
					},
					{
						"internalType": "uint96",
						"name": "_amount",
						"type": "uint96"
					},
					{
						"internalType": "uint64",
						"name": "_deadline",
						"type": "uint64"
					},
					{
						"internalType": "string",
						"name": "_briefHash",
						"type": "string"
					}
				],
				"name": "createDeal",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_creator",
						"type": "address"
					}
				],
				"name": "creatorDeals",
				"outputs": [
					{
						"internalType": "string[]",
						"name": "",
						"type": "string[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "_dealId",
						"type": "string"
					}
				],
				"name": "deals",
				"outputs": [
					{
						"components": [
							{
								"internalType": "address",
								"name": "brand",
								"type": "address"
							},
							{
								"internalType": "address",
								"name": "creator",
								"type": "address"
							},
							{
								"internalType": "string",
								"name": "dealId",
								"type": "string"
							},
							{
								"internalType": "string",
								"name": "briefHash",
								"type": "string"
							},
							{
								"internalType": "string",
								"name": "contentUrl",
								"type": "string"
							},
							{
								"internalType": "string",
								"name": "disputeReason",
								"type": "string"
							},
							{
								"internalType": "uint96",
								"name": "amount",
								"type": "uint96"
							},
							{
								"internalType": "uint64",
								"name": "deadline",
								"type": "uint64"
							},
							{
								"internalType": "uint64",
								"name": "fundedAt",
								"type": "uint64"
							},
							{
								"internalType": "uint64",
								"name": "submittedAt",
								"type": "uint64"
							},
							{
								"internalType": "uint64",
								"name": "reviewDeadline",
								"type": "uint64"
							},
							{
								"internalType": "uint64",
								"name": "disputedAt",
								"type": "uint64"
							},
							{
								"internalType": "uint64",
								"name": "createdAt",
								"type": "uint64"
							},
							{
								"internalType": "enum EtharisEscrow.ContractStatus",
								"name": "status",
								"type": "uint8"
							},
							{
								"internalType": "bool",
								"name": "acceptedDispute",
								"type": "bool"
							},
							{
								"internalType": "bool",
								"name": "exists",
								"type": "bool"
							}
						],
						"internalType": "struct EtharisEscrow.Deal",
						"name": "",
						"type": "tuple"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "_dealId",
						"type": "string"
					}
				],
				"name": "emergencyCancelDeal",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_token",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_amount",
						"type": "uint256"
					}
				],
				"name": "emergencyWithdraw",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "feeRecipient",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "_dealId",
						"type": "string"
					},
					{
						"internalType": "address",
						"name": "_brandAddress",
						"type": "address"
					},
					{
						"internalType": "uint96",
						"name": "_amount",
						"type": "uint96"
					},
					{
						"internalType": "uint256",
						"name": "_deadline",
						"type": "uint256"
					},
					{
						"internalType": "uint8",
						"name": "_v",
						"type": "uint8"
					},
					{
						"internalType": "bytes32",
						"name": "_r",
						"type": "bytes32"
					},
					{
						"internalType": "bytes32",
						"name": "_s",
						"type": "bytes32"
					}
				],
				"name": "fundDeal",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "_dealId",
						"type": "string"
					}
				],
				"name": "getDeal",
				"outputs": [
					{
						"internalType": "string",
						"name": "dealId",
						"type": "string"
					},
					{
						"internalType": "address",
						"name": "brand",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "creator",
						"type": "address"
					},
					{
						"internalType": "uint96",
						"name": "amount",
						"type": "uint96"
					},
					{
						"internalType": "uint64",
						"name": "deadline",
						"type": "uint64"
					},
					{
						"internalType": "enum EtharisEscrow.ContractStatus",
						"name": "status",
						"type": "uint8"
					},
					{
						"internalType": "string",
						"name": "briefHash",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "contentUrl",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "disputeReason",
						"type": "string"
					},
					{
						"internalType": "uint64",
						"name": "reviewDeadline",
						"type": "uint64"
					},
					{
						"internalType": "uint64",
						"name": "fundedAt",
						"type": "uint64"
					},
					{
						"internalType": "uint64",
						"name": "submittedAt",
						"type": "uint64"
					},
					{
						"internalType": "uint64",
						"name": "disputedAt",
						"type": "uint64"
					},
					{
						"internalType": "uint64",
						"name": "createdAt",
						"type": "uint64"
					},
					{
						"internalType": "bool",
						"name": "acceptedDispute",
						"type": "bool"
					},
					{
						"internalType": "bool",
						"name": "exists",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_userAddress",
						"type": "address"
					},
					{
						"internalType": "bool",
						"name": "_isBrand",
						"type": "bool"
					}
				],
				"name": "getDeals",
				"outputs": [
					{
						"internalType": "string[]",
						"name": "",
						"type": "string[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "role",
						"type": "bytes32"
					}
				],
				"name": "getRoleAdmin",
				"outputs": [
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "role",
						"type": "bytes32"
					},
					{
						"internalType": "address",
						"name": "account",
						"type": "address"
					}
				],
				"name": "grantRole",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "role",
						"type": "bytes32"
					},
					{
						"internalType": "address",
						"name": "account",
						"type": "address"
					}
				],
				"name": "hasRole",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "idrxToken",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "_dealId",
						"type": "string"
					},
					{
						"internalType": "address",
						"name": "_brandAddress",
						"type": "address"
					},
					{
						"internalType": "string",
						"name": "_reason",
						"type": "string"
					}
				],
				"name": "initiateDispute",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "pause",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "paused",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "platformFeeBps",
				"outputs": [
					{
						"internalType": "uint96",
						"name": "",
						"type": "uint96"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "role",
						"type": "bytes32"
					},
					{
						"internalType": "address",
						"name": "callerConfirmation",
						"type": "address"
					}
				],
				"name": "renounceRole",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "_dealId",
						"type": "string"
					},
					{
						"internalType": "address",
						"name": "_creatorAddress",
						"type": "address"
					},
					{
						"internalType": "bool",
						"name": "_acceptDispute",
						"type": "bool"
					}
				],
				"name": "resolveDispute",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "role",
						"type": "bytes32"
					},
					{
						"internalType": "address",
						"name": "account",
						"type": "address"
					}
				],
				"name": "revokeRole",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "_dealId",
						"type": "string"
					},
					{
						"internalType": "address",
						"name": "_creatorAddress",
						"type": "address"
					},
					{
						"internalType": "string",
						"name": "_contentUrl",
						"type": "string"
					}
				],
				"name": "submitContent",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes4",
						"name": "interfaceId",
						"type": "bytes4"
					}
				],
				"name": "supportsInterface",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "unpause",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_newRecipient",
						"type": "address"
					}
				],
				"name": "updateFeeRecipient",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint96",
						"name": "_newFeeBps",
						"type": "uint96"
					}
				],
				"name": "updatePlatformFee",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"author": "Etharis Team",
			"details": "Escrow contract for sponsorship deals. All action functions can only be called by the Server Wallet (Owner).",
			"errors": {
				"AccessControlBadConfirmation()": [
					{
						"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
					}
				],
				"AccessControlUnauthorizedAccount(address,bytes32)": [
					{
						"details": "The `account` is missing a role."
					}
				],
				"SafeERC20FailedOperation(address)": [
					{
						"details": "An operation with an ERC-20 token failed."
					}
				]
			},
			"events": {
				"Paused(address)": {
					"details": "Emitted when the pause is triggered by `account`."
				},
				"RoleAdminChanged(bytes32,bytes32,bytes32)": {
					"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this."
				},
				"RoleGranted(bytes32,address,address)": {
					"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
				},
				"RoleRevoked(bytes32,address,address)": {
					"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
				},
				"Unpaused(address)": {
					"details": "Emitted when the pause is lifted by `account`."
				}
			},
			"kind": "dev",
			"methods": {
				"createDeal(string,address,address,uint96,uint64,string)": {
					"details": "Only SERVER_ROLE can call this function"
				},
				"fundDeal(string,address,uint96,uint256,uint8,bytes32,bytes32)": {
					"details": "Brands sign permit off-chain, server executes with signature for gasless transaction"
				},
				"getRoleAdmin(bytes32)": {
					"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
				},
				"grantRole(bytes32,address)": {
					"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
				},
				"hasRole(bytes32,address)": {
					"details": "Returns `true` if `account` has been granted `role`."
				},
				"paused()": {
					"details": "Returns true if the contract is paused, and false otherwise."
				},
				"renounceRole(bytes32,address)": {
					"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
				},
				"revokeRole(bytes32,address)": {
					"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
				},
				"supportsInterface(bytes4)": {
					"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
				}
			},
			"title": "EtharisEscrow",
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {
				"acceptDeal(string,address)": {
					"notice": "[CUSTODIAL] Creator accepts the funded deal"
				},
				"approveDeal(string,address)": {
					"notice": "[CUSTODIAL] Brand approve content & release payment."
				},
				"autoRefundAfterDeadline(string)": {
					"notice": "Triggers a full refund to the Brand if the Creator fails to submit content before the deadline."
				},
				"autoReleasePayment(string)": {
					"notice": "Auto-release payment after review period"
				},
				"cancelDeal(string,address)": {
					"notice": "[CUSTODIAL] Cancel the deal before it is funded."
				},
				"createDeal(string,address,address,uint96,uint64,string)": {
					"notice": "[CUSTODIAL] Brand creates a new deal."
				},
				"emergencyCancelDeal(string)": {
					"notice": "Emergency cancel deal (SERVER_ROLE only)."
				},
				"fundDeal(string,address,uint96,uint256,uint8,bytes32,bytes32)": {
					"notice": "[CUSTODIAL] Brand fund deal with gasless permit support"
				},
				"initiateDispute(string,address,string)": {
					"notice": "[CUSTODIAL] Brand initiate dispute."
				},
				"resolveDispute(string,address,bool)": {
					"notice": "[CUSTODIAL] Creator resolve dispute."
				},
				"submitContent(string,address,string)": {
					"notice": "[CUSTODIAL] Creator submits the content."
				}
			},
			"notice": "Uses IDRX as the payment token (Indonesian Rupiah stablecoin).",
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/EtharisEscrow.sol": "EtharisEscrow"
		},
		"evmVersion": "shanghai",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": true,
			"runs": 200
		},
		"remappings": [],
		"viaIR": true
	},
	"sources": {
		"@openzeppelin/contracts/access/AccessControl.sol": {
			"keccak256": "0x1a6b4f6b7798ab80929d491b89d5427a9b3338c0fd1acd0ba325f69c6f1646af",
			"license": "MIT",
			"urls": [
				"bzz-raw://7bb7f346c12a14dc622bc105ce3c47202fbc89f4b153a28a63bb68193297330c",
				"dweb:/ipfs/QmagwF8P3bUBXwdo159ueEnY9dLSvEWwK24kk2op58egwG"
			]
		},
		"@openzeppelin/contracts/access/IAccessControl.sol": {
			"keccak256": "0xbff9f59c84e5337689161ce7641c0ef8e872d6a7536fbc1f5133f128887aba3c",
			"license": "MIT",
			"urls": [
				"bzz-raw://b308f882e796f7b79c9502deacb0a62983035c6f6f4e962b319ba6a1f4a77d3d",
				"dweb:/ipfs/QmaWCW7ahEQqFjwhSUhV7Ae7WhfNvzSpE7DQ58hvEooqPL"
			]
		},
		"@openzeppelin/contracts/interfaces/IERC1363.sol": {
			"keccak256": "0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d",
			"license": "MIT",
			"urls": [
				"bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100",
				"dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d"
			]
		},
		"@openzeppelin/contracts/interfaces/IERC165.sol": {
			"keccak256": "0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc",
			"license": "MIT",
			"urls": [
				"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037",
				"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ"
			]
		},
		"@openzeppelin/contracts/interfaces/IERC20.sol": {
			"keccak256": "0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44",
			"license": "MIT",
			"urls": [
				"bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d",
				"dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF"
			]
		},
		"@openzeppelin/contracts/security/Pausable.sol": {
			"keccak256": "0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773",
			"license": "MIT",
			"urls": [
				"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004",
				"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B"
			]
		},
		"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
			"keccak256": "0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1",
			"license": "MIT",
			"urls": [
				"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34",
				"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1"
			]
		},
		"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
			"keccak256": "0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2",
			"license": "MIT",
			"urls": [
				"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303",
				"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV"
			]
		},
		"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
			"keccak256": "0x2fa0657dd7b8bc75475a47f64bc04a9adb42236b15d65e6781594ea69a46c3e4",
			"license": "MIT",
			"urls": [
				"bzz-raw://7496f42681aed94bf0142a077324e50b86046610c1724e7c12e96cf1c365914a",
				"dweb:/ipfs/QmZvhNdSAAbN4PKPdheAqwpXukUiXp3Q3TdQccDMg2NDTV"
			]
		},
		"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
			"keccak256": "0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5",
			"license": "MIT",
			"urls": [
				"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508",
				"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB"
			]
		},
		"@openzeppelin/contracts/utils/Context.sol": {
			"keccak256": "0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2",
			"license": "MIT",
			"urls": [
				"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12",
				"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF"
			]
		},
		"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
			"keccak256": "0x2d9dc2fe26180f74c11c13663647d38e259e45f95eb88f57b61d2160b0109d3e",
			"license": "MIT",
			"urls": [
				"bzz-raw://81233d1f98060113d9922180bb0f14f8335856fe9f339134b09335e9f678c377",
				"dweb:/ipfs/QmWh6R35SarhAn4z2wH8SU456jJSYL2FgucfTFgbHJJN4E"
			]
		},
		"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
			"keccak256": "0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c",
			"license": "MIT",
			"urls": [
				"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617",
				"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u"
			]
		},
		"contracts/EtharisEscrow.sol": {
			"keccak256": "0x3b23fbf4d90f6b0eaf3df601e74b81deab9faafc11975c12e05178b965f5b9bd",
			"license": "MIT",
			"urls": [
				"bzz-raw://d2bcbc55ab9ecc045eb62295ffedbd18b69b8fea1794b3bc0fda9bcf6fd03939",
				"dweb:/ipfs/QmZUpZ8Zd94fGtS2otYLbaHucLDfEUbg3PXJte3SCSvX32"
			]
		}
	},
	"version": 1
}