{
	"id": "4386fc292eb1785c27e24091855b9b03",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.20",
	"solcLongVersion": "0.8.20+commit.a1b79de6",
	"input": {
		"language": "Solidity",
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"viaIR": true,
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		},
		"sources": {
			"contracts/EtharisEscrow.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.20;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\nimport \"@openzeppelin/contracts/security/Pausable.sol\";\nimport \"@openzeppelin/contracts/access/AccessControl.sol\";\n\n/**\n * @title EtharisEscrow\n * @author Etharis Team\n * @dev Escrow contract for sponsorship deals. All action functions can only be called by the Server Wallet (Owner).\n * @notice Uses IDRX as the payment token (Indonesian Rupiah stablecoin).\n */\ncontract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {\n    using SafeERC20 for IERC20;\n\n    // ============ CUSTOM ERRORS (Gas Optimization) ============\n    error DealAlreadyExists();\n    error InvalidAddress();\n    error CreatorCannotBeBrand();\n    error AmountMustBeGreaterThanZero();\n    error DeadlineMustBeInFuture();\n    error BriefHashRequired();\n    error DealNotFound();\n    error InvalidDealStatus();\n    error NotAuthorized();\n    error DealAlreadyFunded();\n    error InsufficientBalance();\n    error InsufficientAllowance();\n    error DealNotFunded();\n    error SubmissionDeadlinePassed();\n    error ContentUrlRequired();\n    error ReviewPeriodNotEnded();\n    error ReviewPeriodEnded();\n    error ReasonRequired();\n    error DeadlineNotPassed();\n    error CannotCancelThisDeal();\n    error FeeTooHigh();\n    error CannotWithdrawIDRX();\n    error InvalidDealID();\n    error InvalidAmount();\n    error PermitFailed();\n\n    // ============ STATE VARIABLES ============\n    IERC20 private immutable _idrxToken;\n    uint96 private _platformFeeBps = 250; // 2.5%\n    uint96 private constant BPS_DENOMINATOR = 10000;\n    uint64 private constant REVIEW_PERIOD = 72 hours;\n    address private _feeRecipient;\n\n    bytes32 public constant SERVER_ROLE = keccak256(\"SERVER_ROLE\");\n\n    enum ContractStatus {\n        PENDING,\n        ACTIVE,\n        PENDING_REVIEW,\n        DISPUTED,\n        COMPLETED,\n        CANCELLED\n    }\n\n    struct Deal {\n        address brand;\n        address creator;\n        string dealId;\n        string briefHash;\n        string contentUrl;\n        string disputeReason;\n        uint96 amount;\n        uint64 deadline;\n        uint64 fundedAt;\n        uint64 submittedAt;\n        uint64 reviewDeadline;\n        uint64 disputedAt;\n        uint64 createdAt;\n        ContractStatus status;\n        bool acceptedDispute; \n        bool exists;\n    }\n\n    mapping(string dealId => Deal dealData) private _deals;\n    mapping(address user => string[] dealIds) private _brandDeals;\n    mapping(address user => string[] dealIds) private _creatorDeals;\n\n    // ============ EVENTS ============\n    event DealCreated(\n        string indexed dealId,\n        address indexed brand,\n        address indexed creator,\n        uint96 amount,\n        uint64 deadline\n    );\n    event DealFunded(\n        string indexed dealId,\n        address indexed brand,\n        uint96 amount\n    );\n    event ContentSubmitted(\n        string indexed dealId,\n        address indexed creator,\n        string contentUrl,\n        uint64 reviewDeadline\n    );\n    event DealApproved(string indexed dealId, address indexed brand);\n    event PaymentReleased(\n        string indexed dealId,\n        address indexed creator,\n        uint96 amount,\n        uint96 platformFee\n    );\n    event DisputeInitiated(\n        string indexed dealId,\n        address indexed brand,\n        string reason\n    );\n    event DisputeResolved(\n        string indexed dealId,\n        address indexed creator,\n        bool acceptedDispute,\n        uint96 creatorAmount,\n        uint96 brandRefund\n    );\n    event DealCancelled(\n        string indexed dealId,\n        address indexed initiator,\n        uint96 refundAmount\n    );\n    event PlatformFeeUpdated(uint96 oldFee, uint96 newFee);\n    event FeeRecipientUpdated(address oldRecipient, address newRecipient);\n\n    // ============ MODIFIERS ============\n    modifier onlyDealBrand(string memory _dealId, address _brand) {\n        if (_deals[_dealId].brand != _brand) revert NotAuthorized();\n        _;\n    }\n\n    modifier onlyDealCreator(string memory _dealId, address _creator) {\n        if (_deals[_dealId].creator != _creator) revert NotAuthorized();\n        _;\n    }\n\n    modifier dealExists(string memory _dealId) {\n        if (!_deals[_dealId].exists) revert DealNotFound();\n        _;\n    }\n\n    modifier inStatus(string memory _dealId, ContractStatus _status) {\n        if (_deals[_dealId].status != _status) revert InvalidDealStatus();\n        _;\n    }\n\n    // ============ CONSTRUCTOR ============\n    constructor(\n        address idrxToken_,\n        address feeRecipient_,\n        address initialOwner_\n    ) payable {\n        if (idrxToken_ == address(0)) revert InvalidAddress();\n        if (feeRecipient_ == address(0)) revert InvalidAddress();\n        if (initialOwner_ == address(0)) revert InvalidAddress();\n\n        _idrxToken = IERC20(idrxToken_);\n        _feeRecipient = feeRecipient_;\n\n        _grantRole(SERVER_ROLE, initialOwner_);\n        _setRoleAdmin(SERVER_ROLE, SERVER_ROLE);\n    }\n\n    // =================================================================\n    // CUSTODIAL USER ACTIONS (Called by the Server Wallet)\n    // =================================================================\n\n    /**\n     * @notice [CUSTODIAL] Brand creates a new deal.\n     * @dev Only SERVER_ROLE can call this function\n     */\n    function createDeal(\n        string memory _dealId,\n        address _brandAddress,\n        address _creatorAddress,\n        uint96 _amount,\n        uint64 _deadline,\n        string memory _briefHash\n    ) external onlyRole(SERVER_ROLE) whenNotPaused {\n        if (_deals[_dealId].exists) revert DealAlreadyExists();\n        if (_creatorAddress == address(0)) revert InvalidAddress();\n        if (_brandAddress == address(0)) revert InvalidAddress();\n        if (_brandAddress == _creatorAddress) revert CreatorCannotBeBrand();\n        if (_amount == 0) revert AmountMustBeGreaterThanZero();\n        if (_deadline <= block.timestamp) revert DeadlineMustBeInFuture();\n        if (bytes(_briefHash).length == 0) revert BriefHashRequired();\n\n        // Assign struct fields individually for better gas efficiency\n        Deal storage deal = _deals[_dealId];\n        deal.dealId = _dealId;\n        deal.brand = _brandAddress;\n        deal.creator = _creatorAddress;\n        deal.amount = _amount;\n        deal.deadline = _deadline;\n        deal.briefHash = _briefHash;\n        deal.status = ContractStatus.PENDING;\n        deal.createdAt = uint64(block.timestamp);\n        deal.contentUrl = \"\";\n        deal.exists = true;\n        // fundedAt, submittedAt, reviewDeadline default to 0\n\n        _brandDeals[_brandAddress].push(_dealId);\n        _creatorDeals[_creatorAddress].push(_dealId);\n\n        emit DealCreated(\n            _dealId,\n            _brandAddress,\n            _creatorAddress,\n            _amount,\n            _deadline\n        );\n    }\n\n    /**\n     * @notice [CUSTODIAL] Brand fund deal with gasless permit support\n     * @dev Brands sign permit off-chain, server executes with signature for gasless transaction\n     */\n    function fundDeal(\n        string memory _dealId,\n        address _brandAddress,\n        uint96 _amount,\n        uint256 _deadline,\n        uint8 _v,\n        bytes32 _r,\n        bytes32 _s\n    )\n        external\n        nonReentrant\n        onlyRole(SERVER_ROLE)\n        whenNotPaused\n        dealExists(_dealId)\n        onlyDealBrand(_dealId, _brandAddress)\n        inStatus(_dealId, ContractStatus.PENDING)\n    {\n        if (bytes(_dealId).length == 0) revert InvalidDealID();\n        if (_amount == 0) revert InvalidAmount();\n\n        Deal storage deal = _deals[_dealId];\n\n        if (deal.fundedAt != 0) revert DealAlreadyFunded();\n\n        // Cache address(this) to save gas\n        address cachedThis = address(this);\n        IERC20 token = _idrxToken;\n\n        uint256 brandBalance = token.balanceOf(_brandAddress);\n        if (brandBalance < _amount) revert InsufficientBalance();\n\n        // Safe Permit: Only execute if signature is provided\n        if (_v != 0 || _r != bytes32(0) || _s != bytes32(0)) {\n            _executePermit(\n                _brandAddress,\n                cachedThis,\n                _amount,\n                _deadline,\n                _v,\n                _r,\n                _s\n            );\n        }\n\n        uint256 allowance = token.allowance(_brandAddress, cachedThis);\n        if (allowance < _amount) revert InsufficientAllowance();\n\n        token.safeTransferFrom(_brandAddress, cachedThis, _amount);\n\n        deal.fundedAt = uint64(block.timestamp);\n\n        emit DealFunded(_dealId, _brandAddress, _amount);\n    }\n\n    /**\n     * @notice [CUSTODIAL] Creator accepts the funded deal\n     */\n    function acceptDeal(\n        string memory _dealId,\n        address _creatorAddress\n    )\n        external\n        onlyRole(SERVER_ROLE)\n        whenNotPaused\n        dealExists(_dealId)\n        onlyDealCreator(_dealId, _creatorAddress)\n        inStatus(_dealId, ContractStatus.PENDING)\n    {\n        Deal storage deal = _deals[_dealId];\n\n        if (deal.fundedAt == 0) revert DealNotFunded();\n\n        deal.status = ContractStatus.ACTIVE;\n\n        emit DealApproved(_dealId, _creatorAddress);\n    }\n\n    /**\n     * @notice [CUSTODIAL] Creator submits the content.\n     */\n    function submitContent(\n        string memory _dealId,\n        address _creatorAddress,\n        string memory _contentUrl\n    )\n        external\n        onlyRole(SERVER_ROLE)\n        whenNotPaused\n        dealExists(_dealId)\n        onlyDealCreator(_dealId, _creatorAddress)\n        inStatus(_dealId, ContractStatus.ACTIVE)\n    {\n        Deal storage deal = _deals[_dealId];\n\n        if (block.timestamp > deal.deadline) revert SubmissionDeadlinePassed();\n        if (bytes(_contentUrl).length == 0) revert ContentUrlRequired();\n\n        deal.status = ContractStatus.PENDING_REVIEW;\n        deal.submittedAt = uint64(block.timestamp);\n        deal.reviewDeadline = uint64(block.timestamp + REVIEW_PERIOD);\n        deal.contentUrl = _contentUrl;\n\n        emit ContentSubmitted(\n            _dealId,\n            _creatorAddress,\n            _contentUrl,\n            deal.reviewDeadline\n        );\n    }\n\n    /**\n     * @notice [CUSTODIAL] Brand approve content & release payment.\n     */\n    function approveDeal(\n        string memory _dealId,\n        address _brandAddress\n    )\n        external\n        nonReentrant\n        onlyRole(SERVER_ROLE)\n        whenNotPaused\n        dealExists(_dealId)\n        onlyDealBrand(_dealId, _brandAddress)\n        inStatus(_dealId, ContractStatus.PENDING_REVIEW)\n    {\n        Deal storage deal = _deals[_dealId];\n\n        // Inline _releasePayment for gas savings (avoid extra function call)\n        uint96 platformFee = (deal.amount * _platformFeeBps) / BPS_DENOMINATOR;\n        uint96 creatorAmount = deal.amount - platformFee;\n\n        deal.status = ContractStatus.COMPLETED;\n\n        emit DealApproved(_dealId, _brandAddress);\n\n        IERC20 token = _idrxToken;\n        if (creatorAmount != 0) {\n            token.safeTransfer(deal.creator, creatorAmount);\n        }\n\n        if (platformFee != 0) {\n            token.safeTransfer(_feeRecipient, platformFee);\n        }\n\n        emit PaymentReleased(_dealId, deal.creator, creatorAmount, platformFee);\n    }\n\n    /**\n     * @notice Auto-release payment after review period\n     */\n    function autoReleasePayment(\n        string memory _dealId\n    )\n        external\n        nonReentrant\n        onlyRole(SERVER_ROLE)\n        whenNotPaused\n        dealExists(_dealId)\n        inStatus(_dealId, ContractStatus.PENDING_REVIEW)\n    {\n        Deal storage deal = _deals[_dealId];\n        if (block.timestamp < deal.reviewDeadline)\n            revert ReviewPeriodNotEnded();\n\n        // Inline _releasePayment for gas savings\n        uint96 platformFee = (deal.amount * _platformFeeBps) / BPS_DENOMINATOR;\n        uint96 creatorAmount = deal.amount - platformFee;\n\n        deal.status = ContractStatus.COMPLETED;\n\n        IERC20 token = _idrxToken;\n        if (creatorAmount != 0) {\n            token.safeTransfer(deal.creator, creatorAmount);\n        }\n\n        if (platformFee != 0) {\n            token.safeTransfer(_feeRecipient, platformFee);\n        }\n\n        emit PaymentReleased(_dealId, deal.creator, creatorAmount, platformFee);\n    }\n\n    /**\n     * @notice [CUSTODIAL] Brand initiate dispute.\n     */\n    function initiateDispute(\n        string memory _dealId,\n        address _brandAddress,\n        string memory _reason\n    )\n        external\n        onlyRole(SERVER_ROLE)\n        whenNotPaused\n        dealExists(_dealId)\n        onlyDealBrand(_dealId, _brandAddress)\n        inStatus(_dealId, ContractStatus.PENDING_REVIEW)\n    {\n        Deal storage deal = _deals[_dealId];\n        if (block.timestamp >= deal.reviewDeadline) revert ReviewPeriodEnded();\n        if (bytes(_reason).length == 0) revert ReasonRequired();\n\n        deal.status = ContractStatus.DISPUTED;\n        deal.disputeReason = _reason;\n        deal.disputedAt = uint64(block.timestamp);\n\n        emit DisputeInitiated(_dealId, _brandAddress, _reason);\n    }\n\n    /**\n     * @notice [CUSTODIAL] Creator resolve dispute.\n     */\n    function resolveDispute(\n        string memory _dealId,\n        address _creatorAddress,\n        bool _acceptDispute\n    )\n        external\n        nonReentrant\n        onlyRole(SERVER_ROLE)\n        whenNotPaused\n        dealExists(_dealId)\n        onlyDealCreator(_dealId, _creatorAddress)\n        inStatus(_dealId, ContractStatus.DISPUTED)\n    {\n        Deal storage deal = _deals[_dealId];\n\n        // Cache storage variables\n        uint96 totalEscrow = deal.amount;\n        address creator = deal.creator;\n        address brand = deal.brand;\n        address feeRecip = _feeRecipient;\n        uint96 feeBps = _platformFeeBps;\n\n        deal.status = ContractStatus.COMPLETED;\n        deal.acceptedDispute = _acceptDispute;\n\n        uint96 creatorAmount;\n        uint96 brandRefund;\n        uint96 platformFee;\n\n        IERC20 token = _idrxToken;\n        \n        \n        if (_acceptDispute) {\n            uint96 grossPayout = (totalEscrow * 5000) / BPS_DENOMINATOR; // 50%\n            brandRefund = totalEscrow - grossPayout;\n\n            platformFee = (grossPayout * feeBps) / BPS_DENOMINATOR;\n            uint96 creatorNet = grossPayout - platformFee;\n\n            creatorAmount = creatorNet;\n\n            if (creatorNet != 0) token.safeTransfer(creator, creatorNet);\n            if (brandRefund != 0) token.safeTransfer(brand, brandRefund);\n            if (platformFee != 0) token.safeTransfer(feeRecip, platformFee);\n        } else {\n            creatorAmount = 0;\n            brandRefund = totalEscrow;\n            platformFee = 0;\n\n            if (brandRefund != 0) token.safeTransfer(brand, brandRefund);\n        }\n\n        emit DisputeResolved(\n            _dealId,\n            _creatorAddress,\n            _acceptDispute,\n            creatorAmount,\n            brandRefund\n        );\n        emit PaymentReleased(_dealId, creator, creatorAmount, platformFee);\n    }\n\n    /**\n     * @notice Triggers a full refund to the Brand if the Creator fails to submit content before the deadline.\n     */\n    function autoRefundAfterDeadline(\n        string memory _dealId\n    )\n        external\n        nonReentrant\n        onlyRole(SERVER_ROLE)\n        whenNotPaused\n        dealExists(_dealId)\n        inStatus(_dealId, ContractStatus.ACTIVE)\n    {\n        Deal storage deal = _deals[_dealId];\n\n        if (block.timestamp <= deal.deadline) revert DeadlineNotPassed();\n\n        uint96 refundAmount = deal.amount;\n\n        deal.status = ContractStatus.CANCELLED;\n\n        if (refundAmount != 0) {\n            _idrxToken.safeTransfer(deal.brand, refundAmount);\n        }\n\n        emit DealCancelled(_dealId, msg.sender, refundAmount);\n    }\n\n    /**\n     * @notice [CUSTODIAL] Cancel the deal before it is funded.\n     */\n    function cancelDeal(\n        string memory _dealId,\n        address _brandAddress\n    )\n        external\n        onlyRole(SERVER_ROLE)\n        dealExists(_dealId)\n        onlyDealBrand(_dealId, _brandAddress)\n        inStatus(_dealId, ContractStatus.PENDING)\n    {\n        _deals[_dealId].status = ContractStatus.CANCELLED;\n\n        emit DealCancelled(_dealId, _brandAddress, 0);\n    }\n\n    /**\n     * @notice Emergency cancel deal (SERVER_ROLE only).\n     */\n    function emergencyCancelDeal(\n        string memory _dealId\n    ) external nonReentrant onlyRole(SERVER_ROLE) dealExists(_dealId) {\n        Deal storage deal = _deals[_dealId];\n\n        // Nested if for gas optimization (short-circuit evaluation)\n        if (deal.status != ContractStatus.ACTIVE) {\n            if (deal.status != ContractStatus.PENDING_REVIEW) {\n                revert CannotCancelThisDeal();\n            }\n        }\n\n        uint96 refundAmount = deal.amount;\n        deal.status = ContractStatus.CANCELLED;\n\n        if (refundAmount != 0) {\n            _idrxToken.safeTransfer(deal.brand, refundAmount);\n        }\n\n        emit DealCancelled(_dealId, msg.sender, refundAmount);\n    }\n\n    // =================================================================\n    // VIEW FUNCTIONS (GETTERS)\n    // =================================================================\n\n    function idrxToken() external view returns (address) {\n        return address(_idrxToken);\n    }\n\n    function platformFeeBps() external view returns (uint96) {\n        return _platformFeeBps;\n    }\n\n    function feeRecipient() external view returns (address) {\n        return _feeRecipient;\n    }\n\n    function deals(string memory _dealId) external view returns (Deal memory) {\n        return _deals[_dealId];\n    }\n\n    function brandDeals(\n        address _brand\n    ) external view returns (string[] memory) {\n        return _brandDeals[_brand];\n    }\n\n    function creatorDeals(\n        address _creator\n    ) external view returns (string[] memory) {\n        return _creatorDeals[_creator];\n    }\n\n    function getDeal(\n        string memory _dealId\n    )\n        external\n        view\n        returns (\n            string memory dealId,\n            address brand,\n            address creator,\n            uint96 amount,\n            uint64 deadline,\n            ContractStatus status,\n            string memory briefHash,\n            string memory contentUrl,\n            string memory disputeReason,\n            uint64 reviewDeadline,\n            uint64 fundedAt,\n            uint64 submittedAt,\n            uint64 disputedAt,\n            uint64 createdAt,\n            bool exists\n        )\n    {\n        Deal storage deal = _deals[_dealId];\n        if (!deal.exists) revert DealNotFound();\n\n        return (\n            deal.dealId,\n            deal.brand,\n            deal.creator,\n            deal.amount,\n            deal.deadline,\n            deal.status,\n            deal.briefHash,\n            deal.contentUrl,\n            deal.disputeReason,\n            deal.reviewDeadline,\n            deal.fundedAt,\n            deal.submittedAt,\n            deal.disputedAt,\n            deal.createdAt,\n            deal.exists\n        );\n    }\n\n    function getDeals(\n        address _userAddress,\n        bool _isBrand\n    ) external view returns (string[] memory) {\n        return\n            _isBrand ? _brandDeals[_userAddress] : _creatorDeals[_userAddress];\n    }\n\n    function canAutoRelease(\n        string memory _dealId\n    ) external view returns (bool) {\n        Deal storage deal = _deals[_dealId];\n        return\n            deal.exists &&\n            deal.status == ContractStatus.PENDING_REVIEW &&\n            block.timestamp >= deal.reviewDeadline;\n    }\n\n    // =================================================================\n    // ADMIN FUNCTIONS\n    // =================================================================\n\n    function updatePlatformFee(\n        uint96 _newFeeBps\n    ) external onlyRole(SERVER_ROLE) {\n        if (_newFeeBps > 1000) revert FeeTooHigh();\n\n        uint96 oldFee = _platformFeeBps;\n        if (oldFee == _newFeeBps) return;\n\n        _platformFeeBps = _newFeeBps;\n\n        emit PlatformFeeUpdated(oldFee, _newFeeBps);\n    }\n\n    function updateFeeRecipient(\n        address _newRecipient\n    ) external onlyRole(SERVER_ROLE) {\n        if (_newRecipient == address(0)) revert InvalidAddress();\n\n        address oldRecipient = _feeRecipient;\n        if (oldRecipient == _newRecipient) return;\n\n        _feeRecipient = _newRecipient;\n\n        emit FeeRecipientUpdated(oldRecipient, _newRecipient);\n    }\n\n    function pause() external onlyRole(SERVER_ROLE) {\n        _pause();\n    }\n\n    function unpause() external onlyRole(SERVER_ROLE) {\n        _unpause();\n    }\n\n    function emergencyWithdraw(\n        address _token,\n        uint256 _amount\n    ) external onlyRole(SERVER_ROLE) {\n        if (_token == address(_idrxToken)) revert CannotWithdrawIDRX();\n        if (_amount == 0) revert InvalidAmount();\n        IERC20(_token).safeTransfer(msg.sender, _amount);\n    }\n\n    // ============ INTERNAL FUNCTIONS ============\n\n    /**\n     * @dev Internal function to perform a safe permit with proper error handling.\n     */\n    function _executePermit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal {\n        IERC20Permit token = IERC20Permit(address(_idrxToken));\n\n        try token.permit(owner, spender, value, deadline, v, r, s) {\n            // Verify allowance was actually granted\n            uint256 allowance = _idrxToken.allowance(owner, spender);\n            if (allowance < value) revert InsufficientAllowance();\n        } catch {\n            revert PermitFailed();\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.20;\n\nimport {IAccessControl} from \"./IAccessControl.sol\";\nimport {Context} from \"../utils/Context.sol\";\nimport {IERC165, ERC165} from \"../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```solidity\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```solidity\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n * to enforce additional security measures for this role.\n */\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\n    struct RoleData {\n        mapping(address account => bool) hasRole;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 role => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with an {AccessControlUnauthorizedAccount} error including the required role.\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    /// @inheritdoc IERC165\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual returns (bool) {\n        return _roles[role].hasRole[account];\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n     * is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier.\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n     * is missing `role`.\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert AccessControlUnauthorizedAccount(account, role);\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) public virtual {\n        if (callerConfirmation != _msgSender()) {\n            revert AccessControlBadConfirmation();\n        }\n\n        _revokeRole(role, callerConfirmation);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (!hasRole(role, account)) {\n            _roles[role].hasRole[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Attempts to revoke `role` from `account` and returns a boolean indicating if `role` was revoked.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (hasRole(role, account)) {\n            _roles[role].hasRole[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/security/Pausable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (security/Pausable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract Pausable is Context {\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    bool private _paused;\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    constructor() {\n        _paused = false;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        require(!paused(), \"Pausable: paused\");\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        require(paused(), \"Pausable: not paused\");\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC1363} from \"../../../interfaces/IERC1363.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC-20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    /**\n     * @dev An operation with an ERC-20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Variant of {safeTransfer} that returns a bool instead of reverting if the operation is not successful.\n     */\n    function trySafeTransfer(IERC20 token, address to, uint256 value) internal returns (bool) {\n        return _callOptionalReturnBool(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Variant of {safeTransferFrom} that returns a bool instead of reverting if the operation is not successful.\n     */\n    function trySafeTransferFrom(IERC20 token, address from, address to, uint256 value) internal returns (bool) {\n        return _callOptionalReturnBool(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     *\n     * NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n     * only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n     * set here.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            safeTransfer(token, to, value);\n        } else if (!token.transferAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n     * has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferFromAndCallRelaxed(\n        IERC1363 token,\n        address from,\n        address to,\n        uint256 value,\n        bytes memory data\n    ) internal {\n        if (to.code.length == 0) {\n            safeTransferFrom(token, from, to, value);\n        } else if (!token.transferFromAndCall(from, to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n     * Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n     * once without retrying, and relies on the returned value to be true.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function approveAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            forceApprove(token, to, value);\n        } else if (!token.approveAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements.\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            let success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            // bubble errors\n            if iszero(success) {\n                let ptr := mload(0x40)\n                returndatacopy(ptr, 0, returndatasize())\n                revert(ptr, returndatasize())\n            }\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n\n        if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        bool success;\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n        return success && (returnSize == 0 ? address(token).code.length > 0 : returnValue == 1);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/extensions/IERC20Permit.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[ERC-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC-20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n *\n * ==== Security Considerations\n *\n * There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n * expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n * considered as an intention to spend the allowance in any specific way. The second is that because permits have\n * built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n * take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n * generally recommended is:\n *\n * ```solidity\n * function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n *     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n *     doThing(..., value);\n * }\n *\n * function doThing(..., uint256 value) public {\n *     token.safeTransferFrom(msg.sender, address(this), value);\n *     ...\n * }\n * ```\n *\n * Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n * `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n * {SafeERC20-safeTransferFrom}).\n *\n * Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n * contracts should have entry points that don't rely on permit.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     *\n     * CAUTION: See Security Considerations above.\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/IERC20.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC1363.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @title IERC1363\n * @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n *\n * Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n * after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\n */\ninterface IERC1363 is IERC20, IERC165 {\n    /*\n     * Note: the ERC-165 identifier for this interface is 0xb0202a11.\n     * 0xb0202a11 ===\n     *   bytes4(keccak256('transferAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('transferAndCall(address,uint256,bytes)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256,bytes)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256,bytes)'))\n     */\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @param data Additional data with no specified format, sent in call to `spender`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value, bytes calldata data) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /// @inheritdoc IERC165\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (access/IAccessControl.sol)\n\npragma solidity >=0.8.4;\n\n/**\n * @dev External interface of AccessControl declared to support ERC-165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev The `account` is missing a role.\n     */\n    error AccessControlUnauthorizedAccount(address account, bytes32 neededRole);\n\n    /**\n     * @dev The caller of a function is not the expected one.\n     *\n     * NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\n     */\n    error AccessControlBadConfirmation();\n\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted to signal this.\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n     * Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) external;\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/IERC165.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC165.sol)\n\npragma solidity >=0.4.16;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n"
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC20.sol)\n\npragma solidity >=0.4.16;\n\nimport {IERC20} from \"../token/ERC20/IERC20.sol\";\n"
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"AccessControl": {
					"abi": [
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							]
						},
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/AccessControl.sol\":\"AccessControl\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x1a6b4f6b7798ab80929d491b89d5427a9b3338c0fd1acd0ba325f69c6f1646af\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7bb7f346c12a14dc622bc105ce3c47202fbc89f4b153a28a63bb68193297330c\",\"dweb:/ipfs/QmagwF8P3bUBXwdo159ueEnY9dLSvEWwK24kk2op58egwG\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xbff9f59c84e5337689161ce7641c0ef8e872d6a7536fbc1f5133f128887aba3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b308f882e796f7b79c9502deacb0a62983035c6f6f4e962b319ba6a1f4a77d3d\",\"dweb:/ipfs/QmaWCW7ahEQqFjwhSUhV7Ae7WhfNvzSpE7DQ58hvEooqPL\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x2d9dc2fe26180f74c11c13663647d38e259e45f95eb88f57b61d2160b0109d3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81233d1f98060113d9922180bb0f14f8335856fe9f339134b09335e9f678c377\",\"dweb:/ipfs/QmWh6R35SarhAn4z2wH8SU456jJSYL2FgucfTFgbHJJN4E\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 27,
								"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)22_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)22_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)22_storage"
							},
							"t_struct(RoleData)22_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 19,
										"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
										"label": "hasRole",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 21,
										"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"IAccessControl": {
					"abi": [
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "External interface of AccessControl declared to support ERC-165 detection.",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							]
						},
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC-165 detection.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xbff9f59c84e5337689161ce7641c0ef8e872d6a7536fbc1f5133f128887aba3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b308f882e796f7b79c9502deacb0a62983035c6f6f4e962b319ba6a1f4a77d3d\",\"dweb:/ipfs/QmaWCW7ahEQqFjwhSUhV7Ae7WhfNvzSpE7DQ58hvEooqPL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"IERC1363": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"approveAndCall(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"approveAndCall(address,uint256,bytes)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `spender`.",
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferAndCall(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferAndCall(address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFromAndCall(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFromAndCall(address,address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							}
						},
						"title": "IERC1363",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"approveAndCall(address,uint256)": "3177029f",
							"approveAndCall(address,uint256,bytes)": "cae9ca51",
							"balanceOf(address)": "70a08231",
							"supportsInterface(bytes4)": "01ffc9a7",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferAndCall(address,uint256)": "1296ee62",
							"transferAndCall(address,uint256,bytes)": "4000aea0",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferFromAndCall(address,address,uint256)": "d8fbe994",
							"transferFromAndCall(address,address,uint256,bytes)": "c1d34b89"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"approveAndCall(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"approveAndCall(address,uint256,bytes)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `spender`.\",\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferAndCall(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferAndCall(address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFromAndCall(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFromAndCall(address,address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}}},\"title\":\"IERC1363\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":\"IERC1363\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100\",\"dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d\",\"dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/Pausable.sol": {
				"Pausable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.",
						"events": {
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract in unpaused state."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"paused()": "5c975abb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract in unpaused state.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 487,
								"contract": "@openzeppelin/contracts/security/Pausable.sol:Pausable",
								"label": "_paused",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 588,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"IERC20Permit": {
					"abi": [
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[ERC-2612]. Adds the {permit} method, which can be used to change an account's ERC-20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.",
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"details": "Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
							},
							"nonces(address)": {
								"details": "Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[ERC-2612]. Adds the {permit} method, which can be used to change an account's ERC-20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x2fa0657dd7b8bc75475a47f64bc04a9adb42236b15d65e6781594ea69a46c3e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7496f42681aed94bf0142a077324e50b86046610c1724e7c12e96cf1c365914a\",\"dweb:/ipfs/QmZvhNdSAAbN4PKPdheAqwpXukUiXp3Q3TdQccDMg2NDTV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentAllowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "requestedDecrease",
									"type": "uint256"
								}
							],
							"name": "SafeERC20FailedDecreaseAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"errors": {
							"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failed `decreaseAllowance` request."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":698:10074  library SafeERC20 {... */\n  0x80\n  dup1\n  0x40\n  mstore\n  jumpi(tag_1, callvalue)\n  dataSize(sub_0)\n  swap1\n  dup2\n  dataOffset(sub_0)\n  dup3\n  codecopy\n  address\n  dup2\n  assignImmutable(\"0xcd5a02d485074f67d63783a7acdae578618045c23ccf47fa4e3f1a01c11714ad\")\n  return\ntag_1:\n  0x00\n  dup1\n  revert\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":698:10074  library SafeERC20 {... */\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122072acac201ffa6272577b5dd8151e0ca06746b6312a95d244e674676d6585a3d864736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080806040523460175760399081601c823930815050f35b5f80fdfe5f80fdfea264697066735822122072acac201ffa6272577b5dd8151e0ca06746b6312a95d244e674676d6585a3d864736f6c63430008140033",
							"opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x39 SWAP1 DUP2 PUSH1 0x1C DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH0 DUP1 REVERT INVALID PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH19 0xACAC201FFA6272577B5DD8151E0CA06746B631 0x2A SWAP6 0xD2 PREVRANDAO 0xE6 PUSH21 0x676D6585A3D864736F6C6343000814003300000000 ",
							"sourceMap": "698:9376:9:-:0;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "5f80fdfea264697066735822122072acac201ffa6272577b5dd8151e0ca06746b6312a95d244e674676d6585a3d864736f6c63430008140033",
							"opcodes": "PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH19 0xACAC201FFA6272577B5DD8151E0CA06746B631 0x2A SWAP6 0xD2 PREVRANDAO 0xE6 PUSH21 0x676D6585A3D864736F6C6343000814003300000000 ",
							"sourceMap": "698:9376:9:-:0;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "11400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"_callOptionalReturnBool(contract IERC20,bytes memory)": "infinite",
								"approveAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"forceApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite",
								"transferAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"transferFromAndCallRelaxed(contract IERC1363,address,address,uint256,bytes memory)": "infinite",
								"trySafeTransfer(contract IERC20,address,uint256)": "infinite",
								"trySafeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "CALLVALUE",
									"source": 9
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "ADDRESS",
									"source": 9
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "ASSIGNIMMUTABLE",
									"source": 9,
									"value": "library_deploy_address"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "RETURN",
									"source": 9
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "REVERT",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122072acac201ffa6272577b5dd8151e0ca06746b6312a95d244e674676d6585a3d864736f6c63430008140033",
									".code": [
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "REVERT",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/AccessControl.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/security/Pausable.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/EtharisEscrow.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100\",\"dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d\",\"dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x2d9dc2fe26180f74c11c13663647d38e259e45f95eb88f57b61d2160b0109d3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81233d1f98060113d9922180bb0f14f8335856fe9f339134b09335e9f678c377\",\"dweb:/ipfs/QmWh6R35SarhAn4z2wH8SU456jJSYL2FgucfTFgbHJJN4E\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/EtharisEscrow.sol": {
				"EtharisEscrow": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "idrxToken_",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "feeRecipient_",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "initialOwner_",
									"type": "address"
								}
							],
							"stateMutability": "payable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "AmountMustBeGreaterThanZero",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "BriefHashRequired",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "CannotCancelThisDeal",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "CannotWithdrawIDRX",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ContentUrlRequired",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "CreatorCannotBeBrand",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "DeadlineMustBeInFuture",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "DeadlineNotPassed",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "DealAlreadyExists",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "DealAlreadyFunded",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "DealNotFound",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "DealNotFunded",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FeeTooHigh",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidAmount",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidDealID",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidDealStatus",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotAuthorized",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "PermitFailed",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ReasonRequired",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ReviewPeriodEnded",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ReviewPeriodNotEnded",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "SubmissionDeadlinePassed",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "string",
									"name": "dealId",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "creator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "contentUrl",
									"type": "string"
								},
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "reviewDeadline",
									"type": "uint64"
								}
							],
							"name": "ContentSubmitted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "string",
									"name": "dealId",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "brand",
									"type": "address"
								}
							],
							"name": "DealApproved",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "string",
									"name": "dealId",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "initiator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint96",
									"name": "refundAmount",
									"type": "uint96"
								}
							],
							"name": "DealCancelled",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "string",
									"name": "dealId",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "brand",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "creator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint96",
									"name": "amount",
									"type": "uint96"
								},
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "deadline",
									"type": "uint64"
								}
							],
							"name": "DealCreated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "string",
									"name": "dealId",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "brand",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint96",
									"name": "amount",
									"type": "uint96"
								}
							],
							"name": "DealFunded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "string",
									"name": "dealId",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "brand",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "reason",
									"type": "string"
								}
							],
							"name": "DisputeInitiated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "string",
									"name": "dealId",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "creator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "acceptedDispute",
									"type": "bool"
								},
								{
									"indexed": false,
									"internalType": "uint96",
									"name": "creatorAmount",
									"type": "uint96"
								},
								{
									"indexed": false,
									"internalType": "uint96",
									"name": "brandRefund",
									"type": "uint96"
								}
							],
							"name": "DisputeResolved",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "oldRecipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "newRecipient",
									"type": "address"
								}
							],
							"name": "FeeRecipientUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "string",
									"name": "dealId",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "creator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint96",
									"name": "amount",
									"type": "uint96"
								},
								{
									"indexed": false,
									"internalType": "uint96",
									"name": "platformFee",
									"type": "uint96"
								}
							],
							"name": "PaymentReleased",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint96",
									"name": "oldFee",
									"type": "uint96"
								},
								{
									"indexed": false,
									"internalType": "uint96",
									"name": "newFee",
									"type": "uint96"
								}
							],
							"name": "PlatformFeeUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "SERVER_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_dealId",
									"type": "string"
								},
								{
									"internalType": "address",
									"name": "_creatorAddress",
									"type": "address"
								}
							],
							"name": "acceptDeal",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_dealId",
									"type": "string"
								},
								{
									"internalType": "address",
									"name": "_brandAddress",
									"type": "address"
								}
							],
							"name": "approveDeal",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_dealId",
									"type": "string"
								}
							],
							"name": "autoRefundAfterDeadline",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_dealId",
									"type": "string"
								}
							],
							"name": "autoReleasePayment",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_brand",
									"type": "address"
								}
							],
							"name": "brandDeals",
							"outputs": [
								{
									"internalType": "string[]",
									"name": "",
									"type": "string[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_dealId",
									"type": "string"
								}
							],
							"name": "canAutoRelease",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_dealId",
									"type": "string"
								},
								{
									"internalType": "address",
									"name": "_brandAddress",
									"type": "address"
								}
							],
							"name": "cancelDeal",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_dealId",
									"type": "string"
								},
								{
									"internalType": "address",
									"name": "_brandAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_creatorAddress",
									"type": "address"
								},
								{
									"internalType": "uint96",
									"name": "_amount",
									"type": "uint96"
								},
								{
									"internalType": "uint64",
									"name": "_deadline",
									"type": "uint64"
								},
								{
									"internalType": "string",
									"name": "_briefHash",
									"type": "string"
								}
							],
							"name": "createDeal",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_creator",
									"type": "address"
								}
							],
							"name": "creatorDeals",
							"outputs": [
								{
									"internalType": "string[]",
									"name": "",
									"type": "string[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_dealId",
									"type": "string"
								}
							],
							"name": "deals",
							"outputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "brand",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "creator",
											"type": "address"
										},
										{
											"internalType": "string",
											"name": "dealId",
											"type": "string"
										},
										{
											"internalType": "string",
											"name": "briefHash",
											"type": "string"
										},
										{
											"internalType": "string",
											"name": "contentUrl",
											"type": "string"
										},
										{
											"internalType": "string",
											"name": "disputeReason",
											"type": "string"
										},
										{
											"internalType": "uint96",
											"name": "amount",
											"type": "uint96"
										},
										{
											"internalType": "uint64",
											"name": "deadline",
											"type": "uint64"
										},
										{
											"internalType": "uint64",
											"name": "fundedAt",
											"type": "uint64"
										},
										{
											"internalType": "uint64",
											"name": "submittedAt",
											"type": "uint64"
										},
										{
											"internalType": "uint64",
											"name": "reviewDeadline",
											"type": "uint64"
										},
										{
											"internalType": "uint64",
											"name": "disputedAt",
											"type": "uint64"
										},
										{
											"internalType": "uint64",
											"name": "createdAt",
											"type": "uint64"
										},
										{
											"internalType": "enum EtharisEscrow.ContractStatus",
											"name": "status",
											"type": "uint8"
										},
										{
											"internalType": "bool",
											"name": "acceptedDispute",
											"type": "bool"
										},
										{
											"internalType": "bool",
											"name": "exists",
											"type": "bool"
										}
									],
									"internalType": "struct EtharisEscrow.Deal",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_dealId",
									"type": "string"
								}
							],
							"name": "emergencyCancelDeal",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "emergencyWithdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeRecipient",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_dealId",
									"type": "string"
								},
								{
									"internalType": "address",
									"name": "_brandAddress",
									"type": "address"
								},
								{
									"internalType": "uint96",
									"name": "_amount",
									"type": "uint96"
								},
								{
									"internalType": "uint256",
									"name": "_deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "_v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "_r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "_s",
									"type": "bytes32"
								}
							],
							"name": "fundDeal",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_dealId",
									"type": "string"
								}
							],
							"name": "getDeal",
							"outputs": [
								{
									"internalType": "string",
									"name": "dealId",
									"type": "string"
								},
								{
									"internalType": "address",
									"name": "brand",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "creator",
									"type": "address"
								},
								{
									"internalType": "uint96",
									"name": "amount",
									"type": "uint96"
								},
								{
									"internalType": "uint64",
									"name": "deadline",
									"type": "uint64"
								},
								{
									"internalType": "enum EtharisEscrow.ContractStatus",
									"name": "status",
									"type": "uint8"
								},
								{
									"internalType": "string",
									"name": "briefHash",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "contentUrl",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "disputeReason",
									"type": "string"
								},
								{
									"internalType": "uint64",
									"name": "reviewDeadline",
									"type": "uint64"
								},
								{
									"internalType": "uint64",
									"name": "fundedAt",
									"type": "uint64"
								},
								{
									"internalType": "uint64",
									"name": "submittedAt",
									"type": "uint64"
								},
								{
									"internalType": "uint64",
									"name": "disputedAt",
									"type": "uint64"
								},
								{
									"internalType": "uint64",
									"name": "createdAt",
									"type": "uint64"
								},
								{
									"internalType": "bool",
									"name": "exists",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_userAddress",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_isBrand",
									"type": "bool"
								}
							],
							"name": "getDeals",
							"outputs": [
								{
									"internalType": "string[]",
									"name": "",
									"type": "string[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "idrxToken",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_dealId",
									"type": "string"
								},
								{
									"internalType": "address",
									"name": "_brandAddress",
									"type": "address"
								},
								{
									"internalType": "string",
									"name": "_reason",
									"type": "string"
								}
							],
							"name": "initiateDispute",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "platformFeeBps",
							"outputs": [
								{
									"internalType": "uint96",
									"name": "",
									"type": "uint96"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_dealId",
									"type": "string"
								},
								{
									"internalType": "address",
									"name": "_creatorAddress",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_acceptDispute",
									"type": "bool"
								}
							],
							"name": "resolveDispute",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_dealId",
									"type": "string"
								},
								{
									"internalType": "address",
									"name": "_creatorAddress",
									"type": "address"
								},
								{
									"internalType": "string",
									"name": "_contentUrl",
									"type": "string"
								}
							],
							"name": "submitContent",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unpause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_newRecipient",
									"type": "address"
								}
							],
							"name": "updateFeeRecipient",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint96",
									"name": "_newFeeBps",
									"type": "uint96"
								}
							],
							"name": "updatePlatformFee",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "Etharis Team",
						"details": "Escrow contract for sponsorship deals. All action functions can only be called by the Server Wallet (Owner).",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"events": {
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"createDeal(string,address,address,uint96,uint64,string)": {
								"details": "Only SERVER_ROLE can call this function"
							},
							"fundDeal(string,address,uint96,uint256,uint8,bytes32,bytes32)": {
								"details": "Brands sign permit off-chain, server executes with signature for gasless transaction"
							},
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"title": "EtharisEscrow",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n  0xa0\n  0x1f\n  bytecodeSize\n  codesize\n  dup2\n  swap1\n  sub\n  swap2\n  dup3\n  add\n  not(0x1f)\n  and\n  dup4\n  add\n  swap2\n  swap1\n  sub(shl(0x40, 0x01), 0x01)\n  dup4\n  gt\n  dup5\n  dup5\n  lt\n  or\n  tag_3\n  jumpi\n  dup2\n  0x60\n  swap3\n  dup6\n  swap3\n  0x40\n  swap6\n  dup7\n  mstore\n  dup4\n  codecopy\n  dup2\n  add\n  sub\n  slt\n  tag_5\n  jumpi\n  tag_7\n  dup3\n  tag_1\n  jump\t// in\ntag_7:\n  swap2\n  tag_8\n  dup3\n  tag_9\n  0x20\n  dup5\n  add\n  tag_1\n  jump\t// in\ntag_9:\n  swap3\n  add\n  tag_1\n  jump\t// in\ntag_8:\n  0x01\n  0x00\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  dup2\n  swap1\n  sstore\n    /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n  dup1\n  sload\n  not(0xff)\n  and\n  swap1\n  sstore\n  sub(shl(0xa0, 0x01), 0x01)\n  swap4\n  dup5\n  and\n  swap4\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  swap1\n  swap2\n  swap1\n    /* \"contracts/EtharisEscrow.sol\":4861:4885  idrxToken_ == address(0) */\n  dup5\n  iszero\n    /* \"contracts/EtharisEscrow.sol\":4857:4910  if (idrxToken_ == address(0)) revert InvalidAddress() */\n  tag_12\n  jumpi\n    /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n  dup1\n  dup3\n  and\n    /* \"contracts/EtharisEscrow.sol\":4924:4951  feeRecipient_ == address(0) */\n  iszero\n    /* \"contracts/EtharisEscrow.sol\":4920:4976  if (feeRecipient_ == address(0)) revert InvalidAddress() */\n  tag_12\n  jumpi\n    /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n  dup3\n  and\n    /* \"contracts/EtharisEscrow.sol\":4990:5017  initialOwner_ == address(0) */\n  iszero\n    /* \"contracts/EtharisEscrow.sol\":4986:5042  if (initialOwner_ == address(0)) revert InvalidAddress() */\n  tag_14\n  jumpi\n    /* \"contracts/EtharisEscrow.sol\":5134:5172  _grantRole(SERVER_ROLE, initialOwner_) */\n  tag_16\n    /* \"contracts/EtharisEscrow.sol\":5053:5084  _idrxToken = IERC20(idrxToken_) */\n  swap3\n  swap4\n  0x80\n  mstore\n    /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n  0x01\n  dup1\n  0x60\n  shl\n  sub\n  not\n  swap1\n  0x60\n  shl\n  and\n    /* \"contracts/EtharisEscrow.sol\":1751:1754  250 */\n  0xfa\n    /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n  or\n    /* \"contracts/EtharisEscrow.sol\":1751:1754  250 */\n  0x03\n    /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n  sstore\n    /* \"contracts/EtharisEscrow.sol\":5134:5172  _grantRole(SERVER_ROLE, initialOwner_) */\n  tag_2\n  jump\t// in\ntag_16:\n  pop\n  0x00\n  dup1\n  mload\n  0x20\n  data_2b911a32a95f59603f7637b420e0d131a993f16f7410883b87320add8a183555\n  dup4\n  codecopy\n  dup2\n  mload\n  swap2\n  mstore\n    /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n  dup1\n  0x00\n  mstore\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3877:3883  _roles */\n  0x02\n    /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n  0x20\n  mstore\n  0x01\n  dup3\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3877:3899  _roles[role].adminRole */\n  add\n    /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n  swap2\n  dup2\n  dup4\n  sload\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  swap4\n  sstore\n    /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n  mload\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":5862:5914  RoleAdminChanged(role, previousAdminRole, adminRole) */\n  swap2\n  dup2\n  0xbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff\n  0x00\n  dup1\n  log4\n    /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n  dataSize(sub_0)\n  swap1\n  dup2\n  dataOffset(sub_0)\n  dup3\n  codecopy\n    /* \"contracts/EtharisEscrow.sol\":5053:5084  _idrxToken = IERC20(idrxToken_) */\n  0x80\n    /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n  mload\n  dup2\n  assignImmutable(\"0x92a99c2e1e73cfa8af214a27ee636aa00abb49bffb5065f213fd4435430466da\")\n  return\n    /* \"contracts/EtharisEscrow.sol\":4986:5042  if (initialOwner_ == address(0)) revert InvalidAddress() */\ntag_14:\n    /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n  dup3\n  mload\n  shl(0xe0, 0xe6c4247b)\n    /* \"contracts/EtharisEscrow.sol\":5026:5042  InvalidAddress() */\n  dup2\n  mstore\n  0x04\n  swap1\n  revert\n    /* \"contracts/EtharisEscrow.sol\":4920:4976  if (feeRecipient_ == address(0)) revert InvalidAddress() */\ntag_12:\n    /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n  dup4\n  mload\n  shl(0xe0, 0xe6c4247b)\n    /* \"contracts/EtharisEscrow.sol\":4960:4976  InvalidAddress() */\n  dup2\n  mstore\n  0x04\n  swap1\n  revert\n    /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\ntag_5:\n  0x00\n  dup1\n  revert\ntag_3:\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x41)\n  revert(0x00, 0x24)\ntag_1:\n  mload\n  swap1\n  sub(shl(0xa0, 0x01), 0x01)\n  dup3\n  and\n  dup3\n  sub\n  tag_5\n  jumpi\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6155:6471  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\ntag_2:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n  and\n  0x00\n  dup2\n  dup2\n  mstore\n  mstore(0x20, 0xef73bf2ac44f84561b5498839ab1c8c5a4dd99305d838aea0d76c5961778535c)\n  0x40\n  dup2\n  keccak256\n  sload\n  swap1\n  swap2\n  swap1\n  0x00\n  dup1\n  mload\n  0x20\n  data_2b911a32a95f59603f7637b420e0d131a993f16f7410883b87320add8a183555\n  dup4\n  codecopy\n  dup2\n  mload\n  swap2\n  mstore\n    /* \"contracts/EtharisEscrow.sol\":1949:1973  keccak256(\"SERVER_ROLE\") */\n  swap1\n    /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n  0xff\n  and\n  tag_19\n  jumpi\n  dup1\n  dup4\n  mstore\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2936  _roles */\n  0x02\n    /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n  0x20\n  mstore\n  0x40\n  dup4\n  keccak256\n  dup3\n  dup5\n  mstore\n  0x20\n  mstore\n  0x40\n  dup4\n  keccak256\n  0x01\n  not(0xff)\n  dup3\n  sload\n  and\n  or\n  swap1\n  sstore\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6346:6386  RoleGranted(role, account, _msgSender()) */\n  0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n    /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6346:6386  RoleGranted(role, account, _msgSender()) */\n  swap4\n  dup1\n  log4\n    /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n  0x01\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6400:6411  return true */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6248:6465  if (!hasRole(role, account)) {... */\ntag_19:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6442:6454  return false */\n  pop\n  pop\n  swap1\n  jump\t// out\nstop\ndata_2b911a32a95f59603f7637b420e0d131a993f16f7410883b87320add8a183555 a8a7bc421f721cb936ea99efdad79237e6ee0b871a2a08cf648691f9584cdc77\n\nsub_0: assembly {\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0x80\n      dup1\n      0x40\n      mstore\n      jumpi(tag_33, iszero(lt(calldatasize, 0x04)))\n      0x00\n      dup1\n      revert\n    tag_33:\n      0x00\n      swap1\n      dup2\n      calldataload\n      0xe0\n      shr\n      swap1\n      dup2\n      0x01ffc9a7\n      eq\n      tag_35\n      jumpi\n      pop\n      dup1\n      0x03f715da\n      eq\n      tag_37\n      jumpi\n      dup1\n      0x0e59a395\n      eq\n      tag_39\n      jumpi\n      dup1\n      0x18cf2834\n      eq\n      tag_41\n      jumpi\n      dup1\n      0x1a1aaeed\n      eq\n      tag_43\n      jumpi\n      dup1\n      0x22dcd13e\n      eq\n      tag_45\n      jumpi\n      dup1\n      0x248a9ca3\n      eq\n      tag_47\n      jumpi\n      dup1\n      0x24d956c8\n      eq\n      tag_49\n      jumpi\n      dup1\n      0x2f2ff15d\n      eq\n      tag_51\n      jumpi\n      dup1\n      0x317b8c5b\n      eq\n      tag_53\n      jumpi\n      dup1\n      0x36568abe\n      eq\n      tag_55\n      jumpi\n      dup1\n      0x38a13287\n      eq\n      tag_57\n      jumpi\n      dup1\n      0x3f4ba83a\n      eq\n      tag_59\n      jumpi\n      dup1\n      0x46904840\n      eq\n      tag_61\n      jumpi\n      dup1\n      0x4971716f\n      eq\n      tag_63\n      jumpi\n      dup1\n      0x5c975abb\n      eq\n      tag_65\n      jumpi\n      dup1\n      0x76492d3f\n      eq\n      tag_67\n      jumpi\n      dup1\n      0x8456cb59\n      eq\n      tag_69\n      jumpi\n      dup1\n      0x91d14854\n      eq\n      tag_71\n      jumpi\n      dup1\n      0x95ccea67\n      eq\n      tag_73\n      jumpi\n      dup1\n      0x9b1221ab\n      eq\n      tag_75\n      jumpi\n      dup1\n      0x9f1cf42d\n      eq\n      tag_77\n      jumpi\n      dup1\n      0x9fad59b4\n      eq\n      tag_79\n      jumpi\n      dup1\n      0xa0a57dac\n      eq\n      tag_81\n      jumpi\n      dup1\n      0xa217fddf\n      eq\n      tag_83\n      jumpi\n      dup1\n      0xaed1505d\n      eq\n      tag_85\n      jumpi\n      dup1\n      0xd547741f\n      eq\n      tag_87\n      jumpi\n      dup1\n      0xd6bc7c63\n      eq\n      tag_89\n      jumpi\n      dup1\n      0xe39fff38\n      eq\n      tag_91\n      jumpi\n      dup1\n      0xe4abd4cb\n      eq\n      tag_93\n      jumpi\n      dup1\n      0xe7079180\n      eq\n      tag_95\n      jumpi\n      dup1\n      0xef03c10e\n      eq\n      tag_97\n      jumpi\n      dup1\n      0xf0c3cd20\n      eq\n      tag_99\n      jumpi\n      0xf160d369\n      eq\n      tag_101\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_101:\n      jumpi(tag_105, callvalue)\n      jumpi(tag_105, slt(add(not(0x03), calldatasize), 0x20))\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2499:2500  _ */\n      tag_107\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      tag_108\n      tag_5\n      jump\t// in\n    tag_108:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2484:2488  role */\n      tag_109\n      tag_12\n      jump\t// in\n    tag_109:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2499:2500  _ */\n      tag_32\n      jump\t// in\n    tag_107:\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      dup1\n      return\n    tag_105:\n      dup1\n      revert\n    tag_99:\n      pop\n      jumpi(tag_105, callvalue)\n      0x20\n      dup1\n      add(calldatasize, not(0x03))\n      slt\n      tag_112\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n      tag_114\n      tag_5\n      jump\t// in\n    tag_114:\n      and\n      dup3\n      mstore\n        /* \"contracts/EtharisEscrow.sol\":18033:18044  _brandDeals */\n      0x05\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      dup2\n      mstore\n      0x40\n      dup3\n      keccak256\n      dup1\n      sload\n      swap1\n      tag_115\n      dup3\n      tag_30\n      jump\t// in\n    tag_115:\n      swap3\n      dup1\n      dup5\n      add\n      swap2\n      dup6\n      mstore\n      dup1\n      dup6\n      keccak256\n      swap5\n      swap2\n    tag_116:\n      dup4\n      dup4\n      lt\n      tag_117\n      jumpi\n      mload(0x40)\n      dup1\n      tag_119\n      dup8\n      dup3\n      tag_10\n      jump\t// in\n    tag_119:\n      sub\n      swap1\n      return\n    tag_117:\n      0x01\n      dup3\n      dup2\n      swap3\n      tag_120\n      dup10\n      tag_29\n      jump\t// in\n    tag_120:\n      dup2\n      mstore\n      add\n      swap7\n      add\n      swap3\n      add\n      swap2\n      swap5\n      jump(tag_116)\n    tag_112:\n      pop\n      dup1\n      revert\n    tag_97:\n      pop\n      jumpi(tag_105, callvalue)\n      jumpi(tag_105, slt(add(not(0x03), calldatasize), 0x60))\n      calldataload(0x04)\n      sub(shl(0x40, 0x01), 0x01)\n      dup2\n      gt\n      tag_112\n      jumpi\n      tag_127\n      swap1\n      calldatasize\n      swap1\n      0x04\n      add\n      tag_3\n      jump\t// in\n    tag_127:\n      tag_128\n      tag_4\n      jump\t// in\n    tag_128:\n      calldataload(0x44)\n      swap2\n      dup3\n      iszero\n      iszero\n      dup4\n      sub\n      tag_129\n      jumpi\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2227:2330  modifier nonReentrant() {... */\n      tag_131\n      tag_23\n      jump\t// in\n    tag_131:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2484:2488  role */\n      tag_132\n      tag_12\n      jump\t// in\n    tag_132:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1204:1276  modifier whenNotPaused() {... */\n      tag_133\n      tag_21\n      jump\t// in\n    tag_133:\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      mload(0x40)\n      swap1\n      0xff\n        /* \"contracts/EtharisEscrow.sol\":4453:4475  _deals[_dealId].exists */\n      0x08\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      dup3\n      mload\n      swap4\n      0x20\n      dup2\n      dup2\n      dup7\n      add\n      swap7\n      tag_134\n      dup2\n      dup4\n      dup11\n      tag_8\n      jump\t// in\n    tag_134:\n      dup2\n      add\n      0x04\n      dup2\n      mstore\n      sub\n      add\n      swap1\n      keccak256\n        /* \"contracts/EtharisEscrow.sol\":4453:4475  _deals[_dealId].exists */\n      add\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      sload\n      0x10\n      shr\n      and\n        /* \"contracts/EtharisEscrow.sol\":4452:4475  !_deals[_dealId].exists */\n      iszero\n        /* \"contracts/EtharisEscrow.sol\":4448:4498  if (!_deals[_dealId].exists) revert DealNotFound() */\n      tag_135\n      jumpi\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      mload(0x40)\n      swap2\n      dup2\n      mload\n      tag_137\n      dup2\n      dup6\n      dup5\n      tag_8\n      jump\t// in\n    tag_137:\n      dup4\n      add\n      0x04\n      dup2\n      mstore\n      0x01\n      dup5\n      0x20\n      dup3\n      dup1\n      0xa0\n      shl\n      sub\n      swap7\n      dup8\n      swap5\n      sub\n      add\n      swap1\n      keccak256\n        /* \"contracts/EtharisEscrow.sol\":4312:4335  _deals[_dealId].creator */\n      add\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      sload\n      and\n      dup4\n      dup6\n      and\n        /* \"contracts/EtharisEscrow.sol\":4312:4347  _deals[_dealId].creator != _creator */\n      sub\n        /* \"contracts/EtharisEscrow.sol\":4308:4371  if (_deals[_dealId].creator != _creator) revert NotAuthorized() */\n      tag_138\n      jumpi\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0xff\n        /* \"contracts/EtharisEscrow.sol\":4453:4475  _deals[_dealId].exists */\n      0x08\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      mload(0x40)\n      0x20\n      dup2\n      dup7\n      mload\n      tag_140\n      dup2\n      dup4\n      dup10\n      tag_8\n      jump\t// in\n    tag_140:\n      dup2\n      add\n      0x04\n      dup2\n      mstore\n      sub\n      add\n      swap1\n      keccak256\n        /* \"contracts/EtharisEscrow.sol\":4601:4623  _deals[_dealId].status */\n      add\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      sload\n      and\n      0x06\n      dup2\n      lt\n      iszero\n      tag_141\n      jumpi\n      0x03\n        /* \"contracts/EtharisEscrow.sol\":4601:4634  _deals[_dealId].status != _status */\n      sub\n        /* \"contracts/EtharisEscrow.sol\":4597:4662  if (_deals[_dealId].status != _status) revert InvalidDealStatus() */\n      tag_143\n      jumpi\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0x20\n      tag_145\n      swap2\n      mload(0x40)\n      dup1\n      swap4\n      dup2\n      swap3\n      dup7\n      mload\n      swap3\n      dup4\n      swap2\n      tag_8\n      jump\t// in\n    tag_145:\n      dup2\n      add\n      0x04\n      dup2\n      mstore\n      sub\n      add\n      swap1\n      keccak256\n      sub(shl(0x60, 0x01), 0x01)\n      0x06\n        /* \"contracts/EtharisEscrow.sol\":13882:13893  deal.amount */\n      dup3\n      add\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      sload\n      and\n        /* \"contracts/EtharisEscrow.sol\":13921:13933  deal.creator */\n      swap2\n      dup4\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0x01\n        /* \"contracts/EtharisEscrow.sol\":13921:13933  deal.creator */\n      dup4\n      add\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      sload\n      and\n      swap6\n      dup5\n      dup4\n      sload\n      and\n        /* \"contracts/EtharisEscrow.sol\":1810:1815  10000 */\n      swap3\n        /* \"contracts/EtharisEscrow.sol\":4453:4475  _deals[_dealId].exists */\n      0x08\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0x03\n        /* \"contracts/EtharisEscrow.sol\":1810:1815  10000 */\n      sload\n        /* \"contracts/EtharisEscrow.sol\":14063:14074  deal.status */\n      swap2\n      add\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0x04\n      dup2\n      sload\n      0xff00\n      dup6\n      iszero\n      iszero\n        /* \"contracts/EtharisEscrow.sol\":4453:4475  _deals[_dealId].exists */\n      0x08\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      shl\n      and\n      swap1\n      not(0xffff)\n      and\n      or\n      or\n      swap1\n      sstore\n        /* \"contracts/EtharisEscrow.sol\":14261:14271  _idrxToken */\n      immutable(\"0x92a99c2e1e73cfa8af214a27ee636aa00abb49bffb5065f213fd4435430466da\")\n        /* \"contracts/EtharisEscrow.sol\":14299:15049  if (_acceptDispute) {... */\n      swap6\n      dup10\n      dup4\n      0x00\n      eq\n      tag_146\n      jumpi\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      pop\n      0x1388\n      dup7\n      mul\n      swap2\n      sub(shl(0x60, 0x01), 0x01)\n      dup4\n      and\n      swap3\n      dup4\n      sub\n      tag_148\n      jumpi\n      dup10\n      swap2\n      0x2710\n        /* \"contracts/EtharisEscrow.sol\":1810:1815  10000 */\n      dup1\n      swap5\n      div\n        /* \"contracts/EtharisEscrow.sol\":14427:14452  totalEscrow - grossPayout */\n      swap8\n      dup9\n      tag_150\n      swap2\n      tag_26\n      jump\t// in\n    tag_150:\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      swap4\n        /* \"contracts/EtharisEscrow.sol\":14482:14502  grossPayout * feeBps */\n      tag_151\n      sub(shl(0x60, 0x01), 0x01)\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      dup5\n      and\n        /* \"contracts/EtharisEscrow.sol\":14482:14502  grossPayout * feeBps */\n      dup11\n      tag_25\n      jump\t// in\n    tag_151:\n      sub(shl(0x60, 0x01), 0x01)\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      and\n        /* \"contracts/EtharisEscrow.sol\":1810:1815  10000 */\n      div\n        /* \"contracts/EtharisEscrow.sol\":14555:14580  grossPayout - platformFee */\n      swap8\n      dup9\n      tag_152\n      swap2\n      tag_26\n      jump\t// in\n    tag_152:\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      swap10\n      sub(shl(0x60, 0x01), 0x01)\n      dup12\n      and\n        /* \"contracts/EtharisEscrow.sol\":14640:14655  creatorNet != 0 */\n      swap3\n      dup4\n      iszero\n      iszero\n        /* \"contracts/EtharisEscrow.sol\":14636:14696  if (creatorNet != 0) token.safeTransfer(creator, creatorNet) */\n      swap11\n        /* \"contracts/EtharisEscrow.sol\":15234:15295  PaymentReleased(_dealId, creator, creatorAmount, platformFee) */\n      tag_153\n        /* \"contracts/EtharisEscrow.sol\":14636:14696  if (creatorNet != 0) token.safeTransfer(creator, creatorNet) */\n      swap10\n        /* \"contracts/EtharisEscrow.sol\":15064:15219  DisputeResolved(... */\n      0xea4ea4b4229888eeba3eb2772df89c52af23c7fe3d530b0c1f2ca146f32c12ba\n        /* \"contracts/EtharisEscrow.sol\":14636:14696  if (creatorNet != 0) token.safeTransfer(creator, creatorNet) */\n      swap7\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0x60\n        /* \"contracts/EtharisEscrow.sol\":14636:14696  if (creatorNet != 0) token.safeTransfer(creator, creatorNet) */\n      swap7\n      0x00\n      dup1\n      mload\n      0x20\n      data_a8eda418a66b2f5395d4a15b2f03de75b34fff39bb2e2a8b57f6be974d56e7b0\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      swap15\n      tag_154\n      jumpi\n        /* \"contracts/EtharisEscrow.sol\":14299:15049  if (_acceptDispute) {... */\n    tag_155:\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      pop\n      pop\n      sub(shl(0x60, 0x01), 0x01)\n      dup9\n      and\n        /* \"contracts/EtharisEscrow.sol\":14714:14730  brandRefund != 0 */\n      dup1\n        /* \"contracts/EtharisEscrow.sol\":14710:14770  if (brandRefund != 0) token.safeTransfer(brand, brandRefund) */\n      tag_156\n      jumpi\n        /* \"contracts/EtharisEscrow.sol\":14299:15049  if (_acceptDispute) {... */\n    tag_157:\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      pop\n      pop\n      sub(shl(0x60, 0x01), 0x01)\n      dup12\n      and\n        /* \"contracts/EtharisEscrow.sol\":14788:14804  platformFee != 0 */\n      swap1\n      dup2\n        /* \"contracts/EtharisEscrow.sol\":14784:14847  if (platformFee != 0) token.safeTransfer(feeRecip, platformFee) */\n      tag_158\n      jumpi\n        /* \"contracts/EtharisEscrow.sol\":14299:15049  if (_acceptDispute) {... */\n    tag_159:\n      pop\n      pop\n      pop\n    tag_160:\n      sub(shl(0x60, 0x01), 0x01)\n        /* \"contracts/EtharisEscrow.sol\":15064:15219  DisputeResolved(... */\n      tag_161\n      dup9\n      tag_20\n      jump\t// in\n    tag_161:\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      swap6\n      mload(0x40)\n      swap8\n      iszero\n      iszero\n      dup9\n      mstore\n      dup2\n      dup14\n      and\n      0x20\n      dup10\n      add\n      mstore\n      and\n      0x40\n      dup8\n      add\n      mstore\n      and\n        /* \"contracts/EtharisEscrow.sol\":15064:15219  DisputeResolved(... */\n      swap4\n      log3\n        /* \"contracts/EtharisEscrow.sol\":15234:15295  PaymentReleased(_dealId, creator, creatorAmount, platformFee) */\n      tag_20\n      jump\t// in\n    tag_153:\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0x40\n      dup1\n      mload\n      sub(shl(0x60, 0x01), 0x01)\n      swap6\n      dup7\n      and\n      dup2\n      mstore\n      swap3\n      swap1\n      swap5\n      and\n        /* \"contracts/EtharisEscrow.sol\":1810:1815  10000 */\n      0x20\n      dup4\n      add\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      mstore\n      swap3\n      swap1\n        /* \"contracts/EtharisEscrow.sol\":15234:15295  PaymentReleased(_dealId, creator, creatorAmount, platformFee) */\n      log3\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      dup2\n      sstore\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      dup1\n      return\n        /* \"contracts/EtharisEscrow.sol\":14784:14847  if (platformFee != 0) token.safeTransfer(feeRecip, platformFee) */\n    tag_158:\n        /* \"contracts/EtharisEscrow.sol\":14806:14847  token.safeTransfer(feeRecip, platformFee) */\n      tag_163\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      swap3\n      dup7\n      shr\n        /* \"contracts/EtharisEscrow.sol\":14806:14847  token.safeTransfer(feeRecip, platformFee) */\n      swap1\n      tag_28\n      jump\t// in\n    tag_163:\n        /* \"contracts/EtharisEscrow.sol\":14784:14847  if (platformFee != 0) token.safeTransfer(feeRecip, platformFee) */\n      0x00\n      dup1\n      dup1\n      jump(tag_159)\n        /* \"contracts/EtharisEscrow.sol\":14710:14770  if (brandRefund != 0) token.safeTransfer(brand, brandRefund) */\n    tag_156:\n        /* \"contracts/EtharisEscrow.sol\":14732:14770  token.safeTransfer(brand, brandRefund) */\n      tag_164\n      swap2\n      dup4\n      tag_28\n      jump\t// in\n    tag_164:\n        /* \"contracts/EtharisEscrow.sol\":14710:14770  if (brandRefund != 0) token.safeTransfer(brand, brandRefund) */\n      0x00\n      dup1\n      jump(tag_157)\n        /* \"contracts/EtharisEscrow.sol\":14636:14696  if (creatorNet != 0) token.safeTransfer(creator, creatorNet) */\n    tag_154:\n        /* \"contracts/EtharisEscrow.sol\":14657:14696  token.safeTransfer(creator, creatorNet) */\n      tag_165\n      swap2\n      dup5\n      tag_28\n      jump\t// in\n    tag_165:\n        /* \"contracts/EtharisEscrow.sol\":14636:14696  if (creatorNet != 0) token.safeTransfer(creator, creatorNet) */\n      dup15\n      0x00\n      jump(tag_155)\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n    tag_148:\n      shl(0xe0, 0x4e487b71)\n      0x00\n        /* \"contracts/EtharisEscrow.sol\":1861:1869  72 hours */\n      mstore\n      0x11\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0x04\n        /* \"contracts/EtharisEscrow.sol\":1861:1869  72 hours */\n      mstore\n      0x24\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0x00\n        /* \"contracts/EtharisEscrow.sol\":1861:1869  72 hours */\n      revert\n        /* \"contracts/EtharisEscrow.sol\":14299:15049  if (_acceptDispute) {... */\n    tag_146:\n        /* \"contracts/EtharisEscrow.sol\":14878:14895  creatorAmount = 0 */\n      swap2\n      pop\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0x60\n        /* \"contracts/EtharisEscrow.sol\":15064:15219  DisputeResolved(... */\n      0xea4ea4b4229888eeba3eb2772df89c52af23c7fe3d530b0c1f2ca146f32c12ba\n        /* \"contracts/EtharisEscrow.sol\":14878:14895  creatorAmount = 0 */\n      swap2\n        /* \"contracts/EtharisEscrow.sol\":15234:15295  PaymentReleased(_dealId, creator, creatorAmount, platformFee) */\n      tag_153\n        /* \"contracts/EtharisEscrow.sol\":14878:14895  creatorAmount = 0 */\n      swap7\n      swap8\n      swap10\n      0x00\n      dup1\n      mload\n      0x20\n      data_a8eda418a66b2f5395d4a15b2f03de75b34fff39bb2e2a8b57f6be974d56e7b0\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      swap10\n      dup6\n        /* \"contracts/EtharisEscrow.sol\":14909:14934  brandRefund = totalEscrow */\n      swap12\n      dup1\n        /* \"contracts/EtharisEscrow.sol\":14948:14963  platformFee = 0 */\n      swap7\n        /* \"contracts/EtharisEscrow.sol\":14982:14998  brandRefund != 0 */\n      swap11\n      dup2\n        /* \"contracts/EtharisEscrow.sol\":14978:15038  if (brandRefund != 0) token.safeTransfer(brand, brandRefund) */\n      tag_166\n      jumpi\n        /* \"contracts/EtharisEscrow.sol\":14299:15049  if (_acceptDispute) {... */\n    tag_167:\n      pop\n      pop\n      pop\n      jump(tag_160)\n        /* \"contracts/EtharisEscrow.sol\":14978:15038  if (brandRefund != 0) token.safeTransfer(brand, brandRefund) */\n    tag_166:\n        /* \"contracts/EtharisEscrow.sol\":15000:15038  token.safeTransfer(brand, brandRefund) */\n      tag_168\n      swap3\n      tag_28\n      jump\t// in\n    tag_168:\n        /* \"contracts/EtharisEscrow.sol\":14978:15038  if (brandRefund != 0) token.safeTransfer(brand, brandRefund) */\n      0x00\n      dup1\n      dup1\n      jump(tag_167)\n        /* \"contracts/EtharisEscrow.sol\":4597:4662  if (_deals[_dealId].status != _status) revert InvalidDealStatus() */\n    tag_143:\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      mload(0x40)\n      shl(0xe0, 0x5e40b94f)\n        /* \"contracts/EtharisEscrow.sol\":4643:4662  InvalidDealStatus() */\n      dup2\n      mstore\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0x04\n      swap1\n        /* \"contracts/EtharisEscrow.sol\":4643:4662  InvalidDealStatus() */\n      revert\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n    tag_141:\n      shl(0xe0, 0x4e487b71)\n      dup8\n      mstore\n      mstore(0x04, 0x21)\n      0x24\n      dup8\n      revert\n        /* \"contracts/EtharisEscrow.sol\":4308:4371  if (_deals[_dealId].creator != _creator) revert NotAuthorized() */\n    tag_138:\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      mload(0x40)\n      shl(0xe0, 0xea8e4eb5)\n        /* \"contracts/EtharisEscrow.sol\":4356:4371  NotAuthorized() */\n      dup2\n      mstore\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0x04\n      swap1\n        /* \"contracts/EtharisEscrow.sol\":4356:4371  NotAuthorized() */\n      revert\n        /* \"contracts/EtharisEscrow.sol\":4448:4498  if (!_deals[_dealId].exists) revert DealNotFound() */\n    tag_135:\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      mload(0x40)\n      shl(0xe2, 0x223da473)\n        /* \"contracts/EtharisEscrow.sol\":4484:4498  DealNotFound() */\n      dup2\n      mstore\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0x04\n      swap1\n        /* \"contracts/EtharisEscrow.sol\":4484:4498  DealNotFound() */\n      revert\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n    tag_129:\n      0x00\n      dup1\n      revert\n    tag_95:\n      pop\n      jumpi(tag_105, callvalue)\n      jumpi(tag_105, slt(add(not(0x03), calldatasize), 0x20))\n      calldataload(0x04)\n      swap1\n      sub(shl(0x40, 0x01), 0x01)\n      dup3\n      gt\n      tag_105\n      jumpi\n      tag_175\n      0x20\n      tag_176\n      calldatasize\n      0x04\n      dup7\n      add\n      tag_3\n      jump\t// in\n    tag_176:\n      dup2\n      mload(0x40)\n      swap4\n      dup3\n      dup6\n      dup1\n      swap5\n      mload\n      swap4\n      dup5\n      swap3\n      add\n      tag_8\n      jump\t// in\n    tag_175:\n      dup2\n      add\n      0x04\n      dup2\n      mstore\n      sub\n      add\n      swap1\n      keccak256\n        /* \"contracts/EtharisEscrow.sol\":18866:18877  deal.exists */\n      0x08\n      dup2\n      add\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      sload\n      0xff\n      dup2\n      0x10\n      shr\n      and\n        /* \"contracts/EtharisEscrow.sol\":18865:18877  !deal.exists */\n      iszero\n        /* \"contracts/EtharisEscrow.sol\":18861:18900  if (!deal.exists) revert DealNotFound() */\n      tag_135\n      jumpi\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      dup2\n      sload\n      0x01\n        /* \"contracts/EtharisEscrow.sol\":18981:18993  deal.creator */\n      dup4\n      add\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      sload\n        /* \"contracts/EtharisEscrow.sol\":19007:19018  deal.amount */\n      0x06\n      dup5\n      add\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      sload\n        /* \"contracts/EtharisEscrow.sol\":19173:19192  deal.reviewDeadline */\n      0x07\n      dup6\n      add\n        /* \"contracts/EtharisEscrow.sol\":1861:1869  72 hours */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      swap3\n      dup4\n      and\n      swap6\n      swap4\n      swap1\n      swap3\n      and\n      swap4\n      swap1\n      swap3\n      tag_179\n        /* \"contracts/EtharisEscrow.sol\":18932:18943  deal.dealId */\n      0x02\n      dup3\n      add\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      tag_29\n      jump\t// in\n    tag_179:\n        /* \"contracts/EtharisEscrow.sol\":19084:19098  deal.briefHash */\n      swap5\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      tag_180\n      0x03\n        /* \"contracts/EtharisEscrow.sol\":19084:19098  deal.briefHash */\n      dup4\n      add\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      tag_29\n      jump\t// in\n    tag_180:\n        /* \"contracts/EtharisEscrow.sol\":19112:19127  deal.contentUrl */\n      swap1\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      tag_181\n      0x04\n        /* \"contracts/EtharisEscrow.sol\":19112:19127  deal.contentUrl */\n      dup5\n      add\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      tag_29\n      jump\t// in\n    tag_181:\n        /* \"contracts/EtharisEscrow.sol\":19141:19159  deal.disputeReason */\n      swap3\n      0x05\n      add\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      tag_182\n      swap1\n      tag_29\n      jump\t// in\n    tag_182:\n      swap4\n      mload(0x40)\n      swap9\n      dup10\n      swap9\n      0x01e0\n      dup1\n      dup12\n      mstore\n      dup11\n      add\n      tag_183\n      swap2\n      tag_9\n      jump\t// in\n    tag_183:\n      swap3\n      0x20\n      dup11\n      add\n      mstore\n      0x40\n      dup10\n      add\n      mstore\n      sub(shl(0x60, 0x01), 0x01)\n      dup8\n      and\n      0x60\n      dup10\n      add\n      mstore\n      dup7\n      0x60\n      shr\n      sub(shl(0x40, 0x01), 0x01)\n      and\n      0x80\n      dup10\n      add\n      mstore\n      0xa0\n      dup9\n      add\n      swap1\n      0xff\n      and\n      swap1\n      tag_184\n      swap2\n      tag_11\n      jump\t// in\n    tag_184:\n      dup7\n      dup2\n      sub\n      0xc0\n      dup9\n      add\n      mstore\n      tag_185\n      swap2\n      tag_9\n      jump\t// in\n    tag_185:\n      dup6\n      dup2\n      sub\n      0xe0\n      dup8\n      add\n      mstore\n      tag_186\n      swap2\n      tag_9\n      jump\t// in\n    tag_186:\n      dup5\n      dup2\n      sub\n      0x0100\n      dup7\n      add\n      mstore\n      tag_187\n      swap2\n      tag_9\n      jump\t// in\n    tag_187:\n        /* \"contracts/EtharisEscrow.sol\":1861:1869  72 hours */\n      swap2\n      dup2\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0x40\n        /* \"contracts/EtharisEscrow.sol\":1861:1869  72 hours */\n      shr\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      and\n      0x0120\n      dup6\n      add\n      mstore\n      0xa0\n      shr\n      sub(shl(0x40, 0x01), 0x01)\n      and\n      0x0140\n      dup5\n      add\n      mstore\n      sub(shl(0x40, 0x01), 0x01)\n      dup2\n      and\n      0x0160\n      dup5\n      add\n      mstore\n      dup1\n      0x80\n      shr\n      sub(shl(0x40, 0x01), 0x01)\n      and\n      0x0180\n      dup5\n      add\n      mstore\n      0xc0\n      shr\n      0x01a0\n      dup4\n      add\n      mstore\n      0x01c0\n      dup3\n      add\n      0x01\n      swap1\n      mstore\n      sub\n      swap1\n      return\n    tag_93:\n      pop\n      jumpi(tag_105, callvalue)\n      jumpi(tag_105, slt(add(not(0x03), calldatasize), 0xc0))\n      sub(shl(0x40, 0x01), 0x01)\n      calldataload(0x04)\n      dup2\n      dup2\n      gt\n      tag_192\n      jumpi\n      tag_194\n      swap1\n      calldatasize\n      swap1\n      0x04\n      add\n      tag_3\n      jump\t// in\n    tag_194:\n      tag_195\n      tag_4\n      jump\t// in\n    tag_195:\n      calldataload(0x44)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      and\n      swap4\n      swap2\n      swap1\n      dup5\n      swap1\n      sub\n      tag_129\n      jumpi\n      calldataload(0x64)\n      swap3\n      sub(shl(0x60, 0x01), 0x01)\n      dup5\n      and\n      dup5\n      sub\n      tag_129\n      jumpi\n      dup3\n      calldataload(0x84)\n      and\n      calldataload(0x84)\n      sub\n      tag_200\n      jumpi\n      calldataload(0xa4)\n      dup4\n      dup2\n      gt\n      tag_202\n      jumpi\n      tag_204\n      swap1\n      calldatasize\n      swap1\n      0x04\n      add\n      tag_3\n      jump\t// in\n    tag_204:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2484:2488  role */\n      swap2\n      tag_205\n      tag_12\n      jump\t// in\n    tag_205:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1204:1276  modifier whenNotPaused() {... */\n      tag_206\n      tag_21\n      jump\t// in\n    tag_206:\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0xff\n        /* \"contracts/EtharisEscrow.sol\":5826:5848  _deals[_dealId].exists */\n      0x08\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      mload(0x40)\n      0x20\n      dup2\n      dup7\n      mload\n      tag_207\n      dup2\n      dup4\n      dup6\n      dup12\n      add\n      tag_8\n      jump\t// in\n    tag_207:\n      dup2\n      add\n      0x04\n      dup2\n      mstore\n      sub\n      add\n      swap1\n      keccak256\n        /* \"contracts/EtharisEscrow.sol\":5826:5848  _deals[_dealId].exists */\n      add\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      sload\n      0x10\n      shr\n      and\n        /* \"contracts/EtharisEscrow.sol\":5822:5876  if (_deals[_dealId].exists) revert DealAlreadyExists() */\n      tag_208\n      jumpi\n        /* \"contracts/EtharisEscrow.sol\":5890:5919  _creatorAddress == address(0) */\n      dup6\n      iszero\n        /* \"contracts/EtharisEscrow.sol\":5886:5944  if (_creatorAddress == address(0)) revert InvalidAddress() */\n      tag_212\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      and\n      swap4\n        /* \"contracts/EtharisEscrow.sol\":5958:5985  _brandAddress == address(0) */\n      dup5\n      iszero\n        /* \"contracts/EtharisEscrow.sol\":5954:6010  if (_brandAddress == address(0)) revert InvalidAddress() */\n      tag_212\n      jumpi\n        /* \"contracts/EtharisEscrow.sol\":6024:6056  _brandAddress == _creatorAddress */\n      dup6\n      dup6\n      eq\n        /* \"contracts/EtharisEscrow.sol\":6020:6087  if (_brandAddress == _creatorAddress) revert CreatorCannotBeBrand() */\n      tag_214\n      jumpi\n      sub(shl(0x60, 0x01), 0x01)\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      dup2\n      and\n        /* \"contracts/EtharisEscrow.sol\":6101:6113  _amount == 0 */\n      iszero\n        /* \"contracts/EtharisEscrow.sol\":6097:6151  if (_amount == 0) revert AmountMustBeGreaterThanZero() */\n      tag_216\n      jumpi\n        /* \"contracts/EtharisEscrow.sol\":6178:6193  block.timestamp */\n      timestamp\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      dup5\n      calldataload(0x84)\n      and\n        /* \"contracts/EtharisEscrow.sol\":6165:6193  _deadline <= block.timestamp */\n      gt\n      iszero\n        /* \"contracts/EtharisEscrow.sol\":6161:6226  if (_deadline <= block.timestamp) revert DeadlineMustBeInFuture() */\n      tag_218\n      jumpi\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      dup3\n      mload\n        /* \"contracts/EtharisEscrow.sol\":6240:6269  bytes(_briefHash).length == 0 */\n      iszero\n        /* \"contracts/EtharisEscrow.sol\":6236:6297  if (bytes(_briefHash).length == 0) revert BriefHashRequired() */\n      tag_220\n      jumpi\n        /* \"contracts/EtharisEscrow.sol\":6961:7103  DealCreated(... */\n      tag_222\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0x40\n      swap3\n        /* \"contracts/EtharisEscrow.sol\":6961:7103  DealCreated(... */\n      0xceb1a488be98b2739817f21e7d3b0a343434519cd0fe4db3ef5fc27a96e8d295\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      swap5\n      tag_223\n      dup6\n      mload\n      0x20\n      dup2\n      dup6\n      mload\n      tag_224\n      dup2\n      dup4\n      dup6\n      dup11\n      add\n      tag_8\n      jump\t// in\n    tag_224:\n      dup2\n      add\n      0x04\n      dup2\n      mstore\n      sub\n      add\n      swap1\n      keccak256\n        /* \"contracts/EtharisEscrow.sol\":6424:6435  deal.dealId */\n      swap2\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      tag_225\n        /* \"contracts/EtharisEscrow.sol\":6424:6435  deal.dealId */\n      dup5\n      0x02\n      dup6\n      add\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      tag_18\n      jump\t// in\n    tag_225:\n      dup3\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      swap1\n      dup2\n      and\n      dup12\n      or\n      dup5\n      sstore\n      0x01\n        /* \"contracts/EtharisEscrow.sol\":6491:6503  deal.creator */\n      dup5\n      add\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      dup1\n      sload\n      dup3\n      and\n      dup14\n      or\n      swap1\n      sstore\n        /* \"contracts/EtharisEscrow.sol\":6531:6542  deal.amount */\n      0x06\n      dup5\n      add\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      dup1\n      sload\n      swap1\n      swap2\n      and\n      sub(shl(0x60, 0x01), 0x01)\n      dup9\n      and\n      or\n      and(shl(0x60, 0xffffffffffffffff), shl(0x60, calldataload(0x84)))\n      or\n      swap1\n      sstore\n      0x03\n        /* \"contracts/EtharisEscrow.sol\":6597:6611  deal.briefHash */\n      dup4\n      add\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      tag_18\n      jump\t// in\n    tag_223:\n        /* \"contracts/EtharisEscrow.sol\":5826:5848  _deals[_dealId].exists */\n      0x08\n        /* \"contracts/EtharisEscrow.sol\":6634:6645  deal.status */\n      dup2\n      add\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      dup1\n      sload\n      not(0xff)\n      and\n      dup2\n      sstore\n        /* \"contracts/EtharisEscrow.sol\":6680:6694  deal.createdAt */\n      0x07\n      dup3\n      add\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      dup1\n      sload\n      sub(shl(0xc0, 0x01), 0x01)\n      and\n        /* \"contracts/EtharisEscrow.sol\":6178:6193  block.timestamp */\n      timestamp\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0xc0\n      shl\n      not(sub(shl(0xc0, 0x01), 0x01))\n      and\n      or\n      swap1\n      sstore\n      0x04\n        /* \"contracts/EtharisEscrow.sol\":6730:6745  deal.contentUrl */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      dup1\n      sload\n      0x00\n      swap2\n        /* \"contracts/EtharisEscrow.sol\":6730:6745  deal.contentUrl */\n      swap1\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      tag_226\n      swap1\n      tag_16\n      jump\t// in\n    tag_226:\n      0x1f\n      dup2\n      gt\n      tag_227\n      jumpi\n    tag_228:\n      pop\n      sstore\n      0x010000\n      not(0xff0000)\n      dup3\n      sload\n      and\n      or\n      swap1\n      sstore\n      dup7\n      dup10\n      mstore\n        /* \"contracts/EtharisEscrow.sol\":6851:6862  _brandDeals */\n      0x05\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0x20\n      mstore\n        /* \"contracts/EtharisEscrow.sol\":6851:6891  _brandDeals[_brandAddress].push(_dealId) */\n      tag_229\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      dup2\n      dup6\n      dup12\n      keccak256\n        /* \"contracts/EtharisEscrow.sol\":6851:6891  _brandDeals[_brandAddress].push(_dealId) */\n      tag_19\n      jump\t// in\n    tag_229:\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      dup8\n      dup10\n      mstore\n        /* \"contracts/EtharisEscrow.sol\":6531:6542  deal.amount */\n      0x06\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0x20\n      mstore\n        /* \"contracts/EtharisEscrow.sol\":6901:6945  _creatorDeals[_creatorAddress].push(_dealId) */\n      tag_230\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      dup2\n      dup6\n      dup12\n      keccak256\n        /* \"contracts/EtharisEscrow.sol\":6901:6945  _creatorDeals[_creatorAddress].push(_dealId) */\n      tag_19\n      jump\t// in\n    tag_230:\n        /* \"contracts/EtharisEscrow.sol\":6961:7103  DealCreated(... */\n      tag_20\n      jump\t// in\n    tag_222:\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      swap4\n      sub(shl(0x60, 0x01), 0x01)\n      dup4\n      mload\n      swap3\n      and\n      dup3\n      mstore\n      calldataload(0x84)\n      and\n      0x20\n      dup3\n      add\n      mstore\n        /* \"contracts/EtharisEscrow.sol\":6961:7103  DealCreated(... */\n      log4\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      dup1\n      return\n    tag_227:\n      dup2\n      dup4\n      mstore\n      0x20\n      dup4\n      keccak256\n      tag_231\n      swap2\n      0x1f\n      add\n      0x05\n      shr\n      dup2\n      add\n      swap1\n      tag_17\n      jump\t// in\n    tag_231:\n      0x00\n      jump(tag_228)\n        /* \"contracts/EtharisEscrow.sol\":6236:6297  if (bytes(_briefHash).length == 0) revert BriefHashRequired() */\n    tag_220:\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      mload(0x40)\n      shl(0xe3, 0x07e4dd01)\n        /* \"contracts/EtharisEscrow.sol\":6278:6297  BriefHashRequired() */\n      dup2\n      mstore\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0x04\n      swap1\n        /* \"contracts/EtharisEscrow.sol\":6278:6297  BriefHashRequired() */\n      revert\n        /* \"contracts/EtharisEscrow.sol\":6161:6226  if (_deadline <= block.timestamp) revert DeadlineMustBeInFuture() */\n    tag_218:\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      mload(0x40)\n      shl(0xe0, 0x0642ce77)\n        /* \"contracts/EtharisEscrow.sol\":6202:6226  DeadlineMustBeInFuture() */\n      dup2\n      mstore\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0x04\n      swap1\n        /* \"contracts/EtharisEscrow.sol\":6202:6226  DeadlineMustBeInFuture() */\n      revert\n        /* \"contracts/EtharisEscrow.sol\":6097:6151  if (_amount == 0) revert AmountMustBeGreaterThanZero() */\n    tag_216:\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      mload(0x40)\n      shl(0xe0, 0x5e85ae73)\n        /* \"contracts/EtharisEscrow.sol\":6122:6151  AmountMustBeGreaterThanZero() */\n      dup2\n      mstore\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0x04\n      swap1\n        /* \"contracts/EtharisEscrow.sol\":6122:6151  AmountMustBeGreaterThanZero() */\n      revert\n        /* \"contracts/EtharisEscrow.sol\":6020:6087  if (_brandAddress == _creatorAddress) revert CreatorCannotBeBrand() */\n    tag_214:\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      mload(0x40)\n      shl(0xe2, 0x24da0345)\n        /* \"contracts/EtharisEscrow.sol\":6065:6087  CreatorCannotBeBrand() */\n      dup2\n      mstore\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0x04\n      swap1\n        /* \"contracts/EtharisEscrow.sol\":6065:6087  CreatorCannotBeBrand() */\n      revert\n        /* \"contracts/EtharisEscrow.sol\":5954:6010  if (_brandAddress == address(0)) revert InvalidAddress() */\n    tag_212:\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      mload(0x40)\n      shl(0xe0, 0xe6c4247b)\n        /* \"contracts/EtharisEscrow.sol\":5994:6010  InvalidAddress() */\n      dup2\n      mstore\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0x04\n      swap1\n        /* \"contracts/EtharisEscrow.sol\":5994:6010  InvalidAddress() */\n      revert\n        /* \"contracts/EtharisEscrow.sol\":5822:5876  if (_deals[_dealId].exists) revert DealAlreadyExists() */\n    tag_208:\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      mload(0x40)\n      shl(0xe1, 0x38a6a807)\n        /* \"contracts/EtharisEscrow.sol\":5857:5876  DealAlreadyExists() */\n      dup2\n      mstore\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0x04\n      swap1\n        /* \"contracts/EtharisEscrow.sol\":5857:5876  DealAlreadyExists() */\n      revert\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n    tag_202:\n      dup7\n      dup1\n      revert\n    tag_200:\n      dup6\n      dup1\n      revert\n    tag_192:\n      dup3\n      dup1\n      revert\n    tag_91:\n      pop\n      jumpi(tag_105, callvalue)\n      0x20\n      dup1\n      add(calldatasize, not(0x03))\n      slt\n      tag_112\n      jumpi\n      sub(shl(0x40, 0x01), 0x01)\n      swap1\n      calldataload(0x04)\n      dup3\n      dup2\n      gt\n      tag_236\n      jumpi\n      tag_238\n      swap1\n      calldatasize\n      swap1\n      0x04\n      add\n      tag_3\n      jump\t// in\n    tag_238:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2227:2330  modifier nonReentrant() {... */\n      tag_239\n      tag_23\n      jump\t// in\n    tag_239:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2484:2488  role */\n      tag_240\n      tag_12\n      jump\t// in\n    tag_240:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1204:1276  modifier whenNotPaused() {... */\n      tag_241\n      tag_21\n      jump\t// in\n    tag_241:\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      mload(0x40)\n      0xff\n        /* \"contracts/EtharisEscrow.sol\":4453:4475  _deals[_dealId].exists */\n      0x08\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      dup4\n      mload\n      swap3\n      dup6\n      dup2\n      dup2\n      dup8\n      add\n      swap6\n      tag_242\n      dup2\n      dup4\n      dup10\n      tag_8\n      jump\t// in\n    tag_242:\n      dup2\n      add\n      0x04\n      dup2\n      mstore\n      sub\n      add\n      swap1\n      keccak256\n        /* \"contracts/EtharisEscrow.sol\":4453:4475  _deals[_dealId].exists */\n      add\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      sload\n      0x10\n      shr\n      and\n        /* \"contracts/EtharisEscrow.sol\":4452:4475  !_deals[_dealId].exists */\n      iszero\n        /* \"contracts/EtharisEscrow.sol\":4448:4498  if (!_deals[_dealId].exists) revert DealNotFound() */\n      tag_135\n      jumpi\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0xff\n        /* \"contracts/EtharisEscrow.sol\":4453:4475  _deals[_dealId].exists */\n      0x08\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      mload(0x40)\n      dup6\n      dup2\n      dup7\n      mload\n      tag_245\n      dup2\n      dup4\n      dup10\n      tag_8\n      jump\t// in\n    tag_245:\n      dup2\n      add\n      0x04\n      dup2\n      mstore\n      sub\n      add\n      swap1\n      keccak256\n        /* \"contracts/EtharisEscrow.sol\":4601:4623  _deals[_dealId].status */\n      add\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      sload\n      and\n      0x06\n      dup2\n      lt\n      iszero\n      tag_246\n      jumpi\n        /* \"contracts/EtharisEscrow.sol\":15649:15670  ContractStatus.ACTIVE */\n      0x01\n        /* \"contracts/EtharisEscrow.sol\":4601:4634  _deals[_dealId].status != _status */\n      sub\n        /* \"contracts/EtharisEscrow.sol\":4597:4662  if (_deals[_dealId].status != _status) revert InvalidDealStatus() */\n      tag_143\n      jumpi\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      dup3\n      tag_250\n      swap2\n      mload(0x40)\n      dup1\n      swap4\n      dup2\n      swap3\n      dup7\n      mload\n      swap3\n      dup4\n      swap2\n      tag_8\n      jump\t// in\n    tag_250:\n      dup2\n      add\n      0x04\n      dup2\n      mstore\n      sub\n      add\n      swap1\n      keccak256\n        /* \"contracts/EtharisEscrow.sol\":15755:15768  deal.deadline */\n      swap3\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0x06\n        /* \"contracts/EtharisEscrow.sol\":15755:15768  deal.deadline */\n      dup5\n      add\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      sload\n      swap1\n      dup2\n      0x60\n      shr\n      and\n        /* \"contracts/EtharisEscrow.sol\":15736:15751  block.timestamp */\n      timestamp\n        /* \"contracts/EtharisEscrow.sol\":15736:15768  block.timestamp <= deal.deadline */\n      gt\n      iszero\n        /* \"contracts/EtharisEscrow.sol\":15732:15796  if (block.timestamp <= deal.deadline) revert DeadlineNotPassed() */\n      tag_251\n      jumpi\n        /* \"contracts/EtharisEscrow.sol\":4453:4475  _deals[_dealId].exists */\n      0x08\n        /* \"contracts/EtharisEscrow.sol\":15851:15862  deal.status */\n      dup5\n      add\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"contracts/EtharisEscrow.sol\":16451:16475  ContractStatus.CANCELLED */\n      0x05\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      or\n      swap1\n      sstore\n      sub(shl(0x60, 0x01), 0x01)\n      and\n      swap3\n        /* \"contracts/EtharisEscrow.sol\":16012:16060  DealCancelled(_dealId, msg.sender, refundAmount) */\n      0xb559d285c87e4fa0f561388264310703ff0c6c454a39ae52d0ae94032ff0db70\n      swap2\n      tag_253\n      swap2\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      dup6\n      dup1\n        /* \"contracts/EtharisEscrow.sol\":15900:15997  if (refundAmount != 0) {... */\n      tag_254\n      jumpi\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n    tag_255:\n        /* \"contracts/EtharisEscrow.sol\":16012:16060  DealCancelled(_dealId, msg.sender, refundAmount) */\n      pop\n      pop\n      tag_20\n      jump\t// in\n    tag_253:\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      swap2\n      mload(0x40)\n      swap4\n      dup5\n      mstore\n        /* \"contracts/EtharisEscrow.sol\":16035:16045  msg.sender */\n      caller\n        /* \"contracts/EtharisEscrow.sol\":16012:16060  DealCancelled(_dealId, msg.sender, refundAmount) */\n      swap4\n      log3\n        /* \"contracts/EtharisEscrow.sol\":15649:15670  ContractStatus.ACTIVE */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      dup2\n      sstore\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      dup1\n      return\n        /* \"contracts/EtharisEscrow.sol\":15900:15997  if (refundAmount != 0) {... */\n    tag_254:\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      swap1\n      sload\n        /* \"contracts/EtharisEscrow.sol\":15937:15986  _idrxToken.safeTransfer(deal.brand, refundAmount) */\n      tag_256\n      swap2\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      and\n        /* \"contracts/EtharisEscrow.sol\":15937:15947  _idrxToken */\n      immutable(\"0x92a99c2e1e73cfa8af214a27ee636aa00abb49bffb5065f213fd4435430466da\")\n        /* \"contracts/EtharisEscrow.sol\":15937:15986  _idrxToken.safeTransfer(deal.brand, refundAmount) */\n      tag_28\n      jump\t// in\n    tag_256:\n        /* \"contracts/EtharisEscrow.sol\":15900:15997  if (refundAmount != 0) {... */\n      0x00\n      dup6\n      jump(tag_255)\n        /* \"contracts/EtharisEscrow.sol\":15732:15796  if (block.timestamp <= deal.deadline) revert DeadlineNotPassed() */\n    tag_251:\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      mload(0x40)\n      shl(0xe4, 0x02eb3543)\n        /* \"contracts/EtharisEscrow.sol\":15777:15796  DeadlineNotPassed() */\n      dup2\n      mstore\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0x04\n      swap1\n        /* \"contracts/EtharisEscrow.sol\":15777:15796  DeadlineNotPassed() */\n      revert\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n    tag_246:\n      shl(0xe0, 0x4e487b71)\n      dup7\n      mstore\n      mstore(0x04, 0x21)\n      0x24\n      dup7\n      revert\n    tag_236:\n      dup4\n      dup1\n      revert\n    tag_89:\n      pop\n      jumpi(tag_105, callvalue)\n      dup1\n      add(calldatasize, not(0x03))\n      slt\n      tag_105\n      jumpi\n      mload(0x40)\n        /* \"contracts/EtharisEscrow.sol\":17582:17592  _idrxToken */\n      immutable(\"0x92a99c2e1e73cfa8af214a27ee636aa00abb49bffb5065f213fd4435430466da\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      and\n      dup2\n      mstore\n      0x20\n      swap1\n      return\n    tag_87:\n      pop\n      jumpi(tag_105, callvalue)\n      jumpi(tag_105, slt(add(not(0x03), calldatasize), 0x40))\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4723:4749  _revokeRole(role, account) */\n      tag_265\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      calldataload(0x04)\n      tag_266\n      tag_4\n      jump\t// in\n    tag_266:\n      swap1\n      dup1\n      dup5\n      mstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3877:3883  _roles */\n      0x02\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0x20\n      mstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2484:2488  role */\n      tag_267\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0x01\n      0x40\n      dup7\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3877:3899  _roles[role].adminRole */\n      add\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      sload\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2484:2488  role */\n      tag_13\n      jump\t// in\n    tag_267:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4723:4749  _revokeRole(role, account) */\n      tag_15\n      jump\t// in\n    tag_265:\n      pop\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      dup1\n      return\n    tag_85:\n      pop\n      jumpi(tag_105, callvalue)\n      0x20\n      dup1\n      add(calldatasize, not(0x03))\n      slt\n      tag_112\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n      tag_272\n      tag_5\n      jump\t// in\n    tag_272:\n      and\n      dup3\n      mstore\n        /* \"contracts/EtharisEscrow.sol\":18176:18189  _creatorDeals */\n      0x06\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      dup2\n      mstore\n      0x40\n      dup3\n      keccak256\n      dup1\n      sload\n      swap1\n      tag_273\n      dup3\n      tag_30\n      jump\t// in\n    tag_273:\n      swap3\n      dup1\n      dup5\n      add\n      swap2\n      dup6\n      mstore\n      dup1\n      dup6\n      keccak256\n      swap5\n      swap2\n    tag_274:\n      dup4\n      dup4\n      lt\n      tag_275\n      jumpi\n      mload(0x40)\n      dup1\n      tag_119\n      dup8\n      dup3\n      tag_10\n      jump\t// in\n    tag_275:\n      0x01\n      dup3\n      dup2\n      swap3\n      tag_278\n      dup10\n      tag_29\n      jump\t// in\n    tag_278:\n      dup2\n      mstore\n      add\n      swap7\n      add\n      swap3\n      add\n      swap2\n      swap5\n      jump(tag_274)\n    tag_83:\n      pop\n      jumpi(tag_105, callvalue)\n      dup1\n      add(calldatasize, not(0x03))\n      slt\n      tag_105\n      jumpi\n      0x20\n      swap1\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_81:\n      pop\n      jumpi(tag_105, callvalue)\n      jumpi(tag_105, slt(add(not(0x03), calldatasize), 0x20))\n      calldataload(0x04)\n      sub(shl(0x40, 0x01), 0x01)\n      dup2\n      gt\n      tag_112\n      jumpi\n      0x20\n      tag_289\n      tag_290\n      swap3\n      calldatasize\n      swap1\n      0x04\n      add\n      tag_3\n      jump\t// in\n    tag_289:\n      dup4\n      0x01e0\n      mload(0x40)\n      tag_291\n      dup2\n      tag_1\n      jump\t// in\n    tag_291:\n      dup3\n      dup2\n      mstore\n      dup3\n      dup6\n      dup3\n      add\n      mstore\n      0x60\n      0x40\n      dup3\n      add\n      mstore\n      0x60\n      dup1\n      dup3\n      add\n      mstore\n      0x60\n      0x80\n      dup3\n      add\n      mstore\n      0x60\n      0xa0\n      dup3\n      add\n      mstore\n      dup3\n      0xc0\n      dup3\n      add\n      mstore\n      dup3\n      0xe0\n      dup3\n      add\n      mstore\n      dup3\n      0x0100\n      dup3\n      add\n      mstore\n      dup3\n      0x0120\n      dup3\n      add\n      mstore\n      dup3\n      0x0140\n      dup3\n      add\n      mstore\n      dup3\n      0x0160\n      dup3\n      add\n      mstore\n      dup3\n      0x0180\n      dup3\n      add\n      mstore\n      dup3\n      0x01a0\n      dup3\n      add\n      mstore\n      dup3\n      0x01c0\n      dup3\n      add\n      mstore\n      add\n      mstore\n      dup2\n      mload(0x40)\n      swap4\n      dup3\n      dup6\n      dup1\n      swap5\n      mload\n      swap4\n      dup5\n      swap3\n      add\n      tag_8\n      jump\t// in\n    tag_290:\n      dup2\n      add\n      0x04\n      dup2\n      mstore\n      sub\n      add\n      swap1\n      keccak256\n      swap1\n      0x08\n      mload(0x40)\n      swap3\n      tag_292\n      dup5\n      tag_1\n      jump\t// in\n    tag_292:\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n      dup6\n      mstore\n      0x01\n      dup3\n      add\n      sload\n      and\n      0x20\n      dup6\n      add\n      mstore\n      tag_293\n      0x02\n      dup3\n      add\n      tag_29\n      jump\t// in\n    tag_293:\n      0x40\n      dup6\n      add\n      mstore\n      tag_294\n      0x03\n      dup3\n      add\n      tag_29\n      jump\t// in\n    tag_294:\n      0x60\n      dup6\n      add\n      mstore\n      tag_295\n      0x04\n      dup3\n      add\n      tag_29\n      jump\t// in\n    tag_295:\n      0x80\n      dup6\n      add\n      mstore\n      tag_296\n      0x05\n      dup3\n      add\n      tag_29\n      jump\t// in\n    tag_296:\n      0xa0\n      dup6\n      add\n      mstore\n      sub(shl(0x40, 0x01), 0x01)\n      0x06\n      dup3\n      add\n      sload\n      sub(shl(0x60, 0x01), 0x01)\n      dup2\n      and\n      0xc0\n      dup8\n      add\n      mstore\n      dup2\n      dup2\n      0x60\n      shr\n      and\n      0xe0\n      dup8\n      add\n      mstore\n      0xa0\n      shr\n      and\n      0x0100\n      dup6\n      add\n      mstore\n      0x07\n      dup2\n      add\n      sload\n      sub(shl(0x40, 0x01), 0x01)\n      dup2\n      and\n      0x0120\n      dup7\n      add\n      mstore\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"contracts/EtharisEscrow.sol\":1861:1869  72 hours */\n      dup2\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0x40\n        /* \"contracts/EtharisEscrow.sol\":1861:1869  72 hours */\n      shr\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      and\n      0x0140\n      dup7\n      add\n      mstore\n      sub(shl(0x40, 0x01), 0x01)\n      dup2\n      0x80\n      shr\n      and\n      0x0160\n      dup7\n      add\n      mstore\n      0xc0\n      shr\n      0x0180\n      dup6\n      add\n      mstore\n      add\n      sload\n      swap1\n      0x06\n      0xff\n      dup4\n      and\n      lt\n      iszero\n      tag_297\n      jumpi\n      pop\n      dup1\n      0xff\n      dup1\n      swap3\n      and\n      0x01a0\n      dup5\n      add\n      mstore\n      dup2\n      dup2\n      0x08\n      shr\n      and\n      iszero\n      iszero\n      0x01c0\n      dup5\n      add\n      mstore\n      0x10\n      shr\n      and\n      iszero\n      iszero\n      0x01e0\n      dup3\n      add\n      mstore\n      mload(0x40)\n      dup1\n      swap2\n      0x20\n      dup3\n      mstore\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      dup2\n      mload\n      and\n      0x20\n      dup4\n      add\n      mstore\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      0x20\n      dup3\n      add\n      mload\n      and\n      0x40\n      dup4\n      add\n      mstore\n      0x01e0\n      tag_299\n      tag_300\n      0x40\n      dup5\n      add\n      mload\n      0x0200\n      0x60\n      dup8\n      add\n      mstore\n      0x0220\n      dup7\n      add\n      swap1\n      tag_9\n      jump\t// in\n    tag_300:\n      tag_301\n      tag_302\n      0x60\n      dup7\n      add\n      mload\n      swap3\n      not(0x1f)\n      swap4\n      dup5\n      dup10\n      dup4\n      sub\n      add\n      0x80\n      dup11\n      add\n      mstore\n      tag_9\n      jump\t// in\n    tag_302:\n      0x80\n      dup7\n      add\n      mload\n      dup4\n      dup9\n      dup4\n      sub\n      add\n      0xa0\n      dup10\n      add\n      mstore\n      tag_9\n      jump\t// in\n    tag_301:\n      swap1\n      0xa0\n      dup6\n      add\n      mload\n      swap1\n      dup7\n      dup4\n      sub\n      add\n      0xc0\n      dup8\n      add\n      mstore\n      tag_9\n      jump\t// in\n    tag_299:\n      swap2\n      sub(shl(0x60, 0x01), 0x01)\n      0xc0\n      dup3\n      add\n      mload\n      and\n      0xe0\n      dup6\n      add\n      mstore\n      sub(shl(0x40, 0x01), 0x01)\n      0xe0\n      dup3\n      add\n      mload\n      and\n      0x0100\n      dup6\n      add\n      mstore\n      sub(shl(0x40, 0x01), 0x01)\n      0x0100\n      dup3\n      add\n      mload\n      and\n      0x0120\n      dup6\n      add\n      mstore\n      sub(shl(0x40, 0x01), 0x01)\n      0x0120\n      dup3\n      add\n      mload\n      and\n      0x0140\n      dup6\n      add\n      mstore\n      sub(shl(0x40, 0x01), 0x01)\n      0x0140\n      dup3\n      add\n      mload\n      and\n      0x0160\n      dup6\n      add\n      mstore\n      sub(shl(0x40, 0x01), 0x01)\n      0x0160\n      dup3\n      add\n      mload\n      and\n      0x0180\n      dup6\n      add\n      mstore\n      sub(shl(0x40, 0x01), 0x01)\n      0x0180\n      dup3\n      add\n      mload\n      and\n      0x01a0\n      dup6\n      add\n      mstore\n      tag_303\n      0x01a0\n      dup3\n      add\n      mload\n      0x01c0\n      dup7\n      add\n      swap1\n      tag_11\n      jump\t// in\n    tag_303:\n      0x01c0\n      dup2\n      add\n      mload\n      iszero\n      iszero\n      dup3\n      dup6\n      add\n      mstore\n      add\n      mload\n      iszero\n      iszero\n      0x0200\n      dup4\n      add\n      mstore\n      sub\n      swap1\n      return\n    tag_297:\n      shl(0xe0, 0x4e487b71)\n      dup2\n      mstore\n      mstore(0x04, 0x21)\n      0x24\n      swap1\n      revert\n    tag_79:\n      pop\n      jumpi(tag_105, callvalue)\n      jumpi(tag_105, slt(add(not(0x03), calldatasize), 0x40))\n      tag_308\n      tag_5\n      jump\t// in\n    tag_308:\n      calldataload(0x24)\n      dup1\n      iszero\n      iszero\n      dup2\n      sub\n      tag_129\n      jumpi\n        /* \"contracts/EtharisEscrow.sol\":19500:19566  _isBrand ? _brandDeals[_userAddress] : _creatorDeals[_userAddress] */\n      iszero\n      tag_311\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      and\n      dup2\n      mstore\n        /* \"contracts/EtharisEscrow.sol\":19511:19522  _brandDeals */\n      0x05\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/EtharisEscrow.sol\":19500:19566  _isBrand ? _brandDeals[_userAddress] : _creatorDeals[_userAddress] */\n    tag_313:\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      dup1\n      sload\n      tag_314\n      dup2\n      tag_30\n      jump\t// in\n    tag_314:\n      swap2\n      dup4\n      mstore\n      0x20\n      dup1\n      dup5\n      keccak256\n      swap4\n      swap1\n      dup1\n      dup5\n      add\n    tag_315:\n      dup4\n      dup4\n      lt\n      tag_316\n      jumpi\n      mload(0x40)\n      dup1\n      tag_119\n      dup8\n      dup3\n      tag_10\n      jump\t// in\n    tag_316:\n      0x01\n      dup3\n      dup2\n      swap3\n      tag_319\n      dup10\n      tag_29\n      jump\t// in\n    tag_319:\n      dup2\n      mstore\n      add\n      swap7\n      add\n      swap3\n      add\n      swap2\n      swap5\n      jump(tag_315)\n        /* \"contracts/EtharisEscrow.sol\":19500:19566  _isBrand ? _brandDeals[_userAddress] : _creatorDeals[_userAddress] */\n    tag_311:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      and\n      dup2\n      mstore\n        /* \"contracts/EtharisEscrow.sol\":19539:19552  _creatorDeals */\n      0x06\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/EtharisEscrow.sol\":19500:19566  _isBrand ? _brandDeals[_userAddress] : _creatorDeals[_userAddress] */\n      jump(tag_313)\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n    tag_77:\n      pop\n      jumpi(tag_105, callvalue)\n      jumpi(tag_105, slt(add(not(0x03), calldatasize), 0xe0))\n      sub(shl(0x40, 0x01), 0x01)\n      calldataload(0x04)\n      dup2\n      dup2\n      gt\n      tag_192\n      jumpi\n      tag_326\n      swap1\n      calldatasize\n      swap1\n      0x04\n      add\n      tag_3\n      jump\t// in\n    tag_326:\n      swap1\n      tag_327\n      tag_4\n      jump\t// in\n    tag_327:\n      swap1\n      calldataload(0x44)\n      swap2\n      sub(shl(0x60, 0x01), 0x01)\n      dup4\n      and\n      dup1\n      swap4\n      sub\n      tag_328\n      jumpi\n      calldataload(0x84)\n      0xff\n      dup2\n      and\n      dup1\n      swap2\n      sub\n      tag_200\n      jumpi\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2227:2330  modifier nonReentrant() {... */\n      tag_332\n      tag_23\n      jump\t// in\n    tag_332:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2484:2488  role */\n      tag_333\n      tag_12\n      jump\t// in\n    tag_333:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1204:1276  modifier whenNotPaused() {... */\n      tag_334\n      tag_21\n      jump\t// in\n    tag_334:\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      mload(0x40)\n      swap5\n      dup6\n      swap3\n      0xff\n        /* \"contracts/EtharisEscrow.sol\":4453:4475  _deals[_dealId].exists */\n      0x08\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      dup6\n      dup5\n      mload\n      0x20\n      swap8\n      dup2\n      tag_335\n      dup11\n      swap4\n      dup5\n      dup11\n      add\n      swap15\n      dup16\n      tag_8\n      jump\t// in\n    tag_335:\n      dup2\n      add\n      0x04\n      dup2\n      mstore\n      sub\n      add\n      swap1\n      keccak256\n        /* \"contracts/EtharisEscrow.sol\":4453:4475  _deals[_dealId].exists */\n      add\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      sload\n      0x10\n      shr\n      and\n        /* \"contracts/EtharisEscrow.sol\":4452:4475  !_deals[_dealId].exists */\n      iszero\n        /* \"contracts/EtharisEscrow.sol\":4448:4498  if (!_deals[_dealId].exists) revert DealNotFound() */\n      tag_135\n      jumpi\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      mload(0x40)\n      swap3\n      dup3\n      mload\n      tag_338\n      dup2\n      dup7\n      dup12\n      tag_8\n      jump\t// in\n    tag_338:\n      dup5\n      add\n      0x04\n      dup2\n      mstore\n      dup5\n      dup7\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      swap7\n      dup8\n      swap4\n      sub\n      add\n      swap1\n      keccak256\n      sload\n      and\n      swap8\n      dup5\n      dup4\n      and\n        /* \"contracts/EtharisEscrow.sol\":4153:4184  _deals[_dealId].brand != _brand */\n      dup1\n      swap10\n      sub\n        /* \"contracts/EtharisEscrow.sol\":4149:4208  if (_deals[_dealId].brand != _brand) revert NotAuthorized() */\n      tag_138\n      jumpi\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0xff\n        /* \"contracts/EtharisEscrow.sol\":4453:4475  _deals[_dealId].exists */\n      0x08\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      mload(0x40)\n      dup9\n      dup2\n      dup9\n      mload\n      tag_341\n      dup2\n      dup4\n      dup10\n      tag_8\n      jump\t// in\n    tag_341:\n      dup2\n      add\n      0x04\n      dup2\n      mstore\n      sub\n      add\n      swap1\n      keccak256\n        /* \"contracts/EtharisEscrow.sol\":4601:4623  _deals[_dealId].status */\n      add\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      sload\n      and\n      0x06\n      dup2\n      lt\n      iszero\n      tag_342\n      jumpi\n        /* \"contracts/EtharisEscrow.sol\":4597:4662  if (_deals[_dealId].status != _status) revert InvalidDealStatus() */\n      tag_143\n      jumpi\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      dup4\n      mload\n        /* \"contracts/EtharisEscrow.sol\":7727:7753  bytes(_dealId).length == 0 */\n      iszero\n        /* \"contracts/EtharisEscrow.sol\":7723:7777  if (bytes(_dealId).length == 0) revert InvalidDealID() */\n      tag_346\n      jumpi\n        /* \"contracts/EtharisEscrow.sol\":7791:7803  _amount == 0 */\n      dup8\n      iszero\n        /* \"contracts/EtharisEscrow.sol\":7787:7827  if (_amount == 0) revert InvalidAmount() */\n      tag_348\n      jumpi\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      tag_350\n      dup7\n      0x06\n      swap3\n      mload(0x40)\n      dup1\n      swap4\n      dup2\n      swap3\n      dup10\n      mload\n      swap3\n      dup4\n      swap2\n      tag_8\n      jump\t// in\n    tag_350:\n      dup2\n      add\n      0x04\n      dup2\n      mstore\n      sub\n      add\n      swap1\n      keccak256\n        /* \"contracts/EtharisEscrow.sol\":7888:7901  deal.fundedAt */\n      add\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      swap2\n      dup7\n      dup4\n      sload\n      0xa0\n      shr\n      and\n        /* \"contracts/EtharisEscrow.sol\":7884:7934  if (deal.fundedAt != 0) revert DealAlreadyFunded() */\n      tag_351\n      jumpi\n        /* \"contracts/EtharisEscrow.sol\":8047:8057  _idrxToken */\n      immutable(\"0x92a99c2e1e73cfa8af214a27ee636aa00abb49bffb5065f213fd4435430466da\")\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      swap5\n      dup6\n      and\n      swap1\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n        /* \"contracts/EtharisEscrow.sol\":8091:8121  token.balanceOf(_brandAddress) */\n      dup2\n      mstore\n      dup11\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0x04\n        /* \"contracts/EtharisEscrow.sol\":8091:8121  token.balanceOf(_brandAddress) */\n      dup3\n      add\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      mstore\n        /* \"contracts/EtharisEscrow.sol\":8091:8121  token.balanceOf(_brandAddress) */\n      dup8\n      dup2\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0x24\n        /* \"contracts/EtharisEscrow.sol\":8091:8121  token.balanceOf(_brandAddress) */\n      dup2\n      dup7\n      gas\n      staticcall\n      dup1\n      iszero\n      tag_353\n      jumpi\n      dup11\n      swap2\n      dup14\n      swap2\n      tag_355\n      jumpi\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n    tag_356:\n        /* \"contracts/EtharisEscrow.sol\":8135:8157  brandBalance < _amount */\n      pop\n      lt\n        /* \"contracts/EtharisEscrow.sol\":8131:8187  if (brandBalance < _amount) revert InsufficientBalance() */\n      tag_357\n      jumpi\n        /* \"contracts/EtharisEscrow.sol\":8264:8271  _v != 0 */\n      dup7\n      swap2\n      dup4\n      iszero\n      dup1\n      iszero\n        /* \"contracts/EtharisEscrow.sol\":8264:8291  _v != 0 || _r != bytes32(0) */\n      swap1\n      tag_359\n      jumpi\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n    tag_360:\n        /* \"contracts/EtharisEscrow.sol\":8264:8311  _v != 0 || _r != bytes32(0) || _s != bytes32(0) */\n      dup1\n      iszero\n      tag_361\n      jumpi\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n    tag_362:\n        /* \"contracts/EtharisEscrow.sol\":8260:8537  if (_v != 0 || _r != bytes32(0) || _s != bytes32(0)) {... */\n      tag_363\n      jumpi\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n    tag_364:\n      mload(0x40)\n      shl(0xe1, 0x6eb1769f)\n        /* \"contracts/EtharisEscrow.sol\":8567:8609  token.allowance(_brandAddress, cachedThis) */\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      swap1\n      swap3\n      and\n      0x04\n        /* \"contracts/EtharisEscrow.sol\":8567:8609  token.allowance(_brandAddress, cachedThis) */\n      dup4\n      add\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      mstore\n        /* \"contracts/EtharisEscrow.sol\":8017:8021  this */\n      address\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0x24\n      dup4\n      add\n      mstore\n      swap1\n      swap3\n      pop\n      dup3\n      swap1\n      dup2\n      dup1\n      0x44\n      dup2\n      add\n        /* \"contracts/EtharisEscrow.sol\":8567:8609  token.allowance(_brandAddress, cachedThis) */\n    tag_365:\n      sub\n      swap2\n      gas\n      staticcall\n      dup1\n      iszero\n      tag_366\n      jumpi\n      dup8\n      swap2\n      dup11\n      swap2\n      tag_368\n      jumpi\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n    tag_369:\n        /* \"contracts/EtharisEscrow.sol\":8623:8642  allowance < _amount */\n      pop\n      lt\n        /* \"contracts/EtharisEscrow.sol\":8619:8674  if (allowance < _amount) revert InsufficientAllowance() */\n      tag_370\n      jumpi\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      mload(0x40)\n      shl(0xe0, 0x23b872dd)\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1745:1798  abi.encodeCall(token.transferFrom, (from, to, value)) */\n      dup6\n      dup3\n      add\n      mstore\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0x24\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1745:1798  abi.encodeCall(token.transferFrom, (from, to, value)) */\n      dup2\n      add\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      dup9\n      swap1\n      mstore\n        /* \"contracts/EtharisEscrow.sol\":8017:8021  this */\n      address\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      dup1\n      dup3\n      add\n      dup9\n      swap1\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1745:1798  abi.encodeCall(token.transferFrom, (from, to, value)) */\n      dup2\n      mstore\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      swap5\n      0xa0\n      dup7\n      add\n      swap1\n      dup2\n      gt\n      dup7\n      dup3\n      lt\n      or\n      tag_372\n      jumpi\n        /* \"contracts/EtharisEscrow.sol\":8809:8852  DealFunded(_dealId, _brandAddress, _amount) */\n      0x2c138f65913cd3b9ca6f36e4b59e26830a033a978ca69f935781972e6df1f61d\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      swap6\n        /* \"contracts/EtharisEscrow.sol\":8809:8852  DealFunded(_dealId, _brandAddress, _amount) */\n      tag_374\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      swap5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1745:1798  abi.encodeCall(token.transferFrom, (from, to, value)) */\n      tag_375\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      swap3\n      0x40\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1745:1798  abi.encodeCall(token.transferFrom, (from, to, value)) */\n      tag_24\n      jump\t// in\n    tag_375:\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      dup1\n      sload\n      not(shl(0xa0, 0xffffffffffffffff))\n      and\n        /* \"contracts/EtharisEscrow.sol\":8777:8792  block.timestamp */\n      timestamp\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0xa0\n      shl\n      shl(0xa0, 0xffffffffffffffff)\n      and\n      or\n      swap1\n      sstore\n        /* \"contracts/EtharisEscrow.sol\":8809:8852  DealFunded(_dealId, _brandAddress, _amount) */\n      tag_20\n      jump\t// in\n    tag_374:\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      swap3\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n        /* \"contracts/EtharisEscrow.sol\":8809:8852  DealFunded(_dealId, _brandAddress, _amount) */\n      log3\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      dup2\n      sstore\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      dup1\n      return\n    tag_372:\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x41)\n      revert(0x00, 0x24)\n        /* \"contracts/EtharisEscrow.sol\":8619:8674  if (allowance < _amount) revert InsufficientAllowance() */\n    tag_370:\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      mload(0x40)\n      shl(0xe0, 0x13be252b)\n        /* \"contracts/EtharisEscrow.sol\":8651:8674  InsufficientAllowance() */\n      dup2\n      mstore\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0x04\n      swap1\n        /* \"contracts/EtharisEscrow.sol\":8651:8674  InsufficientAllowance() */\n      revert\n        /* \"contracts/EtharisEscrow.sol\":8567:8609  token.allowance(_brandAddress, cachedThis) */\n    tag_368:\n      dup1\n      swap3\n      pop\n      dup7\n      dup1\n      swap3\n      pop\n      returndatasize\n      dup4\n      gt\n      tag_376\n      jumpi\n    tag_377:\n      tag_378\n      dup2\n      dup4\n      tag_2\n      jump\t// in\n    tag_378:\n      dup2\n      add\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      sub\n      slt\n      tag_129\n      jumpi\n      dup7\n      swap1\n      mload\n        /* \"contracts/EtharisEscrow.sol\":8567:8609  token.allowance(_brandAddress, cachedThis) */\n      0x00\n      jump(tag_369)\n    tag_376:\n      pop\n      returndatasize\n      jump(tag_377)\n    tag_366:\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      mload(0x40)\n      returndatasize\n      dup12\n      dup3\n      returndatacopy\n      returndatasize\n      swap1\n      revert\n        /* \"contracts/EtharisEscrow.sol\":8260:8537  if (_v != 0 || _r != bytes32(0) || _s != bytes32(0)) {... */\n    tag_363:\n        /* \"contracts/EtharisEscrow.sol\":21651:21705  token.permit(owner, spender, value, deadline, v, r, s) */\n      dup1\n      swap3\n      pop\n      swap3\n      swap1\n      swap3\n      extcodesize\n      iszero\n      tag_381\n      jumpi\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      mload(0x40)\n      swap1\n      shl(0xe0, 0xd505accf)\n        /* \"contracts/EtharisEscrow.sol\":21651:21705  token.permit(owner, spender, value, deadline, v, r, s) */\n      dup3\n      mstore\n      dup11\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0x04\n        /* \"contracts/EtharisEscrow.sol\":21651:21705  token.permit(owner, spender, value, deadline, v, r, s) */\n      dup4\n      add\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      mstore\n        /* \"contracts/EtharisEscrow.sol\":8017:8021  this */\n      address\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0x24\n      dup4\n      add\n      mstore\n      dup10\n      0x44\n      dup4\n      add\n      mstore\n      calldataload(0x64)\n      0x64\n      dup4\n      add\n      mstore\n      0x84\n      dup3\n      add\n      mstore\n      calldataload(0xa4)\n      0xa4\n      dup3\n      add\n      mstore\n      calldataload(0xc4)\n      0xc4\n      dup3\n      add\n      mstore\n        /* \"contracts/EtharisEscrow.sol\":21651:21705  token.permit(owner, spender, value, deadline, v, r, s) */\n      dup11\n      dup2\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0xe4\n        /* \"contracts/EtharisEscrow.sol\":21651:21705  token.permit(owner, spender, value, deadline, v, r, s) */\n      dup2\n      dup4\n      dup7\n      gas\n      call\n      swap1\n      dup2\n      tag_383\n      jumpi\n        /* \"contracts/EtharisEscrow.sol\":8260:8537  if (_v != 0 || _r != bytes32(0) || _s != bytes32(0)) {... */\n    tag_384:\n      pop\n        /* \"contracts/EtharisEscrow.sol\":21647:21960  try token.permit(owner, spender, value, deadline, v, r, s) {... */\n      tag_385\n      jumpi\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      mload(0x40)\n      shl(0xe0, 0xb78cb0dd)\n        /* \"contracts/EtharisEscrow.sol\":21935:21949  PermitFailed() */\n      dup2\n      mstore\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0x04\n      swap1\n        /* \"contracts/EtharisEscrow.sol\":21935:21949  PermitFailed() */\n      revert\n        /* \"contracts/EtharisEscrow.sol\":21647:21960  try token.permit(owner, spender, value, deadline, v, r, s) {... */\n    tag_385:\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      mload(0x40)\n      shl(0xe1, 0x6eb1769f)\n        /* \"contracts/EtharisEscrow.sol\":21793:21829  _idrxToken.allowance(owner, spender) */\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      dup4\n      and\n      0x04\n        /* \"contracts/EtharisEscrow.sol\":21793:21829  _idrxToken.allowance(owner, spender) */\n      dup3\n      add\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      mstore\n        /* \"contracts/EtharisEscrow.sol\":8017:8021  this */\n      address\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0x24\n      dup3\n      add\n      mstore\n        /* \"contracts/EtharisEscrow.sol\":8017:8021  this */\n      dup7\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      dup2\n      0x44\n      dup2\n        /* \"contracts/EtharisEscrow.sol\":21793:21829  _idrxToken.allowance(owner, spender) */\n      dup6\n      gas\n      staticcall\n      dup1\n      iszero\n      tag_388\n      jumpi\n      dup10\n      swap2\n      dup13\n      swap2\n      tag_390\n      jumpi\n        /* \"contracts/EtharisEscrow.sol\":21647:21960  try token.permit(owner, spender, value, deadline, v, r, s) {... */\n    tag_391:\n        /* \"contracts/EtharisEscrow.sol\":21847:21864  allowance < value */\n      pop\n      lt\n        /* \"contracts/EtharisEscrow.sol\":21843:21896  if (allowance < value) revert InsufficientAllowance() */\n      tag_370\n      jumpi\n        /* \"contracts/EtharisEscrow.sol\":8567:8609  token.allowance(_brandAddress, cachedThis) */\n      tag_365\n        /* \"contracts/EtharisEscrow.sol\":21647:21960  try token.permit(owner, spender, value, deadline, v, r, s) {... */\n      swap2\n      dup7\n      swap2\n        /* \"contracts/EtharisEscrow.sol\":8260:8537  if (_v != 0 || _r != bytes32(0) || _s != bytes32(0)) {... */\n      jump(tag_364)\n        /* \"contracts/EtharisEscrow.sol\":21793:21829  _idrxToken.allowance(owner, spender) */\n    tag_390:\n      dup1\n      swap3\n      pop\n      dup9\n      dup1\n      swap3\n      pop\n      returndatasize\n      dup4\n      gt\n      tag_394\n      jumpi\n    tag_395:\n      tag_396\n      dup2\n      dup4\n      tag_2\n      jump\t// in\n    tag_396:\n      dup2\n      add\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      sub\n      slt\n      tag_129\n      jumpi\n      dup9\n      swap1\n      mload\n        /* \"contracts/EtharisEscrow.sol\":21793:21829  _idrxToken.allowance(owner, spender) */\n      0x00\n      jump(tag_391)\n    tag_394:\n      pop\n      returndatasize\n      jump(tag_395)\n    tag_388:\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      mload(0x40)\n      returndatasize\n      dup14\n      dup3\n      returndatacopy\n      returndatasize\n      swap1\n      revert\n        /* \"contracts/EtharisEscrow.sol\":21651:21705  token.permit(owner, spender, value, deadline, v, r, s) */\n    tag_383:\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      dup9\n      dup2\n      swap13\n      swap3\n      swap13\n      gt\n      tag_399\n      jumpi\n      0x40\n      mstore\n        /* \"contracts/EtharisEscrow.sol\":21651:21705  token.permit(owner, spender, value, deadline, v, r, s) */\n      swap10\n      0x00\n      jump(tag_384)\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n    tag_399:\n      shl(0xe0, 0x4e487b71)\n      dup3\n      mstore\n      mstore(0x04, 0x41)\n      0x24\n      dup3\n      revert\n        /* \"contracts/EtharisEscrow.sol\":21651:21705  token.permit(owner, spender, value, deadline, v, r, s) */\n    tag_381:\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      dup11\n      dup1\n      revert\n        /* \"contracts/EtharisEscrow.sol\":8264:8311  _v != 0 || _r != bytes32(0) || _s != bytes32(0) */\n    tag_361:\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      pop\n      calldataload(0xc4)\n        /* \"contracts/EtharisEscrow.sol\":8295:8311  _s != bytes32(0) */\n      iszero\n      iszero\n        /* \"contracts/EtharisEscrow.sol\":8264:8311  _v != 0 || _r != bytes32(0) || _s != bytes32(0) */\n      jump(tag_362)\n        /* \"contracts/EtharisEscrow.sol\":8264:8291  _v != 0 || _r != bytes32(0) */\n    tag_359:\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      pop\n      calldataload(0xa4)\n        /* \"contracts/EtharisEscrow.sol\":8275:8291  _r != bytes32(0) */\n      iszero\n      iszero\n        /* \"contracts/EtharisEscrow.sol\":8264:8291  _v != 0 || _r != bytes32(0) */\n      jump(tag_360)\n        /* \"contracts/EtharisEscrow.sol\":8131:8187  if (brandBalance < _amount) revert InsufficientBalance() */\n    tag_357:\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      mload(0x40)\n      shl(0xe3, 0x1e9acf17)\n        /* \"contracts/EtharisEscrow.sol\":8166:8187  InsufficientBalance() */\n      dup2\n      mstore\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0x04\n      swap1\n        /* \"contracts/EtharisEscrow.sol\":8166:8187  InsufficientBalance() */\n      revert\n        /* \"contracts/EtharisEscrow.sol\":8091:8121  token.balanceOf(_brandAddress) */\n    tag_355:\n      dup1\n      swap3\n      pop\n      dup10\n      dup1\n      swap3\n      pop\n      returndatasize\n      dup4\n      gt\n      tag_401\n      jumpi\n    tag_402:\n      tag_403\n      dup2\n      dup4\n      tag_2\n      jump\t// in\n    tag_403:\n      dup2\n      add\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      sub\n      slt\n      tag_404\n      jumpi\n      dup10\n      swap1\n      mload\n        /* \"contracts/EtharisEscrow.sol\":8091:8121  token.balanceOf(_brandAddress) */\n      0x00\n      jump(tag_356)\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n    tag_404:\n      dup12\n      dup1\n      revert\n        /* \"contracts/EtharisEscrow.sol\":8091:8121  token.balanceOf(_brandAddress) */\n    tag_401:\n      pop\n      returndatasize\n      jump(tag_402)\n    tag_353:\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      mload(0x40)\n      returndatasize\n      dup15\n      dup3\n      returndatacopy\n      returndatasize\n      swap1\n      revert\n        /* \"contracts/EtharisEscrow.sol\":7884:7934  if (deal.fundedAt != 0) revert DealAlreadyFunded() */\n    tag_351:\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      mload(0x40)\n      shl(0xe3, 0x1924fceb)\n        /* \"contracts/EtharisEscrow.sol\":7915:7934  DealAlreadyFunded() */\n      dup2\n      mstore\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0x04\n      swap1\n        /* \"contracts/EtharisEscrow.sol\":7915:7934  DealAlreadyFunded() */\n      revert\n        /* \"contracts/EtharisEscrow.sol\":7787:7827  if (_amount == 0) revert InvalidAmount() */\n    tag_348:\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      mload(0x40)\n      shl(0xe1, 0x162908e3)\n        /* \"contracts/EtharisEscrow.sol\":7812:7827  InvalidAmount() */\n      dup2\n      mstore\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0x04\n      swap1\n        /* \"contracts/EtharisEscrow.sol\":7812:7827  InvalidAmount() */\n      revert\n        /* \"contracts/EtharisEscrow.sol\":7723:7777  if (bytes(_dealId).length == 0) revert InvalidDealID() */\n    tag_346:\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      mload(0x40)\n      shl(0xe0, 0x5f0be7af)\n        /* \"contracts/EtharisEscrow.sol\":7762:7777  InvalidDealID() */\n      dup2\n      mstore\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0x04\n      swap1\n        /* \"contracts/EtharisEscrow.sol\":7762:7777  InvalidDealID() */\n      revert\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n    tag_342:\n      shl(0xe0, 0x4e487b71)\n      dup12\n      mstore\n      mstore(0x04, 0x21)\n      0x24\n      dup12\n      revert\n    tag_328:\n      dup5\n      dup1\n      revert\n    tag_75:\n      pop\n      jumpi(tag_105, callvalue)\n      tag_408\n      calldatasize\n      tag_6\n      jump\t// in\n    tag_408:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2484:2488  role */\n      swap1\n      tag_409\n      tag_12\n      jump\t// in\n    tag_409:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1204:1276  modifier whenNotPaused() {... */\n      tag_410\n      tag_21\n      jump\t// in\n    tag_410:\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      mload(0x40)\n      0xff\n        /* \"contracts/EtharisEscrow.sol\":4453:4475  _deals[_dealId].exists */\n      0x08\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      dup4\n      mload\n      swap3\n      0x20\n      dup2\n      dup2\n      dup8\n      add\n      swap6\n      tag_411\n      dup2\n      dup4\n      dup10\n      tag_8\n      jump\t// in\n    tag_411:\n      dup2\n      add\n      0x04\n      dup2\n      mstore\n      sub\n      add\n      swap1\n      keccak256\n        /* \"contracts/EtharisEscrow.sol\":4453:4475  _deals[_dealId].exists */\n      add\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      sload\n      0x10\n      shr\n      and\n        /* \"contracts/EtharisEscrow.sol\":4452:4475  !_deals[_dealId].exists */\n      iszero\n        /* \"contracts/EtharisEscrow.sol\":4448:4498  if (!_deals[_dealId].exists) revert DealNotFound() */\n      tag_135\n      jumpi\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      mload(0x40)\n      dup3\n      mload\n      tag_414\n      dup2\n      dup4\n      dup6\n      tag_8\n      jump\t// in\n    tag_414:\n      0x04\n      swap1\n      dup3\n      add\n      swap1\n      dup2\n      mstore\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      keccak256\n      0x01\n        /* \"contracts/EtharisEscrow.sol\":4312:4335  _deals[_dealId].creator */\n      add\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap4\n      dup5\n      and\n      swap4\n      and\n        /* \"contracts/EtharisEscrow.sol\":4312:4347  _deals[_dealId].creator != _creator */\n      dup4\n      swap1\n      sub\n        /* \"contracts/EtharisEscrow.sol\":4308:4371  if (_deals[_dealId].creator != _creator) revert NotAuthorized() */\n      tag_138\n      jumpi\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0xff\n        /* \"contracts/EtharisEscrow.sol\":4453:4475  _deals[_dealId].exists */\n      0x08\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      mload(0x40)\n      0x20\n      dup2\n      dup7\n      mload\n      tag_417\n      dup2\n      dup4\n      dup10\n      tag_8\n      jump\t// in\n    tag_417:\n      dup2\n      add\n      0x04\n      dup2\n      mstore\n      sub\n      add\n      swap1\n      keccak256\n        /* \"contracts/EtharisEscrow.sol\":4601:4623  _deals[_dealId].status */\n      add\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      sload\n      and\n      0x06\n      dup2\n      lt\n      iszero\n      tag_418\n      jumpi\n        /* \"contracts/EtharisEscrow.sol\":4597:4662  if (_deals[_dealId].status != _status) revert InvalidDealStatus() */\n      tag_143\n      jumpi\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0x20\n      tag_422\n      swap2\n      mload(0x40)\n      dup1\n      swap4\n      dup2\n      swap3\n      dup7\n      mload\n      swap3\n      dup4\n      swap2\n      tag_8\n      jump\t// in\n    tag_422:\n      dup2\n      add\n      0x04\n      dup2\n      mstore\n      sub\n      add\n      swap1\n      keccak256\n        /* \"contracts/EtharisEscrow.sol\":9291:9304  deal.fundedAt */\n      swap1\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0x06\n        /* \"contracts/EtharisEscrow.sol\":9291:9304  deal.fundedAt */\n      dup4\n      add\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      sload\n      0xa0\n      shr\n      and\n        /* \"contracts/EtharisEscrow.sol\":9291:9309  deal.fundedAt == 0 */\n      iszero\n        /* \"contracts/EtharisEscrow.sol\":9287:9333  if (deal.fundedAt == 0) revert DealNotFunded() */\n      tag_423\n      jumpi\n        /* \"contracts/EtharisEscrow.sol\":4453:4475  _deals[_dealId].exists */\n      0x08\n        /* \"contracts/EtharisEscrow.sol\":9395:9433  DealApproved(_dealId, _creatorAddress) */\n      tag_425\n        /* \"contracts/EtharisEscrow.sol\":9344:9355  deal.status */\n      swap3\n      add\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0x01\n      not(0xff)\n      dup3\n      sload\n      and\n      or\n      swap1\n      sstore\n        /* \"contracts/EtharisEscrow.sol\":9395:9433  DealApproved(_dealId, _creatorAddress) */\n      tag_20\n      jump\t// in\n    tag_425:\n      0xcaec7345d2eb04a42197ac2a2cd7cd74a00b2991b69bb53e23465d4092fdfb\n      dup4\n      dup1\n      log3\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      dup1\n      return\n        /* \"contracts/EtharisEscrow.sol\":9287:9333  if (deal.fundedAt == 0) revert DealNotFunded() */\n    tag_423:\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      mload(0x40)\n      shl(0xe1, 0x47510bbd)\n        /* \"contracts/EtharisEscrow.sol\":9318:9333  DealNotFunded() */\n      dup2\n      mstore\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0x04\n      swap1\n        /* \"contracts/EtharisEscrow.sol\":9318:9333  DealNotFunded() */\n      revert\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n    tag_418:\n      shl(0xe0, 0x4e487b71)\n      dup6\n      mstore\n      mstore(0x04, 0x21)\n      0x24\n      dup6\n      revert\n    tag_73:\n      pop\n      jumpi(tag_105, callvalue)\n      jumpi(tag_105, slt(add(not(0x03), calldatasize), 0x40))\n      tag_430\n      tag_5\n      jump\t// in\n    tag_430:\n      calldataload(0x24)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2484:2488  role */\n      tag_431\n      tag_12\n      jump\t// in\n    tag_431:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      swap2\n      dup3\n      and\n      swap2\n        /* \"contracts/EtharisEscrow.sol\":21068:21078  _idrxToken */\n      immutable(\"0x92a99c2e1e73cfa8af214a27ee636aa00abb49bffb5065f213fd4435430466da\")\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      and\n        /* \"contracts/EtharisEscrow.sol\":21050:21079  _token == address(_idrxToken) */\n      dup3\n      eq\n        /* \"contracts/EtharisEscrow.sol\":21046:21108  if (_token == address(_idrxToken)) revert CannotWithdrawIDRX() */\n      tag_432\n      jumpi\n        /* \"contracts/EtharisEscrow.sol\":21122:21134  _amount == 0 */\n      dup1\n      iszero\n        /* \"contracts/EtharisEscrow.sol\":21118:21158  if (_amount == 0) revert InvalidAmount() */\n      tag_348\n      jumpi\n        /* \"contracts/EtharisEscrow.sol\":21208:21215  _amount */\n      tag_107\n        /* \"contracts/EtharisEscrow.sol\":21196:21206  msg.sender */\n      swap2\n      caller\n        /* \"contracts/EtharisEscrow.sol\":21208:21215  _amount */\n      swap1\n      tag_28\n      jump\t// in\n        /* \"contracts/EtharisEscrow.sol\":21046:21108  if (_token == address(_idrxToken)) revert CannotWithdrawIDRX() */\n    tag_432:\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      mload(0x40)\n      shl(0xe3, 0x18ba2fc1)\n        /* \"contracts/EtharisEscrow.sol\":21088:21108  CannotWithdrawIDRX() */\n      dup2\n      mstore\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0x04\n      swap1\n        /* \"contracts/EtharisEscrow.sol\":21088:21108  CannotWithdrawIDRX() */\n      revert\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n    tag_71:\n      pop\n      jumpi(tag_105, callvalue)\n      jumpi(tag_105, slt(add(not(0x03), calldatasize), 0x40))\n      0xff\n      0x40\n      0x20\n      swap3\n      tag_441\n      tag_4\n      jump\t// in\n    tag_441:\n      calldataload(0x04)\n      dup3\n      mstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2936  _roles */\n      0x02\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      dup6\n      mstore\n      dup3\n      dup3\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap2\n      and\n      dup3\n      mstore\n      dup5\n      mstore\n      keccak256\n      sload\n      mload(0x40)\n      swap2\n      and\n      iszero\n      iszero\n      dup2\n      mstore\n      return\n    tag_69:\n      pop\n      jumpi(tag_105, callvalue)\n      dup1\n      add(calldatasize, not(0x03))\n      slt\n      tag_105\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2484:2488  role */\n      tag_446\n      tag_12\n      jump\t// in\n    tag_446:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1204:1276  modifier whenNotPaused() {... */\n      tag_447\n      tag_21\n      jump\t// in\n    tag_447:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2255:2259  true */\n      0x01\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      not(0xff)\n      dup2\n      sload\n      and\n      or\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2255:2259  true */\n      0x01\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      sstore\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2274:2294  Paused(_msgSender()) */\n      0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0x20\n      mload(0x40)\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2274:2294  Paused(_msgSender()) */\n      log1\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      dup1\n      return\n    tag_67:\n      pop\n      jumpi(tag_105, callvalue)\n      jumpi(tag_105, slt(add(not(0x03), calldatasize), 0x20))\n      sub(shl(0x40, 0x01), 0x01)\n      calldataload(0x04)\n      dup2\n      dup2\n      gt\n      tag_192\n      jumpi\n      0x20\n      tag_176\n      tag_455\n      swap3\n      calldatasize\n      swap1\n      0x04\n      add\n      tag_3\n      jump\t// in\n    tag_455:\n      dup2\n      add\n      0x04\n      dup2\n      mstore\n      sub\n      add\n      swap1\n      keccak256\n        /* \"contracts/EtharisEscrow.sol\":19743:19754  deal.exists */\n      swap1\n      0x08\n      dup3\n      add\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      sload\n      swap2\n      0xff\n      dup4\n      0x10\n      shr\n      and\n        /* \"contracts/EtharisEscrow.sol\":19743:19814  deal.exists &&... */\n      swap3\n      dup4\n      tag_456\n      jumpi\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n    tag_457:\n        /* \"contracts/EtharisEscrow.sol\":19743:19868  deal.exists &&... */\n      pop\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0x20\n        /* \"contracts/EtharisEscrow.sol\":19743:19868  deal.exists &&... */\n      swap4\n      pop\n      dup3\n      tag_458\n      jumpi\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n    tag_459:\n      pop\n      pop\n      mload(0x40)\n      swap1\n      iszero\n      iszero\n      dup2\n      mstore\n      return\n        /* \"contracts/EtharisEscrow.sol\":19743:19868  deal.exists &&... */\n    tag_458:\n        /* \"contracts/EtharisEscrow.sol\":19849:19868  deal.reviewDeadline */\n      0x07\n      add\n        /* \"contracts/EtharisEscrow.sol\":1861:1869  72 hours */\n      sload\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0x40\n        /* \"contracts/EtharisEscrow.sol\":1861:1869  72 hours */\n      shr\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      and\n        /* \"contracts/EtharisEscrow.sol\":19830:19845  block.timestamp */\n      timestamp\n        /* \"contracts/EtharisEscrow.sol\":19830:19868  block.timestamp >= deal.reviewDeadline */\n      lt\n      iszero\n      swap1\n      pop\n        /* \"contracts/EtharisEscrow.sol\":19743:19868  deal.exists &&... */\n      0x00\n      dup1\n      jump(tag_459)\n        /* \"contracts/EtharisEscrow.sol\":19743:19814  deal.exists &&... */\n    tag_456:\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0xff\n      swap2\n      swap4\n      pop\n      and\n      swap3\n      0x06\n      dup5\n      lt\n      iszero\n      tag_297\n      jumpi\n        /* \"contracts/EtharisEscrow.sol\":19770:19814  deal.status == ContractStatus.PENDING_REVIEW */\n      pop\n        /* \"contracts/EtharisEscrow.sol\":19785:19814  ContractStatus.PENDING_REVIEW */\n      0x02\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0x20\n        /* \"contracts/EtharisEscrow.sol\":19770:19814  deal.status == ContractStatus.PENDING_REVIEW */\n      swap4\n      eq\n        /* \"contracts/EtharisEscrow.sol\":19743:19814  deal.exists &&... */\n      swap2\n      0x00\n      jump(tag_457)\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n    tag_65:\n      pop\n      jumpi(tag_105, callvalue)\n      dup1\n      add(calldatasize, not(0x03))\n      slt\n      tag_105\n      jumpi\n      0x20\n      0xff\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1685:1692  _paused */\n      0x01\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      sload\n      and\n      mload(0x40)\n      swap1\n      iszero\n      iszero\n      dup2\n      mstore\n      return\n    tag_63:\n      pop\n      jumpi(tag_105, callvalue)\n      tag_468\n      calldatasize\n      tag_7\n      jump\t// in\n    tag_468:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2484:2488  role */\n      tag_469\n      swap3\n      swap2\n      swap3\n      tag_12\n      jump\t// in\n    tag_469:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1204:1276  modifier whenNotPaused() {... */\n      tag_470\n      tag_21\n      jump\t// in\n    tag_470:\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      mload(0x40)\n      dup3\n      mload\n      0xff\n        /* \"contracts/EtharisEscrow.sol\":4453:4475  _deals[_dealId].exists */\n      0x08\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0x20\n      swap4\n      dup5\n      dup2\n      dup2\n      dup10\n      add\n      swap6\n      tag_471\n      dup2\n      dup4\n      dup10\n      tag_8\n      jump\t// in\n    tag_471:\n      dup2\n      add\n      0x04\n      dup2\n      mstore\n      sub\n      add\n      swap1\n      keccak256\n        /* \"contracts/EtharisEscrow.sol\":4453:4475  _deals[_dealId].exists */\n      add\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      sload\n      0x10\n      shr\n      and\n        /* \"contracts/EtharisEscrow.sol\":4452:4475  !_deals[_dealId].exists */\n      iszero\n        /* \"contracts/EtharisEscrow.sol\":4448:4498  if (!_deals[_dealId].exists) revert DealNotFound() */\n      tag_135\n      jumpi\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      mload(0x40)\n      dup5\n      mload\n      tag_474\n      dup2\n      dup4\n      dup6\n      tag_8\n      jump\t// in\n    tag_474:\n      0x04\n      swap1\n      dup3\n      add\n      swap1\n      dup2\n      mstore\n      dup2\n      swap1\n      sub\n      dup4\n      add\n      swap1\n      keccak256\n      0x01\n        /* \"contracts/EtharisEscrow.sol\":4312:4335  _deals[_dealId].creator */\n      add\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap6\n      dup7\n      and\n      swap6\n      and\n        /* \"contracts/EtharisEscrow.sol\":4312:4347  _deals[_dealId].creator != _creator */\n      dup6\n      swap1\n      sub\n        /* \"contracts/EtharisEscrow.sol\":4308:4371  if (_deals[_dealId].creator != _creator) revert NotAuthorized() */\n      tag_138\n      jumpi\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0xff\n        /* \"contracts/EtharisEscrow.sol\":4453:4475  _deals[_dealId].exists */\n      0x08\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      mload(0x40)\n      dup5\n      dup2\n      dup9\n      mload\n      tag_477\n      dup2\n      dup4\n      dup10\n      tag_8\n      jump\t// in\n    tag_477:\n      dup2\n      add\n      0x04\n      dup2\n      mstore\n      sub\n      add\n      swap1\n      keccak256\n        /* \"contracts/EtharisEscrow.sol\":4601:4623  _deals[_dealId].status */\n      add\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      sload\n      and\n      0x06\n      dup2\n      lt\n      iszero\n      tag_141\n      jumpi\n      0x01\n        /* \"contracts/EtharisEscrow.sol\":4601:4634  _deals[_dealId].status != _status */\n      sub\n        /* \"contracts/EtharisEscrow.sol\":4597:4662  if (_deals[_dealId].status != _status) revert InvalidDealStatus() */\n      tag_143\n      jumpi\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      dup2\n      tag_482\n      swap2\n      mload(0x40)\n      dup1\n      swap4\n      dup2\n      swap3\n      dup9\n      mload\n      swap3\n      dup4\n      swap2\n      tag_8\n      jump\t// in\n    tag_482:\n      dup2\n      add\n      0x04\n      dup2\n      mstore\n      sub\n      add\n      swap1\n      keccak256\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"contracts/EtharisEscrow.sol\":9924:9937  deal.deadline */\n      swap1\n      dup2\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0x06\n        /* \"contracts/EtharisEscrow.sol\":9924:9937  deal.deadline */\n      dup3\n      add\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      sload\n      0x60\n      shr\n      and\n        /* \"contracts/EtharisEscrow.sol\":9906:9921  block.timestamp */\n      timestamp\n        /* \"contracts/EtharisEscrow.sol\":9906:9937  block.timestamp > deal.deadline */\n      gt\n        /* \"contracts/EtharisEscrow.sol\":9902:9972  if (block.timestamp > deal.deadline) revert SubmissionDeadlinePassed() */\n      tag_483\n      jumpi\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      dup4\n      mload\n        /* \"contracts/EtharisEscrow.sol\":9986:10016  bytes(_contentUrl).length == 0 */\n      iszero\n        /* \"contracts/EtharisEscrow.sol\":9982:10045  if (bytes(_contentUrl).length == 0) revert ContentUrlRequired() */\n      tag_485\n      jumpi\n        /* \"contracts/EtharisEscrow.sol\":4453:4475  _deals[_dealId].exists */\n      0x08\n        /* \"contracts/EtharisEscrow.sol\":10056:10067  deal.status */\n      dup2\n      add\n        /* \"contracts/EtharisEscrow.sol\":10070:10099  ContractStatus.PENDING_REVIEW */\n      0x02\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      not(0xff)\n      dup3\n      sload\n      and\n      or\n      swap1\n      sstore\n        /* \"contracts/EtharisEscrow.sol\":10109:10125  deal.submittedAt */\n      0x07\n      dup2\n      add\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      swap1\n      dup2\n      sload\n        /* \"contracts/EtharisEscrow.sol\":1861:1869  72 hours */\n      0x03f480\n        /* \"contracts/EtharisEscrow.sol\":9906:9921  block.timestamp */\n      timestamp\n        /* \"contracts/EtharisEscrow.sol\":1861:1869  72 hours */\n      add\n        /* \"contracts/EtharisEscrow.sol\":9906:9921  block.timestamp */\n      dup1\n      timestamp\n        /* \"contracts/EtharisEscrow.sol\":1861:1869  72 hours */\n      gt\n      tag_487\n      jumpi\n      swap3\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      tag_489\n        /* \"contracts/EtharisEscrow.sol\":1861:1869  72 hours */\n      dup8\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0x04\n        /* \"contracts/EtharisEscrow.sol\":10277:10411  ContentSubmitted(... */\n      tag_490\n        /* \"contracts/EtharisEscrow.sol\":1861:1869  72 hours */\n      swap6\n        /* \"contracts/EtharisEscrow.sol\":10277:10411  ContentSubmitted(... */\n      0x934109f661b65dbccffcae4f7ee04261eb7b36e5136e1ca86dde1b00598cb031\n        /* \"contracts/EtharisEscrow.sol\":1861:1869  72 hours */\n      swap11\n      swap9\n      swap6\n      0xffffffffffffffff0000000000000000\n      tag_491\n      swap12\n      swap10\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0x40\n        /* \"contracts/EtharisEscrow.sol\":1861:1869  72 hours */\n      shl\n      and\n        /* \"contracts/EtharisEscrow.sol\":9906:9921  block.timestamp */\n      swap1\n      dup8\n      timestamp\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      and\n        /* \"contracts/EtharisEscrow.sol\":1861:1869  72 hours */\n      swap1\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0xffffffffffffffffffffffffffffffff\n        /* \"contracts/EtharisEscrow.sol\":1861:1869  72 hours */\n      not\n      and\n      or\n      or\n      dup6\n      sstore\n        /* \"contracts/EtharisEscrow.sol\":10232:10247  deal.contentUrl */\n      add\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      tag_18\n      jump\t// in\n    tag_489:\n        /* \"contracts/EtharisEscrow.sol\":1861:1869  72 hours */\n      sload\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0x40\n        /* \"contracts/EtharisEscrow.sol\":1861:1869  72 hours */\n      shr\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      and\n        /* \"contracts/EtharisEscrow.sol\":10277:10411  ContentSubmitted(... */\n      swap6\n      tag_20\n      jump\t// in\n    tag_490:\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      swap5\n      mload(0x40)\n        /* \"contracts/EtharisEscrow.sol\":1861:1869  72 hours */\n      swap4\n      dup5\n      swap4\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0x40\n        /* \"contracts/EtharisEscrow.sol\":1861:1869  72 hours */\n      dup6\n      mstore\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0x40\n        /* \"contracts/EtharisEscrow.sol\":1861:1869  72 hours */\n      dup6\n      add\n      swap1\n      tag_9\n      jump\t// in\n    tag_491:\n      swap2\n      dup4\n      add\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      mstore\n        /* \"contracts/EtharisEscrow.sol\":10277:10411  ContentSubmitted(... */\n      sub\n      swap1\n      log3\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      dup1\n      return\n        /* \"contracts/EtharisEscrow.sol\":1861:1869  72 hours */\n    tag_487:\n      shl(0xe0, 0x4e487b71)\n      dup11\n      mstore\n      0x11\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0x04\n        /* \"contracts/EtharisEscrow.sol\":1861:1869  72 hours */\n      mstore\n      0x24\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      dup11\n        /* \"contracts/EtharisEscrow.sol\":1861:1869  72 hours */\n      revert\n        /* \"contracts/EtharisEscrow.sol\":9982:10045  if (bytes(_contentUrl).length == 0) revert ContentUrlRequired() */\n    tag_485:\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      mload(0x40)\n      shl(0xe0, 0x361178c7)\n        /* \"contracts/EtharisEscrow.sol\":10025:10045  ContentUrlRequired() */\n      dup2\n      mstore\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0x04\n      swap1\n        /* \"contracts/EtharisEscrow.sol\":10025:10045  ContentUrlRequired() */\n      revert\n        /* \"contracts/EtharisEscrow.sol\":9902:9972  if (block.timestamp > deal.deadline) revert SubmissionDeadlinePassed() */\n    tag_483:\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      mload(0x40)\n      shl(0xe1, 0x764b8e33)\n        /* \"contracts/EtharisEscrow.sol\":9946:9972  SubmissionDeadlinePassed() */\n      dup2\n      mstore\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0x04\n      swap1\n        /* \"contracts/EtharisEscrow.sol\":9946:9972  SubmissionDeadlinePassed() */\n      revert\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n    tag_61:\n      pop\n      jumpi(tag_105, callvalue)\n      dup1\n      add(calldatasize, not(0x03))\n      slt\n      tag_105\n      jumpi\n      0x20\n      0x03\n        /* \"contracts/EtharisEscrow.sol\":1810:1815  10000 */\n      sload\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0x60\n      shr\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_59:\n      pop\n      jumpi(tag_105, callvalue)\n      dup1\n      add(calldatasize, not(0x03))\n      slt\n      tag_105\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2484:2488  role */\n      tag_500\n      tag_12\n      jump\t// in\n    tag_500:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1685:1692  _paused */\n      0x01\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      sload\n      0xff\n      dup2\n      and\n      iszero\n      tag_501\n      jumpi\n      not(0xff)\n      and\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1685:1692  _paused */\n      0x01\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      sstore\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2521:2543  Unpaused(_msgSender()) */\n      0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0x20\n      mload(0x40)\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2521:2543  Unpaused(_msgSender()) */\n      log1\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      dup1\n      return\n    tag_501:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x14\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x62, 0x14185d5cd8589b194e881b9bdd081c185d5cd959)\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n    tag_57:\n      pop\n      jumpi(tag_105, callvalue)\n      jumpi(tag_105, slt(add(not(0x03), calldatasize), 0x20))\n      sub(shl(0x40, 0x01), 0x01)\n      calldataload(0x04)\n      dup2\n      dup2\n      gt\n      tag_192\n      jumpi\n      tag_509\n      swap1\n      calldatasize\n      swap1\n      0x04\n      add\n      tag_3\n      jump\t// in\n    tag_509:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2227:2330  modifier nonReentrant() {... */\n      swap1\n      tag_510\n      tag_23\n      jump\t// in\n    tag_510:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2484:2488  role */\n      tag_511\n      tag_12\n      jump\t// in\n    tag_511:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1204:1276  modifier whenNotPaused() {... */\n      tag_512\n      tag_21\n      jump\t// in\n    tag_512:\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      mload(0x40)\n      0xff\n        /* \"contracts/EtharisEscrow.sol\":4453:4475  _deals[_dealId].exists */\n      0x08\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      dup5\n      mload\n      swap3\n      0x20\n      dup2\n      dup2\n      dup9\n      add\n      swap6\n      tag_513\n      dup2\n      dup4\n      dup10\n      tag_8\n      jump\t// in\n    tag_513:\n      dup2\n      add\n      0x04\n      dup2\n      mstore\n      sub\n      add\n      swap1\n      keccak256\n        /* \"contracts/EtharisEscrow.sol\":4453:4475  _deals[_dealId].exists */\n      add\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      sload\n      0x10\n      shr\n      and\n        /* \"contracts/EtharisEscrow.sol\":4452:4475  !_deals[_dealId].exists */\n      iszero\n        /* \"contracts/EtharisEscrow.sol\":4448:4498  if (!_deals[_dealId].exists) revert DealNotFound() */\n      tag_135\n      jumpi\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0xff\n        /* \"contracts/EtharisEscrow.sol\":4453:4475  _deals[_dealId].exists */\n      0x08\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      mload(0x40)\n      0x20\n      dup2\n      dup8\n      mload\n      tag_516\n      dup2\n      dup4\n      dup10\n      tag_8\n      jump\t// in\n    tag_516:\n      dup2\n      add\n      0x04\n      dup2\n      mstore\n      sub\n      add\n      swap1\n      keccak256\n        /* \"contracts/EtharisEscrow.sol\":4601:4623  _deals[_dealId].status */\n      add\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      sload\n      and\n      0x06\n      dup2\n      lt\n      iszero\n      tag_418\n      jumpi\n        /* \"contracts/EtharisEscrow.sol\":11805:11834  ContractStatus.PENDING_REVIEW */\n      0x02\n        /* \"contracts/EtharisEscrow.sol\":4601:4634  _deals[_dealId].status != _status */\n      sub\n        /* \"contracts/EtharisEscrow.sol\":4597:4662  if (_deals[_dealId].status != _status) revert InvalidDealStatus() */\n      tag_143\n      jumpi\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0x20\n      tag_521\n      swap2\n      mload(0x40)\n      dup1\n      swap4\n      dup2\n      swap3\n      dup8\n      mload\n      swap3\n      dup4\n      swap2\n      tag_8\n      jump\t// in\n    tag_521:\n      dup2\n      add\n      0x04\n      dup2\n      mstore\n      sub\n      add\n      swap1\n      keccak256\n        /* \"contracts/EtharisEscrow.sol\":11917:11936  deal.reviewDeadline */\n      swap1\n      0x07\n      dup3\n      add\n        /* \"contracts/EtharisEscrow.sol\":1861:1869  72 hours */\n      sload\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0x40\n        /* \"contracts/EtharisEscrow.sol\":1861:1869  72 hours */\n      shr\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      and\n        /* \"contracts/EtharisEscrow.sol\":11899:11914  block.timestamp */\n      timestamp\n        /* \"contracts/EtharisEscrow.sol\":11899:11936  block.timestamp < deal.reviewDeadline */\n      lt\n        /* \"contracts/EtharisEscrow.sol\":11895:11979  if (block.timestamp < deal.reviewDeadline)... */\n      tag_522\n      jumpi\n      0x00\n      dup1\n      mload\n      0x20\n      data_a8eda418a66b2f5395d4a15b2f03de75b34fff39bb2e2a8b57f6be974d56e7b0\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      sub(shl(0x60, 0x01), 0x01)\n        /* \"contracts/EtharisEscrow.sol\":12062:12073  deal.amount */\n      swap2\n        /* \"contracts/EtharisEscrow.sol\":12477:12543  PaymentReleased(_dealId, deal.creator, creatorAmount, platformFee) */\n      tag_153\n        /* \"contracts/EtharisEscrow.sol\":12062:12073  deal.amount */\n      dup4\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0x06\n        /* \"contracts/EtharisEscrow.sol\":12062:12073  deal.amount */\n      dup4\n      add\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      sload\n      and\n      swap2\n        /* \"contracts/EtharisEscrow.sol\":12143:12168  deal.amount - platformFee */\n      tag_525\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0x2710\n      dup7\n        /* \"contracts/EtharisEscrow.sol\":12062:12091  deal.amount * _platformFeeBps */\n      tag_526\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      dup2\n      sload(0x03)\n      and\n        /* \"contracts/EtharisEscrow.sol\":12062:12091  deal.amount * _platformFeeBps */\n      dup8\n      tag_25\n      jump\t// in\n    tag_526:\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      and\n        /* \"contracts/EtharisEscrow.sol\":1810:1815  10000 */\n      div\n        /* \"contracts/EtharisEscrow.sol\":12143:12168  deal.amount - platformFee */\n      dup1\n      swap5\n      tag_26\n      jump\t// in\n    tag_525:\n        /* \"contracts/EtharisEscrow.sol\":4453:4475  _deals[_dealId].exists */\n      0x08\n        /* \"contracts/EtharisEscrow.sol\":12179:12190  deal.status */\n      dup3\n      add\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      dup1\n      sload\n      not(0xff)\n      and\n      0x04\n      or\n      swap1\n      sstore\n        /* \"contracts/EtharisEscrow.sol\":12179:12190  deal.status */\n      swap5\n        /* \"contracts/EtharisEscrow.sol\":12243:12253  _idrxToken */\n      immutable(\"0x92a99c2e1e73cfa8af214a27ee636aa00abb49bffb5065f213fd4435430466da\")\n      swap1\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      dup1\n      dup8\n      and\n      dup1\n        /* \"contracts/EtharisEscrow.sol\":12263:12359  if (creatorAmount != 0) {... */\n      tag_527\n      jumpi\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n    tag_528:\n      pop\n      dup5\n      and\n        /* \"contracts/EtharisEscrow.sol\":12373:12389  platformFee != 0 */\n      dup1\n        /* \"contracts/EtharisEscrow.sol\":12369:12462  if (platformFee != 0) {... */\n      tag_529\n      jumpi\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n    tag_530:\n      pop\n      pop\n      0x01\n        /* \"contracts/EtharisEscrow.sol\":12502:12514  deal.creator */\n      add\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap5\n        /* \"contracts/EtharisEscrow.sol\":12477:12543  PaymentReleased(_dealId, deal.creator, creatorAmount, platformFee) */\n      tag_20\n      jump\t// in\n        /* \"contracts/EtharisEscrow.sol\":12369:12462  if (platformFee != 0) {... */\n    tag_529:\n        /* \"contracts/EtharisEscrow.sol\":12405:12451  token.safeTransfer(_feeRecipient, platformFee) */\n      tag_532\n        /* \"contracts/EtharisEscrow.sol\":1810:1815  10000 */\n      swap2\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0x03\n        /* \"contracts/EtharisEscrow.sol\":1810:1815  10000 */\n      sload\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0x60\n      shr\n        /* \"contracts/EtharisEscrow.sol\":12405:12451  token.safeTransfer(_feeRecipient, platformFee) */\n      swap1\n      tag_28\n      jump\t// in\n    tag_532:\n        /* \"contracts/EtharisEscrow.sol\":12369:12462  if (platformFee != 0) {... */\n      0x00\n      dup1\n      jump(tag_530)\n        /* \"contracts/EtharisEscrow.sol\":12263:12359  if (creatorAmount != 0) {... */\n    tag_527:\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0x01\n        /* \"contracts/EtharisEscrow.sol\":12320:12332  deal.creator */\n      dup5\n      add\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      sload\n        /* \"contracts/EtharisEscrow.sol\":12301:12348  token.safeTransfer(deal.creator, creatorAmount) */\n      tag_533\n      swap2\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/EtharisEscrow.sol\":12301:12348  token.safeTransfer(deal.creator, creatorAmount) */\n      dup5\n      tag_28\n      jump\t// in\n    tag_533:\n        /* \"contracts/EtharisEscrow.sol\":12263:12359  if (creatorAmount != 0) {... */\n      0x00\n      jump(tag_528)\n        /* \"contracts/EtharisEscrow.sol\":11895:11979  if (block.timestamp < deal.reviewDeadline)... */\n    tag_522:\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      mload(0x40)\n      shl(0xe0, 0x2d6bf645)\n        /* \"contracts/EtharisEscrow.sol\":11957:11979  ReviewPeriodNotEnded() */\n      dup2\n      mstore\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0x04\n      swap1\n        /* \"contracts/EtharisEscrow.sol\":11957:11979  ReviewPeriodNotEnded() */\n      revert\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n    tag_55:\n      pop\n      jumpi(tag_105, callvalue)\n      jumpi(tag_105, slt(add(not(0x03), calldatasize), 0x40))\n      tag_538\n      tag_4\n      jump\t// in\n    tag_538:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5397:5431  callerConfirmation != _msgSender() */\n      sub\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5393:5495  if (callerConfirmation != _msgSender()) {... */\n      tag_539\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5505:5542  _revokeRole(role, callerConfirmation) */\n      tag_265\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      swap1\n      calldataload(0x04)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5505:5542  _revokeRole(role, callerConfirmation) */\n      tag_15\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5393:5495  if (callerConfirmation != _msgSender()) {... */\n    tag_539:\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      mload(0x40)\n      shl(0xe1, 0x334bd919)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5454:5484  AccessControlBadConfirmation() */\n      dup2\n      mstore\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0x04\n      swap1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5454:5484  AccessControlBadConfirmation() */\n      revert\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n    tag_53:\n      pop\n      jumpi(tag_105, callvalue)\n      jumpi(tag_105, slt(add(not(0x03), calldatasize), 0x20))\n      calldataload(0x04)\n      sub(shl(0x60, 0x01), 0x01)\n      dup2\n      and\n      dup2\n      sub\n      tag_112\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2499:2500  _ */\n      tag_107\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2484:2488  role */\n      swap1\n      tag_549\n      tag_12\n      jump\t// in\n    tag_549:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2499:2500  _ */\n      tag_31\n      jump\t// in\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n    tag_51:\n      pop\n      jumpi(tag_105, callvalue)\n      jumpi(tag_105, slt(add(not(0x03), calldatasize), 0x40))\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4306:4331  _grantRole(role, account) */\n      tag_265\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      calldataload(0x04)\n      tag_555\n      tag_4\n      jump\t// in\n    tag_555:\n      swap1\n      dup1\n      dup5\n      mstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3877:3883  _roles */\n      0x02\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0x20\n      mstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2484:2488  role */\n      tag_556\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0x01\n      0x40\n      dup7\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3877:3899  _roles[role].adminRole */\n      add\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      sload\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2484:2488  role */\n      tag_13\n      jump\t// in\n    tag_556:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4306:4331  _grantRole(role, account) */\n      tag_14\n      jump\t// in\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n    tag_49:\n      pop\n      jumpi(tag_105, callvalue)\n      tag_559\n      calldatasize\n      tag_6\n      jump\t// in\n    tag_559:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2227:2330  modifier nonReentrant() {... */\n      tag_560\n      tag_23\n      jump\t// in\n    tag_560:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2484:2488  role */\n      tag_561\n      tag_12\n      jump\t// in\n    tag_561:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1204:1276  modifier whenNotPaused() {... */\n      tag_562\n      tag_21\n      jump\t// in\n    tag_562:\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      mload(0x40)\n      0xff\n        /* \"contracts/EtharisEscrow.sol\":4453:4475  _deals[_dealId].exists */\n      0x08\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      dup5\n      mload\n      swap3\n      0x20\n      dup2\n      dup2\n      dup9\n      add\n      swap6\n      tag_563\n      dup2\n      dup4\n      dup10\n      tag_8\n      jump\t// in\n    tag_563:\n      dup2\n      add\n      0x04\n      dup2\n      mstore\n      sub\n      add\n      swap1\n      keccak256\n        /* \"contracts/EtharisEscrow.sol\":4453:4475  _deals[_dealId].exists */\n      add\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      sload\n      0x10\n      shr\n      and\n        /* \"contracts/EtharisEscrow.sol\":4452:4475  !_deals[_dealId].exists */\n      iszero\n        /* \"contracts/EtharisEscrow.sol\":4448:4498  if (!_deals[_dealId].exists) revert DealNotFound() */\n      tag_135\n      jumpi\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0x20\n      mload(0x40)\n      dup5\n      mload\n      tag_566\n      dup2\n      dup4\n      dup7\n      tag_8\n      jump\t// in\n    tag_566:\n      dup2\n      add\n      0x04\n      dup2\n      mstore\n      dup2\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      swap4\n      dup5\n      swap4\n      dup5\n      swap4\n      sub\n      add\n      swap1\n      keccak256\n      sload\n      and\n      swap4\n      and\n        /* \"contracts/EtharisEscrow.sol\":4153:4184  _deals[_dealId].brand != _brand */\n      dup1\n      swap4\n      sub\n        /* \"contracts/EtharisEscrow.sol\":4149:4208  if (_deals[_dealId].brand != _brand) revert NotAuthorized() */\n      tag_138\n      jumpi\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0xff\n        /* \"contracts/EtharisEscrow.sol\":4453:4475  _deals[_dealId].exists */\n      0x08\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      mload(0x40)\n      0x20\n      dup2\n      dup9\n      mload\n      tag_569\n      dup2\n      dup4\n      dup11\n      tag_8\n      jump\t// in\n    tag_569:\n      dup2\n      add\n      0x04\n      dup2\n      mstore\n      sub\n      add\n      swap1\n      keccak256\n        /* \"contracts/EtharisEscrow.sol\":4601:4623  _deals[_dealId].status */\n      add\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      sload\n      and\n      0x06\n      dup2\n      lt\n      iszero\n      tag_246\n      jumpi\n        /* \"contracts/EtharisEscrow.sol\":10787:10816  ContractStatus.PENDING_REVIEW */\n      0x02\n        /* \"contracts/EtharisEscrow.sol\":4601:4634  _deals[_dealId].status != _status */\n      sub\n        /* \"contracts/EtharisEscrow.sol\":4597:4662  if (_deals[_dealId].status != _status) revert InvalidDealStatus() */\n      tag_143\n      jumpi\n        /* \"contracts/EtharisEscrow.sol\":11445:11511  PaymentReleased(_dealId, deal.creator, creatorAmount, platformFee) */\n      tag_153\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      tag_575\n      0x20\n      0x00\n      dup1\n      mload\n      0x20\n      data_a8eda418a66b2f5395d4a15b2f03de75b34fff39bb2e2a8b57f6be974d56e7b0\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      swap5\n      mload(0x40)\n      dup1\n      swap4\n      dup2\n      swap3\n      dup11\n      mload\n      swap3\n      dup4\n      swap2\n      tag_8\n      jump\t// in\n    tag_575:\n      dup2\n      add\n      0x04\n      dup2\n      mstore\n      sub\n      add\n      swap1\n      keccak256\n      swap2\n      0x01\n      sub(shl(0x60, 0x01), 0x01)\n        /* \"contracts/EtharisEscrow.sol\":10978:10989  deal.amount */\n      swap4\n      dup5\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0x06\n        /* \"contracts/EtharisEscrow.sol\":10978:10989  deal.amount */\n      dup3\n      add\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      sload\n      and\n      swap5\n        /* \"contracts/EtharisEscrow.sol\":11059:11084  deal.amount - platformFee */\n      tag_576\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0x2710\n      dup3\n        /* \"contracts/EtharisEscrow.sol\":10978:11007  deal.amount * _platformFeeBps */\n      tag_577\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      dup2\n        /* \"contracts/EtharisEscrow.sol\":10992:11007  _platformFeeBps */\n      0x03\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      sload\n      and\n        /* \"contracts/EtharisEscrow.sol\":10978:11007  deal.amount * _platformFeeBps */\n      dup11\n      tag_25\n      jump\t// in\n    tag_577:\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      and\n        /* \"contracts/EtharisEscrow.sol\":1810:1815  10000 */\n      div\n        /* \"contracts/EtharisEscrow.sol\":11059:11084  deal.amount - platformFee */\n      dup1\n      swap8\n      tag_26\n      jump\t// in\n    tag_576:\n        /* \"contracts/EtharisEscrow.sol\":4453:4475  _deals[_dealId].exists */\n      0x08\n        /* \"contracts/EtharisEscrow.sol\":11095:11106  deal.status */\n      dup4\n      add\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      dup1\n      sload\n      not(0xff)\n      and\n      0x04\n      or\n      swap1\n      sstore\n        /* \"contracts/EtharisEscrow.sol\":11095:11106  deal.status */\n      swap8\n        /* \"contracts/EtharisEscrow.sol\":11149:11185  DealApproved(_dealId, _brandAddress) */\n      tag_578\n      dup11\n      tag_20\n      jump\t// in\n    tag_578:\n      0xcaec7345d2eb04a42197ac2a2cd7cd74a00b2991b69bb53e23465d4092fdfb\n      dup13\n      dup1\n      log3\n        /* \"contracts/EtharisEscrow.sol\":11211:11221  _idrxToken */\n      immutable(\"0x92a99c2e1e73cfa8af214a27ee636aa00abb49bffb5065f213fd4435430466da\")\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      swap1\n      dup1\n      dup10\n      and\n        /* \"contracts/EtharisEscrow.sol\":11235:11253  creatorAmount != 0 */\n      dup1\n        /* \"contracts/EtharisEscrow.sol\":11231:11327  if (creatorAmount != 0) {... */\n      tag_579\n      jumpi\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n    tag_580:\n      pop\n      dup7\n      and\n        /* \"contracts/EtharisEscrow.sol\":11341:11357  platformFee != 0 */\n      dup1\n        /* \"contracts/EtharisEscrow.sol\":11337:11430  if (platformFee != 0) {... */\n      tag_581\n      jumpi\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n    tag_582:\n        /* \"contracts/EtharisEscrow.sol\":11470:11482  deal.creator */\n      pop\n      pop\n      add\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      sload\n      and\n        /* \"contracts/EtharisEscrow.sol\":11445:11511  PaymentReleased(_dealId, deal.creator, creatorAmount, platformFee) */\n      swap5\n      tag_20\n      jump\t// in\n        /* \"contracts/EtharisEscrow.sol\":11337:11430  if (platformFee != 0) {... */\n    tag_581:\n        /* \"contracts/EtharisEscrow.sol\":11373:11419  token.safeTransfer(_feeRecipient, platformFee) */\n      tag_584\n        /* \"contracts/EtharisEscrow.sol\":1810:1815  10000 */\n      swap2\n        /* \"contracts/EtharisEscrow.sol\":10992:11007  _platformFeeBps */\n      0x03\n        /* \"contracts/EtharisEscrow.sol\":1810:1815  10000 */\n      sload\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0x60\n      shr\n        /* \"contracts/EtharisEscrow.sol\":11373:11419  token.safeTransfer(_feeRecipient, platformFee) */\n      swap1\n      tag_28\n      jump\t// in\n    tag_584:\n        /* \"contracts/EtharisEscrow.sol\":11337:11430  if (platformFee != 0) {... */\n      0x00\n      dup1\n      jump(tag_582)\n        /* \"contracts/EtharisEscrow.sol\":11231:11327  if (creatorAmount != 0) {... */\n    tag_579:\n        /* \"contracts/EtharisEscrow.sol\":11269:11316  token.safeTransfer(deal.creator, creatorAmount) */\n      tag_585\n        /* \"contracts/EtharisEscrow.sol\":11288:11300  deal.creator */\n      swap1\n      dup7\n      dup7\n      dup7\n      add\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      sload\n      and\n        /* \"contracts/EtharisEscrow.sol\":11269:11316  token.safeTransfer(deal.creator, creatorAmount) */\n      dup5\n      tag_28\n      jump\t// in\n    tag_585:\n        /* \"contracts/EtharisEscrow.sol\":11231:11327  if (creatorAmount != 0) {... */\n      0x00\n      jump(tag_580)\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n    tag_47:\n      pop\n      jumpi(tag_105, callvalue)\n      jumpi(tag_105, slt(add(not(0x03), calldatasize), 0x20))\n      0x01\n      0x40\n      0x20\n      swap3\n      calldataload(0x04)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3877:3883  _roles */\n      0x02\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      dup5\n      mstore\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3877:3899  _roles[role].adminRole */\n      add\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      sload\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_45:\n      pop\n      jumpi(tag_105, callvalue)\n      dup1\n      add(calldatasize, not(0x03))\n      slt\n      tag_105\n      jumpi\n      0x20\n      and(sload(0x03), sub(shl(0x60, 0x01), 0x01))\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_43:\n      pop\n      jumpi(tag_105, callvalue)\n      jumpi(tag_105, slt(add(not(0x03), calldatasize), 0x20))\n      calldataload(0x04)\n      sub(shl(0x40, 0x01), 0x01)\n      dup2\n      gt\n      tag_112\n      jumpi\n      tag_600\n      swap1\n      calldatasize\n      swap1\n      0x04\n      add\n      tag_3\n      jump\t// in\n    tag_600:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2227:2330  modifier nonReentrant() {... */\n      tag_601\n      tag_23\n      jump\t// in\n    tag_601:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2484:2488  role */\n      tag_602\n      tag_12\n      jump\t// in\n    tag_602:\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      mload(0x40)\n      0xff\n        /* \"contracts/EtharisEscrow.sol\":4453:4475  _deals[_dealId].exists */\n      0x08\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      dup4\n      mload\n      swap3\n      0x20\n      dup2\n      dup2\n      dup8\n      add\n      swap6\n      tag_603\n      dup2\n      dup4\n      dup10\n      tag_8\n      jump\t// in\n    tag_603:\n      dup2\n      add\n      0x04\n      dup2\n      mstore\n      sub\n      add\n      swap1\n      keccak256\n        /* \"contracts/EtharisEscrow.sol\":4453:4475  _deals[_dealId].exists */\n      add\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      sload\n      0x10\n      shr\n      and\n        /* \"contracts/EtharisEscrow.sol\":4452:4475  !_deals[_dealId].exists */\n      iszero\n        /* \"contracts/EtharisEscrow.sol\":4448:4498  if (!_deals[_dealId].exists) revert DealNotFound() */\n      tag_135\n      jumpi\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0x20\n      tag_606\n      swap2\n      mload(0x40)\n      dup1\n      swap4\n      dup2\n      swap3\n      dup7\n      mload\n      swap3\n      dup4\n      swap2\n      tag_8\n      jump\t// in\n    tag_606:\n      dup2\n      add\n      0x04\n      dup2\n      mstore\n      sub\n      add\n      swap1\n      keccak256\n        /* \"contracts/EtharisEscrow.sol\":16876:16887  deal.status */\n      swap1\n        /* \"contracts/EtharisEscrow.sol\":4453:4475  _deals[_dealId].exists */\n      0x08\n        /* \"contracts/EtharisEscrow.sol\":16876:16887  deal.status */\n      dup3\n      add\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      swap1\n      dup2\n      sload\n      swap3\n      0xff\n      dup5\n      and\n      0x06\n      dup2\n      lt\n      iszero\n      tag_246\n      jumpi\n        /* \"contracts/EtharisEscrow.sol\":16891:16912  ContractStatus.ACTIVE */\n      0x01\n        /* \"contracts/EtharisEscrow.sol\":16876:16912  deal.status != ContractStatus.ACTIVE */\n      dup2\n      sub\n        /* \"contracts/EtharisEscrow.sol\":16872:17050  if (deal.status != ContractStatus.ACTIVE) {... */\n      tag_609\n      jumpi\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n    tag_610:\n        /* \"contracts/EtharisEscrow.sol\":17082:17093  deal.amount */\n      pop\n        /* \"contracts/EtharisEscrow.sol\":17264:17312  DealCancelled(_dealId, msg.sender, refundAmount) */\n      tag_611\n        /* \"contracts/EtharisEscrow.sol\":17082:17093  deal.amount */\n      swap3\n        /* \"contracts/EtharisEscrow.sol\":16451:16475  ContractStatus.CANCELLED */\n      0x05\n      sub(shl(0x60, 0x01), 0x01)\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0x06\n        /* \"contracts/EtharisEscrow.sol\":17082:17093  deal.amount */\n      dup5\n      add\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      sload\n      and\n      swap6\n      not(0xff)\n      and\n      or\n      swap1\n      sstore\n        /* \"contracts/EtharisEscrow.sol\":17156:17173  refundAmount != 0 */\n      dup4\n      dup1\n        /* \"contracts/EtharisEscrow.sol\":17152:17249  if (refundAmount != 0) {... */\n      tag_612\n      jumpi\n        /* \"contracts/EtharisEscrow.sol\":17264:17312  DealCancelled(_dealId, msg.sender, refundAmount) */\n      pop\n      pop\n      tag_20\n      jump\t// in\n    tag_611:\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      mload(0x40)\n      swap2\n      dup3\n      mstore\n        /* \"contracts/EtharisEscrow.sol\":17264:17312  DealCancelled(_dealId, msg.sender, refundAmount) */\n      0xb559d285c87e4fa0f561388264310703ff0c6c454a39ae52d0ae94032ff0db70\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0x20\n        /* \"contracts/EtharisEscrow.sol\":17287:17297  msg.sender */\n      caller\n        /* \"contracts/EtharisEscrow.sol\":17264:17312  DealCancelled(_dealId, msg.sender, refundAmount) */\n      swap4\n      log3\n        /* \"contracts/EtharisEscrow.sol\":16891:16912  ContractStatus.ACTIVE */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      dup2\n      sstore\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      dup1\n      return\n        /* \"contracts/EtharisEscrow.sol\":17152:17249  if (refundAmount != 0) {... */\n    tag_612:\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      swap1\n      sload\n        /* \"contracts/EtharisEscrow.sol\":17189:17238  _idrxToken.safeTransfer(deal.brand, refundAmount) */\n      tag_614\n      swap2\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      and\n        /* \"contracts/EtharisEscrow.sol\":17189:17199  _idrxToken */\n      immutable(\"0x92a99c2e1e73cfa8af214a27ee636aa00abb49bffb5065f213fd4435430466da\")\n        /* \"contracts/EtharisEscrow.sol\":17189:17238  _idrxToken.safeTransfer(deal.brand, refundAmount) */\n      tag_28\n      jump\t// in\n    tag_614:\n        /* \"contracts/EtharisEscrow.sol\":17152:17249  if (refundAmount != 0) {... */\n      0x00\n      dup4\n      jump(tag_255)\n        /* \"contracts/EtharisEscrow.sol\":16872:17050  if (deal.status != ContractStatus.ACTIVE) {... */\n    tag_609:\n        /* \"contracts/EtharisEscrow.sol\":16947:16976  ContractStatus.PENDING_REVIEW */\n      0x02\n        /* \"contracts/EtharisEscrow.sol\":16932:16976  deal.status != ContractStatus.PENDING_REVIEW */\n      sub\n        /* \"contracts/EtharisEscrow.sol\":16928:17040  if (deal.status != ContractStatus.PENDING_REVIEW) {... */\n      tag_615\n      jumpi\n        /* \"contracts/EtharisEscrow.sol\":16872:17050  if (deal.status != ContractStatus.ACTIVE) {... */\n      0x00\n      jump(tag_610)\n        /* \"contracts/EtharisEscrow.sol\":16928:17040  if (deal.status != ContractStatus.PENDING_REVIEW) {... */\n    tag_615:\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      mload(0x40)\n      shl(0xe3, 0x04df0cad)\n        /* \"contracts/EtharisEscrow.sol\":17003:17025  CannotCancelThisDeal() */\n      dup2\n      mstore\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0x04\n      swap1\n        /* \"contracts/EtharisEscrow.sol\":17003:17025  CannotCancelThisDeal() */\n      revert\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n    tag_41:\n      pop\n      jumpi(tag_105, callvalue)\n      dup1\n      add(calldatasize, not(0x03))\n      slt\n      tag_105\n      jumpi\n      0x20\n      mload(0x40)\n        /* \"contracts/EtharisEscrow.sol\":1949:1973  keccak256(\"SERVER_ROLE\") */\n      0xa8a7bc421f721cb936ea99efdad79237e6ee0b871a2a08cf648691f9584cdc77\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      dup2\n      mstore\n      return\n    tag_39:\n      pop\n      jumpi(tag_105, callvalue)\n      tag_623\n      calldatasize\n      tag_7\n      jump\t// in\n    tag_623:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2484:2488  role */\n      swap1\n      swap2\n      tag_624\n      tag_12\n      jump\t// in\n    tag_624:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1204:1276  modifier whenNotPaused() {... */\n      tag_625\n      tag_21\n      jump\t// in\n    tag_625:\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      mload(0x40)\n      swap2\n      dup2\n      mload\n      0xff\n        /* \"contracts/EtharisEscrow.sol\":4453:4475  _deals[_dealId].exists */\n      0x08\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0x20\n      swap6\n      dup7\n      dup2\n      dup2\n      dup9\n      add\n      swap6\n      tag_626\n      dup2\n      dup4\n      dup10\n      tag_8\n      jump\t// in\n    tag_626:\n      dup2\n      add\n      0x04\n      dup2\n      mstore\n      sub\n      add\n      swap1\n      keccak256\n        /* \"contracts/EtharisEscrow.sol\":4453:4475  _deals[_dealId].exists */\n      add\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      sload\n      0x10\n      shr\n      and\n        /* \"contracts/EtharisEscrow.sol\":4452:4475  !_deals[_dealId].exists */\n      iszero\n        /* \"contracts/EtharisEscrow.sol\":4448:4498  if (!_deals[_dealId].exists) revert DealNotFound() */\n      tag_135\n      jumpi\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      mload(0x40)\n      dup4\n      mload\n      tag_629\n      dup2\n      dup4\n      dup6\n      tag_8\n      jump\t// in\n    tag_629:\n      0x04\n      swap1\n      dup3\n      add\n      swap1\n      dup2\n      mstore\n      dup2\n      swap1\n      sub\n      dup6\n      add\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap6\n      dup7\n      and\n      swap6\n      and\n        /* \"contracts/EtharisEscrow.sol\":4153:4184  _deals[_dealId].brand != _brand */\n      dup6\n      swap1\n      sub\n        /* \"contracts/EtharisEscrow.sol\":4149:4208  if (_deals[_dealId].brand != _brand) revert NotAuthorized() */\n      tag_138\n      jumpi\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0xff\n        /* \"contracts/EtharisEscrow.sol\":4453:4475  _deals[_dealId].exists */\n      0x08\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      mload(0x40)\n      dup7\n      dup2\n      dup8\n      mload\n      tag_632\n      dup2\n      dup4\n      dup10\n      tag_8\n      jump\t// in\n    tag_632:\n      dup2\n      add\n      0x04\n      dup2\n      mstore\n      sub\n      add\n      swap1\n      keccak256\n        /* \"contracts/EtharisEscrow.sol\":4601:4623  _deals[_dealId].status */\n      add\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      sload\n      and\n      0x06\n      dup2\n      lt\n      iszero\n      tag_141\n      jumpi\n        /* \"contracts/EtharisEscrow.sol\":12916:12945  ContractStatus.PENDING_REVIEW */\n      0x02\n        /* \"contracts/EtharisEscrow.sol\":4601:4634  _deals[_dealId].status != _status */\n      sub\n        /* \"contracts/EtharisEscrow.sol\":4597:4662  if (_deals[_dealId].status != _status) revert InvalidDealStatus() */\n      tag_143\n      jumpi\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      dup4\n      tag_637\n      swap2\n      mload(0x40)\n      dup1\n      swap4\n      dup2\n      swap3\n      dup8\n      mload\n      swap3\n      dup4\n      swap2\n      tag_8\n      jump\t// in\n    tag_637:\n      dup2\n      add\n      0x04\n      dup2\n      mstore\n      sub\n      add\n      swap1\n      keccak256\n        /* \"contracts/EtharisEscrow.sol\":13029:13048  deal.reviewDeadline */\n      0x07\n      dup2\n      add\n        /* \"contracts/EtharisEscrow.sol\":1861:1869  72 hours */\n      swap3\n      sub(shl(0x40, 0x01), 0x01)\n      dup5\n      sload\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0x40\n        /* \"contracts/EtharisEscrow.sol\":1861:1869  72 hours */\n      shr\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      and\n        /* \"contracts/EtharisEscrow.sol\":13010:13025  block.timestamp */\n      timestamp\n        /* \"contracts/EtharisEscrow.sol\":13010:13048  block.timestamp >= deal.reviewDeadline */\n      lt\n      iszero\n        /* \"contracts/EtharisEscrow.sol\":13006:13076  if (block.timestamp >= deal.reviewDeadline) revert ReviewPeriodEnded() */\n      tag_638\n      jumpi\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      dup3\n      mload\n        /* \"contracts/EtharisEscrow.sol\":13090:13116  bytes(_reason).length == 0 */\n      iszero\n        /* \"contracts/EtharisEscrow.sol\":13086:13141  if (bytes(_reason).length == 0) revert ReasonRequired() */\n      tag_640\n      jumpi\n        /* \"contracts/EtharisEscrow.sol\":13294:13343  DisputeInitiated(_dealId, _brandAddress, _reason) */\n      0xde7b01bef0884582ce204f7f920e57f99dd569f93867450872f436be5a03c755\n        /* \"contracts/EtharisEscrow.sol\":13152:13163  deal.status */\n      swap4\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      tag_642\n        /* \"contracts/EtharisEscrow.sol\":13152:13163  deal.status */\n      dup5\n        /* \"contracts/EtharisEscrow.sol\":13199:13217  deal.disputeReason */\n      0x05\n        /* \"contracts/EtharisEscrow.sol\":13152:13163  deal.status */\n      dup6\n        /* \"contracts/EtharisEscrow.sol\":4453:4475  _deals[_dealId].exists */\n      0x08\n        /* \"contracts/EtharisEscrow.sol\":13294:13343  DisputeInitiated(_dealId, _brandAddress, _reason) */\n      tag_643\n        /* \"contracts/EtharisEscrow.sol\":13152:13163  deal.status */\n      swap8\n      add\n        /* \"contracts/EtharisEscrow.sol\":13166:13189  ContractStatus.DISPUTED */\n      0x03\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      not(0xff)\n      dup3\n      sload\n      and\n      or\n      swap1\n      sstore\n        /* \"contracts/EtharisEscrow.sol\":13199:13217  deal.disputeReason */\n      add\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      tag_18\n      jump\t// in\n    tag_642:\n      dup1\n      sload\n      not(shl(0x80, 0xffffffffffffffff))\n      and\n        /* \"contracts/EtharisEscrow.sol\":13010:13025  block.timestamp */\n      timestamp\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0x80\n      shl\n      shl(0x80, 0xffffffffffffffff)\n      and\n      or\n      swap1\n      sstore\n        /* \"contracts/EtharisEscrow.sol\":13294:13343  DisputeInitiated(_dealId, _brandAddress, _reason) */\n      tag_20\n      jump\t// in\n    tag_643:\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      swap3\n      tag_644\n      mload(0x40)\n      swap3\n      dup3\n      dup5\n      swap4\n      dup5\n      mstore\n      dup4\n      add\n      swap1\n      tag_9\n      jump\t// in\n    tag_644:\n        /* \"contracts/EtharisEscrow.sol\":13294:13343  DisputeInitiated(_dealId, _brandAddress, _reason) */\n      sub\n      swap1\n      log3\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      dup1\n      return\n        /* \"contracts/EtharisEscrow.sol\":13086:13141  if (bytes(_reason).length == 0) revert ReasonRequired() */\n    tag_640:\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      mload(0x40)\n      shl(0xe0, 0xbc7fd331)\n        /* \"contracts/EtharisEscrow.sol\":13125:13141  ReasonRequired() */\n      dup2\n      mstore\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0x04\n      swap1\n        /* \"contracts/EtharisEscrow.sol\":13125:13141  ReasonRequired() */\n      revert\n        /* \"contracts/EtharisEscrow.sol\":13006:13076  if (block.timestamp >= deal.reviewDeadline) revert ReviewPeriodEnded() */\n    tag_638:\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      mload(0x40)\n      shl(0xe1, 0x2d0f572d)\n        /* \"contracts/EtharisEscrow.sol\":13057:13076  ReviewPeriodEnded() */\n      dup2\n      mstore\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0x04\n      swap1\n        /* \"contracts/EtharisEscrow.sol\":13057:13076  ReviewPeriodEnded() */\n      revert\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n    tag_37:\n      pop\n      jumpi(tag_105, callvalue)\n      tag_647\n      calldatasize\n      tag_6\n      jump\t// in\n    tag_647:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2484:2488  role */\n      swap1\n      tag_648\n      tag_12\n      jump\t// in\n    tag_648:\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      mload(0x40)\n      swap1\n      dup1\n      mload\n      0xff\n        /* \"contracts/EtharisEscrow.sol\":4453:4475  _deals[_dealId].exists */\n      0x08\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0x20\n      swap5\n      dup6\n      dup2\n      dup2\n      dup8\n      add\n      swap6\n      tag_649\n      dup2\n      dup4\n      dup10\n      tag_8\n      jump\t// in\n    tag_649:\n      dup2\n      add\n      0x04\n      dup2\n      mstore\n      sub\n      add\n      swap1\n      keccak256\n        /* \"contracts/EtharisEscrow.sol\":4453:4475  _deals[_dealId].exists */\n      add\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      sload\n      0x10\n      shr\n      and\n        /* \"contracts/EtharisEscrow.sol\":4452:4475  !_deals[_dealId].exists */\n      iszero\n        /* \"contracts/EtharisEscrow.sol\":4448:4498  if (!_deals[_dealId].exists) revert DealNotFound() */\n      tag_135\n      jumpi\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      mload(0x40)\n      dup3\n      mload\n      tag_652\n      dup2\n      dup4\n      dup6\n      tag_8\n      jump\t// in\n    tag_652:\n      0x04\n      swap1\n      dup3\n      add\n      swap1\n      dup2\n      mstore\n      dup2\n      swap1\n      sub\n      dup5\n      add\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap5\n      dup6\n      and\n      swap5\n      and\n        /* \"contracts/EtharisEscrow.sol\":4153:4184  _deals[_dealId].brand != _brand */\n      dup5\n      swap1\n      sub\n        /* \"contracts/EtharisEscrow.sol\":4149:4208  if (_deals[_dealId].brand != _brand) revert NotAuthorized() */\n      tag_138\n      jumpi\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0xff\n        /* \"contracts/EtharisEscrow.sol\":4453:4475  _deals[_dealId].exists */\n      0x08\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      mload(0x40)\n      dup6\n      dup2\n      dup7\n      mload\n      tag_655\n      dup2\n      dup4\n      dup10\n      tag_8\n      jump\t// in\n    tag_655:\n      dup2\n      add\n      0x04\n      dup2\n      mstore\n      sub\n      add\n      swap1\n      keccak256\n        /* \"contracts/EtharisEscrow.sol\":4601:4623  _deals[_dealId].status */\n      add\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      sload\n      and\n      0x06\n      dup2\n      lt\n      iszero\n      tag_246\n      jumpi\n        /* \"contracts/EtharisEscrow.sol\":4597:4662  if (_deals[_dealId].status != _status) revert InvalidDealStatus() */\n      tag_143\n      jumpi\n        /* \"contracts/EtharisEscrow.sol\":16491:16531  DealCancelled(_dealId, _brandAddress, 0) */\n      0xb559d285c87e4fa0f561388264310703ff0c6c454a39ae52d0ae94032ff0db70\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      swap2\n        /* \"contracts/EtharisEscrow.sol\":4453:4475  _deals[_dealId].exists */\n      0x08\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      tag_660\n      dup6\n        /* \"contracts/EtharisEscrow.sol\":16491:16531  DealCancelled(_dealId, _brandAddress, 0) */\n      tag_661\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      swap5\n      mload(0x40)\n      dup1\n      swap4\n      dup2\n      swap3\n      dup8\n      mload\n      swap3\n      dup4\n      swap2\n      tag_8\n      jump\t// in\n    tag_660:\n      dup2\n      add\n      0x04\n      dup2\n      mstore\n      sub\n      add\n      swap1\n      keccak256\n        /* \"contracts/EtharisEscrow.sol\":16426:16448  _deals[_dealId].status */\n      add\n        /* \"contracts/EtharisEscrow.sol\":16451:16475  ContractStatus.CANCELLED */\n      0x05\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      not(0xff)\n      dup3\n      sload\n      and\n      or\n      swap1\n      sstore\n        /* \"contracts/EtharisEscrow.sol\":16491:16531  DealCancelled(_dealId, _brandAddress, 0) */\n      tag_20\n      jump\t// in\n    tag_661:\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      swap2\n      mload(0x40)\n      dup6\n      dup2\n      mstore\n        /* \"contracts/EtharisEscrow.sol\":16491:16531  DealCancelled(_dealId, _brandAddress, 0) */\n      log3\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      dup1\n      return\n    tag_35:\n      swap1\n      pop\n      jumpi(tag_112, callvalue)\n      jumpi(tag_112, slt(add(not(0x03), calldatasize), 0x20))\n      calldataload(0x04)\n      shl(0xe0, 0xffffffff)\n      dup2\n      and\n      dup1\n      swap2\n      sub\n      tag_192\n      jumpi\n      0x20\n      swap3\n      pop\n      shl(0xe0, 0x7965db0b)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2649:2696  interfaceId == type(IAccessControl).interfaceId */\n      dup2\n      eq\n      swap1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2649:2736  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      dup2\n      iszero\n      tag_668\n      jumpi\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n    tag_669:\n      pop\n      iszero\n      iszero\n      dup2\n      mstore\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2649:2736  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n    tag_668:\n      shl(0xe0, 0x01ffc9a7)\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":829:869  interfaceId == type(IERC165).interfaceId */\n      eq\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2649:2736  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      0x00\n      jump(tag_669)\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n    tag_1:\n      0x0200\n      dup2\n      add\n      swap1\n      dup2\n      lt\n      sub(shl(0x40, 0x01), 0x01)\n      dup3\n      gt\n      or\n      tag_372\n      jumpi\n      0x40\n      mstore\n      jump\t// out\n    tag_2:\n      swap1\n      0x1f\n      dup1\n      not\n      swap2\n      add\n      and\n      dup2\n      add\n      swap1\n      dup2\n      lt\n      sub(shl(0x40, 0x01), 0x01)\n      dup3\n      gt\n      or\n      tag_372\n      jumpi\n      0x40\n      mstore\n      jump\t// out\n    tag_3:\n      dup2\n      0x1f\n      dup3\n      add\n      slt\n      iszero\n      tag_129\n      jumpi\n      dup1\n      calldataload\n      swap1\n      sub(shl(0x40, 0x01), 0x01)\n      dup3\n      gt\n      tag_372\n      jumpi\n      mload(0x40)\n      swap3\n      tag_678\n      0x1f\n      dup5\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup6\n      tag_2\n      jump\t// in\n    tag_678:\n      dup3\n      dup5\n      mstore\n      0x20\n      dup4\n      dup4\n      add\n      add\n      gt\n      tag_129\n      jumpi\n      dup2\n      0x00\n      swap3\n      0x20\n      dup1\n      swap4\n      add\n      dup4\n      dup7\n      add\n      calldatacopy\n      dup4\n      add\n      add\n      mstore\n      swap1\n      jump\t// out\n    tag_4:\n      calldataload(0x24)\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      dup3\n      and\n      dup3\n      sub\n      tag_129\n      jumpi\n      jump\t// out\n    tag_5:\n      calldataload(0x04)\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      dup3\n      and\n      dup3\n      sub\n      tag_129\n      jumpi\n      jump\t// out\n    tag_6:\n      0x40\n      not(0x03)\n      dup3\n      add\n      slt\n      tag_129\n      jumpi\n      calldataload(0x04)\n      swap1\n      sub(shl(0x40, 0x01), 0x01)\n      dup3\n      gt\n      tag_129\n      jumpi\n      tag_689\n      swap2\n      0x04\n      add\n      tag_3\n      jump\t// in\n    tag_689:\n      swap1\n      calldataload(0x24)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      and\n      dup2\n      sub\n      tag_129\n      jumpi\n      swap1\n      jump\t// out\n    tag_7:\n      0x60\n      not(0x03)\n      dup3\n      add\n      slt\n      tag_129\n      jumpi\n      sub(shl(0x40, 0x01), 0x01)\n      swap2\n      calldataload(0x04)\n      dup4\n      dup2\n      gt\n      tag_129\n      jumpi\n      dup3\n      tag_696\n      swap2\n      0x04\n      add\n      tag_3\n      jump\t// in\n    tag_696:\n      swap3\n      calldataload(0x24)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      and\n      dup2\n      sub\n      tag_129\n      jumpi\n      swap3\n      calldataload(0x44)\n      swap2\n      dup3\n      gt\n      tag_129\n      jumpi\n      tag_701\n      swap2\n      0x04\n      add\n      tag_3\n      jump\t// in\n    tag_701:\n      swap1\n      jump\t// out\n    tag_8:\n      0x00\n    tag_702:\n      dup4\n      dup2\n      lt\n      tag_703\n      jumpi\n      pop\n      pop\n      0x00\n      swap2\n      add\n      mstore\n      jump\t// out\n    tag_703:\n      dup2\n      dup2\n      add\n      mload\n      dup4\n      dup3\n      add\n      mstore\n      0x20\n      add\n      jump(tag_702)\n    tag_9:\n      swap1\n      0x20\n      swap2\n      tag_705\n      dup2\n      mload\n      dup1\n      swap3\n      dup2\n      dup6\n      mstore\n      dup6\n      dup1\n      dup7\n      add\n      swap2\n      add\n      tag_8\n      jump\t// in\n    tag_705:\n      0x1f\n      add\n      not(0x1f)\n      and\n      add\n      add\n      swap1\n      jump\t// out\n    tag_10:\n      0x20\n      dup1\n      dup3\n      add\n      swap1\n      dup1\n      dup4\n      mstore\n      dup4\n      mload\n      dup1\n      swap3\n      mstore\n      0x40\n      dup4\n      add\n      swap3\n      dup2\n      0x40\n      dup5\n      0x05\n      shl\n      dup4\n      add\n      add\n      swap6\n      add\n      swap4\n      0x00\n      swap2\n    tag_706:\n      dup5\n      dup4\n      lt\n      tag_707\n      jumpi\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      jump\t// out\n    tag_707:\n      swap1\n      swap2\n      swap3\n      swap4\n      swap5\n      swap6\n      dup5\n      dup1\n      tag_709\n      0x01\n      swap4\n      not(0x3f)\n      dup7\n      dup3\n      sub\n      add\n      dup8\n      mstore\n      dup11\n      mload\n      tag_9\n      jump\t// in\n    tag_709:\n      swap9\n      add\n      swap4\n      add\n      swap4\n      add\n      swap2\n      swap5\n      swap4\n      swap3\n      swap1\n      jump(tag_706)\n    tag_11:\n      swap1\n      0x06\n      dup3\n      lt\n      iszero\n      tag_710\n      jumpi\n      mstore\n      jump\t// out\n    tag_710:\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x21)\n      revert(0x00, 0x24)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3175:3278  function _checkRole(bytes32 role) internal view virtual {... */\n    tag_12:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n      0x00\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      swap1\n      dup2\n      mstore\n      mstore(0x20, 0xef73bf2ac44f84561b5498839ab1c8c5a4dd99305d838aea0d76c5961778535c)\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/EtharisEscrow.sol\":1949:1973  keccak256(\"SERVER_ROLE\") */\n      0xa8a7bc421f721cb936ea99efdad79237e6ee0b871a2a08cf648691f9584cdc77\n      swap1\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0xff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3495:3518  !hasRole(role, account) */\n      iszero\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3491:3599  if (!hasRole(role, account)) {... */\n      tag_712\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3175:3278  function _checkRole(bytes32 role) internal view virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3491:3599  if (!hasRole(role, account)) {... */\n    tag_712:\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0x44\n      swap1\n      mload(0x40)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3541:3588  AccessControlUnauthorizedAccount(account, role) */\n      swap1\n      shl(0xe0, 0xe2517d3f)\n      dup3\n      mstore\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3541:3588  AccessControlUnauthorizedAccount(account, role) */\n      0x04\n      dup4\n      add\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3541:3588  AccessControlUnauthorizedAccount(account, role) */\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3175:3278  function _checkRole(bytes32 role) internal view virtual {... */\n    tag_13:\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      dup1\n      0x00\n      mstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2936  _roles */\n      0x02\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n      0x00\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      mstore\n      0x20\n      mstore\n      and(sload(keccak256(0x00, 0x40)), 0xff)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3495:3518  !hasRole(role, account) */\n      iszero\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3491:3599  if (!hasRole(role, account)) {... */\n      tag_712\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3175:3278  function _checkRole(bytes32 role) internal view virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6155:6471  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_14:\n      swap1\n      0x00\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      swap2\n      dup1\n      dup4\n      mstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2936  _roles */\n      0x02\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0x20\n      mstore\n      0x40\n      dup4\n      keccak256\n      swap2\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      and\n      swap2\n      dup3\n      dup5\n      mstore\n      0x20\n      mstore\n      0xff\n      0x40\n      dup5\n      keccak256\n      sload\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6252:6275  !hasRole(role, account) */\n      iszero\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6248:6465  if (!hasRole(role, account)) {... */\n      0x00\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      eq\n      tag_716\n      jumpi\n      dup1\n      dup4\n      mstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2936  _roles */\n      0x02\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0x20\n      mstore\n      0x40\n      dup4\n      keccak256\n      dup3\n      dup5\n      mstore\n      0x20\n      mstore\n      0x40\n      dup4\n      keccak256\n      0x01\n      not(0xff)\n      dup3\n      sload\n      and\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6346:6386  RoleGranted(role, account, _msgSender()) */\n      0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6346:6386  RoleGranted(role, account, _msgSender()) */\n      swap4\n      dup1\n      log4\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6400:6411  return true */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6248:6465  if (!hasRole(role, account)) {... */\n    tag_716:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6442:6454  return false */\n      pop\n      pop\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6708:7025  function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_15:\n      swap1\n      0x00\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      swap2\n      dup1\n      dup4\n      mstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2936  _roles */\n      0x02\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0x20\n      mstore\n      0x40\n      dup4\n      keccak256\n      swap2\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      and\n      swap2\n      dup3\n      dup5\n      mstore\n      0x20\n      mstore\n      0xff\n      0x40\n      dup5\n      keccak256\n      sload\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6802:7019  if (hasRole(role, account)) {... */\n      0x00\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      eq\n      tag_716\n      jumpi\n      dup1\n      dup4\n      mstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2936  _roles */\n      0x02\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0x20\n      mstore\n      0x40\n      dup4\n      keccak256\n      dup3\n      dup5\n      mstore\n      0x20\n      mstore\n      0x40\n      dup4\n      keccak256\n      not(0xff)\n      dup2\n      sload\n      and\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6900:6940  RoleRevoked(role, account, _msgSender()) */\n      0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6900:6940  RoleRevoked(role, account, _msgSender()) */\n      swap4\n      dup1\n      log4\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6954:6965  return true */\n      swap1\n      jump\t// out\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n    tag_16:\n      swap1\n      0x01\n      dup3\n      dup2\n      shr\n      swap3\n      and\n      dup1\n      iszero\n      tag_720\n      jumpi\n    tag_721:\n      0x20\n      dup4\n      lt\n      eq\n      tag_722\n      jumpi\n      jump\t// out\n    tag_722:\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x22)\n      revert(0x00, 0x24)\n    tag_720:\n      swap2\n      0x7f\n      and\n      swap2\n      jump(tag_721)\n    tag_17:\n      dup2\n      dup2\n      lt\n      tag_725\n      jumpi\n      pop\n      pop\n      jump\t// out\n    tag_725:\n      0x00\n      dup2\n      sstore\n      0x01\n      add\n      jump(tag_17)\n    tag_18:\n      swap2\n      swap1\n      swap2\n      dup3\n      mload\n      sub(shl(0x40, 0x01), 0x01)\n      dup2\n      gt\n      tag_372\n      jumpi\n      tag_729\n      dup3\n      sload\n      tag_16\n      jump\t// in\n    tag_729:\n      0x1f\n      dup2\n      gt\n      tag_730\n      jumpi\n    tag_731:\n      pop\n      0x20\n      dup1\n      0x1f\n      dup4\n      gt\n      0x01\n      eq\n      tag_732\n      jumpi\n      pop\n      dup2\n      swap3\n      swap4\n      swap5\n      0x00\n      swap3\n      tag_734\n      jumpi\n    tag_735:\n      pop\n      pop\n      dup2\n      0x01\n      shl\n      swap2\n      not(0x00)\n      swap1\n      0x03\n      shl\n      shr\n      not\n      and\n      or\n      swap1\n      sstore\n      jump\t// out\n    tag_734:\n      add\n      mload\n      swap1\n      pop\n      0x00\n      dup1\n      jump(tag_735)\n    tag_732:\n      swap1\n      not(0x1f)\n      dup4\n      and\n      swap6\n      dup5\n      0x00\n      mstore\n      dup3\n      0x00\n      keccak256\n      swap3\n      0x00\n      swap1\n    tag_737:\n      dup9\n      dup3\n      lt\n      tag_738\n      jumpi\n      pop\n      pop\n      dup4\n      0x01\n      swap6\n      swap7\n      swap8\n      lt\n      tag_740\n      jumpi\n    tag_741:\n      pop\n      pop\n      pop\n      dup2\n      shl\n      add\n      swap1\n      sstore\n      jump\t// out\n    tag_740:\n      add\n      mload\n      not(0x00)\n      0xf8\n      dup5\n      0x03\n      shl\n      and\n      shr\n      not\n      and\n      swap1\n      sstore\n      0x00\n      dup1\n      dup1\n      jump(tag_741)\n    tag_738:\n      dup1\n      0x01\n      dup6\n      swap7\n      dup3\n      swap5\n      swap7\n      dup7\n      add\n      mload\n      dup2\n      sstore\n      add\n      swap6\n      add\n      swap4\n      add\n      swap1\n      jump(tag_737)\n    tag_730:\n      tag_742\n      swap1\n      dup4\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      0x1f\n      dup5\n      add\n      0x05\n      shr\n      dup2\n      add\n      swap2\n      0x20\n      dup6\n      lt\n      tag_743\n      jumpi\n    tag_744:\n      0x1f\n      add\n      0x05\n      shr\n      add\n      swap1\n      tag_17\n      jump\t// in\n    tag_742:\n      0x00\n      jump(tag_731)\n    tag_743:\n      swap1\n      swap2\n      pop\n      dup2\n      swap1\n      jump(tag_744)\n    tag_19:\n      swap1\n      dup2\n      sload\n      0x010000000000000000\n      dup2\n      lt\n      iszero\n      tag_372\n      jumpi\n      0x01\n      dup2\n      add\n      dup1\n      dup5\n      sstore\n      dup2\n      lt\n      iszero\n      tag_747\n      jumpi\n      tag_749\n      swap3\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      tag_18\n      jump\t// in\n    tag_749:\n      jump\t// out\n    tag_747:\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_20:\n      tag_750\n      swap1\n      0x20\n      mload(0x40)\n      swap3\n      dup3\n      dup5\n      dup1\n      swap5\n      mload\n      swap4\n      dup5\n      swap3\n      add\n      tag_8\n      jump\t// in\n    tag_750:\n      dup2\n      add\n      sub\n      swap1\n      keccak256\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1767:1873  function _requireNotPaused() internal view virtual {... */\n    tag_21:\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0xff\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1685:1692  _paused */\n      0x01\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      sload\n      and\n      tag_751\n      jumpi\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1767:1873  function _requireNotPaused() internal view virtual {... */\n      jump\t// out\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n    tag_751:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x10\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x82, 0x14185d5cd8589b194e881c185d5cd959)\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n    tag_23:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2475  _status */\n      0x00\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      sload\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2487  _status != _ENTERED */\n      eq\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      tag_753\n      jumpi\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2475  _status */\n      0x00\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      sstore\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n    tag_753:\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1f\n      0x24\n      dup3\n      add\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      mstore\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0x44\n      dup3\n      add\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      mstore\n      0x64\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8370:9090  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_24:\n      swap1\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8507:8928  assembly (\"memory-safe\") {... */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8370:9090  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n      swap2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8507:8928  assembly (\"memory-safe\") {... */\n      dup3\n      dup2\n      mload\n      swap2\n      add\n      dup3\n      dup6\n      gas\n      call\n      iszero\n      tag_755\n      jumpi\n      mload(0x00)\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:8957  returnSize == 0 */\n      tag_757\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8960:8986  address(token).code.length */\n      extcodesize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8960:8991  address(token).code.length == 0 */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:9010  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n    tag_759:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8938:9084  if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {... */\n      tag_760\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8370:9090  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8938:9084  if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {... */\n    tag_760:\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      mload(0x40)\n      shl(0xe0, 0x5274afe7)\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9033:9073  SafeERC20FailedOperation(address(token)) */\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      swap1\n      swap2\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9033:9073  SafeERC20FailedOperation(address(token)) */\n      0x04\n      dup3\n      add\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      mstore\n      0x24\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9033:9073  SafeERC20FailedOperation(address(token)) */\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:9010  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n    tag_757:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9009:9010  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8994:9010  returnValue != 1 */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:9010  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n      jump(tag_759)\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8507:8928  assembly (\"memory-safe\") {... */\n    tag_755:\n      mload(0x40)\n      returndatasize\n      0x00\n      dup3\n      returndatacopy\n      returndatasize\n      swap1\n      revert\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n    tag_25:\n      swap2\n      swap1\n      swap2\n      sub(shl(0x60, 0x01), 0x01)\n      dup1\n      dup1\n      swap5\n      and\n      swap2\n      and\n      mul\n      swap2\n      dup3\n      and\n      swap2\n      dup3\n      sub\n      tag_148\n      jumpi\n      jump\t// out\n        /* \"contracts/EtharisEscrow.sol\":1810:1815  10000 */\n    tag_26:\n      sub(shl(0x60, 0x01), 0x01)\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      swap2\n      dup3\n      and\n      swap1\n      dup3\n      and\n        /* \"contracts/EtharisEscrow.sol\":1810:1815  10000 */\n      sub\n      swap2\n      swap1\n      dup3\n      gt\n      tag_148\n      jumpi\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1219:1379  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n    tag_28:\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1328:1371  abi.encodeCall(token.transfer, (to, value)) */\n      0x20\n      dup3\n      add\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      swap1\n      swap3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1328:1371  abi.encodeCall(token.transfer, (to, value)) */\n      0x24\n      dup4\n      add\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      mstore\n      0x44\n      dup1\n      dup4\n      add\n      swap4\n      swap1\n      swap4\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1328:1371  abi.encodeCall(token.transfer, (to, value)) */\n      swap2\n      dup2\n      mstore\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0x80\n      dup2\n      add\n      swap2\n      sub(shl(0x40, 0x01), 0x01)\n      dup4\n      gt\n      dup3\n      dup5\n      lt\n      or\n      tag_372\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1328:1371  abi.encodeCall(token.transfer, (to, value)) */\n      tag_749\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      swap3\n      0x40\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1328:1371  abi.encodeCall(token.transfer, (to, value)) */\n      tag_24\n      jump\t// in\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n    tag_29:\n      swap1\n      mload(0x40)\n      swap2\n      dup3\n      0x00\n      dup3\n      sload\n      swap3\n      tag_769\n      dup5\n      tag_16\n      jump\t// in\n    tag_769:\n      swap1\n      dup2\n      dup5\n      mstore\n      0x01\n      swap5\n      dup6\n      dup2\n      and\n      swap1\n      dup2\n      0x00\n      eq\n      tag_770\n      jumpi\n      pop\n      0x01\n      eq\n      tag_772\n      jumpi\n    tag_773:\n      pop\n      pop\n      tag_749\n      swap3\n      pop\n      sub\n      dup4\n      tag_2\n      jump\t// in\n    tag_772:\n      swap1\n      swap4\n      swap2\n      pop\n      0x00\n      mstore\n      0x20\n      swap1\n      dup2\n      0x00\n      keccak256\n      swap4\n      0x00\n      swap2\n    tag_775:\n      dup2\n      dup4\n      lt\n      tag_776\n      jumpi\n      pop\n      pop\n      tag_749\n      swap4\n      pop\n      dup3\n      add\n      add\n      0x00\n      dup1\n      jump(tag_773)\n    tag_776:\n      dup6\n      sload\n      dup9\n      dup5\n      add\n      dup6\n      add\n      mstore\n      swap5\n      dup6\n      add\n      swap5\n      dup8\n      swap5\n      pop\n      swap2\n      dup4\n      add\n      swap2\n      jump(tag_775)\n    tag_770:\n      swap2\n      pop\n      pop\n      tag_749\n      swap5\n      pop\n      0x20\n      swap3\n      pop\n      not(0xff)\n      and\n      dup3\n      dup5\n      add\n      mstore\n      iszero\n      iszero\n      0x05\n      shl\n      dup3\n      add\n      add\n      0x00\n      dup1\n      jump(tag_773)\n    tag_30:\n      swap1\n      sub(shl(0x40, 0x01), 0x01)\n      dup3\n      gt\n      tag_372\n      jumpi\n      mload(0x40)\n      swap2\n      tag_780\n      0x20\n      dup3\n      0x05\n      shl\n      add\n      dup5\n      tag_2\n      jump\t// in\n    tag_780:\n      dup3\n      mstore\n      jump\t// out\n        /* \"contracts/EtharisEscrow.sol\":20051:20378  function updatePlatformFee(... */\n    tag_31:\n      sub(shl(0x60, 0x01), 0x01)\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      swap1\n      dup2\n      dup2\n      and\n        /* \"contracts/EtharisEscrow.sol\":20169:20173  1000 */\n      0x03e8\n        /* \"contracts/EtharisEscrow.sol\":20156:20173  _newFeeBps > 1000 */\n      dup2\n      gt\n        /* \"contracts/EtharisEscrow.sol\":20152:20194  if (_newFeeBps > 1000) revert FeeTooHigh() */\n      tag_781\n      jumpi\n        /* \"contracts/EtharisEscrow.sol\":20221:20236  _platformFeeBps */\n      0x03\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      sload\n      swap3\n      dup4\n      and\n        /* \"contracts/EtharisEscrow.sol\":20250:20270  oldFee == _newFeeBps */\n      swap1\n      dup1\n      dup3\n      eq\n        /* \"contracts/EtharisEscrow.sol\":20246:20279  if (oldFee == _newFeeBps) return; */\n      tag_783\n      jumpi\n      not(0xffffffffffffffffffffffff)\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      swap1\n      swap4\n      and\n      swap3\n      swap1\n      swap3\n      or\n        /* \"contracts/EtharisEscrow.sol\":20221:20236  _platformFeeBps */\n      0x03\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      sstore\n      0x40\n      dup1\n      mload\n      sub(shl(0x60, 0x01), 0x01)\n      swap4\n      dup5\n      and\n      dup2\n      mstore\n      swap2\n      swap1\n      swap3\n      and\n        /* \"contracts/EtharisEscrow.sol\":1810:1815  10000 */\n      0x20\n      dup3\n      add\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      mstore\n        /* \"contracts/EtharisEscrow.sol\":20333:20371  PlatformFeeUpdated(oldFee, _newFeeBps) */\n      0xfeeddf72b7ee4210b769104cb8b071e5706232ac7f671fb292af429ffd58b587\n      swap2\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      dup2\n      swap1\n        /* \"contracts/EtharisEscrow.sol\":1810:1815  10000 */\n      dup2\n      add\n        /* \"contracts/EtharisEscrow.sol\":20333:20371  PlatformFeeUpdated(oldFee, _newFeeBps) */\n    tag_785:\n      sub\n      swap1\n      log1\n        /* \"contracts/EtharisEscrow.sol\":20051:20378  function updatePlatformFee(... */\n      jump\t// out\n        /* \"contracts/EtharisEscrow.sol\":20246:20279  if (oldFee == _newFeeBps) return; */\n    tag_783:\n        /* \"contracts/EtharisEscrow.sol\":20272:20279  return; */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/EtharisEscrow.sol\":20152:20194  if (_newFeeBps > 1000) revert FeeTooHigh() */\n    tag_781:\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      mload(0x40)\n      shl(0xe0, 0xcd4e6167)\n        /* \"contracts/EtharisEscrow.sol\":20182:20194  FeeTooHigh() */\n      dup2\n      mstore\n      0x04\n      swap1\n      revert\n        /* \"contracts/EtharisEscrow.sol\":20384:20755  function updateFeeRecipient(... */\n    tag_32:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      dup2\n      and\n      swap1\n        /* \"contracts/EtharisEscrow.sol\":20494:20521  _newRecipient == address(0) */\n      dup2\n      iszero\n        /* \"contracts/EtharisEscrow.sol\":20490:20546  if (_newRecipient == address(0)) revert InvalidAddress() */\n      tag_212\n      jumpi\n        /* \"contracts/EtharisEscrow.sol\":20580:20593  _feeRecipient */\n      0x03\n        /* \"contracts/EtharisEscrow.sol\":1810:1815  10000 */\n      sload\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      swap2\n      dup3\n      0x60\n      shr\n        /* \"contracts/EtharisEscrow.sol\":20607:20636  oldRecipient == _newRecipient */\n      swap1\n      dup2\n      eq\n        /* \"contracts/EtharisEscrow.sol\":20603:20645  if (oldRecipient == _newRecipient) return; */\n      tag_788\n      jumpi\n      sub(shl(0x60, 0x01), 0x01)\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      swap1\n      swap3\n      and\n      0x60\n      dup3\n      swap1\n      shl\n      not(0xffffffffffffffffffffffff)\n      and\n      or\n        /* \"contracts/EtharisEscrow.sol\":20580:20593  _feeRecipient */\n      0x03\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      sstore\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap4\n      dup5\n      and\n      dup2\n      mstore\n      swap3\n      swap1\n      swap2\n      and\n      0x20\n      dup4\n      add\n      mstore\n        /* \"contracts/EtharisEscrow.sol\":20700:20748  FeeRecipientUpdated(oldRecipient, _newRecipient) */\n      0xaaebcf1bfa00580e41d966056b48521fa9f202645c86d4ddf28113e617c1b1d3\n      swap2\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      swap1\n      dup2\n      swap1\n      dup2\n      add\n        /* \"contracts/EtharisEscrow.sol\":20700:20748  FeeRecipientUpdated(oldRecipient, _newRecipient) */\n      tag_785\n        /* \"contracts/EtharisEscrow.sol\":680:21968  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      jump\n        /* \"contracts/EtharisEscrow.sol\":20603:20645  if (oldRecipient == _newRecipient) return; */\n    tag_788:\n        /* \"contracts/EtharisEscrow.sol\":20638:20645  return; */\n      pop\n      pop\n      pop\n      jump\t// out\n    stop\n    data_a8eda418a66b2f5395d4a15b2f03de75b34fff39bb2e2a8b57f6be974d56e7b0 8531198e5d946af9a770d2eeba00258645e163142d835fe1b04e45f4db720f8b\n\n    auxdata: 0xa26469706673582212209f68eb11def6ace195be9b728ee01d2c0b4c80f5e7616afed9da57cff3c0c44164736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"abi_decode_address_fromMemory": {
									"entryPoint": 393,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"fun_grantRole": {
									"entryPoint": 414,
									"id": 257,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60a0601f6200309838819003918201601f1916830191906001600160401b038311848410176200017557816060928592604095865283398101031262000171576200004a8262000189565b9162000066826200005e6020840162000189565b920162000189565b60015f819055805460ff191690556001600160a01b0393841693909190841562000160578082161562000160578216156200014f57620000bd929360805260018060601b03199060601b1660fa176003556200019e565b505f8051602062003078833981519152805f5260026020526001825f20019181835493555191817fbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff5f80a4612e38908162000240823960805181818161039901528181610bb501528181610c200152818161125a0152818161176f01528181611cf401528181611fa101526121800152f35b825163e6c4247b60e01b8152600490fd5b835163e6c4247b60e01b8152600490fd5b5f80fd5b634e487b7160e01b5f52604160045260245ffd5b51906001600160a01b03821682036200017157565b6001600160a01b03165f8181527fef73bf2ac44f84561b5498839ab1c8c5a4dd99305d838aea0d76c5961778535c60205260408120549091905f80516020620030788339815191529060ff166200023a5780835260026020526040832082845260205260408320600160ff198254161790557f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d339380a4600190565b50509056fe6080806040526004361015610012575f80fd5b5f90813560e01c90816301ffc9a7146124bc5750806303f715da146123aa5780630e59a3951461220557806318cf2834146121ca5780631a1aaeed1461205f57806322dcd13e14612038578063248a9ca31461200b57806324d956c814611e3f5780632f2ff15d14611e01578063317b8c5b14611dcb57806336568abe14611d8357806338a1328714611bc15780633f4ba83a14611b2c5780634690484014611b0b5780634971716f1461191d5780635c975abb146118fa57806376492d3f1461185b5780638456cb591461180157806391d14854146117b857806395ccea671461173c5780639b1221ab146115e75780639f1cf42d1461110c5780639fad59b414611069578063a0a57dac14610d25578063a217fddf14610d09578063aed1505d14610c91578063d547741f14610c4f578063d6bc7c6314610c0a578063e39fff3814610a63578063e4abd4cb1461077a578063e7079180146105d6578063ef03c10e14610243578063f0c3cd20146101c35763f160d36914610194575f80fd5b346101c05760203660031901126101c0576101bd6101b06125b9565b6101b8612732565b612d54565b80f35b80fd5b50346101c05760208060031936011261023f576001600160a01b036101e66125b9565b16825260058152604082208054906101fd82612c94565b9280840191855280852094915b838310610223576040518061021f87826126b0565b0390f35b600182819261023189612bf5565b81520196019201919461020a565b5080fd5b50346101c05760603660031901126101c0576004356001600160401b03811161023f5761027490369060040161254e565b61027c6125a3565b6044359182151583036105d257610291612ab6565b610299612732565b6102a1612a72565b6040519060ff6008825193602081818601966102be81838a61266a565b81016004815203019020015460101c16156105c0576040519181516102e481858461266a565b8301600481526001846020828060a01b0396879403019020015416838516036105ae5760ff6008604051602081865161031e81838961266a565b81016004815203019020015416600681101561059a576003036105885760206103529160405180938192865192839161266a565b810160048152030190206001600160601b036006820154169183600183015416958483541692600860035491016004815461ff0085151560081b169061ffff1916171790557f00000000000000000000000000000000000000000000000000000000000000009589835f1461052957506113888602916001600160601b03831692830361051557899161271080940497886103ec91612b8d565b936104006001600160601b0384168a612b6f565b6001600160601b031604978861041591612b8d565b996001600160601b038b16928315159a6104bb997fea4ea4b4229888eeba3eb2772df89c52af23c7fe3d530b0c1f2ca146f32c12ba966060965f80516020612de38339815191529e610504575b50506001600160601b038816806104f3575b50506001600160601b038b1690816104df575b5050505b6001600160601b0361049c88612a52565b956040519715158852818d1660208901521660408701521693a3612a52565b604080516001600160601b0395861681529290941660208301529290a36001815580f35b6104eb92861c90612ba6565b5f8080610487565b6104fd9183612ba6565b5f80610474565b61050e9184612ba6565b8e5f610462565b634e487b7160e01b5f52601160045260245ffd5b915060607fea4ea4b4229888eeba3eb2772df89c52af23c7fe3d530b0c1f2ca146f32c12ba916104bb9697995f80516020612de383398151915299859b80969a81610577575b50505061048b565b61058092612ba6565b5f808061056f565b604051635e40b94f60e01b8152600490fd5b634e487b7160e01b87526021600452602487fd5b60405163ea8e4eb560e01b8152600490fd5b60405163223da47360e21b8152600490fd5b5f80fd5b50346101c05760203660031901126101c057600435906001600160401b0382116101c05761061f602061060c366004860161254e565b816040519382858094519384920161266a565b81016004815203019020600881015460ff8160101c16156105c05781546001830154600684015460078501546001600160a01b03928316959390921693909261066a60028201612bf5565b9461067760038301612bf5565b9061068460048401612bf5565b9260050161069190612bf5565b936040519889986101e0808b528a016106a99161268b565b9260208a015260408901526001600160601b03871660608901528660601c6001600160401b0316608089015260a088019060ff16906106e791612711565b86810360c08801526106f89161268b565b85810360e08701526107099161268b565b84810361010086015261071b9161268b565b918160401c6001600160401b031661012085015260a01c6001600160401b03166101408401526001600160401b0381166101608401528060801c6001600160401b031661018084015260c01c6101a08301526101c08201600190520390f35b50346101c05760c03660031901126101c0576001600160401b03600435818111610a5f576107ac90369060040161254e565b6107b46125a3565b6044356001600160a01b0381169391908490036105d257606435926001600160601b03841684036105d257826084351660843503610a5b5760a435838111610a575761080490369060040161254e565b9161080d612732565b610815612a72565b60ff6008604051602081865161082e8183858b0161266a565b81016004815203019020015460101c16610a45578515610a33576001600160a01b0316938415610a3357858514610a21576001600160601b03811615610a0f5742846084351611156109fd578251156109eb576109b06040927fceb1a488be98b2739817f21e7d3b0a343434519cd0fe4db3ef5fc27a96e8d29594610929855160208185516108c08183858a0161266a565b81016004815203019020916108d8846002850161290e565b82546001600160a01b03199081168b17845560018401805482168d1790556006840180549091166001600160601b0388161760843560601b67ffffffffffffffff60601b161790556003830161290e565b60088101805460ff191681556007820180546001600160c01b03164260c01b6001600160c01b03191617905560049190910180545f9190610969906128c0565b601f81116109cc575b50556201000062ff000019825416179055868952600560205261099781858b20612a0a565b87895260066020526109ab81858b20612a0a565b612a52565b936001600160601b03835192168252608435166020820152a480f35b818352602083206109e591601f0160051c8101906128f8565b5f610972565b6040516307e4dd0160e31b8152600490fd5b604051630642ce7760e01b8152600490fd5b604051635e85ae7360e01b8152600490fd5b6040516324da034560e21b8152600490fd5b60405163e6c4247b60e01b8152600490fd5b6040516338a6a80760e11b8152600490fd5b8680fd5b8580fd5b8280fd5b50346101c05760208060031936011261023f576001600160401b0390600435828111610c0657610a9790369060040161254e565b610a9f612ab6565b610aa7612732565b610aaf612a72565b60405160ff6008835192858181870195610aca81838961266a565b81016004815203019020015460101c16156105c05760ff600860405185818651610af581838961266a565b810160048152030190200154166006811015610bf2576001036105885782610b289160405180938192865192839161266a565b81016004815203019020926006840154908160601c16421115610be05760088401805460ff191660051790556001600160601b0316927fb559d285c87e4fa0f561388264310703ff0c6c454a39ae52d0ae94032ff0db7091610b92918580610ba3575b5050612a52565b916040519384523393a36001815580f35b9054610bd991906001600160a01b03167f0000000000000000000000000000000000000000000000000000000000000000612ba6565b5f85610b8b565b6040516302eb354360e41b8152600490fd5b634e487b7160e01b86526021600452602486fd5b8380fd5b50346101c057806003193601126101c0576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b50346101c05760403660031901126101c057610c8d600435610c6f6125a3565b908084526002602052610c8860016040862001546127ab565b61284b565b5080f35b50346101c05760208060031936011261023f576001600160a01b03610cb46125b9565b1682526006815260408220805490610ccb82612c94565b9280840191855280852094915b838310610ced576040518061021f87826126b0565b6001828192610cfb89612bf5565b815201960192019194610cd8565b50346101c057806003193601126101c057602090604051908152f35b50346101c05760203660031901126101c0576004356001600160401b03811161023f576020610d5b610de092369060040161254e565b836101e0604051610d6b81612511565b82815282858201526060604082015260608082015260606080820152606060a08201528260c08201528260e08201528261010082015282610120820152826101408201528261016082015282610180820152826101a0820152826101c08201520152816040519382858094519384920161266a565b8101600481520301902090600860405192610dfa84612511565b80546001600160a01b0390811685526001820154166020850152610e2060028201612bf5565b6040850152610e3160038201612bf5565b6060850152610e4260048201612bf5565b6080850152610e5360058201612bf5565b60a08501526001600160401b0360068201546001600160601b03811660c0870152818160601c1660e087015260a01c1661010085015260078101546001600160401b0381166101208601526001600160401b038160401c166101408601526001600160401b038160801c1661016086015260c01c610180850152015490600660ff8316101561105557508060ff8092166101a0840152818160081c1615156101c084015260101c1615156101e082015260405180916020825260018060a01b03815116602083015260018060a01b0360208201511660408301526101e0610f96610f4e6040840151610200606087015261022086019061268b565b610f81610f6d606086015192601f1993848983030160808a015261268b565b6080860151838883030160a089015261268b565b9060a0850151908683030160c087015261268b565b916001600160601b0360c08201511660e08501526001600160401b0360e0820151166101008501526001600160401b03610100820151166101208501526001600160401b03610120820151166101408501526001600160401b03610140820151166101608501526001600160401b03610160820151166101808501526001600160401b03610180820151166101a085015261103b6101a08201516101c0860190612711565b6101c0810151151582850152015115156102008301520390f35b634e487b7160e01b81526021600452602490fd5b50346101c05760403660031901126101c0576110836125b9565b60243580151581036105d257156110f3576001600160a01b031681526005602052604081205b80546110b481612c94565b918352602080842093908084015b8383106110d7576040518061021f87826126b0565b60018281926110e589612bf5565b8152019601920191946110c2565b6001600160a01b031681526006602052604081206110a9565b50346101c05760e03660031901126101c0576001600160401b03600435818111610a5f5761113e90369060040161254e565b906111476125a3565b90604435916001600160601b0383168093036115e35760843560ff8116809103610a5b57611173612ab6565b61117b612732565b611183612a72565b60405194859260ff6008858451602097816111a38a93848a019e8f61266a565b81016004815203019020015460101c16156105c0576040519282516111c981868b61266a565b840160048152848660018060a01b03968793030190205416978483168099036105ae5760ff60086040518881885161120281838961266a565b8101600481520301902001541660068110156115cf57610588578351156115bd5787156115ab576112418660069260405180938192895192839161266a565b81016004815203019020019186835460a01c16611599577f0000000000000000000000000000000000000000000000000000000000000000948516906040516370a0823160e01b81528a60048201528781602481865afa801561158e578a918d91611559575b5010611547578691831580159061153c575b8015611531575b61140f575b604051636eb1769f60e11b81526001600160a01b03909216600483015230602483015290925082908180604481015b03915afa80156114045787918a916113d3575b50106113c1576040516323b872dd60e01b8582015260248101889052306044820152606480820188905281529460a08601908111868210176113ad577f2c138f65913cd3b9ca6f36e4b59e26830a033a978ca69f935781972e6df1f61d9561139e9461137592604052612b0a565b805467ffffffffffffffff60a01b19164260a01b67ffffffffffffffff60a01b16179055612a52565b92604051908152a36001815580f35b634e487b7160e01b5f52604160045260245ffd5b6040516313be252b60e01b8152600490fd5b809250868092503d83116113fd575b6113ec818361252d565b810103126105d2578690515f611307565b503d6113e2565b6040513d8b823e3d90fd5b8092509290923b1561152d576040519063d505accf60e01b82528a60048301523060248301528960448301526064356064830152608482015260a43560a482015260c43560c48201528a8160e48183865af19081611505575b5061147f5760405163b78cb0dd60e01b8152600490fd5b604051636eb1769f60e11b81526001600160a01b03831660048201523060248201528681604481855afa80156114fa5789918c916114c9575b50106113c1576112f49186916112c5565b809250888092503d83116114f3575b6114e2818361252d565b810103126105d2578890515f6114b8565b503d6114d8565b6040513d8d823e3d90fd5b88819c929c1161151957604052995f611468565b634e487b7160e01b82526041600452602482fd5b8a80fd5b5060c43515156112c0565b5060a43515156112b9565b604051631e9acf1760e31b8152600490fd5b809250898092503d8311611587575b611572818361252d565b81010312611583578990515f6112a7565b8b80fd5b503d611568565b6040513d8e823e3d90fd5b604051631924fceb60e31b8152600490fd5b60405163162908e360e11b8152600490fd5b604051635f0be7af60e01b8152600490fd5b634e487b7160e01b8b52602160045260248bfd5b8480fd5b50346101c0576115f6366125cf565b906115ff612732565b611607612a72565b60405160ff60088351926020818187019561162381838961266a565b81016004815203019020015460101c16156105c057604051825161164881838561266a565b60049082019081528190036020019020600101546001600160a01b0393841693168390036105ae5760ff6008604051602081865161168781838961266a565b810160048152030190200154166006811015611728576105885760206116b89160405180938192865192839161266a565b81016004815203019020906001600160401b03600683015460a01c16156117165760086116f09201600160ff19825416179055612a52565b7ecaec7345d2eb04a42197ac2a2cd7cd74a00b2991b69bb53e23465d4092fdfb8380a380f35b6040516347510bbd60e11b8152600490fd5b634e487b7160e01b85526021600452602485fd5b50346101c05760403660031901126101c0576117566125b9565b602435611761612732565b6001600160a01b03918216917f00000000000000000000000000000000000000000000000000000000000000001682146117a65780156115ab576101bd913390612ba6565b6040516318ba2fc160e31b8152600490fd5b50346101c05760403660031901126101c05760ff60406020926117d96125a3565b6004358252600285528282206001600160a01b03909116825284522054604051911615158152f35b50346101c057806003193601126101c05761181a612732565b611822612a72565b600160ff19815416176001557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586020604051338152a180f35b50346101c05760203660031901126101c0576001600160401b03600435818111610a5f57602061060c61189292369060040161254e565b810160048152030190209060088201549160ff8360101c1692836118dc575b5060209350826118c8575b50506040519015158152f35b6007015460401c1642101590505f806118bc565b60ff919350169260068410156110555750600260209314915f6118b1565b50346101c057806003193601126101c057602060ff600154166040519015158152f35b50346101c05761192c36612610565b611937929192612732565b61193f612a72565b604051825160ff600860209384818189019561195c81838961266a565b81016004815203019020015460101c16156105c057604051845161198181838561266a565b600490820190815281900383019020600101546001600160a01b0395861695168590036105ae5760ff6008604051848188516119be81838961266a565b81016004815203019020015416600681101561059a5760010361058857816119f19160405180938192885192839161266a565b810160048152030190206001600160401b039081600682015460601c164211611af957835115611ae75760088101600260ff19825416179055600781019081546203f4804201804211611ad35792611aa9876004611ab4957f934109f661b65dbccffcae4f7ee04261eb7b36e5136e1ca86dde1b00598cb0319a98956fffffffffffffffff0000000000000000611ac99b9960401b1690874216906fffffffffffffffffffffffffffffffff1916171785550161290e565b5460401c1695612a52565b9460405193849360408552604085019061268b565b918301520390a380f35b634e487b7160e01b8a52601160045260248afd5b60405163361178c760e01b8152600490fd5b60405163764b8e3360e11b8152600490fd5b50346101c057806003193601126101c057602060035460601c604051908152f35b50346101c057806003193601126101c057611b45612732565b60015460ff811615611b855760ff19166001557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6020604051338152a180f35b60405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606490fd5b50346101c05760203660031901126101c0576001600160401b03600435818111610a5f57611bf390369060040161254e565b90611bfc612ab6565b611c04612732565b611c0c612a72565b60405160ff600884519260208181880195611c2881838961266a565b81016004815203019020015460101c16156105c05760ff60086040516020818751611c5481838961266a565b81016004815203019020015416600681101561172857600203610588576020611c889160405180938192875192839161266a565b8101600481520301902090600782015460401c164210611d71575f80516020612de38339815191526001600160601b03916104bb8360068301541691611ce261271086611cd9816003541687612b6f565b16048094612b8d565b60088201805460ff19166004179055947f00000000000000000000000000000000000000000000000000000000000000009080871680611d52575b50841680611d3b575b5050600101546001600160a01b031694612a52565b611d4b9160035460601c90612ba6565b5f80611d26565b6001840154611d6b91906001600160a01b031684612ba6565b5f611d1d565b604051632d6bf64560e01b8152600490fd5b50346101c05760403660031901126101c057611d9d6125a3565b336001600160a01b03821603611db957610c8d9060043561284b565b60405163334bd91960e11b8152600490fd5b50346101c05760203660031901126101c0576004356001600160601b038116810361023f576101bd90611dfc612732565b612cbb565b50346101c05760403660031901126101c057610c8d600435611e216125a3565b908084526002602052611e3a60016040862001546127ab565b6127cd565b50346101c057611e4e366125cf565b611e56612ab6565b611e5e612732565b611e66612a72565b60405160ff600884519260208181880195611e8281838961266a565b81016004815203019020015460101c16156105c05760206040518451611ea981838661266a565b8101600481528160018060a01b03938493849303019020541693168093036105ae5760ff60086040516020818851611ee281838a61266a565b810160048152030190200154166006811015610bf257600203610588576104bb611f2760205f80516020612de383398151915294604051809381928a5192839161266a565b810160048152030190209160016001600160601b03938460068201541694611f6361271082611f5a81600354168a612b6f565b16048097612b8d565b60088301805460ff1916600417905597611f7c8a612a52565b7ecaec7345d2eb04a42197ac2a2cd7cd74a00b2991b69bb53e23465d4092fdfb8c80a37f00000000000000000000000000000000000000000000000000000000000000009080891680611ff5575b50861680611fde575b505001541694612a52565b611fee9160035460601c90612ba6565b5f80611fd3565b6120059086868601541684612ba6565b5f611fca565b50346101c05760203660031901126101c05760016040602092600435815260028452200154604051908152f35b50346101c057806003193601126101c05760206001600160601b0360035416604051908152f35b50346101c05760203660031901126101c0576004356001600160401b03811161023f5761209090369060040161254e565b612098612ab6565b6120a0612732565b60405160ff6008835192602081818701956120bc81838961266a565b81016004815203019020015460101c16156105c05760206120e89160405180938192865192839161266a565b8101600481520301902090600882019081549260ff84166006811015610bf257600181036121ab575b5061213b9260056001600160601b036006840154169560ff1916179055838061216e575050612a52565b6040519182527fb559d285c87e4fa0f561388264310703ff0c6c454a39ae52d0ae94032ff0db7060203393a36001815580f35b90546121a491906001600160a01b03167f0000000000000000000000000000000000000000000000000000000000000000612ba6565b5f83610b8b565b6002036121b8575f612111565b6040516304df0cad60e31b8152600490fd5b50346101c057806003193601126101c05760206040517fa8a7bc421f721cb936ea99efdad79237e6ee0b871a2a08cf648691f9584cdc778152f35b50346101c05761221436612610565b909161221e612732565b612226612a72565b60405191815160ff600860209586818188019561224481838961266a565b81016004815203019020015460101c16156105c057604051835161226981838561266a565b600490820190815281900385019020546001600160a01b0395861695168590036105ae5760ff6008604051868187516122a381838961266a565b81016004815203019020015416600681101561059a5760020361058857836122d69160405180938192875192839161266a565b8101600481520301902060078101926001600160401b03845460401c1642101561239857825115612386577fde7b01bef0884582ce204f7f920e57f99dd569f93867450872f436be5a03c7559361234284600585600861236b9701600360ff198254161790550161290e565b805467ffffffffffffffff60801b19164260801b67ffffffffffffffff60801b16179055612a52565b9261238060405192828493845283019061268b565b0390a380f35b60405163bc7fd33160e01b8152600490fd5b604051632d0f572d60e11b8152600490fd5b50346101c0576123b9366125cf565b906123c2612732565b60405190805160ff60086020948581818701956123e081838961266a565b81016004815203019020015460101c16156105c057604051825161240581838561266a565b600490820190815281900384019020546001600160a01b0394851694168490036105ae5760ff60086040518581865161243f81838961266a565b810160048152030190200154166006811015610bf257610588577fb559d285c87e4fa0f561388264310703ff0c6c454a39ae52d0ae94032ff0db70916008612496856124b19460405180938192875192839161266a565b8101600481520301902001600560ff19825416179055612a52565b91604051858152a380f35b90503461023f57602036600319011261023f5760043563ffffffff60e01b8116809103610a5f5760209250637965db0b60e01b8114908115612500575b5015158152f35b6301ffc9a760e01b1490505f6124f9565b61020081019081106001600160401b038211176113ad57604052565b90601f801991011681019081106001600160401b038211176113ad57604052565b81601f820112156105d2578035906001600160401b0382116113ad5760405192612582601f8401601f19166020018561252d565b828452602083830101116105d257815f926020809301838601378301015290565b602435906001600160a01b03821682036105d257565b600435906001600160a01b03821682036105d257565b60406003198201126105d257600435906001600160401b0382116105d2576125f99160040161254e565b906024356001600160a01b03811681036105d25790565b60606003198201126105d2576001600160401b03916004358381116105d2578261263c9160040161254e565b926024356001600160a01b03811681036105d257926044359182116105d2576126679160040161254e565b90565b5f5b83811061267b5750505f910152565b818101518382015260200161266c565b906020916126a48151809281855285808601910161266a565b601f01601f1916010190565b602080820190808352835180925260408301928160408460051b8301019501935f915b8483106126e35750505050505090565b9091929394958480612701600193603f198682030187528a5161268b565b98019301930191949392906126d3565b90600682101561271e5752565b634e487b7160e01b5f52602160045260245ffd5b335f9081527fef73bf2ac44f84561b5498839ab1c8c5a4dd99305d838aea0d76c5961778535c60205260409020547fa8a7bc421f721cb936ea99efdad79237e6ee0b871a2a08cf648691f9584cdc779060ff161561278d5750565b6044906040519063e2517d3f60e01b82523360048301526024820152fd5b805f52600260205260405f20335f5260205260ff60405f2054161561278d5750565b905f918083526002602052604083209160018060a01b03169182845260205260ff604084205416155f146128465780835260026020526040832082845260205260408320600160ff198254161790557f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d339380a4600190565b505090565b905f918083526002602052604083209160018060a01b03169182845260205260ff6040842054165f14612846578083526002602052604083208284526020526040832060ff1981541690557ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b339380a4600190565b90600182811c921680156128ee575b60208310146128da57565b634e487b7160e01b5f52602260045260245ffd5b91607f16916128cf565b818110612903575050565b5f81556001016128f8565b91909182516001600160401b0381116113ad5761292b82546128c0565b601f81116129cf575b50602080601f831160011461296f5750819293945f92612964575b50508160011b915f199060031b1c1916179055565b015190505f8061294f565b90601f19831695845f52825f20925f905b8882106129b75750508360019596971061299f575b505050811b019055565b01515f1960f88460031b161c191690555f8080612995565b80600185968294968601518155019501930190612980565b6129fa90835f5260205f20601f840160051c81019160208510612a00575b601f0160051c01906128f8565b5f612934565b90915081906129ed565b908154680100000000000000008110156113ad5760018101808455811015612a3e57612a3c925f5260205f200161290e565b565b634e487b7160e01b5f52603260045260245ffd5b612a6a9060206040519282848094519384920161266a565b810103902090565b60ff60015416612a7e57565b60405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606490fd5b60025f5414612ac55760025f55565b60405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606490fd5b905f602091828151910182855af115612b64575f513d612b5b57506001600160a01b0381163b155b612b395750565b604051635274afe760e01b81526001600160a01b039091166004820152602490fd5b60011415612b32565b6040513d5f823e3d90fd5b9190916001600160601b038080941691160291821691820361051557565b6001600160601b03918216908216039190821161051557565b60405163a9059cbb60e01b60208201526001600160a01b03909216602483015260448083019390935291815260808101916001600160401b038311828410176113ad57612a3c92604052612b0a565b9060405191825f825492612c08846128c0565b9081845260019485811690815f14612c715750600114612c31575b5050612a3c9250038361252d565b909391505f52602090815f20935f915b818310612c59575050612a3c93508201015f80612c23565b85548884018501529485019487945091830191612c41565b915050612a3c94506020925060ff191682840152151560051b8201015f80612c23565b906001600160401b0382116113ad5760405191612cb760208260051b018461252d565b8252565b6001600160601b03908181166103e88111612d425760035492831690808214612d3c576bffffffffffffffffffffffff1990931692909217600355604080516001600160601b0393841681529190921660208201527ffeeddf72b7ee4210b769104cb8b071e5706232ac7f671fb292af429ffd58b58791819081015b0390a1565b50505050565b60405163cd4e616760e01b8152600490fd5b6001600160a01b038116908115610a3357600354918260601c908114612ddd576001600160601b03909216606082901b6bffffffffffffffffffffffff191617600355604080516001600160a01b0393841681529290911660208301527faaebcf1bfa00580e41d966056b48521fa9f202645c86d4ddf28113e617c1b1d3919081908101612d37565b50505056fe8531198e5d946af9a770d2eeba00258645e163142d835fe1b04e45f4db720f8ba26469706673582212209f68eb11def6ace195be9b728ee01d2c0b4c80f5e7616afed9da57cff3c0c44164736f6c63430008140033a8a7bc421f721cb936ea99efdad79237e6ee0b871a2a08cf648691f9584cdc77",
							"opcodes": "PUSH1 0xA0 PUSH1 0x1F PUSH3 0x3098 CODESIZE DUP2 SWAP1 SUB SWAP2 DUP3 ADD PUSH1 0x1F NOT AND DUP4 ADD SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT DUP5 DUP5 LT OR PUSH3 0x175 JUMPI DUP2 PUSH1 0x60 SWAP3 DUP6 SWAP3 PUSH1 0x40 SWAP6 DUP7 MSTORE DUP4 CODECOPY DUP2 ADD SUB SLT PUSH3 0x171 JUMPI PUSH3 0x4A DUP3 PUSH3 0x189 JUMP JUMPDEST SWAP2 PUSH3 0x66 DUP3 PUSH3 0x5E PUSH1 0x20 DUP5 ADD PUSH3 0x189 JUMP JUMPDEST SWAP3 ADD PUSH3 0x189 JUMP JUMPDEST PUSH1 0x1 PUSH0 DUP2 SWAP1 SSTORE DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND SWAP4 SWAP1 SWAP2 SWAP1 DUP5 ISZERO PUSH3 0x160 JUMPI DUP1 DUP3 AND ISZERO PUSH3 0x160 JUMPI DUP3 AND ISZERO PUSH3 0x14F JUMPI PUSH3 0xBD SWAP3 SWAP4 PUSH1 0x80 MSTORE PUSH1 0x1 DUP1 PUSH1 0x60 SHL SUB NOT SWAP1 PUSH1 0x60 SHL AND PUSH1 0xFA OR PUSH1 0x3 SSTORE PUSH3 0x19E JUMP JUMPDEST POP PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x3078 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x1 DUP3 PUSH0 KECCAK256 ADD SWAP2 DUP2 DUP4 SLOAD SWAP4 SSTORE MLOAD SWAP2 DUP2 PUSH32 0xBD79B86FFE0AB8E8776151514217CD7CACD52C909F66475C3AF44E129F0B00FF PUSH0 DUP1 LOG4 PUSH2 0x2E38 SWAP1 DUP2 PUSH3 0x240 DUP3 CODECOPY PUSH1 0x80 MLOAD DUP2 DUP2 DUP2 PUSH2 0x399 ADD MSTORE DUP2 DUP2 PUSH2 0xBB5 ADD MSTORE DUP2 DUP2 PUSH2 0xC20 ADD MSTORE DUP2 DUP2 PUSH2 0x125A ADD MSTORE DUP2 DUP2 PUSH2 0x176F ADD MSTORE DUP2 DUP2 PUSH2 0x1CF4 ADD MSTORE DUP2 DUP2 PUSH2 0x1FA1 ADD MSTORE PUSH2 0x2180 ADD MSTORE RETURN JUMPDEST DUP3 MLOAD PUSH4 0xE6C4247B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST DUP4 MLOAD PUSH4 0xE6C4247B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH3 0x171 JUMPI JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 DUP2 DUP2 MSTORE PUSH32 0xEF73BF2AC44F84561B5498839AB1C8C5A4DD99305D838AEA0D76C5961778535C PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x3078 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0xFF AND PUSH3 0x23A JUMPI DUP1 DUP4 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D CALLER SWAP4 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST POP POP SWAP1 JUMP INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 SWAP1 DUP2 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x1FFC9A7 EQ PUSH2 0x24BC JUMPI POP DUP1 PUSH4 0x3F715DA EQ PUSH2 0x23AA JUMPI DUP1 PUSH4 0xE59A395 EQ PUSH2 0x2205 JUMPI DUP1 PUSH4 0x18CF2834 EQ PUSH2 0x21CA JUMPI DUP1 PUSH4 0x1A1AAEED EQ PUSH2 0x205F JUMPI DUP1 PUSH4 0x22DCD13E EQ PUSH2 0x2038 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x200B JUMPI DUP1 PUSH4 0x24D956C8 EQ PUSH2 0x1E3F JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x1E01 JUMPI DUP1 PUSH4 0x317B8C5B EQ PUSH2 0x1DCB JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x1D83 JUMPI DUP1 PUSH4 0x38A13287 EQ PUSH2 0x1BC1 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x1B2C JUMPI DUP1 PUSH4 0x46904840 EQ PUSH2 0x1B0B JUMPI DUP1 PUSH4 0x4971716F EQ PUSH2 0x191D JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x18FA JUMPI DUP1 PUSH4 0x76492D3F EQ PUSH2 0x185B JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x1801 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x17B8 JUMPI DUP1 PUSH4 0x95CCEA67 EQ PUSH2 0x173C JUMPI DUP1 PUSH4 0x9B1221AB EQ PUSH2 0x15E7 JUMPI DUP1 PUSH4 0x9F1CF42D EQ PUSH2 0x110C JUMPI DUP1 PUSH4 0x9FAD59B4 EQ PUSH2 0x1069 JUMPI DUP1 PUSH4 0xA0A57DAC EQ PUSH2 0xD25 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0xD09 JUMPI DUP1 PUSH4 0xAED1505D EQ PUSH2 0xC91 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0xC4F JUMPI DUP1 PUSH4 0xD6BC7C63 EQ PUSH2 0xC0A JUMPI DUP1 PUSH4 0xE39FFF38 EQ PUSH2 0xA63 JUMPI DUP1 PUSH4 0xE4ABD4CB EQ PUSH2 0x77A JUMPI DUP1 PUSH4 0xE7079180 EQ PUSH2 0x5D6 JUMPI DUP1 PUSH4 0xEF03C10E EQ PUSH2 0x243 JUMPI DUP1 PUSH4 0xF0C3CD20 EQ PUSH2 0x1C3 JUMPI PUSH4 0xF160D369 EQ PUSH2 0x194 JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1C0 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C0 JUMPI PUSH2 0x1BD PUSH2 0x1B0 PUSH2 0x25B9 JUMP JUMPDEST PUSH2 0x1B8 PUSH2 0x2732 JUMP JUMPDEST PUSH2 0x2D54 JUMP JUMPDEST DUP1 RETURN JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1C0 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x23F JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x1E6 PUSH2 0x25B9 JUMP JUMPDEST AND DUP3 MSTORE PUSH1 0x5 DUP2 MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP1 SLOAD SWAP1 PUSH2 0x1FD DUP3 PUSH2 0x2C94 JUMP JUMPDEST SWAP3 DUP1 DUP5 ADD SWAP2 DUP6 MSTORE DUP1 DUP6 KECCAK256 SWAP5 SWAP2 JUMPDEST DUP4 DUP4 LT PUSH2 0x223 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH2 0x21F DUP8 DUP3 PUSH2 0x26B0 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 DUP3 DUP2 SWAP3 PUSH2 0x231 DUP10 PUSH2 0x2BF5 JUMP JUMPDEST DUP2 MSTORE ADD SWAP7 ADD SWAP3 ADD SWAP2 SWAP5 PUSH2 0x20A JUMP JUMPDEST POP DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1C0 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C0 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x23F JUMPI PUSH2 0x274 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x254E JUMP JUMPDEST PUSH2 0x27C PUSH2 0x25A3 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP2 DUP3 ISZERO ISZERO DUP4 SUB PUSH2 0x5D2 JUMPI PUSH2 0x291 PUSH2 0x2AB6 JUMP JUMPDEST PUSH2 0x299 PUSH2 0x2732 JUMP JUMPDEST PUSH2 0x2A1 PUSH2 0x2A72 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH1 0xFF PUSH1 0x8 DUP3 MLOAD SWAP4 PUSH1 0x20 DUP2 DUP2 DUP7 ADD SWAP7 PUSH2 0x2BE DUP2 DUP4 DUP11 PUSH2 0x266A JUMP JUMPDEST DUP2 ADD PUSH1 0x4 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 ADD SLOAD PUSH1 0x10 SHR AND ISZERO PUSH2 0x5C0 JUMPI PUSH1 0x40 MLOAD SWAP2 DUP2 MLOAD PUSH2 0x2E4 DUP2 DUP6 DUP5 PUSH2 0x266A JUMP JUMPDEST DUP4 ADD PUSH1 0x4 DUP2 MSTORE PUSH1 0x1 DUP5 PUSH1 0x20 DUP3 DUP1 PUSH1 0xA0 SHL SUB SWAP7 DUP8 SWAP5 SUB ADD SWAP1 KECCAK256 ADD SLOAD AND DUP4 DUP6 AND SUB PUSH2 0x5AE JUMPI PUSH1 0xFF PUSH1 0x8 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP7 MLOAD PUSH2 0x31E DUP2 DUP4 DUP10 PUSH2 0x266A JUMP JUMPDEST DUP2 ADD PUSH1 0x4 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 ADD SLOAD AND PUSH1 0x6 DUP2 LT ISZERO PUSH2 0x59A JUMPI PUSH1 0x3 SUB PUSH2 0x588 JUMPI PUSH1 0x20 PUSH2 0x352 SWAP2 PUSH1 0x40 MLOAD DUP1 SWAP4 DUP2 SWAP3 DUP7 MLOAD SWAP3 DUP4 SWAP2 PUSH2 0x266A JUMP JUMPDEST DUP2 ADD PUSH1 0x4 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0x6 DUP3 ADD SLOAD AND SWAP2 DUP4 PUSH1 0x1 DUP4 ADD SLOAD AND SWAP6 DUP5 DUP4 SLOAD AND SWAP3 PUSH1 0x8 PUSH1 0x3 SLOAD SWAP2 ADD PUSH1 0x4 DUP2 SLOAD PUSH2 0xFF00 DUP6 ISZERO ISZERO PUSH1 0x8 SHL AND SWAP1 PUSH2 0xFFFF NOT AND OR OR SWAP1 SSTORE PUSH32 0x0 SWAP6 DUP10 DUP4 PUSH0 EQ PUSH2 0x529 JUMPI POP PUSH2 0x1388 DUP7 MUL SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP4 AND SWAP3 DUP4 SUB PUSH2 0x515 JUMPI DUP10 SWAP2 PUSH2 0x2710 DUP1 SWAP5 DIV SWAP8 DUP9 PUSH2 0x3EC SWAP2 PUSH2 0x2B8D JUMP JUMPDEST SWAP4 PUSH2 0x400 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP5 AND DUP11 PUSH2 0x2B6F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND DIV SWAP8 DUP9 PUSH2 0x415 SWAP2 PUSH2 0x2B8D JUMP JUMPDEST SWAP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP12 AND SWAP3 DUP4 ISZERO ISZERO SWAP11 PUSH2 0x4BB SWAP10 PUSH32 0xEA4EA4B4229888EEBA3EB2772DF89C52AF23C7FE3D530B0C1F2CA146F32C12BA SWAP7 PUSH1 0x60 SWAP7 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2DE3 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP15 PUSH2 0x504 JUMPI JUMPDEST POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP9 AND DUP1 PUSH2 0x4F3 JUMPI JUMPDEST POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP12 AND SWAP1 DUP2 PUSH2 0x4DF JUMPI JUMPDEST POP POP POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH2 0x49C DUP9 PUSH2 0x2A52 JUMP JUMPDEST SWAP6 PUSH1 0x40 MLOAD SWAP8 ISZERO ISZERO DUP9 MSTORE DUP2 DUP14 AND PUSH1 0x20 DUP10 ADD MSTORE AND PUSH1 0x40 DUP8 ADD MSTORE AND SWAP4 LOG3 PUSH2 0x2A52 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB SWAP6 DUP7 AND DUP2 MSTORE SWAP3 SWAP1 SWAP5 AND PUSH1 0x20 DUP4 ADD MSTORE SWAP3 SWAP1 LOG3 PUSH1 0x1 DUP2 SSTORE DUP1 RETURN JUMPDEST PUSH2 0x4EB SWAP3 DUP7 SHR SWAP1 PUSH2 0x2BA6 JUMP JUMPDEST PUSH0 DUP1 DUP1 PUSH2 0x487 JUMP JUMPDEST PUSH2 0x4FD SWAP2 DUP4 PUSH2 0x2BA6 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x474 JUMP JUMPDEST PUSH2 0x50E SWAP2 DUP5 PUSH2 0x2BA6 JUMP JUMPDEST DUP15 PUSH0 PUSH2 0x462 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP2 POP PUSH1 0x60 PUSH32 0xEA4EA4B4229888EEBA3EB2772DF89C52AF23C7FE3D530B0C1F2CA146F32C12BA SWAP2 PUSH2 0x4BB SWAP7 SWAP8 SWAP10 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2DE3 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP10 DUP6 SWAP12 DUP1 SWAP7 SWAP11 DUP2 PUSH2 0x577 JUMPI JUMPDEST POP POP POP PUSH2 0x48B JUMP JUMPDEST PUSH2 0x580 SWAP3 PUSH2 0x2BA6 JUMP JUMPDEST PUSH0 DUP1 DUP1 PUSH2 0x56F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x5E40B94F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP8 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 DUP8 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xEA8E4EB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x223DA473 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1C0 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C0 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x1C0 JUMPI PUSH2 0x61F PUSH1 0x20 PUSH2 0x60C CALLDATASIZE PUSH1 0x4 DUP7 ADD PUSH2 0x254E JUMP JUMPDEST DUP2 PUSH1 0x40 MLOAD SWAP4 DUP3 DUP6 DUP1 SWAP5 MLOAD SWAP4 DUP5 SWAP3 ADD PUSH2 0x266A JUMP JUMPDEST DUP2 ADD PUSH1 0x4 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 PUSH1 0x8 DUP2 ADD SLOAD PUSH1 0xFF DUP2 PUSH1 0x10 SHR AND ISZERO PUSH2 0x5C0 JUMPI DUP2 SLOAD PUSH1 0x1 DUP4 ADD SLOAD PUSH1 0x6 DUP5 ADD SLOAD PUSH1 0x7 DUP6 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP6 SWAP4 SWAP1 SWAP3 AND SWAP4 SWAP1 SWAP3 PUSH2 0x66A PUSH1 0x2 DUP3 ADD PUSH2 0x2BF5 JUMP JUMPDEST SWAP5 PUSH2 0x677 PUSH1 0x3 DUP4 ADD PUSH2 0x2BF5 JUMP JUMPDEST SWAP1 PUSH2 0x684 PUSH1 0x4 DUP5 ADD PUSH2 0x2BF5 JUMP JUMPDEST SWAP3 PUSH1 0x5 ADD PUSH2 0x691 SWAP1 PUSH2 0x2BF5 JUMP JUMPDEST SWAP4 PUSH1 0x40 MLOAD SWAP9 DUP10 SWAP9 PUSH2 0x1E0 DUP1 DUP12 MSTORE DUP11 ADD PUSH2 0x6A9 SWAP2 PUSH2 0x268B JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP11 ADD MSTORE PUSH1 0x40 DUP10 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP8 AND PUSH1 0x60 DUP10 ADD MSTORE DUP7 PUSH1 0x60 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x80 DUP10 ADD MSTORE PUSH1 0xA0 DUP9 ADD SWAP1 PUSH1 0xFF AND SWAP1 PUSH2 0x6E7 SWAP2 PUSH2 0x2711 JUMP JUMPDEST DUP7 DUP2 SUB PUSH1 0xC0 DUP9 ADD MSTORE PUSH2 0x6F8 SWAP2 PUSH2 0x268B JUMP JUMPDEST DUP6 DUP2 SUB PUSH1 0xE0 DUP8 ADD MSTORE PUSH2 0x709 SWAP2 PUSH2 0x268B JUMP JUMPDEST DUP5 DUP2 SUB PUSH2 0x100 DUP7 ADD MSTORE PUSH2 0x71B SWAP2 PUSH2 0x268B JUMP JUMPDEST SWAP2 DUP2 PUSH1 0x40 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH2 0x120 DUP6 ADD MSTORE PUSH1 0xA0 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH2 0x140 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 AND PUSH2 0x160 DUP5 ADD MSTORE DUP1 PUSH1 0x80 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH2 0x180 DUP5 ADD MSTORE PUSH1 0xC0 SHR PUSH2 0x1A0 DUP4 ADD MSTORE PUSH2 0x1C0 DUP3 ADD PUSH1 0x1 SWAP1 MSTORE SUB SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x1C0 JUMPI PUSH1 0xC0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C0 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x4 CALLDATALOAD DUP2 DUP2 GT PUSH2 0xA5F JUMPI PUSH2 0x7AC SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x254E JUMP JUMPDEST PUSH2 0x7B4 PUSH2 0x25A3 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP4 SWAP2 SWAP1 DUP5 SWAP1 SUB PUSH2 0x5D2 JUMPI PUSH1 0x64 CALLDATALOAD SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP5 AND DUP5 SUB PUSH2 0x5D2 JUMPI DUP3 PUSH1 0x84 CALLDATALOAD AND PUSH1 0x84 CALLDATALOAD SUB PUSH2 0xA5B JUMPI PUSH1 0xA4 CALLDATALOAD DUP4 DUP2 GT PUSH2 0xA57 JUMPI PUSH2 0x804 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x254E JUMP JUMPDEST SWAP2 PUSH2 0x80D PUSH2 0x2732 JUMP JUMPDEST PUSH2 0x815 PUSH2 0x2A72 JUMP JUMPDEST PUSH1 0xFF PUSH1 0x8 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP7 MLOAD PUSH2 0x82E DUP2 DUP4 DUP6 DUP12 ADD PUSH2 0x266A JUMP JUMPDEST DUP2 ADD PUSH1 0x4 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 ADD SLOAD PUSH1 0x10 SHR AND PUSH2 0xA45 JUMPI DUP6 ISZERO PUSH2 0xA33 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP4 DUP5 ISZERO PUSH2 0xA33 JUMPI DUP6 DUP6 EQ PUSH2 0xA21 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP2 AND ISZERO PUSH2 0xA0F JUMPI TIMESTAMP DUP5 PUSH1 0x84 CALLDATALOAD AND GT ISZERO PUSH2 0x9FD JUMPI DUP3 MLOAD ISZERO PUSH2 0x9EB JUMPI PUSH2 0x9B0 PUSH1 0x40 SWAP3 PUSH32 0xCEB1A488BE98B2739817F21E7D3B0A343434519CD0FE4DB3EF5FC27A96E8D295 SWAP5 PUSH2 0x929 DUP6 MLOAD PUSH1 0x20 DUP2 DUP6 MLOAD PUSH2 0x8C0 DUP2 DUP4 DUP6 DUP11 ADD PUSH2 0x266A JUMP JUMPDEST DUP2 ADD PUSH1 0x4 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 SWAP2 PUSH2 0x8D8 DUP5 PUSH1 0x2 DUP6 ADD PUSH2 0x290E JUMP JUMPDEST DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND DUP12 OR DUP5 SSTORE PUSH1 0x1 DUP5 ADD DUP1 SLOAD DUP3 AND DUP14 OR SWAP1 SSTORE PUSH1 0x6 DUP5 ADD DUP1 SLOAD SWAP1 SWAP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP9 AND OR PUSH1 0x84 CALLDATALOAD PUSH1 0x60 SHL PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x60 SHL AND OR SWAP1 SSTORE PUSH1 0x3 DUP4 ADD PUSH2 0x290E JUMP JUMPDEST PUSH1 0x8 DUP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND DUP2 SSTORE PUSH1 0x7 DUP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xC0 SHL SUB AND TIMESTAMP PUSH1 0xC0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xC0 SHL SUB NOT AND OR SWAP1 SSTORE PUSH1 0x4 SWAP2 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH0 SWAP2 SWAP1 PUSH2 0x969 SWAP1 PUSH2 0x28C0 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x9CC JUMPI JUMPDEST POP SSTORE PUSH3 0x10000 PUSH3 0xFF0000 NOT DUP3 SLOAD AND OR SWAP1 SSTORE DUP7 DUP10 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH2 0x997 DUP2 DUP6 DUP12 KECCAK256 PUSH2 0x2A0A JUMP JUMPDEST DUP8 DUP10 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH2 0x9AB DUP2 DUP6 DUP12 KECCAK256 PUSH2 0x2A0A JUMP JUMPDEST PUSH2 0x2A52 JUMP JUMPDEST SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP4 MLOAD SWAP3 AND DUP3 MSTORE PUSH1 0x84 CALLDATALOAD AND PUSH1 0x20 DUP3 ADD MSTORE LOG4 DUP1 RETURN JUMPDEST DUP2 DUP4 MSTORE PUSH1 0x20 DUP4 KECCAK256 PUSH2 0x9E5 SWAP2 PUSH1 0x1F ADD PUSH1 0x5 SHR DUP2 ADD SWAP1 PUSH2 0x28F8 JUMP JUMPDEST PUSH0 PUSH2 0x972 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x7E4DD01 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x642CE77 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x5E85AE73 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x24DA0345 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xE6C4247B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x38A6A807 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST DUP7 DUP1 REVERT JUMPDEST DUP6 DUP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1C0 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x23F JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 PUSH1 0x4 CALLDATALOAD DUP3 DUP2 GT PUSH2 0xC06 JUMPI PUSH2 0xA97 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x254E JUMP JUMPDEST PUSH2 0xA9F PUSH2 0x2AB6 JUMP JUMPDEST PUSH2 0xAA7 PUSH2 0x2732 JUMP JUMPDEST PUSH2 0xAAF PUSH2 0x2A72 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF PUSH1 0x8 DUP4 MLOAD SWAP3 DUP6 DUP2 DUP2 DUP8 ADD SWAP6 PUSH2 0xACA DUP2 DUP4 DUP10 PUSH2 0x266A JUMP JUMPDEST DUP2 ADD PUSH1 0x4 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 ADD SLOAD PUSH1 0x10 SHR AND ISZERO PUSH2 0x5C0 JUMPI PUSH1 0xFF PUSH1 0x8 PUSH1 0x40 MLOAD DUP6 DUP2 DUP7 MLOAD PUSH2 0xAF5 DUP2 DUP4 DUP10 PUSH2 0x266A JUMP JUMPDEST DUP2 ADD PUSH1 0x4 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 ADD SLOAD AND PUSH1 0x6 DUP2 LT ISZERO PUSH2 0xBF2 JUMPI PUSH1 0x1 SUB PUSH2 0x588 JUMPI DUP3 PUSH2 0xB28 SWAP2 PUSH1 0x40 MLOAD DUP1 SWAP4 DUP2 SWAP3 DUP7 MLOAD SWAP3 DUP4 SWAP2 PUSH2 0x266A JUMP JUMPDEST DUP2 ADD PUSH1 0x4 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 SWAP3 PUSH1 0x6 DUP5 ADD SLOAD SWAP1 DUP2 PUSH1 0x60 SHR AND TIMESTAMP GT ISZERO PUSH2 0xBE0 JUMPI PUSH1 0x8 DUP5 ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x5 OR SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND SWAP3 PUSH32 0xB559D285C87E4FA0F561388264310703FF0C6C454A39AE52D0AE94032FF0DB70 SWAP2 PUSH2 0xB92 SWAP2 DUP6 DUP1 PUSH2 0xBA3 JUMPI JUMPDEST POP POP PUSH2 0x2A52 JUMP JUMPDEST SWAP2 PUSH1 0x40 MLOAD SWAP4 DUP5 MSTORE CALLER SWAP4 LOG3 PUSH1 0x1 DUP2 SSTORE DUP1 RETURN JUMPDEST SWAP1 SLOAD PUSH2 0xBD9 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x0 PUSH2 0x2BA6 JUMP JUMPDEST PUSH0 DUP6 PUSH2 0xB8B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x2EB3543 PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP7 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 DUP7 REVERT JUMPDEST DUP4 DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1C0 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1C0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x1C0 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C0 JUMPI PUSH2 0xC8D PUSH1 0x4 CALLDATALOAD PUSH2 0xC6F PUSH2 0x25A3 JUMP JUMPDEST SWAP1 DUP1 DUP5 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH2 0xC88 PUSH1 0x1 PUSH1 0x40 DUP7 KECCAK256 ADD SLOAD PUSH2 0x27AB JUMP JUMPDEST PUSH2 0x284B JUMP JUMPDEST POP DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x1C0 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x23F JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xCB4 PUSH2 0x25B9 JUMP JUMPDEST AND DUP3 MSTORE PUSH1 0x6 DUP2 MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP1 SLOAD SWAP1 PUSH2 0xCCB DUP3 PUSH2 0x2C94 JUMP JUMPDEST SWAP3 DUP1 DUP5 ADD SWAP2 DUP6 MSTORE DUP1 DUP6 KECCAK256 SWAP5 SWAP2 JUMPDEST DUP4 DUP4 LT PUSH2 0xCED JUMPI PUSH1 0x40 MLOAD DUP1 PUSH2 0x21F DUP8 DUP3 PUSH2 0x26B0 JUMP JUMPDEST PUSH1 0x1 DUP3 DUP2 SWAP3 PUSH2 0xCFB DUP10 PUSH2 0x2BF5 JUMP JUMPDEST DUP2 MSTORE ADD SWAP7 ADD SWAP3 ADD SWAP2 SWAP5 PUSH2 0xCD8 JUMP JUMPDEST POP CALLVALUE PUSH2 0x1C0 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1C0 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1C0 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C0 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x23F JUMPI PUSH1 0x20 PUSH2 0xD5B PUSH2 0xDE0 SWAP3 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x254E JUMP JUMPDEST DUP4 PUSH2 0x1E0 PUSH1 0x40 MLOAD PUSH2 0xD6B DUP2 PUSH2 0x2511 JUMP JUMPDEST DUP3 DUP2 MSTORE DUP3 DUP6 DUP3 ADD MSTORE PUSH1 0x60 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP1 DUP3 ADD MSTORE PUSH1 0x60 PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x60 PUSH1 0xA0 DUP3 ADD MSTORE DUP3 PUSH1 0xC0 DUP3 ADD MSTORE DUP3 PUSH1 0xE0 DUP3 ADD MSTORE DUP3 PUSH2 0x100 DUP3 ADD MSTORE DUP3 PUSH2 0x120 DUP3 ADD MSTORE DUP3 PUSH2 0x140 DUP3 ADD MSTORE DUP3 PUSH2 0x160 DUP3 ADD MSTORE DUP3 PUSH2 0x180 DUP3 ADD MSTORE DUP3 PUSH2 0x1A0 DUP3 ADD MSTORE DUP3 PUSH2 0x1C0 DUP3 ADD MSTORE ADD MSTORE DUP2 PUSH1 0x40 MLOAD SWAP4 DUP3 DUP6 DUP1 SWAP5 MLOAD SWAP4 DUP5 SWAP3 ADD PUSH2 0x266A JUMP JUMPDEST DUP2 ADD PUSH1 0x4 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 SWAP1 PUSH1 0x8 PUSH1 0x40 MLOAD SWAP3 PUSH2 0xDFA DUP5 PUSH2 0x2511 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP6 MSTORE PUSH1 0x1 DUP3 ADD SLOAD AND PUSH1 0x20 DUP6 ADD MSTORE PUSH2 0xE20 PUSH1 0x2 DUP3 ADD PUSH2 0x2BF5 JUMP JUMPDEST PUSH1 0x40 DUP6 ADD MSTORE PUSH2 0xE31 PUSH1 0x3 DUP3 ADD PUSH2 0x2BF5 JUMP JUMPDEST PUSH1 0x60 DUP6 ADD MSTORE PUSH2 0xE42 PUSH1 0x4 DUP3 ADD PUSH2 0x2BF5 JUMP JUMPDEST PUSH1 0x80 DUP6 ADD MSTORE PUSH2 0xE53 PUSH1 0x5 DUP3 ADD PUSH2 0x2BF5 JUMP JUMPDEST PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x6 DUP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP2 AND PUSH1 0xC0 DUP8 ADD MSTORE DUP2 DUP2 PUSH1 0x60 SHR AND PUSH1 0xE0 DUP8 ADD MSTORE PUSH1 0xA0 SHR AND PUSH2 0x100 DUP6 ADD MSTORE PUSH1 0x7 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 AND PUSH2 0x120 DUP7 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 PUSH1 0x40 SHR AND PUSH2 0x140 DUP7 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 PUSH1 0x80 SHR AND PUSH2 0x160 DUP7 ADD MSTORE PUSH1 0xC0 SHR PUSH2 0x180 DUP6 ADD MSTORE ADD SLOAD SWAP1 PUSH1 0x6 PUSH1 0xFF DUP4 AND LT ISZERO PUSH2 0x1055 JUMPI POP DUP1 PUSH1 0xFF DUP1 SWAP3 AND PUSH2 0x1A0 DUP5 ADD MSTORE DUP2 DUP2 PUSH1 0x8 SHR AND ISZERO ISZERO PUSH2 0x1C0 DUP5 ADD MSTORE PUSH1 0x10 SHR AND ISZERO ISZERO PUSH2 0x1E0 DUP3 ADD MSTORE PUSH1 0x40 MLOAD DUP1 SWAP2 PUSH1 0x20 DUP3 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP2 MLOAD AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x20 DUP3 ADD MLOAD AND PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x1E0 PUSH2 0xF96 PUSH2 0xF4E PUSH1 0x40 DUP5 ADD MLOAD PUSH2 0x200 PUSH1 0x60 DUP8 ADD MSTORE PUSH2 0x220 DUP7 ADD SWAP1 PUSH2 0x268B JUMP JUMPDEST PUSH2 0xF81 PUSH2 0xF6D PUSH1 0x60 DUP7 ADD MLOAD SWAP3 PUSH1 0x1F NOT SWAP4 DUP5 DUP10 DUP4 SUB ADD PUSH1 0x80 DUP11 ADD MSTORE PUSH2 0x268B JUMP JUMPDEST PUSH1 0x80 DUP7 ADD MLOAD DUP4 DUP9 DUP4 SUB ADD PUSH1 0xA0 DUP10 ADD MSTORE PUSH2 0x268B JUMP JUMPDEST SWAP1 PUSH1 0xA0 DUP6 ADD MLOAD SWAP1 DUP7 DUP4 SUB ADD PUSH1 0xC0 DUP8 ADD MSTORE PUSH2 0x268B JUMP JUMPDEST SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xC0 DUP3 ADD MLOAD AND PUSH1 0xE0 DUP6 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0xE0 DUP3 ADD MLOAD AND PUSH2 0x100 DUP6 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH2 0x100 DUP3 ADD MLOAD AND PUSH2 0x120 DUP6 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH2 0x120 DUP3 ADD MLOAD AND PUSH2 0x140 DUP6 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH2 0x140 DUP3 ADD MLOAD AND PUSH2 0x160 DUP6 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH2 0x160 DUP3 ADD MLOAD AND PUSH2 0x180 DUP6 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH2 0x180 DUP3 ADD MLOAD AND PUSH2 0x1A0 DUP6 ADD MSTORE PUSH2 0x103B PUSH2 0x1A0 DUP3 ADD MLOAD PUSH2 0x1C0 DUP7 ADD SWAP1 PUSH2 0x2711 JUMP JUMPDEST PUSH2 0x1C0 DUP2 ADD MLOAD ISZERO ISZERO DUP3 DUP6 ADD MSTORE ADD MLOAD ISZERO ISZERO PUSH2 0x200 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1C0 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C0 JUMPI PUSH2 0x1083 PUSH2 0x25B9 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x5D2 JUMPI ISZERO PUSH2 0x10F3 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 JUMPDEST DUP1 SLOAD PUSH2 0x10B4 DUP2 PUSH2 0x2C94 JUMP JUMPDEST SWAP2 DUP4 MSTORE PUSH1 0x20 DUP1 DUP5 KECCAK256 SWAP4 SWAP1 DUP1 DUP5 ADD JUMPDEST DUP4 DUP4 LT PUSH2 0x10D7 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH2 0x21F DUP8 DUP3 PUSH2 0x26B0 JUMP JUMPDEST PUSH1 0x1 DUP3 DUP2 SWAP3 PUSH2 0x10E5 DUP10 PUSH2 0x2BF5 JUMP JUMPDEST DUP2 MSTORE ADD SWAP7 ADD SWAP3 ADD SWAP2 SWAP5 PUSH2 0x10C2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0x10A9 JUMP JUMPDEST POP CALLVALUE PUSH2 0x1C0 JUMPI PUSH1 0xE0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C0 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x4 CALLDATALOAD DUP2 DUP2 GT PUSH2 0xA5F JUMPI PUSH2 0x113E SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x254E JUMP JUMPDEST SWAP1 PUSH2 0x1147 PUSH2 0x25A3 JUMP JUMPDEST SWAP1 PUSH1 0x44 CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP4 AND DUP1 SWAP4 SUB PUSH2 0x15E3 JUMPI PUSH1 0x84 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP1 SWAP2 SUB PUSH2 0xA5B JUMPI PUSH2 0x1173 PUSH2 0x2AB6 JUMP JUMPDEST PUSH2 0x117B PUSH2 0x2732 JUMP JUMPDEST PUSH2 0x1183 PUSH2 0x2A72 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP3 PUSH1 0xFF PUSH1 0x8 DUP6 DUP5 MLOAD PUSH1 0x20 SWAP8 DUP2 PUSH2 0x11A3 DUP11 SWAP4 DUP5 DUP11 ADD SWAP15 DUP16 PUSH2 0x266A JUMP JUMPDEST DUP2 ADD PUSH1 0x4 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 ADD SLOAD PUSH1 0x10 SHR AND ISZERO PUSH2 0x5C0 JUMPI PUSH1 0x40 MLOAD SWAP3 DUP3 MLOAD PUSH2 0x11C9 DUP2 DUP7 DUP12 PUSH2 0x266A JUMP JUMPDEST DUP5 ADD PUSH1 0x4 DUP2 MSTORE DUP5 DUP7 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP7 DUP8 SWAP4 SUB ADD SWAP1 KECCAK256 SLOAD AND SWAP8 DUP5 DUP4 AND DUP1 SWAP10 SUB PUSH2 0x5AE JUMPI PUSH1 0xFF PUSH1 0x8 PUSH1 0x40 MLOAD DUP9 DUP2 DUP9 MLOAD PUSH2 0x1202 DUP2 DUP4 DUP10 PUSH2 0x266A JUMP JUMPDEST DUP2 ADD PUSH1 0x4 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 ADD SLOAD AND PUSH1 0x6 DUP2 LT ISZERO PUSH2 0x15CF JUMPI PUSH2 0x588 JUMPI DUP4 MLOAD ISZERO PUSH2 0x15BD JUMPI DUP8 ISZERO PUSH2 0x15AB JUMPI PUSH2 0x1241 DUP7 PUSH1 0x6 SWAP3 PUSH1 0x40 MLOAD DUP1 SWAP4 DUP2 SWAP3 DUP10 MLOAD SWAP3 DUP4 SWAP2 PUSH2 0x266A JUMP JUMPDEST DUP2 ADD PUSH1 0x4 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 ADD SWAP2 DUP7 DUP4 SLOAD PUSH1 0xA0 SHR AND PUSH2 0x1599 JUMPI PUSH32 0x0 SWAP5 DUP6 AND SWAP1 PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE DUP11 PUSH1 0x4 DUP3 ADD MSTORE DUP8 DUP2 PUSH1 0x24 DUP2 DUP7 GAS STATICCALL DUP1 ISZERO PUSH2 0x158E JUMPI DUP11 SWAP2 DUP14 SWAP2 PUSH2 0x1559 JUMPI JUMPDEST POP LT PUSH2 0x1547 JUMPI DUP7 SWAP2 DUP4 ISZERO DUP1 ISZERO SWAP1 PUSH2 0x153C JUMPI JUMPDEST DUP1 ISZERO PUSH2 0x1531 JUMPI JUMPDEST PUSH2 0x140F JUMPI JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE ADDRESS PUSH1 0x24 DUP4 ADD MSTORE SWAP1 SWAP3 POP DUP3 SWAP1 DUP2 DUP1 PUSH1 0x44 DUP2 ADD JUMPDEST SUB SWAP2 GAS STATICCALL DUP1 ISZERO PUSH2 0x1404 JUMPI DUP8 SWAP2 DUP11 SWAP2 PUSH2 0x13D3 JUMPI JUMPDEST POP LT PUSH2 0x13C1 JUMPI PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP6 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP9 SWAP1 MSTORE ADDRESS PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP1 DUP3 ADD DUP9 SWAP1 MSTORE DUP2 MSTORE SWAP5 PUSH1 0xA0 DUP7 ADD SWAP1 DUP2 GT DUP7 DUP3 LT OR PUSH2 0x13AD JUMPI PUSH32 0x2C138F65913CD3B9CA6F36E4B59E26830A033A978CA69F935781972E6DF1F61D SWAP6 PUSH2 0x139E SWAP5 PUSH2 0x1375 SWAP3 PUSH1 0x40 MSTORE PUSH2 0x2B0A JUMP JUMPDEST DUP1 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL NOT AND TIMESTAMP PUSH1 0xA0 SHL PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL AND OR SWAP1 SSTORE PUSH2 0x2A52 JUMP JUMPDEST SWAP3 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 PUSH1 0x1 DUP2 SSTORE DUP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x13BE252B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST DUP1 SWAP3 POP DUP7 DUP1 SWAP3 POP RETURNDATASIZE DUP4 GT PUSH2 0x13FD JUMPI JUMPDEST PUSH2 0x13EC DUP2 DUP4 PUSH2 0x252D JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x5D2 JUMPI DUP7 SWAP1 MLOAD PUSH0 PUSH2 0x1307 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x13E2 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP12 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP1 SWAP3 POP SWAP3 SWAP1 SWAP3 EXTCODESIZE ISZERO PUSH2 0x152D JUMPI PUSH1 0x40 MLOAD SWAP1 PUSH4 0xD505ACCF PUSH1 0xE0 SHL DUP3 MSTORE DUP11 PUSH1 0x4 DUP4 ADD MSTORE ADDRESS PUSH1 0x24 DUP4 ADD MSTORE DUP10 PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x64 CALLDATALOAD PUSH1 0x64 DUP4 ADD MSTORE PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 CALLDATALOAD PUSH1 0xA4 DUP3 ADD MSTORE PUSH1 0xC4 CALLDATALOAD PUSH1 0xC4 DUP3 ADD MSTORE DUP11 DUP2 PUSH1 0xE4 DUP2 DUP4 DUP7 GAS CALL SWAP1 DUP2 PUSH2 0x1505 JUMPI JUMPDEST POP PUSH2 0x147F JUMPI PUSH1 0x40 MLOAD PUSH4 0xB78CB0DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE DUP7 DUP2 PUSH1 0x44 DUP2 DUP6 GAS STATICCALL DUP1 ISZERO PUSH2 0x14FA JUMPI DUP10 SWAP2 DUP13 SWAP2 PUSH2 0x14C9 JUMPI JUMPDEST POP LT PUSH2 0x13C1 JUMPI PUSH2 0x12F4 SWAP2 DUP7 SWAP2 PUSH2 0x12C5 JUMP JUMPDEST DUP1 SWAP3 POP DUP9 DUP1 SWAP3 POP RETURNDATASIZE DUP4 GT PUSH2 0x14F3 JUMPI JUMPDEST PUSH2 0x14E2 DUP2 DUP4 PUSH2 0x252D JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x5D2 JUMPI DUP9 SWAP1 MLOAD PUSH0 PUSH2 0x14B8 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x14D8 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP14 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP9 DUP2 SWAP13 SWAP3 SWAP13 GT PUSH2 0x1519 JUMPI PUSH1 0x40 MSTORE SWAP10 PUSH0 PUSH2 0x1468 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP3 REVERT JUMPDEST DUP11 DUP1 REVERT JUMPDEST POP PUSH1 0xC4 CALLDATALOAD ISZERO ISZERO PUSH2 0x12C0 JUMP JUMPDEST POP PUSH1 0xA4 CALLDATALOAD ISZERO ISZERO PUSH2 0x12B9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1E9ACF17 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST DUP1 SWAP3 POP DUP10 DUP1 SWAP3 POP RETURNDATASIZE DUP4 GT PUSH2 0x1587 JUMPI JUMPDEST PUSH2 0x1572 DUP2 DUP4 PUSH2 0x252D JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x1583 JUMPI DUP10 SWAP1 MLOAD PUSH0 PUSH2 0x12A7 JUMP JUMPDEST DUP12 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x1568 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP15 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1924FCEB PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x162908E3 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x5F0BE7AF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP12 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 DUP12 REVERT JUMPDEST DUP5 DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1C0 JUMPI PUSH2 0x15F6 CALLDATASIZE PUSH2 0x25CF JUMP JUMPDEST SWAP1 PUSH2 0x15FF PUSH2 0x2732 JUMP JUMPDEST PUSH2 0x1607 PUSH2 0x2A72 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF PUSH1 0x8 DUP4 MLOAD SWAP3 PUSH1 0x20 DUP2 DUP2 DUP8 ADD SWAP6 PUSH2 0x1623 DUP2 DUP4 DUP10 PUSH2 0x266A JUMP JUMPDEST DUP2 ADD PUSH1 0x4 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 ADD SLOAD PUSH1 0x10 SHR AND ISZERO PUSH2 0x5C0 JUMPI PUSH1 0x40 MLOAD DUP3 MLOAD PUSH2 0x1648 DUP2 DUP4 DUP6 PUSH2 0x266A JUMP JUMPDEST PUSH1 0x4 SWAP1 DUP3 ADD SWAP1 DUP2 MSTORE DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND SWAP4 AND DUP4 SWAP1 SUB PUSH2 0x5AE JUMPI PUSH1 0xFF PUSH1 0x8 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP7 MLOAD PUSH2 0x1687 DUP2 DUP4 DUP10 PUSH2 0x266A JUMP JUMPDEST DUP2 ADD PUSH1 0x4 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 ADD SLOAD AND PUSH1 0x6 DUP2 LT ISZERO PUSH2 0x1728 JUMPI PUSH2 0x588 JUMPI PUSH1 0x20 PUSH2 0x16B8 SWAP2 PUSH1 0x40 MLOAD DUP1 SWAP4 DUP2 SWAP3 DUP7 MLOAD SWAP3 DUP4 SWAP2 PUSH2 0x266A JUMP JUMPDEST DUP2 ADD PUSH1 0x4 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x6 DUP4 ADD SLOAD PUSH1 0xA0 SHR AND ISZERO PUSH2 0x1716 JUMPI PUSH1 0x8 PUSH2 0x16F0 SWAP3 ADD PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH2 0x2A52 JUMP JUMPDEST PUSH31 0xCAEC7345D2EB04A42197AC2A2CD7CD74A00B2991B69BB53E23465D4092FDFB DUP4 DUP1 LOG3 DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x47510BBD PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 DUP6 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1C0 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C0 JUMPI PUSH2 0x1756 PUSH2 0x25B9 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH2 0x1761 PUSH2 0x2732 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP2 PUSH32 0x0 AND DUP3 EQ PUSH2 0x17A6 JUMPI DUP1 ISZERO PUSH2 0x15AB JUMPI PUSH2 0x1BD SWAP2 CALLER SWAP1 PUSH2 0x2BA6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x18BA2FC1 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1C0 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C0 JUMPI PUSH1 0xFF PUSH1 0x40 PUSH1 0x20 SWAP3 PUSH2 0x17D9 PUSH2 0x25A3 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD DUP3 MSTORE PUSH1 0x2 DUP6 MSTORE DUP3 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP3 MSTORE DUP5 MSTORE KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP2 AND ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1C0 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1C0 JUMPI PUSH2 0x181A PUSH2 0x2732 JUMP JUMPDEST PUSH2 0x1822 PUSH2 0x2A72 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xFF NOT DUP2 SLOAD AND OR PUSH1 0x1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH1 0x20 PUSH1 0x40 MLOAD CALLER DUP2 MSTORE LOG1 DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x1C0 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C0 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x4 CALLDATALOAD DUP2 DUP2 GT PUSH2 0xA5F JUMPI PUSH1 0x20 PUSH2 0x60C PUSH2 0x1892 SWAP3 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x254E JUMP JUMPDEST DUP2 ADD PUSH1 0x4 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 SWAP1 PUSH1 0x8 DUP3 ADD SLOAD SWAP2 PUSH1 0xFF DUP4 PUSH1 0x10 SHR AND SWAP3 DUP4 PUSH2 0x18DC JUMPI JUMPDEST POP PUSH1 0x20 SWAP4 POP DUP3 PUSH2 0x18C8 JUMPI JUMPDEST POP POP PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH1 0x7 ADD SLOAD PUSH1 0x40 SHR AND TIMESTAMP LT ISZERO SWAP1 POP PUSH0 DUP1 PUSH2 0x18BC JUMP JUMPDEST PUSH1 0xFF SWAP2 SWAP4 POP AND SWAP3 PUSH1 0x6 DUP5 LT ISZERO PUSH2 0x1055 JUMPI POP PUSH1 0x2 PUSH1 0x20 SWAP4 EQ SWAP2 PUSH0 PUSH2 0x18B1 JUMP JUMPDEST POP CALLVALUE PUSH2 0x1C0 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1C0 JUMPI PUSH1 0x20 PUSH1 0xFF PUSH1 0x1 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1C0 JUMPI PUSH2 0x192C CALLDATASIZE PUSH2 0x2610 JUMP JUMPDEST PUSH2 0x1937 SWAP3 SWAP2 SWAP3 PUSH2 0x2732 JUMP JUMPDEST PUSH2 0x193F PUSH2 0x2A72 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 MLOAD PUSH1 0xFF PUSH1 0x8 PUSH1 0x20 SWAP4 DUP5 DUP2 DUP2 DUP10 ADD SWAP6 PUSH2 0x195C DUP2 DUP4 DUP10 PUSH2 0x266A JUMP JUMPDEST DUP2 ADD PUSH1 0x4 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 ADD SLOAD PUSH1 0x10 SHR AND ISZERO PUSH2 0x5C0 JUMPI PUSH1 0x40 MLOAD DUP5 MLOAD PUSH2 0x1981 DUP2 DUP4 DUP6 PUSH2 0x266A JUMP JUMPDEST PUSH1 0x4 SWAP1 DUP3 ADD SWAP1 DUP2 MSTORE DUP2 SWAP1 SUB DUP4 ADD SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 DUP7 AND SWAP6 AND DUP6 SWAP1 SUB PUSH2 0x5AE JUMPI PUSH1 0xFF PUSH1 0x8 PUSH1 0x40 MLOAD DUP5 DUP2 DUP9 MLOAD PUSH2 0x19BE DUP2 DUP4 DUP10 PUSH2 0x266A JUMP JUMPDEST DUP2 ADD PUSH1 0x4 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 ADD SLOAD AND PUSH1 0x6 DUP2 LT ISZERO PUSH2 0x59A JUMPI PUSH1 0x1 SUB PUSH2 0x588 JUMPI DUP2 PUSH2 0x19F1 SWAP2 PUSH1 0x40 MLOAD DUP1 SWAP4 DUP2 SWAP3 DUP9 MLOAD SWAP3 DUP4 SWAP2 PUSH2 0x266A JUMP JUMPDEST DUP2 ADD PUSH1 0x4 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 DUP2 PUSH1 0x6 DUP3 ADD SLOAD PUSH1 0x60 SHR AND TIMESTAMP GT PUSH2 0x1AF9 JUMPI DUP4 MLOAD ISZERO PUSH2 0x1AE7 JUMPI PUSH1 0x8 DUP2 ADD PUSH1 0x2 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x7 DUP2 ADD SWAP1 DUP2 SLOAD PUSH3 0x3F480 TIMESTAMP ADD DUP1 TIMESTAMP GT PUSH2 0x1AD3 JUMPI SWAP3 PUSH2 0x1AA9 DUP8 PUSH1 0x4 PUSH2 0x1AB4 SWAP6 PUSH32 0x934109F661B65DBCCFFCAE4F7EE04261EB7B36E5136E1CA86DDE1B00598CB031 SWAP11 SWAP9 SWAP6 PUSH16 0xFFFFFFFFFFFFFFFF0000000000000000 PUSH2 0x1AC9 SWAP12 SWAP10 PUSH1 0x40 SHL AND SWAP1 DUP8 TIMESTAMP AND SWAP1 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND OR OR DUP6 SSTORE ADD PUSH2 0x290E JUMP JUMPDEST SLOAD PUSH1 0x40 SHR AND SWAP6 PUSH2 0x2A52 JUMP JUMPDEST SWAP5 PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP4 PUSH1 0x40 DUP6 MSTORE PUSH1 0x40 DUP6 ADD SWAP1 PUSH2 0x268B JUMP JUMPDEST SWAP2 DUP4 ADD MSTORE SUB SWAP1 LOG3 DUP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP11 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP11 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x361178C7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x764B8E33 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1C0 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1C0 JUMPI PUSH1 0x20 PUSH1 0x3 SLOAD PUSH1 0x60 SHR PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1C0 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1C0 JUMPI PUSH2 0x1B45 PUSH2 0x2732 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0xFF DUP2 AND ISZERO PUSH2 0x1B85 JUMPI PUSH1 0xFF NOT AND PUSH1 0x1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH1 0x20 PUSH1 0x40 MLOAD CALLER DUP2 MSTORE LOG1 DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x14185D5CD8589B194E881B9BDD081C185D5CD959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1C0 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C0 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x4 CALLDATALOAD DUP2 DUP2 GT PUSH2 0xA5F JUMPI PUSH2 0x1BF3 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x254E JUMP JUMPDEST SWAP1 PUSH2 0x1BFC PUSH2 0x2AB6 JUMP JUMPDEST PUSH2 0x1C04 PUSH2 0x2732 JUMP JUMPDEST PUSH2 0x1C0C PUSH2 0x2A72 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF PUSH1 0x8 DUP5 MLOAD SWAP3 PUSH1 0x20 DUP2 DUP2 DUP9 ADD SWAP6 PUSH2 0x1C28 DUP2 DUP4 DUP10 PUSH2 0x266A JUMP JUMPDEST DUP2 ADD PUSH1 0x4 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 ADD SLOAD PUSH1 0x10 SHR AND ISZERO PUSH2 0x5C0 JUMPI PUSH1 0xFF PUSH1 0x8 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP8 MLOAD PUSH2 0x1C54 DUP2 DUP4 DUP10 PUSH2 0x266A JUMP JUMPDEST DUP2 ADD PUSH1 0x4 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 ADD SLOAD AND PUSH1 0x6 DUP2 LT ISZERO PUSH2 0x1728 JUMPI PUSH1 0x2 SUB PUSH2 0x588 JUMPI PUSH1 0x20 PUSH2 0x1C88 SWAP2 PUSH1 0x40 MLOAD DUP1 SWAP4 DUP2 SWAP3 DUP8 MLOAD SWAP3 DUP4 SWAP2 PUSH2 0x266A JUMP JUMPDEST DUP2 ADD PUSH1 0x4 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 SWAP1 PUSH1 0x7 DUP3 ADD SLOAD PUSH1 0x40 SHR AND TIMESTAMP LT PUSH2 0x1D71 JUMPI PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2DE3 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB SWAP2 PUSH2 0x4BB DUP4 PUSH1 0x6 DUP4 ADD SLOAD AND SWAP2 PUSH2 0x1CE2 PUSH2 0x2710 DUP7 PUSH2 0x1CD9 DUP2 PUSH1 0x3 SLOAD AND DUP8 PUSH2 0x2B6F JUMP JUMPDEST AND DIV DUP1 SWAP5 PUSH2 0x2B8D JUMP JUMPDEST PUSH1 0x8 DUP3 ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x4 OR SWAP1 SSTORE SWAP5 PUSH32 0x0 SWAP1 DUP1 DUP8 AND DUP1 PUSH2 0x1D52 JUMPI JUMPDEST POP DUP5 AND DUP1 PUSH2 0x1D3B JUMPI JUMPDEST POP POP PUSH1 0x1 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP5 PUSH2 0x2A52 JUMP JUMPDEST PUSH2 0x1D4B SWAP2 PUSH1 0x3 SLOAD PUSH1 0x60 SHR SWAP1 PUSH2 0x2BA6 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x1D26 JUMP JUMPDEST PUSH1 0x1 DUP5 ADD SLOAD PUSH2 0x1D6B SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH2 0x2BA6 JUMP JUMPDEST PUSH0 PUSH2 0x1D1D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x2D6BF645 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1C0 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C0 JUMPI PUSH2 0x1D9D PUSH2 0x25A3 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SUB PUSH2 0x1DB9 JUMPI PUSH2 0xC8D SWAP1 PUSH1 0x4 CALLDATALOAD PUSH2 0x284B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x334BD919 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1C0 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C0 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x23F JUMPI PUSH2 0x1BD SWAP1 PUSH2 0x1DFC PUSH2 0x2732 JUMP JUMPDEST PUSH2 0x2CBB JUMP JUMPDEST POP CALLVALUE PUSH2 0x1C0 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C0 JUMPI PUSH2 0xC8D PUSH1 0x4 CALLDATALOAD PUSH2 0x1E21 PUSH2 0x25A3 JUMP JUMPDEST SWAP1 DUP1 DUP5 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH2 0x1E3A PUSH1 0x1 PUSH1 0x40 DUP7 KECCAK256 ADD SLOAD PUSH2 0x27AB JUMP JUMPDEST PUSH2 0x27CD JUMP JUMPDEST POP CALLVALUE PUSH2 0x1C0 JUMPI PUSH2 0x1E4E CALLDATASIZE PUSH2 0x25CF JUMP JUMPDEST PUSH2 0x1E56 PUSH2 0x2AB6 JUMP JUMPDEST PUSH2 0x1E5E PUSH2 0x2732 JUMP JUMPDEST PUSH2 0x1E66 PUSH2 0x2A72 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF PUSH1 0x8 DUP5 MLOAD SWAP3 PUSH1 0x20 DUP2 DUP2 DUP9 ADD SWAP6 PUSH2 0x1E82 DUP2 DUP4 DUP10 PUSH2 0x266A JUMP JUMPDEST DUP2 ADD PUSH1 0x4 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 ADD SLOAD PUSH1 0x10 SHR AND ISZERO PUSH2 0x5C0 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD DUP5 MLOAD PUSH2 0x1EA9 DUP2 DUP4 DUP7 PUSH2 0x266A JUMP JUMPDEST DUP2 ADD PUSH1 0x4 DUP2 MSTORE DUP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 SWAP4 DUP5 SWAP4 SUB ADD SWAP1 KECCAK256 SLOAD AND SWAP4 AND DUP1 SWAP4 SUB PUSH2 0x5AE JUMPI PUSH1 0xFF PUSH1 0x8 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP9 MLOAD PUSH2 0x1EE2 DUP2 DUP4 DUP11 PUSH2 0x266A JUMP JUMPDEST DUP2 ADD PUSH1 0x4 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 ADD SLOAD AND PUSH1 0x6 DUP2 LT ISZERO PUSH2 0xBF2 JUMPI PUSH1 0x2 SUB PUSH2 0x588 JUMPI PUSH2 0x4BB PUSH2 0x1F27 PUSH1 0x20 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2DE3 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP5 PUSH1 0x40 MLOAD DUP1 SWAP4 DUP2 SWAP3 DUP11 MLOAD SWAP3 DUP4 SWAP2 PUSH2 0x266A JUMP JUMPDEST DUP2 ADD PUSH1 0x4 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB SWAP4 DUP5 PUSH1 0x6 DUP3 ADD SLOAD AND SWAP5 PUSH2 0x1F63 PUSH2 0x2710 DUP3 PUSH2 0x1F5A DUP2 PUSH1 0x3 SLOAD AND DUP11 PUSH2 0x2B6F JUMP JUMPDEST AND DIV DUP1 SWAP8 PUSH2 0x2B8D JUMP JUMPDEST PUSH1 0x8 DUP4 ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x4 OR SWAP1 SSTORE SWAP8 PUSH2 0x1F7C DUP11 PUSH2 0x2A52 JUMP JUMPDEST PUSH31 0xCAEC7345D2EB04A42197AC2A2CD7CD74A00B2991B69BB53E23465D4092FDFB DUP13 DUP1 LOG3 PUSH32 0x0 SWAP1 DUP1 DUP10 AND DUP1 PUSH2 0x1FF5 JUMPI JUMPDEST POP DUP7 AND DUP1 PUSH2 0x1FDE JUMPI JUMPDEST POP POP ADD SLOAD AND SWAP5 PUSH2 0x2A52 JUMP JUMPDEST PUSH2 0x1FEE SWAP2 PUSH1 0x3 SLOAD PUSH1 0x60 SHR SWAP1 PUSH2 0x2BA6 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x1FD3 JUMP JUMPDEST PUSH2 0x2005 SWAP1 DUP7 DUP7 DUP7 ADD SLOAD AND DUP5 PUSH2 0x2BA6 JUMP JUMPDEST PUSH0 PUSH2 0x1FCA JUMP JUMPDEST POP CALLVALUE PUSH2 0x1C0 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C0 JUMPI PUSH1 0x1 PUSH1 0x40 PUSH1 0x20 SWAP3 PUSH1 0x4 CALLDATALOAD DUP2 MSTORE PUSH1 0x2 DUP5 MSTORE KECCAK256 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1C0 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1C0 JUMPI PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0x3 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1C0 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C0 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x23F JUMPI PUSH2 0x2090 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x254E JUMP JUMPDEST PUSH2 0x2098 PUSH2 0x2AB6 JUMP JUMPDEST PUSH2 0x20A0 PUSH2 0x2732 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF PUSH1 0x8 DUP4 MLOAD SWAP3 PUSH1 0x20 DUP2 DUP2 DUP8 ADD SWAP6 PUSH2 0x20BC DUP2 DUP4 DUP10 PUSH2 0x266A JUMP JUMPDEST DUP2 ADD PUSH1 0x4 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 ADD SLOAD PUSH1 0x10 SHR AND ISZERO PUSH2 0x5C0 JUMPI PUSH1 0x20 PUSH2 0x20E8 SWAP2 PUSH1 0x40 MLOAD DUP1 SWAP4 DUP2 SWAP3 DUP7 MLOAD SWAP3 DUP4 SWAP2 PUSH2 0x266A JUMP JUMPDEST DUP2 ADD PUSH1 0x4 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 SWAP1 PUSH1 0x8 DUP3 ADD SWAP1 DUP2 SLOAD SWAP3 PUSH1 0xFF DUP5 AND PUSH1 0x6 DUP2 LT ISZERO PUSH2 0xBF2 JUMPI PUSH1 0x1 DUP2 SUB PUSH2 0x21AB JUMPI JUMPDEST POP PUSH2 0x213B SWAP3 PUSH1 0x5 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0x6 DUP5 ADD SLOAD AND SWAP6 PUSH1 0xFF NOT AND OR SWAP1 SSTORE DUP4 DUP1 PUSH2 0x216E JUMPI POP POP PUSH2 0x2A52 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 MSTORE PUSH32 0xB559D285C87E4FA0F561388264310703FF0C6C454A39AE52D0AE94032FF0DB70 PUSH1 0x20 CALLER SWAP4 LOG3 PUSH1 0x1 DUP2 SSTORE DUP1 RETURN JUMPDEST SWAP1 SLOAD PUSH2 0x21A4 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x0 PUSH2 0x2BA6 JUMP JUMPDEST PUSH0 DUP4 PUSH2 0xB8B JUMP JUMPDEST PUSH1 0x2 SUB PUSH2 0x21B8 JUMPI PUSH0 PUSH2 0x2111 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x4DF0CAD PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1C0 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1C0 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0xA8A7BC421F721CB936EA99EFDAD79237E6EE0B871A2A08CF648691F9584CDC77 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1C0 JUMPI PUSH2 0x2214 CALLDATASIZE PUSH2 0x2610 JUMP JUMPDEST SWAP1 SWAP2 PUSH2 0x221E PUSH2 0x2732 JUMP JUMPDEST PUSH2 0x2226 PUSH2 0x2A72 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP2 MLOAD PUSH1 0xFF PUSH1 0x8 PUSH1 0x20 SWAP6 DUP7 DUP2 DUP2 DUP9 ADD SWAP6 PUSH2 0x2244 DUP2 DUP4 DUP10 PUSH2 0x266A JUMP JUMPDEST DUP2 ADD PUSH1 0x4 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 ADD SLOAD PUSH1 0x10 SHR AND ISZERO PUSH2 0x5C0 JUMPI PUSH1 0x40 MLOAD DUP4 MLOAD PUSH2 0x2269 DUP2 DUP4 DUP6 PUSH2 0x266A JUMP JUMPDEST PUSH1 0x4 SWAP1 DUP3 ADD SWAP1 DUP2 MSTORE DUP2 SWAP1 SUB DUP6 ADD SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 DUP7 AND SWAP6 AND DUP6 SWAP1 SUB PUSH2 0x5AE JUMPI PUSH1 0xFF PUSH1 0x8 PUSH1 0x40 MLOAD DUP7 DUP2 DUP8 MLOAD PUSH2 0x22A3 DUP2 DUP4 DUP10 PUSH2 0x266A JUMP JUMPDEST DUP2 ADD PUSH1 0x4 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 ADD SLOAD AND PUSH1 0x6 DUP2 LT ISZERO PUSH2 0x59A JUMPI PUSH1 0x2 SUB PUSH2 0x588 JUMPI DUP4 PUSH2 0x22D6 SWAP2 PUSH1 0x40 MLOAD DUP1 SWAP4 DUP2 SWAP3 DUP8 MLOAD SWAP3 DUP4 SWAP2 PUSH2 0x266A JUMP JUMPDEST DUP2 ADD PUSH1 0x4 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 PUSH1 0x7 DUP2 ADD SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP5 SLOAD PUSH1 0x40 SHR AND TIMESTAMP LT ISZERO PUSH2 0x2398 JUMPI DUP3 MLOAD ISZERO PUSH2 0x2386 JUMPI PUSH32 0xDE7B01BEF0884582CE204F7F920E57F99DD569F93867450872F436BE5A03C755 SWAP4 PUSH2 0x2342 DUP5 PUSH1 0x5 DUP6 PUSH1 0x8 PUSH2 0x236B SWAP8 ADD PUSH1 0x3 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE ADD PUSH2 0x290E JUMP JUMPDEST DUP1 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x80 SHL NOT AND TIMESTAMP PUSH1 0x80 SHL PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x80 SHL AND OR SWAP1 SSTORE PUSH2 0x2A52 JUMP JUMPDEST SWAP3 PUSH2 0x2380 PUSH1 0x40 MLOAD SWAP3 DUP3 DUP5 SWAP4 DUP5 MSTORE DUP4 ADD SWAP1 PUSH2 0x268B JUMP JUMPDEST SUB SWAP1 LOG3 DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xBC7FD331 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x2D0F572D PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1C0 JUMPI PUSH2 0x23B9 CALLDATASIZE PUSH2 0x25CF JUMP JUMPDEST SWAP1 PUSH2 0x23C2 PUSH2 0x2732 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 MLOAD PUSH1 0xFF PUSH1 0x8 PUSH1 0x20 SWAP5 DUP6 DUP2 DUP2 DUP8 ADD SWAP6 PUSH2 0x23E0 DUP2 DUP4 DUP10 PUSH2 0x266A JUMP JUMPDEST DUP2 ADD PUSH1 0x4 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 ADD SLOAD PUSH1 0x10 SHR AND ISZERO PUSH2 0x5C0 JUMPI PUSH1 0x40 MLOAD DUP3 MLOAD PUSH2 0x2405 DUP2 DUP4 DUP6 PUSH2 0x266A JUMP JUMPDEST PUSH1 0x4 SWAP1 DUP3 ADD SWAP1 DUP2 MSTORE DUP2 SWAP1 SUB DUP5 ADD SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND SWAP5 AND DUP5 SWAP1 SUB PUSH2 0x5AE JUMPI PUSH1 0xFF PUSH1 0x8 PUSH1 0x40 MLOAD DUP6 DUP2 DUP7 MLOAD PUSH2 0x243F DUP2 DUP4 DUP10 PUSH2 0x266A JUMP JUMPDEST DUP2 ADD PUSH1 0x4 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 ADD SLOAD AND PUSH1 0x6 DUP2 LT ISZERO PUSH2 0xBF2 JUMPI PUSH2 0x588 JUMPI PUSH32 0xB559D285C87E4FA0F561388264310703FF0C6C454A39AE52D0AE94032FF0DB70 SWAP2 PUSH1 0x8 PUSH2 0x2496 DUP6 PUSH2 0x24B1 SWAP5 PUSH1 0x40 MLOAD DUP1 SWAP4 DUP2 SWAP3 DUP8 MLOAD SWAP3 DUP4 SWAP2 PUSH2 0x266A JUMP JUMPDEST DUP2 ADD PUSH1 0x4 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 ADD PUSH1 0x5 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH2 0x2A52 JUMP JUMPDEST SWAP2 PUSH1 0x40 MLOAD DUP6 DUP2 MSTORE LOG3 DUP1 RETURN JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x23F JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23F JUMPI PUSH1 0x4 CALLDATALOAD PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL DUP2 AND DUP1 SWAP2 SUB PUSH2 0xA5F JUMPI PUSH1 0x20 SWAP3 POP PUSH4 0x7965DB0B PUSH1 0xE0 SHL DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0x2500 JUMPI JUMPDEST POP ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL EQ SWAP1 POP PUSH0 PUSH2 0x24F9 JUMP JUMPDEST PUSH2 0x200 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x13AD JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x13AD JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x5D2 JUMPI DUP1 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x13AD JUMPI PUSH1 0x40 MLOAD SWAP3 PUSH2 0x2582 PUSH1 0x1F DUP5 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP6 PUSH2 0x252D JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x20 DUP4 DUP4 ADD ADD GT PUSH2 0x5D2 JUMPI DUP2 PUSH0 SWAP3 PUSH1 0x20 DUP1 SWAP4 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x5D2 JUMPI JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x5D2 JUMPI JUMP JUMPDEST PUSH1 0x40 PUSH1 0x3 NOT DUP3 ADD SLT PUSH2 0x5D2 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x5D2 JUMPI PUSH2 0x25F9 SWAP2 PUSH1 0x4 ADD PUSH2 0x254E JUMP JUMPDEST SWAP1 PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x5D2 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 NOT DUP3 ADD SLT PUSH2 0x5D2 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP2 PUSH1 0x4 CALLDATALOAD DUP4 DUP2 GT PUSH2 0x5D2 JUMPI DUP3 PUSH2 0x263C SWAP2 PUSH1 0x4 ADD PUSH2 0x254E JUMP JUMPDEST SWAP3 PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x5D2 JUMPI SWAP3 PUSH1 0x44 CALLDATALOAD SWAP2 DUP3 GT PUSH2 0x5D2 JUMPI PUSH2 0x2667 SWAP2 PUSH1 0x4 ADD PUSH2 0x254E JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT PUSH2 0x267B JUMPI POP POP PUSH0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x266C JUMP JUMPDEST SWAP1 PUSH1 0x20 SWAP2 PUSH2 0x26A4 DUP2 MLOAD DUP1 SWAP3 DUP2 DUP6 MSTORE DUP6 DUP1 DUP7 ADD SWAP2 ADD PUSH2 0x266A JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 ADD SWAP1 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 SWAP3 MSTORE PUSH1 0x40 DUP4 ADD SWAP3 DUP2 PUSH1 0x40 DUP5 PUSH1 0x5 SHL DUP4 ADD ADD SWAP6 ADD SWAP4 PUSH0 SWAP2 JUMPDEST DUP5 DUP4 LT PUSH2 0x26E3 JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 DUP5 DUP1 PUSH2 0x2701 PUSH1 0x1 SWAP4 PUSH1 0x3F NOT DUP7 DUP3 SUB ADD DUP8 MSTORE DUP11 MLOAD PUSH2 0x268B JUMP JUMPDEST SWAP9 ADD SWAP4 ADD SWAP4 ADD SWAP2 SWAP5 SWAP4 SWAP3 SWAP1 PUSH2 0x26D3 JUMP JUMPDEST SWAP1 PUSH1 0x6 DUP3 LT ISZERO PUSH2 0x271E JUMPI MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH32 0xEF73BF2AC44F84561B5498839AB1C8C5A4DD99305D838AEA0D76C5961778535C PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH32 0xA8A7BC421F721CB936EA99EFDAD79237E6EE0B871A2A08CF648691F9584CDC77 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0x278D JUMPI POP JUMP JUMPDEST PUSH1 0x44 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH4 0xE2517D3F PUSH1 0xE0 SHL DUP3 MSTORE CALLER PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE REVERT JUMPDEST DUP1 PUSH0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 CALLER PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH0 KECCAK256 SLOAD AND ISZERO PUSH2 0x278D JUMPI POP JUMP JUMPDEST SWAP1 PUSH0 SWAP2 DUP1 DUP4 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP5 KECCAK256 SLOAD AND ISZERO PUSH0 EQ PUSH2 0x2846 JUMPI DUP1 DUP4 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D CALLER SWAP4 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST POP POP SWAP1 JUMP JUMPDEST SWAP1 PUSH0 SWAP2 DUP1 DUP4 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP5 KECCAK256 SLOAD AND PUSH0 EQ PUSH2 0x2846 JUMPI DUP1 DUP4 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0xFF NOT DUP2 SLOAD AND SWAP1 SSTORE PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B CALLER SWAP4 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x28EE JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x28DA JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x28CF JUMP JUMPDEST DUP2 DUP2 LT PUSH2 0x2903 JUMPI POP POP JUMP JUMPDEST PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x28F8 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x13AD JUMPI PUSH2 0x292B DUP3 SLOAD PUSH2 0x28C0 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x29CF JUMPI JUMPDEST POP PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x296F JUMPI POP DUP2 SWAP3 SWAP4 SWAP5 PUSH0 SWAP3 PUSH2 0x2964 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 SSTORE JUMP JUMPDEST ADD MLOAD SWAP1 POP PUSH0 DUP1 PUSH2 0x294F JUMP JUMPDEST SWAP1 PUSH1 0x1F NOT DUP4 AND SWAP6 DUP5 PUSH0 MSTORE DUP3 PUSH0 KECCAK256 SWAP3 PUSH0 SWAP1 JUMPDEST DUP9 DUP3 LT PUSH2 0x29B7 JUMPI POP POP DUP4 PUSH1 0x1 SWAP6 SWAP7 SWAP8 LT PUSH2 0x299F JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE JUMP JUMPDEST ADD MLOAD PUSH0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE PUSH0 DUP1 DUP1 PUSH2 0x2995 JUMP JUMPDEST DUP1 PUSH1 0x1 DUP6 SWAP7 DUP3 SWAP5 SWAP7 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD SWAP1 PUSH2 0x2980 JUMP JUMPDEST PUSH2 0x29FA SWAP1 DUP4 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP6 LT PUSH2 0x2A00 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x28F8 JUMP JUMPDEST PUSH0 PUSH2 0x2934 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x29ED JUMP JUMPDEST SWAP1 DUP2 SLOAD PUSH9 0x10000000000000000 DUP2 LT ISZERO PUSH2 0x13AD JUMPI PUSH1 0x1 DUP2 ADD DUP1 DUP5 SSTORE DUP2 LT ISZERO PUSH2 0x2A3E JUMPI PUSH2 0x2A3C SWAP3 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH2 0x290E JUMP JUMPDEST JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x2A6A SWAP1 PUSH1 0x20 PUSH1 0x40 MLOAD SWAP3 DUP3 DUP5 DUP1 SWAP5 MLOAD SWAP4 DUP5 SWAP3 ADD PUSH2 0x266A JUMP JUMPDEST DUP2 ADD SUB SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0xFF PUSH1 0x1 SLOAD AND PUSH2 0x2A7E JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH0 SLOAD EQ PUSH2 0x2AC5 JUMPI PUSH1 0x2 PUSH0 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 PUSH0 PUSH1 0x20 SWAP2 DUP3 DUP2 MLOAD SWAP2 ADD DUP3 DUP6 GAS CALL ISZERO PUSH2 0x2B64 JUMPI PUSH0 MLOAD RETURNDATASIZE PUSH2 0x2B5B JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND EXTCODESIZE ISZERO JUMPDEST PUSH2 0x2B39 JUMPI POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x5274AFE7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x1 EQ ISZERO PUSH2 0x2B32 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP2 SWAP1 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP1 DUP1 SWAP5 AND SWAP2 AND MUL SWAP2 DUP3 AND SWAP2 DUP3 SUB PUSH2 0x515 JUMPI JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB SWAP2 DUP3 AND SWAP1 DUP3 AND SUB SWAP2 SWAP1 DUP3 GT PUSH2 0x515 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x80 DUP2 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT DUP3 DUP5 LT OR PUSH2 0x13AD JUMPI PUSH2 0x2A3C SWAP3 PUSH1 0x40 MSTORE PUSH2 0x2B0A JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH0 DUP3 SLOAD SWAP3 PUSH2 0x2C08 DUP5 PUSH2 0x28C0 JUMP JUMPDEST SWAP1 DUP2 DUP5 MSTORE PUSH1 0x1 SWAP5 DUP6 DUP2 AND SWAP1 DUP2 PUSH0 EQ PUSH2 0x2C71 JUMPI POP PUSH1 0x1 EQ PUSH2 0x2C31 JUMPI JUMPDEST POP POP PUSH2 0x2A3C SWAP3 POP SUB DUP4 PUSH2 0x252D JUMP JUMPDEST SWAP1 SWAP4 SWAP2 POP PUSH0 MSTORE PUSH1 0x20 SWAP1 DUP2 PUSH0 KECCAK256 SWAP4 PUSH0 SWAP2 JUMPDEST DUP2 DUP4 LT PUSH2 0x2C59 JUMPI POP POP PUSH2 0x2A3C SWAP4 POP DUP3 ADD ADD PUSH0 DUP1 PUSH2 0x2C23 JUMP JUMPDEST DUP6 SLOAD DUP9 DUP5 ADD DUP6 ADD MSTORE SWAP5 DUP6 ADD SWAP5 DUP8 SWAP5 POP SWAP2 DUP4 ADD SWAP2 PUSH2 0x2C41 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2A3C SWAP5 POP PUSH1 0x20 SWAP3 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD PUSH0 DUP1 PUSH2 0x2C23 JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x13AD JUMPI PUSH1 0x40 MLOAD SWAP2 PUSH2 0x2CB7 PUSH1 0x20 DUP3 PUSH1 0x5 SHL ADD DUP5 PUSH2 0x252D JUMP JUMPDEST DUP3 MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB SWAP1 DUP2 DUP2 AND PUSH2 0x3E8 DUP2 GT PUSH2 0x2D42 JUMPI PUSH1 0x3 SLOAD SWAP3 DUP4 AND SWAP1 DUP1 DUP3 EQ PUSH2 0x2D3C JUMPI PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR PUSH1 0x3 SSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0xFEEDDF72B7EE4210B769104CB8B071E5706232AC7F671FB292AF429FFD58B587 SWAP2 DUP2 SWAP1 DUP2 ADD JUMPDEST SUB SWAP1 LOG1 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xCD4E6167 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0xA33 JUMPI PUSH1 0x3 SLOAD SWAP2 DUP3 PUSH1 0x60 SHR SWAP1 DUP2 EQ PUSH2 0x2DDD JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB SWAP1 SWAP3 AND PUSH1 0x60 DUP3 SWAP1 SHL PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT AND OR PUSH1 0x3 SSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP3 SWAP1 SWAP2 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH32 0xAAEBCF1BFA00580E41D966056B48521FA9F202645C86D4DDF28113E617C1B1D3 SWAP2 SWAP1 DUP2 SWAP1 DUP2 ADD PUSH2 0x2D37 JUMP JUMPDEST POP POP POP JUMP INVALID DUP6 BALANCE NOT DUP15 0x5D SWAP5 PUSH11 0xF9A770D2EEBA00258645E1 PUSH4 0x142D835F 0xE1 0xB0 0x4E GASLIMIT DELEGATECALL 0xDB PUSH19 0xF8BA26469706673582212209F68EB11DEF6AC 0xE1 SWAP6 0xBE SWAP12 PUSH19 0x8EE01D2C0B4C80F5E7616AFED9DA57CFF3C0C4 COINBASE PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER 0xA8 0xA7 0xBC TIMESTAMP 0x1F PUSH19 0x1CB936EA99EFDAD79237E6EE0B871A2A08CF64 DUP7 SWAP2 0xF9 PC 0x4C 0xDC PUSH24 0x0 ",
							"sourceMap": "680:21288:13:-:0;;;;;;;;;;-1:-1:-1;;680:21288:13;;;;;-1:-1:-1;;;;;680:21288:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;:::i;:::-;;-1:-1:-1;1716:1:6;;;680:21288:13;;-1:-1:-1;;680:21288:13;;;-1:-1:-1;;;;;680:21288:13;;;;1716:1:6;;;4861:24:13;;4857:53;;680:21288;;;4924:27;4920:56;;680:21288;;4990:27;4986:56;;5134:38;5053:31;;;;680:21288;;;;;;;;;;1751:3;680:21288;1751:3;680:21288;5134:38;:::i;:::-;;-1:-1:-1;;;;;;;;;;;680:21288:13;-1:-1:-1;680:21288:13;3877:6:0;680:21288:13;;;;-1:-1:-1;680:21288:13;3877:22:0;680:21288:13;;;;1716:1:6;;680:21288:13;5862:52:0;;;-1:-1:-1;5862:52:0;;680:21288:13;;;;;;5053:31;680:21288;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4986:56;680:21288;;-1:-1:-1;;;5026:16:13;;;;;4920:56;680:21288;;-1:-1:-1;;;4960:16:13;;;;;680:21288;-1:-1:-1;680:21288:13;;;;;;-1:-1:-1;680:21288:13;;;;;-1:-1:-1;680:21288:13;;;;-1:-1:-1;;;;;680:21288:13;;;;;;:::o;6155:316:0:-;-1:-1:-1;;;;;680:21288:13;-1:-1:-1;680:21288:13;;;;;;;;;;-1:-1:-1;;680:21288:13;-1:-1:-1;;;;;;;;;;;1949:24:13;680:21288;;;;;;;2930:6:0;680:21288:13;;;;;;;;;;;;;;;;;;;;;;6346:40:0;735:10:10;6346:40:0;;;680:21288:13;6400:11:0;:::o;6248:217::-;6442:12;;;:::o"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"abi_decode_address": {
									"entryPoint": 9635,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_address_50781": {
									"entryPoint": 9657,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_string": {
									"entryPoint": 9550,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_stringt_address": {
									"entryPoint": 9679,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"abi_decode_stringt_addresst_string": {
									"entryPoint": 9744,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 3
								},
								"abi_encode_address_address": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_array_string_dyn": {
									"entryPoint": 9904,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_enum_ContractStatus": {
									"entryPoint": 10001,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_string": {
									"entryPoint": 9867,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_uint96_uint96": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_memory_array_array_string_dyn": {
									"entryPoint": 11412,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_push_from_string_to_array_string_storage_dyn_ptr": {
									"entryPoint": 10762,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"checked_mul_uint96": {
									"entryPoint": 11119,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_uint96": {
									"entryPoint": 11149,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clear_storage_range_bytes1": {
									"entryPoint": 10488,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_array_from_storage_to_memory_string": {
									"entryPoint": 11253,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_string_to_string": {
									"entryPoint": 10510,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 9834,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 10432,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 9517,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"finalize_allocation_50792": {
									"entryPoint": 9489,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"fun_callOptionalReturn": {
									"entryPoint": 11018,
									"id": 1178,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"fun_checkRole": {
									"entryPoint": 10155,
									"id": 94,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"fun_checkRole_50757": {
									"entryPoint": 10034,
									"id": 94,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"fun_grantRole": {
									"entryPoint": 10189,
									"id": 257,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"fun_nonReentrantBefore": {
									"entryPoint": 10934,
									"id": 622,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"fun_requireNotPaused": {
									"entryPoint": 10866,
									"id": 533,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"fun_revokeRole": {
									"entryPoint": 10315,
									"id": 295,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"fun_safeTransfer": {
									"entryPoint": 11174,
									"id": 801,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"fun_updateFeeRecipient_inner": {
									"entryPoint": 11604,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"fun_updatePlatformFee_inner": {
									"entryPoint": 11451,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"packed_hashed_string_to_string": {
									"entryPoint": 10834,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [],
							"immutableReferences": {
								"1358": [
									{
										"length": 32,
										"start": 921
									},
									{
										"length": 32,
										"start": 2997
									},
									{
										"length": 32,
										"start": 3104
									},
									{
										"length": 32,
										"start": 4698
									},
									{
										"length": 32,
										"start": 5999
									},
									{
										"length": 32,
										"start": 7412
									},
									{
										"length": 32,
										"start": 8097
									},
									{
										"length": 32,
										"start": 8576
									}
								]
							},
							"linkReferences": {},
							"object": "6080806040526004361015610012575f80fd5b5f90813560e01c90816301ffc9a7146124bc5750806303f715da146123aa5780630e59a3951461220557806318cf2834146121ca5780631a1aaeed1461205f57806322dcd13e14612038578063248a9ca31461200b57806324d956c814611e3f5780632f2ff15d14611e01578063317b8c5b14611dcb57806336568abe14611d8357806338a1328714611bc15780633f4ba83a14611b2c5780634690484014611b0b5780634971716f1461191d5780635c975abb146118fa57806376492d3f1461185b5780638456cb591461180157806391d14854146117b857806395ccea671461173c5780639b1221ab146115e75780639f1cf42d1461110c5780639fad59b414611069578063a0a57dac14610d25578063a217fddf14610d09578063aed1505d14610c91578063d547741f14610c4f578063d6bc7c6314610c0a578063e39fff3814610a63578063e4abd4cb1461077a578063e7079180146105d6578063ef03c10e14610243578063f0c3cd20146101c35763f160d36914610194575f80fd5b346101c05760203660031901126101c0576101bd6101b06125b9565b6101b8612732565b612d54565b80f35b80fd5b50346101c05760208060031936011261023f576001600160a01b036101e66125b9565b16825260058152604082208054906101fd82612c94565b9280840191855280852094915b838310610223576040518061021f87826126b0565b0390f35b600182819261023189612bf5565b81520196019201919461020a565b5080fd5b50346101c05760603660031901126101c0576004356001600160401b03811161023f5761027490369060040161254e565b61027c6125a3565b6044359182151583036105d257610291612ab6565b610299612732565b6102a1612a72565b6040519060ff6008825193602081818601966102be81838a61266a565b81016004815203019020015460101c16156105c0576040519181516102e481858461266a565b8301600481526001846020828060a01b0396879403019020015416838516036105ae5760ff6008604051602081865161031e81838961266a565b81016004815203019020015416600681101561059a576003036105885760206103529160405180938192865192839161266a565b810160048152030190206001600160601b036006820154169183600183015416958483541692600860035491016004815461ff0085151560081b169061ffff1916171790557f00000000000000000000000000000000000000000000000000000000000000009589835f1461052957506113888602916001600160601b03831692830361051557899161271080940497886103ec91612b8d565b936104006001600160601b0384168a612b6f565b6001600160601b031604978861041591612b8d565b996001600160601b038b16928315159a6104bb997fea4ea4b4229888eeba3eb2772df89c52af23c7fe3d530b0c1f2ca146f32c12ba966060965f80516020612de38339815191529e610504575b50506001600160601b038816806104f3575b50506001600160601b038b1690816104df575b5050505b6001600160601b0361049c88612a52565b956040519715158852818d1660208901521660408701521693a3612a52565b604080516001600160601b0395861681529290941660208301529290a36001815580f35b6104eb92861c90612ba6565b5f8080610487565b6104fd9183612ba6565b5f80610474565b61050e9184612ba6565b8e5f610462565b634e487b7160e01b5f52601160045260245ffd5b915060607fea4ea4b4229888eeba3eb2772df89c52af23c7fe3d530b0c1f2ca146f32c12ba916104bb9697995f80516020612de383398151915299859b80969a81610577575b50505061048b565b61058092612ba6565b5f808061056f565b604051635e40b94f60e01b8152600490fd5b634e487b7160e01b87526021600452602487fd5b60405163ea8e4eb560e01b8152600490fd5b60405163223da47360e21b8152600490fd5b5f80fd5b50346101c05760203660031901126101c057600435906001600160401b0382116101c05761061f602061060c366004860161254e565b816040519382858094519384920161266a565b81016004815203019020600881015460ff8160101c16156105c05781546001830154600684015460078501546001600160a01b03928316959390921693909261066a60028201612bf5565b9461067760038301612bf5565b9061068460048401612bf5565b9260050161069190612bf5565b936040519889986101e0808b528a016106a99161268b565b9260208a015260408901526001600160601b03871660608901528660601c6001600160401b0316608089015260a088019060ff16906106e791612711565b86810360c08801526106f89161268b565b85810360e08701526107099161268b565b84810361010086015261071b9161268b565b918160401c6001600160401b031661012085015260a01c6001600160401b03166101408401526001600160401b0381166101608401528060801c6001600160401b031661018084015260c01c6101a08301526101c08201600190520390f35b50346101c05760c03660031901126101c0576001600160401b03600435818111610a5f576107ac90369060040161254e565b6107b46125a3565b6044356001600160a01b0381169391908490036105d257606435926001600160601b03841684036105d257826084351660843503610a5b5760a435838111610a575761080490369060040161254e565b9161080d612732565b610815612a72565b60ff6008604051602081865161082e8183858b0161266a565b81016004815203019020015460101c16610a45578515610a33576001600160a01b0316938415610a3357858514610a21576001600160601b03811615610a0f5742846084351611156109fd578251156109eb576109b06040927fceb1a488be98b2739817f21e7d3b0a343434519cd0fe4db3ef5fc27a96e8d29594610929855160208185516108c08183858a0161266a565b81016004815203019020916108d8846002850161290e565b82546001600160a01b03199081168b17845560018401805482168d1790556006840180549091166001600160601b0388161760843560601b67ffffffffffffffff60601b161790556003830161290e565b60088101805460ff191681556007820180546001600160c01b03164260c01b6001600160c01b03191617905560049190910180545f9190610969906128c0565b601f81116109cc575b50556201000062ff000019825416179055868952600560205261099781858b20612a0a565b87895260066020526109ab81858b20612a0a565b612a52565b936001600160601b03835192168252608435166020820152a480f35b818352602083206109e591601f0160051c8101906128f8565b5f610972565b6040516307e4dd0160e31b8152600490fd5b604051630642ce7760e01b8152600490fd5b604051635e85ae7360e01b8152600490fd5b6040516324da034560e21b8152600490fd5b60405163e6c4247b60e01b8152600490fd5b6040516338a6a80760e11b8152600490fd5b8680fd5b8580fd5b8280fd5b50346101c05760208060031936011261023f576001600160401b0390600435828111610c0657610a9790369060040161254e565b610a9f612ab6565b610aa7612732565b610aaf612a72565b60405160ff6008835192858181870195610aca81838961266a565b81016004815203019020015460101c16156105c05760ff600860405185818651610af581838961266a565b810160048152030190200154166006811015610bf2576001036105885782610b289160405180938192865192839161266a565b81016004815203019020926006840154908160601c16421115610be05760088401805460ff191660051790556001600160601b0316927fb559d285c87e4fa0f561388264310703ff0c6c454a39ae52d0ae94032ff0db7091610b92918580610ba3575b5050612a52565b916040519384523393a36001815580f35b9054610bd991906001600160a01b03167f0000000000000000000000000000000000000000000000000000000000000000612ba6565b5f85610b8b565b6040516302eb354360e41b8152600490fd5b634e487b7160e01b86526021600452602486fd5b8380fd5b50346101c057806003193601126101c0576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b50346101c05760403660031901126101c057610c8d600435610c6f6125a3565b908084526002602052610c8860016040862001546127ab565b61284b565b5080f35b50346101c05760208060031936011261023f576001600160a01b03610cb46125b9565b1682526006815260408220805490610ccb82612c94565b9280840191855280852094915b838310610ced576040518061021f87826126b0565b6001828192610cfb89612bf5565b815201960192019194610cd8565b50346101c057806003193601126101c057602090604051908152f35b50346101c05760203660031901126101c0576004356001600160401b03811161023f576020610d5b610de092369060040161254e565b836101e0604051610d6b81612511565b82815282858201526060604082015260608082015260606080820152606060a08201528260c08201528260e08201528261010082015282610120820152826101408201528261016082015282610180820152826101a0820152826101c08201520152816040519382858094519384920161266a565b8101600481520301902090600860405192610dfa84612511565b80546001600160a01b0390811685526001820154166020850152610e2060028201612bf5565b6040850152610e3160038201612bf5565b6060850152610e4260048201612bf5565b6080850152610e5360058201612bf5565b60a08501526001600160401b0360068201546001600160601b03811660c0870152818160601c1660e087015260a01c1661010085015260078101546001600160401b0381166101208601526001600160401b038160401c166101408601526001600160401b038160801c1661016086015260c01c610180850152015490600660ff8316101561105557508060ff8092166101a0840152818160081c1615156101c084015260101c1615156101e082015260405180916020825260018060a01b03815116602083015260018060a01b0360208201511660408301526101e0610f96610f4e6040840151610200606087015261022086019061268b565b610f81610f6d606086015192601f1993848983030160808a015261268b565b6080860151838883030160a089015261268b565b9060a0850151908683030160c087015261268b565b916001600160601b0360c08201511660e08501526001600160401b0360e0820151166101008501526001600160401b03610100820151166101208501526001600160401b03610120820151166101408501526001600160401b03610140820151166101608501526001600160401b03610160820151166101808501526001600160401b03610180820151166101a085015261103b6101a08201516101c0860190612711565b6101c0810151151582850152015115156102008301520390f35b634e487b7160e01b81526021600452602490fd5b50346101c05760403660031901126101c0576110836125b9565b60243580151581036105d257156110f3576001600160a01b031681526005602052604081205b80546110b481612c94565b918352602080842093908084015b8383106110d7576040518061021f87826126b0565b60018281926110e589612bf5565b8152019601920191946110c2565b6001600160a01b031681526006602052604081206110a9565b50346101c05760e03660031901126101c0576001600160401b03600435818111610a5f5761113e90369060040161254e565b906111476125a3565b90604435916001600160601b0383168093036115e35760843560ff8116809103610a5b57611173612ab6565b61117b612732565b611183612a72565b60405194859260ff6008858451602097816111a38a93848a019e8f61266a565b81016004815203019020015460101c16156105c0576040519282516111c981868b61266a565b840160048152848660018060a01b03968793030190205416978483168099036105ae5760ff60086040518881885161120281838961266a565b8101600481520301902001541660068110156115cf57610588578351156115bd5787156115ab576112418660069260405180938192895192839161266a565b81016004815203019020019186835460a01c16611599577f0000000000000000000000000000000000000000000000000000000000000000948516906040516370a0823160e01b81528a60048201528781602481865afa801561158e578a918d91611559575b5010611547578691831580159061153c575b8015611531575b61140f575b604051636eb1769f60e11b81526001600160a01b03909216600483015230602483015290925082908180604481015b03915afa80156114045787918a916113d3575b50106113c1576040516323b872dd60e01b8582015260248101889052306044820152606480820188905281529460a08601908111868210176113ad577f2c138f65913cd3b9ca6f36e4b59e26830a033a978ca69f935781972e6df1f61d9561139e9461137592604052612b0a565b805467ffffffffffffffff60a01b19164260a01b67ffffffffffffffff60a01b16179055612a52565b92604051908152a36001815580f35b634e487b7160e01b5f52604160045260245ffd5b6040516313be252b60e01b8152600490fd5b809250868092503d83116113fd575b6113ec818361252d565b810103126105d2578690515f611307565b503d6113e2565b6040513d8b823e3d90fd5b8092509290923b1561152d576040519063d505accf60e01b82528a60048301523060248301528960448301526064356064830152608482015260a43560a482015260c43560c48201528a8160e48183865af19081611505575b5061147f5760405163b78cb0dd60e01b8152600490fd5b604051636eb1769f60e11b81526001600160a01b03831660048201523060248201528681604481855afa80156114fa5789918c916114c9575b50106113c1576112f49186916112c5565b809250888092503d83116114f3575b6114e2818361252d565b810103126105d2578890515f6114b8565b503d6114d8565b6040513d8d823e3d90fd5b88819c929c1161151957604052995f611468565b634e487b7160e01b82526041600452602482fd5b8a80fd5b5060c43515156112c0565b5060a43515156112b9565b604051631e9acf1760e31b8152600490fd5b809250898092503d8311611587575b611572818361252d565b81010312611583578990515f6112a7565b8b80fd5b503d611568565b6040513d8e823e3d90fd5b604051631924fceb60e31b8152600490fd5b60405163162908e360e11b8152600490fd5b604051635f0be7af60e01b8152600490fd5b634e487b7160e01b8b52602160045260248bfd5b8480fd5b50346101c0576115f6366125cf565b906115ff612732565b611607612a72565b60405160ff60088351926020818187019561162381838961266a565b81016004815203019020015460101c16156105c057604051825161164881838561266a565b60049082019081528190036020019020600101546001600160a01b0393841693168390036105ae5760ff6008604051602081865161168781838961266a565b810160048152030190200154166006811015611728576105885760206116b89160405180938192865192839161266a565b81016004815203019020906001600160401b03600683015460a01c16156117165760086116f09201600160ff19825416179055612a52565b7ecaec7345d2eb04a42197ac2a2cd7cd74a00b2991b69bb53e23465d4092fdfb8380a380f35b6040516347510bbd60e11b8152600490fd5b634e487b7160e01b85526021600452602485fd5b50346101c05760403660031901126101c0576117566125b9565b602435611761612732565b6001600160a01b03918216917f00000000000000000000000000000000000000000000000000000000000000001682146117a65780156115ab576101bd913390612ba6565b6040516318ba2fc160e31b8152600490fd5b50346101c05760403660031901126101c05760ff60406020926117d96125a3565b6004358252600285528282206001600160a01b03909116825284522054604051911615158152f35b50346101c057806003193601126101c05761181a612732565b611822612a72565b600160ff19815416176001557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586020604051338152a180f35b50346101c05760203660031901126101c0576001600160401b03600435818111610a5f57602061060c61189292369060040161254e565b810160048152030190209060088201549160ff8360101c1692836118dc575b5060209350826118c8575b50506040519015158152f35b6007015460401c1642101590505f806118bc565b60ff919350169260068410156110555750600260209314915f6118b1565b50346101c057806003193601126101c057602060ff600154166040519015158152f35b50346101c05761192c36612610565b611937929192612732565b61193f612a72565b604051825160ff600860209384818189019561195c81838961266a565b81016004815203019020015460101c16156105c057604051845161198181838561266a565b600490820190815281900383019020600101546001600160a01b0395861695168590036105ae5760ff6008604051848188516119be81838961266a565b81016004815203019020015416600681101561059a5760010361058857816119f19160405180938192885192839161266a565b810160048152030190206001600160401b039081600682015460601c164211611af957835115611ae75760088101600260ff19825416179055600781019081546203f4804201804211611ad35792611aa9876004611ab4957f934109f661b65dbccffcae4f7ee04261eb7b36e5136e1ca86dde1b00598cb0319a98956fffffffffffffffff0000000000000000611ac99b9960401b1690874216906fffffffffffffffffffffffffffffffff1916171785550161290e565b5460401c1695612a52565b9460405193849360408552604085019061268b565b918301520390a380f35b634e487b7160e01b8a52601160045260248afd5b60405163361178c760e01b8152600490fd5b60405163764b8e3360e11b8152600490fd5b50346101c057806003193601126101c057602060035460601c604051908152f35b50346101c057806003193601126101c057611b45612732565b60015460ff811615611b855760ff19166001557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6020604051338152a180f35b60405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606490fd5b50346101c05760203660031901126101c0576001600160401b03600435818111610a5f57611bf390369060040161254e565b90611bfc612ab6565b611c04612732565b611c0c612a72565b60405160ff600884519260208181880195611c2881838961266a565b81016004815203019020015460101c16156105c05760ff60086040516020818751611c5481838961266a565b81016004815203019020015416600681101561172857600203610588576020611c889160405180938192875192839161266a565b8101600481520301902090600782015460401c164210611d71575f80516020612de38339815191526001600160601b03916104bb8360068301541691611ce261271086611cd9816003541687612b6f565b16048094612b8d565b60088201805460ff19166004179055947f00000000000000000000000000000000000000000000000000000000000000009080871680611d52575b50841680611d3b575b5050600101546001600160a01b031694612a52565b611d4b9160035460601c90612ba6565b5f80611d26565b6001840154611d6b91906001600160a01b031684612ba6565b5f611d1d565b604051632d6bf64560e01b8152600490fd5b50346101c05760403660031901126101c057611d9d6125a3565b336001600160a01b03821603611db957610c8d9060043561284b565b60405163334bd91960e11b8152600490fd5b50346101c05760203660031901126101c0576004356001600160601b038116810361023f576101bd90611dfc612732565b612cbb565b50346101c05760403660031901126101c057610c8d600435611e216125a3565b908084526002602052611e3a60016040862001546127ab565b6127cd565b50346101c057611e4e366125cf565b611e56612ab6565b611e5e612732565b611e66612a72565b60405160ff600884519260208181880195611e8281838961266a565b81016004815203019020015460101c16156105c05760206040518451611ea981838661266a565b8101600481528160018060a01b03938493849303019020541693168093036105ae5760ff60086040516020818851611ee281838a61266a565b810160048152030190200154166006811015610bf257600203610588576104bb611f2760205f80516020612de383398151915294604051809381928a5192839161266a565b810160048152030190209160016001600160601b03938460068201541694611f6361271082611f5a81600354168a612b6f565b16048097612b8d565b60088301805460ff1916600417905597611f7c8a612a52565b7ecaec7345d2eb04a42197ac2a2cd7cd74a00b2991b69bb53e23465d4092fdfb8c80a37f00000000000000000000000000000000000000000000000000000000000000009080891680611ff5575b50861680611fde575b505001541694612a52565b611fee9160035460601c90612ba6565b5f80611fd3565b6120059086868601541684612ba6565b5f611fca565b50346101c05760203660031901126101c05760016040602092600435815260028452200154604051908152f35b50346101c057806003193601126101c05760206001600160601b0360035416604051908152f35b50346101c05760203660031901126101c0576004356001600160401b03811161023f5761209090369060040161254e565b612098612ab6565b6120a0612732565b60405160ff6008835192602081818701956120bc81838961266a565b81016004815203019020015460101c16156105c05760206120e89160405180938192865192839161266a565b8101600481520301902090600882019081549260ff84166006811015610bf257600181036121ab575b5061213b9260056001600160601b036006840154169560ff1916179055838061216e575050612a52565b6040519182527fb559d285c87e4fa0f561388264310703ff0c6c454a39ae52d0ae94032ff0db7060203393a36001815580f35b90546121a491906001600160a01b03167f0000000000000000000000000000000000000000000000000000000000000000612ba6565b5f83610b8b565b6002036121b8575f612111565b6040516304df0cad60e31b8152600490fd5b50346101c057806003193601126101c05760206040517fa8a7bc421f721cb936ea99efdad79237e6ee0b871a2a08cf648691f9584cdc778152f35b50346101c05761221436612610565b909161221e612732565b612226612a72565b60405191815160ff600860209586818188019561224481838961266a565b81016004815203019020015460101c16156105c057604051835161226981838561266a565b600490820190815281900385019020546001600160a01b0395861695168590036105ae5760ff6008604051868187516122a381838961266a565b81016004815203019020015416600681101561059a5760020361058857836122d69160405180938192875192839161266a565b8101600481520301902060078101926001600160401b03845460401c1642101561239857825115612386577fde7b01bef0884582ce204f7f920e57f99dd569f93867450872f436be5a03c7559361234284600585600861236b9701600360ff198254161790550161290e565b805467ffffffffffffffff60801b19164260801b67ffffffffffffffff60801b16179055612a52565b9261238060405192828493845283019061268b565b0390a380f35b60405163bc7fd33160e01b8152600490fd5b604051632d0f572d60e11b8152600490fd5b50346101c0576123b9366125cf565b906123c2612732565b60405190805160ff60086020948581818701956123e081838961266a565b81016004815203019020015460101c16156105c057604051825161240581838561266a565b600490820190815281900384019020546001600160a01b0394851694168490036105ae5760ff60086040518581865161243f81838961266a565b810160048152030190200154166006811015610bf257610588577fb559d285c87e4fa0f561388264310703ff0c6c454a39ae52d0ae94032ff0db70916008612496856124b19460405180938192875192839161266a565b8101600481520301902001600560ff19825416179055612a52565b91604051858152a380f35b90503461023f57602036600319011261023f5760043563ffffffff60e01b8116809103610a5f5760209250637965db0b60e01b8114908115612500575b5015158152f35b6301ffc9a760e01b1490505f6124f9565b61020081019081106001600160401b038211176113ad57604052565b90601f801991011681019081106001600160401b038211176113ad57604052565b81601f820112156105d2578035906001600160401b0382116113ad5760405192612582601f8401601f19166020018561252d565b828452602083830101116105d257815f926020809301838601378301015290565b602435906001600160a01b03821682036105d257565b600435906001600160a01b03821682036105d257565b60406003198201126105d257600435906001600160401b0382116105d2576125f99160040161254e565b906024356001600160a01b03811681036105d25790565b60606003198201126105d2576001600160401b03916004358381116105d2578261263c9160040161254e565b926024356001600160a01b03811681036105d257926044359182116105d2576126679160040161254e565b90565b5f5b83811061267b5750505f910152565b818101518382015260200161266c565b906020916126a48151809281855285808601910161266a565b601f01601f1916010190565b602080820190808352835180925260408301928160408460051b8301019501935f915b8483106126e35750505050505090565b9091929394958480612701600193603f198682030187528a5161268b565b98019301930191949392906126d3565b90600682101561271e5752565b634e487b7160e01b5f52602160045260245ffd5b335f9081527fef73bf2ac44f84561b5498839ab1c8c5a4dd99305d838aea0d76c5961778535c60205260409020547fa8a7bc421f721cb936ea99efdad79237e6ee0b871a2a08cf648691f9584cdc779060ff161561278d5750565b6044906040519063e2517d3f60e01b82523360048301526024820152fd5b805f52600260205260405f20335f5260205260ff60405f2054161561278d5750565b905f918083526002602052604083209160018060a01b03169182845260205260ff604084205416155f146128465780835260026020526040832082845260205260408320600160ff198254161790557f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d339380a4600190565b505090565b905f918083526002602052604083209160018060a01b03169182845260205260ff6040842054165f14612846578083526002602052604083208284526020526040832060ff1981541690557ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b339380a4600190565b90600182811c921680156128ee575b60208310146128da57565b634e487b7160e01b5f52602260045260245ffd5b91607f16916128cf565b818110612903575050565b5f81556001016128f8565b91909182516001600160401b0381116113ad5761292b82546128c0565b601f81116129cf575b50602080601f831160011461296f5750819293945f92612964575b50508160011b915f199060031b1c1916179055565b015190505f8061294f565b90601f19831695845f52825f20925f905b8882106129b75750508360019596971061299f575b505050811b019055565b01515f1960f88460031b161c191690555f8080612995565b80600185968294968601518155019501930190612980565b6129fa90835f5260205f20601f840160051c81019160208510612a00575b601f0160051c01906128f8565b5f612934565b90915081906129ed565b908154680100000000000000008110156113ad5760018101808455811015612a3e57612a3c925f5260205f200161290e565b565b634e487b7160e01b5f52603260045260245ffd5b612a6a9060206040519282848094519384920161266a565b810103902090565b60ff60015416612a7e57565b60405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606490fd5b60025f5414612ac55760025f55565b60405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606490fd5b905f602091828151910182855af115612b64575f513d612b5b57506001600160a01b0381163b155b612b395750565b604051635274afe760e01b81526001600160a01b039091166004820152602490fd5b60011415612b32565b6040513d5f823e3d90fd5b9190916001600160601b038080941691160291821691820361051557565b6001600160601b03918216908216039190821161051557565b60405163a9059cbb60e01b60208201526001600160a01b03909216602483015260448083019390935291815260808101916001600160401b038311828410176113ad57612a3c92604052612b0a565b9060405191825f825492612c08846128c0565b9081845260019485811690815f14612c715750600114612c31575b5050612a3c9250038361252d565b909391505f52602090815f20935f915b818310612c59575050612a3c93508201015f80612c23565b85548884018501529485019487945091830191612c41565b915050612a3c94506020925060ff191682840152151560051b8201015f80612c23565b906001600160401b0382116113ad5760405191612cb760208260051b018461252d565b8252565b6001600160601b03908181166103e88111612d425760035492831690808214612d3c576bffffffffffffffffffffffff1990931692909217600355604080516001600160601b0393841681529190921660208201527ffeeddf72b7ee4210b769104cb8b071e5706232ac7f671fb292af429ffd58b58791819081015b0390a1565b50505050565b60405163cd4e616760e01b8152600490fd5b6001600160a01b038116908115610a3357600354918260601c908114612ddd576001600160601b03909216606082901b6bffffffffffffffffffffffff191617600355604080516001600160a01b0393841681529290911660208301527faaebcf1bfa00580e41d966056b48521fa9f202645c86d4ddf28113e617c1b1d3919081908101612d37565b50505056fe8531198e5d946af9a770d2eeba00258645e163142d835fe1b04e45f4db720f8ba26469706673582212209f68eb11def6ace195be9b728ee01d2c0b4c80f5e7616afed9da57cff3c0c44164736f6c63430008140033",
							"opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 SWAP1 DUP2 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x1FFC9A7 EQ PUSH2 0x24BC JUMPI POP DUP1 PUSH4 0x3F715DA EQ PUSH2 0x23AA JUMPI DUP1 PUSH4 0xE59A395 EQ PUSH2 0x2205 JUMPI DUP1 PUSH4 0x18CF2834 EQ PUSH2 0x21CA JUMPI DUP1 PUSH4 0x1A1AAEED EQ PUSH2 0x205F JUMPI DUP1 PUSH4 0x22DCD13E EQ PUSH2 0x2038 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x200B JUMPI DUP1 PUSH4 0x24D956C8 EQ PUSH2 0x1E3F JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x1E01 JUMPI DUP1 PUSH4 0x317B8C5B EQ PUSH2 0x1DCB JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x1D83 JUMPI DUP1 PUSH4 0x38A13287 EQ PUSH2 0x1BC1 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x1B2C JUMPI DUP1 PUSH4 0x46904840 EQ PUSH2 0x1B0B JUMPI DUP1 PUSH4 0x4971716F EQ PUSH2 0x191D JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x18FA JUMPI DUP1 PUSH4 0x76492D3F EQ PUSH2 0x185B JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x1801 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x17B8 JUMPI DUP1 PUSH4 0x95CCEA67 EQ PUSH2 0x173C JUMPI DUP1 PUSH4 0x9B1221AB EQ PUSH2 0x15E7 JUMPI DUP1 PUSH4 0x9F1CF42D EQ PUSH2 0x110C JUMPI DUP1 PUSH4 0x9FAD59B4 EQ PUSH2 0x1069 JUMPI DUP1 PUSH4 0xA0A57DAC EQ PUSH2 0xD25 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0xD09 JUMPI DUP1 PUSH4 0xAED1505D EQ PUSH2 0xC91 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0xC4F JUMPI DUP1 PUSH4 0xD6BC7C63 EQ PUSH2 0xC0A JUMPI DUP1 PUSH4 0xE39FFF38 EQ PUSH2 0xA63 JUMPI DUP1 PUSH4 0xE4ABD4CB EQ PUSH2 0x77A JUMPI DUP1 PUSH4 0xE7079180 EQ PUSH2 0x5D6 JUMPI DUP1 PUSH4 0xEF03C10E EQ PUSH2 0x243 JUMPI DUP1 PUSH4 0xF0C3CD20 EQ PUSH2 0x1C3 JUMPI PUSH4 0xF160D369 EQ PUSH2 0x194 JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1C0 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C0 JUMPI PUSH2 0x1BD PUSH2 0x1B0 PUSH2 0x25B9 JUMP JUMPDEST PUSH2 0x1B8 PUSH2 0x2732 JUMP JUMPDEST PUSH2 0x2D54 JUMP JUMPDEST DUP1 RETURN JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1C0 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x23F JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x1E6 PUSH2 0x25B9 JUMP JUMPDEST AND DUP3 MSTORE PUSH1 0x5 DUP2 MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP1 SLOAD SWAP1 PUSH2 0x1FD DUP3 PUSH2 0x2C94 JUMP JUMPDEST SWAP3 DUP1 DUP5 ADD SWAP2 DUP6 MSTORE DUP1 DUP6 KECCAK256 SWAP5 SWAP2 JUMPDEST DUP4 DUP4 LT PUSH2 0x223 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH2 0x21F DUP8 DUP3 PUSH2 0x26B0 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 DUP3 DUP2 SWAP3 PUSH2 0x231 DUP10 PUSH2 0x2BF5 JUMP JUMPDEST DUP2 MSTORE ADD SWAP7 ADD SWAP3 ADD SWAP2 SWAP5 PUSH2 0x20A JUMP JUMPDEST POP DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1C0 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C0 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x23F JUMPI PUSH2 0x274 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x254E JUMP JUMPDEST PUSH2 0x27C PUSH2 0x25A3 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP2 DUP3 ISZERO ISZERO DUP4 SUB PUSH2 0x5D2 JUMPI PUSH2 0x291 PUSH2 0x2AB6 JUMP JUMPDEST PUSH2 0x299 PUSH2 0x2732 JUMP JUMPDEST PUSH2 0x2A1 PUSH2 0x2A72 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH1 0xFF PUSH1 0x8 DUP3 MLOAD SWAP4 PUSH1 0x20 DUP2 DUP2 DUP7 ADD SWAP7 PUSH2 0x2BE DUP2 DUP4 DUP11 PUSH2 0x266A JUMP JUMPDEST DUP2 ADD PUSH1 0x4 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 ADD SLOAD PUSH1 0x10 SHR AND ISZERO PUSH2 0x5C0 JUMPI PUSH1 0x40 MLOAD SWAP2 DUP2 MLOAD PUSH2 0x2E4 DUP2 DUP6 DUP5 PUSH2 0x266A JUMP JUMPDEST DUP4 ADD PUSH1 0x4 DUP2 MSTORE PUSH1 0x1 DUP5 PUSH1 0x20 DUP3 DUP1 PUSH1 0xA0 SHL SUB SWAP7 DUP8 SWAP5 SUB ADD SWAP1 KECCAK256 ADD SLOAD AND DUP4 DUP6 AND SUB PUSH2 0x5AE JUMPI PUSH1 0xFF PUSH1 0x8 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP7 MLOAD PUSH2 0x31E DUP2 DUP4 DUP10 PUSH2 0x266A JUMP JUMPDEST DUP2 ADD PUSH1 0x4 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 ADD SLOAD AND PUSH1 0x6 DUP2 LT ISZERO PUSH2 0x59A JUMPI PUSH1 0x3 SUB PUSH2 0x588 JUMPI PUSH1 0x20 PUSH2 0x352 SWAP2 PUSH1 0x40 MLOAD DUP1 SWAP4 DUP2 SWAP3 DUP7 MLOAD SWAP3 DUP4 SWAP2 PUSH2 0x266A JUMP JUMPDEST DUP2 ADD PUSH1 0x4 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0x6 DUP3 ADD SLOAD AND SWAP2 DUP4 PUSH1 0x1 DUP4 ADD SLOAD AND SWAP6 DUP5 DUP4 SLOAD AND SWAP3 PUSH1 0x8 PUSH1 0x3 SLOAD SWAP2 ADD PUSH1 0x4 DUP2 SLOAD PUSH2 0xFF00 DUP6 ISZERO ISZERO PUSH1 0x8 SHL AND SWAP1 PUSH2 0xFFFF NOT AND OR OR SWAP1 SSTORE PUSH32 0x0 SWAP6 DUP10 DUP4 PUSH0 EQ PUSH2 0x529 JUMPI POP PUSH2 0x1388 DUP7 MUL SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP4 AND SWAP3 DUP4 SUB PUSH2 0x515 JUMPI DUP10 SWAP2 PUSH2 0x2710 DUP1 SWAP5 DIV SWAP8 DUP9 PUSH2 0x3EC SWAP2 PUSH2 0x2B8D JUMP JUMPDEST SWAP4 PUSH2 0x400 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP5 AND DUP11 PUSH2 0x2B6F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND DIV SWAP8 DUP9 PUSH2 0x415 SWAP2 PUSH2 0x2B8D JUMP JUMPDEST SWAP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP12 AND SWAP3 DUP4 ISZERO ISZERO SWAP11 PUSH2 0x4BB SWAP10 PUSH32 0xEA4EA4B4229888EEBA3EB2772DF89C52AF23C7FE3D530B0C1F2CA146F32C12BA SWAP7 PUSH1 0x60 SWAP7 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2DE3 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP15 PUSH2 0x504 JUMPI JUMPDEST POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP9 AND DUP1 PUSH2 0x4F3 JUMPI JUMPDEST POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP12 AND SWAP1 DUP2 PUSH2 0x4DF JUMPI JUMPDEST POP POP POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH2 0x49C DUP9 PUSH2 0x2A52 JUMP JUMPDEST SWAP6 PUSH1 0x40 MLOAD SWAP8 ISZERO ISZERO DUP9 MSTORE DUP2 DUP14 AND PUSH1 0x20 DUP10 ADD MSTORE AND PUSH1 0x40 DUP8 ADD MSTORE AND SWAP4 LOG3 PUSH2 0x2A52 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB SWAP6 DUP7 AND DUP2 MSTORE SWAP3 SWAP1 SWAP5 AND PUSH1 0x20 DUP4 ADD MSTORE SWAP3 SWAP1 LOG3 PUSH1 0x1 DUP2 SSTORE DUP1 RETURN JUMPDEST PUSH2 0x4EB SWAP3 DUP7 SHR SWAP1 PUSH2 0x2BA6 JUMP JUMPDEST PUSH0 DUP1 DUP1 PUSH2 0x487 JUMP JUMPDEST PUSH2 0x4FD SWAP2 DUP4 PUSH2 0x2BA6 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x474 JUMP JUMPDEST PUSH2 0x50E SWAP2 DUP5 PUSH2 0x2BA6 JUMP JUMPDEST DUP15 PUSH0 PUSH2 0x462 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP2 POP PUSH1 0x60 PUSH32 0xEA4EA4B4229888EEBA3EB2772DF89C52AF23C7FE3D530B0C1F2CA146F32C12BA SWAP2 PUSH2 0x4BB SWAP7 SWAP8 SWAP10 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2DE3 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP10 DUP6 SWAP12 DUP1 SWAP7 SWAP11 DUP2 PUSH2 0x577 JUMPI JUMPDEST POP POP POP PUSH2 0x48B JUMP JUMPDEST PUSH2 0x580 SWAP3 PUSH2 0x2BA6 JUMP JUMPDEST PUSH0 DUP1 DUP1 PUSH2 0x56F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x5E40B94F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP8 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 DUP8 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xEA8E4EB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x223DA473 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1C0 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C0 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x1C0 JUMPI PUSH2 0x61F PUSH1 0x20 PUSH2 0x60C CALLDATASIZE PUSH1 0x4 DUP7 ADD PUSH2 0x254E JUMP JUMPDEST DUP2 PUSH1 0x40 MLOAD SWAP4 DUP3 DUP6 DUP1 SWAP5 MLOAD SWAP4 DUP5 SWAP3 ADD PUSH2 0x266A JUMP JUMPDEST DUP2 ADD PUSH1 0x4 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 PUSH1 0x8 DUP2 ADD SLOAD PUSH1 0xFF DUP2 PUSH1 0x10 SHR AND ISZERO PUSH2 0x5C0 JUMPI DUP2 SLOAD PUSH1 0x1 DUP4 ADD SLOAD PUSH1 0x6 DUP5 ADD SLOAD PUSH1 0x7 DUP6 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP6 SWAP4 SWAP1 SWAP3 AND SWAP4 SWAP1 SWAP3 PUSH2 0x66A PUSH1 0x2 DUP3 ADD PUSH2 0x2BF5 JUMP JUMPDEST SWAP5 PUSH2 0x677 PUSH1 0x3 DUP4 ADD PUSH2 0x2BF5 JUMP JUMPDEST SWAP1 PUSH2 0x684 PUSH1 0x4 DUP5 ADD PUSH2 0x2BF5 JUMP JUMPDEST SWAP3 PUSH1 0x5 ADD PUSH2 0x691 SWAP1 PUSH2 0x2BF5 JUMP JUMPDEST SWAP4 PUSH1 0x40 MLOAD SWAP9 DUP10 SWAP9 PUSH2 0x1E0 DUP1 DUP12 MSTORE DUP11 ADD PUSH2 0x6A9 SWAP2 PUSH2 0x268B JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP11 ADD MSTORE PUSH1 0x40 DUP10 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP8 AND PUSH1 0x60 DUP10 ADD MSTORE DUP7 PUSH1 0x60 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x80 DUP10 ADD MSTORE PUSH1 0xA0 DUP9 ADD SWAP1 PUSH1 0xFF AND SWAP1 PUSH2 0x6E7 SWAP2 PUSH2 0x2711 JUMP JUMPDEST DUP7 DUP2 SUB PUSH1 0xC0 DUP9 ADD MSTORE PUSH2 0x6F8 SWAP2 PUSH2 0x268B JUMP JUMPDEST DUP6 DUP2 SUB PUSH1 0xE0 DUP8 ADD MSTORE PUSH2 0x709 SWAP2 PUSH2 0x268B JUMP JUMPDEST DUP5 DUP2 SUB PUSH2 0x100 DUP7 ADD MSTORE PUSH2 0x71B SWAP2 PUSH2 0x268B JUMP JUMPDEST SWAP2 DUP2 PUSH1 0x40 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH2 0x120 DUP6 ADD MSTORE PUSH1 0xA0 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH2 0x140 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 AND PUSH2 0x160 DUP5 ADD MSTORE DUP1 PUSH1 0x80 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH2 0x180 DUP5 ADD MSTORE PUSH1 0xC0 SHR PUSH2 0x1A0 DUP4 ADD MSTORE PUSH2 0x1C0 DUP3 ADD PUSH1 0x1 SWAP1 MSTORE SUB SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x1C0 JUMPI PUSH1 0xC0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C0 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x4 CALLDATALOAD DUP2 DUP2 GT PUSH2 0xA5F JUMPI PUSH2 0x7AC SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x254E JUMP JUMPDEST PUSH2 0x7B4 PUSH2 0x25A3 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP4 SWAP2 SWAP1 DUP5 SWAP1 SUB PUSH2 0x5D2 JUMPI PUSH1 0x64 CALLDATALOAD SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP5 AND DUP5 SUB PUSH2 0x5D2 JUMPI DUP3 PUSH1 0x84 CALLDATALOAD AND PUSH1 0x84 CALLDATALOAD SUB PUSH2 0xA5B JUMPI PUSH1 0xA4 CALLDATALOAD DUP4 DUP2 GT PUSH2 0xA57 JUMPI PUSH2 0x804 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x254E JUMP JUMPDEST SWAP2 PUSH2 0x80D PUSH2 0x2732 JUMP JUMPDEST PUSH2 0x815 PUSH2 0x2A72 JUMP JUMPDEST PUSH1 0xFF PUSH1 0x8 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP7 MLOAD PUSH2 0x82E DUP2 DUP4 DUP6 DUP12 ADD PUSH2 0x266A JUMP JUMPDEST DUP2 ADD PUSH1 0x4 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 ADD SLOAD PUSH1 0x10 SHR AND PUSH2 0xA45 JUMPI DUP6 ISZERO PUSH2 0xA33 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP4 DUP5 ISZERO PUSH2 0xA33 JUMPI DUP6 DUP6 EQ PUSH2 0xA21 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP2 AND ISZERO PUSH2 0xA0F JUMPI TIMESTAMP DUP5 PUSH1 0x84 CALLDATALOAD AND GT ISZERO PUSH2 0x9FD JUMPI DUP3 MLOAD ISZERO PUSH2 0x9EB JUMPI PUSH2 0x9B0 PUSH1 0x40 SWAP3 PUSH32 0xCEB1A488BE98B2739817F21E7D3B0A343434519CD0FE4DB3EF5FC27A96E8D295 SWAP5 PUSH2 0x929 DUP6 MLOAD PUSH1 0x20 DUP2 DUP6 MLOAD PUSH2 0x8C0 DUP2 DUP4 DUP6 DUP11 ADD PUSH2 0x266A JUMP JUMPDEST DUP2 ADD PUSH1 0x4 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 SWAP2 PUSH2 0x8D8 DUP5 PUSH1 0x2 DUP6 ADD PUSH2 0x290E JUMP JUMPDEST DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND DUP12 OR DUP5 SSTORE PUSH1 0x1 DUP5 ADD DUP1 SLOAD DUP3 AND DUP14 OR SWAP1 SSTORE PUSH1 0x6 DUP5 ADD DUP1 SLOAD SWAP1 SWAP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP9 AND OR PUSH1 0x84 CALLDATALOAD PUSH1 0x60 SHL PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x60 SHL AND OR SWAP1 SSTORE PUSH1 0x3 DUP4 ADD PUSH2 0x290E JUMP JUMPDEST PUSH1 0x8 DUP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND DUP2 SSTORE PUSH1 0x7 DUP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xC0 SHL SUB AND TIMESTAMP PUSH1 0xC0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xC0 SHL SUB NOT AND OR SWAP1 SSTORE PUSH1 0x4 SWAP2 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH0 SWAP2 SWAP1 PUSH2 0x969 SWAP1 PUSH2 0x28C0 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x9CC JUMPI JUMPDEST POP SSTORE PUSH3 0x10000 PUSH3 0xFF0000 NOT DUP3 SLOAD AND OR SWAP1 SSTORE DUP7 DUP10 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH2 0x997 DUP2 DUP6 DUP12 KECCAK256 PUSH2 0x2A0A JUMP JUMPDEST DUP8 DUP10 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH2 0x9AB DUP2 DUP6 DUP12 KECCAK256 PUSH2 0x2A0A JUMP JUMPDEST PUSH2 0x2A52 JUMP JUMPDEST SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP4 MLOAD SWAP3 AND DUP3 MSTORE PUSH1 0x84 CALLDATALOAD AND PUSH1 0x20 DUP3 ADD MSTORE LOG4 DUP1 RETURN JUMPDEST DUP2 DUP4 MSTORE PUSH1 0x20 DUP4 KECCAK256 PUSH2 0x9E5 SWAP2 PUSH1 0x1F ADD PUSH1 0x5 SHR DUP2 ADD SWAP1 PUSH2 0x28F8 JUMP JUMPDEST PUSH0 PUSH2 0x972 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x7E4DD01 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x642CE77 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x5E85AE73 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x24DA0345 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xE6C4247B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x38A6A807 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST DUP7 DUP1 REVERT JUMPDEST DUP6 DUP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1C0 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x23F JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 PUSH1 0x4 CALLDATALOAD DUP3 DUP2 GT PUSH2 0xC06 JUMPI PUSH2 0xA97 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x254E JUMP JUMPDEST PUSH2 0xA9F PUSH2 0x2AB6 JUMP JUMPDEST PUSH2 0xAA7 PUSH2 0x2732 JUMP JUMPDEST PUSH2 0xAAF PUSH2 0x2A72 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF PUSH1 0x8 DUP4 MLOAD SWAP3 DUP6 DUP2 DUP2 DUP8 ADD SWAP6 PUSH2 0xACA DUP2 DUP4 DUP10 PUSH2 0x266A JUMP JUMPDEST DUP2 ADD PUSH1 0x4 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 ADD SLOAD PUSH1 0x10 SHR AND ISZERO PUSH2 0x5C0 JUMPI PUSH1 0xFF PUSH1 0x8 PUSH1 0x40 MLOAD DUP6 DUP2 DUP7 MLOAD PUSH2 0xAF5 DUP2 DUP4 DUP10 PUSH2 0x266A JUMP JUMPDEST DUP2 ADD PUSH1 0x4 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 ADD SLOAD AND PUSH1 0x6 DUP2 LT ISZERO PUSH2 0xBF2 JUMPI PUSH1 0x1 SUB PUSH2 0x588 JUMPI DUP3 PUSH2 0xB28 SWAP2 PUSH1 0x40 MLOAD DUP1 SWAP4 DUP2 SWAP3 DUP7 MLOAD SWAP3 DUP4 SWAP2 PUSH2 0x266A JUMP JUMPDEST DUP2 ADD PUSH1 0x4 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 SWAP3 PUSH1 0x6 DUP5 ADD SLOAD SWAP1 DUP2 PUSH1 0x60 SHR AND TIMESTAMP GT ISZERO PUSH2 0xBE0 JUMPI PUSH1 0x8 DUP5 ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x5 OR SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND SWAP3 PUSH32 0xB559D285C87E4FA0F561388264310703FF0C6C454A39AE52D0AE94032FF0DB70 SWAP2 PUSH2 0xB92 SWAP2 DUP6 DUP1 PUSH2 0xBA3 JUMPI JUMPDEST POP POP PUSH2 0x2A52 JUMP JUMPDEST SWAP2 PUSH1 0x40 MLOAD SWAP4 DUP5 MSTORE CALLER SWAP4 LOG3 PUSH1 0x1 DUP2 SSTORE DUP1 RETURN JUMPDEST SWAP1 SLOAD PUSH2 0xBD9 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x0 PUSH2 0x2BA6 JUMP JUMPDEST PUSH0 DUP6 PUSH2 0xB8B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x2EB3543 PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP7 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 DUP7 REVERT JUMPDEST DUP4 DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1C0 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1C0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x1C0 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C0 JUMPI PUSH2 0xC8D PUSH1 0x4 CALLDATALOAD PUSH2 0xC6F PUSH2 0x25A3 JUMP JUMPDEST SWAP1 DUP1 DUP5 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH2 0xC88 PUSH1 0x1 PUSH1 0x40 DUP7 KECCAK256 ADD SLOAD PUSH2 0x27AB JUMP JUMPDEST PUSH2 0x284B JUMP JUMPDEST POP DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x1C0 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x23F JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xCB4 PUSH2 0x25B9 JUMP JUMPDEST AND DUP3 MSTORE PUSH1 0x6 DUP2 MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP1 SLOAD SWAP1 PUSH2 0xCCB DUP3 PUSH2 0x2C94 JUMP JUMPDEST SWAP3 DUP1 DUP5 ADD SWAP2 DUP6 MSTORE DUP1 DUP6 KECCAK256 SWAP5 SWAP2 JUMPDEST DUP4 DUP4 LT PUSH2 0xCED JUMPI PUSH1 0x40 MLOAD DUP1 PUSH2 0x21F DUP8 DUP3 PUSH2 0x26B0 JUMP JUMPDEST PUSH1 0x1 DUP3 DUP2 SWAP3 PUSH2 0xCFB DUP10 PUSH2 0x2BF5 JUMP JUMPDEST DUP2 MSTORE ADD SWAP7 ADD SWAP3 ADD SWAP2 SWAP5 PUSH2 0xCD8 JUMP JUMPDEST POP CALLVALUE PUSH2 0x1C0 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1C0 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1C0 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C0 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x23F JUMPI PUSH1 0x20 PUSH2 0xD5B PUSH2 0xDE0 SWAP3 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x254E JUMP JUMPDEST DUP4 PUSH2 0x1E0 PUSH1 0x40 MLOAD PUSH2 0xD6B DUP2 PUSH2 0x2511 JUMP JUMPDEST DUP3 DUP2 MSTORE DUP3 DUP6 DUP3 ADD MSTORE PUSH1 0x60 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP1 DUP3 ADD MSTORE PUSH1 0x60 PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x60 PUSH1 0xA0 DUP3 ADD MSTORE DUP3 PUSH1 0xC0 DUP3 ADD MSTORE DUP3 PUSH1 0xE0 DUP3 ADD MSTORE DUP3 PUSH2 0x100 DUP3 ADD MSTORE DUP3 PUSH2 0x120 DUP3 ADD MSTORE DUP3 PUSH2 0x140 DUP3 ADD MSTORE DUP3 PUSH2 0x160 DUP3 ADD MSTORE DUP3 PUSH2 0x180 DUP3 ADD MSTORE DUP3 PUSH2 0x1A0 DUP3 ADD MSTORE DUP3 PUSH2 0x1C0 DUP3 ADD MSTORE ADD MSTORE DUP2 PUSH1 0x40 MLOAD SWAP4 DUP3 DUP6 DUP1 SWAP5 MLOAD SWAP4 DUP5 SWAP3 ADD PUSH2 0x266A JUMP JUMPDEST DUP2 ADD PUSH1 0x4 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 SWAP1 PUSH1 0x8 PUSH1 0x40 MLOAD SWAP3 PUSH2 0xDFA DUP5 PUSH2 0x2511 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP6 MSTORE PUSH1 0x1 DUP3 ADD SLOAD AND PUSH1 0x20 DUP6 ADD MSTORE PUSH2 0xE20 PUSH1 0x2 DUP3 ADD PUSH2 0x2BF5 JUMP JUMPDEST PUSH1 0x40 DUP6 ADD MSTORE PUSH2 0xE31 PUSH1 0x3 DUP3 ADD PUSH2 0x2BF5 JUMP JUMPDEST PUSH1 0x60 DUP6 ADD MSTORE PUSH2 0xE42 PUSH1 0x4 DUP3 ADD PUSH2 0x2BF5 JUMP JUMPDEST PUSH1 0x80 DUP6 ADD MSTORE PUSH2 0xE53 PUSH1 0x5 DUP3 ADD PUSH2 0x2BF5 JUMP JUMPDEST PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x6 DUP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP2 AND PUSH1 0xC0 DUP8 ADD MSTORE DUP2 DUP2 PUSH1 0x60 SHR AND PUSH1 0xE0 DUP8 ADD MSTORE PUSH1 0xA0 SHR AND PUSH2 0x100 DUP6 ADD MSTORE PUSH1 0x7 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 AND PUSH2 0x120 DUP7 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 PUSH1 0x40 SHR AND PUSH2 0x140 DUP7 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 PUSH1 0x80 SHR AND PUSH2 0x160 DUP7 ADD MSTORE PUSH1 0xC0 SHR PUSH2 0x180 DUP6 ADD MSTORE ADD SLOAD SWAP1 PUSH1 0x6 PUSH1 0xFF DUP4 AND LT ISZERO PUSH2 0x1055 JUMPI POP DUP1 PUSH1 0xFF DUP1 SWAP3 AND PUSH2 0x1A0 DUP5 ADD MSTORE DUP2 DUP2 PUSH1 0x8 SHR AND ISZERO ISZERO PUSH2 0x1C0 DUP5 ADD MSTORE PUSH1 0x10 SHR AND ISZERO ISZERO PUSH2 0x1E0 DUP3 ADD MSTORE PUSH1 0x40 MLOAD DUP1 SWAP2 PUSH1 0x20 DUP3 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP2 MLOAD AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x20 DUP3 ADD MLOAD AND PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x1E0 PUSH2 0xF96 PUSH2 0xF4E PUSH1 0x40 DUP5 ADD MLOAD PUSH2 0x200 PUSH1 0x60 DUP8 ADD MSTORE PUSH2 0x220 DUP7 ADD SWAP1 PUSH2 0x268B JUMP JUMPDEST PUSH2 0xF81 PUSH2 0xF6D PUSH1 0x60 DUP7 ADD MLOAD SWAP3 PUSH1 0x1F NOT SWAP4 DUP5 DUP10 DUP4 SUB ADD PUSH1 0x80 DUP11 ADD MSTORE PUSH2 0x268B JUMP JUMPDEST PUSH1 0x80 DUP7 ADD MLOAD DUP4 DUP9 DUP4 SUB ADD PUSH1 0xA0 DUP10 ADD MSTORE PUSH2 0x268B JUMP JUMPDEST SWAP1 PUSH1 0xA0 DUP6 ADD MLOAD SWAP1 DUP7 DUP4 SUB ADD PUSH1 0xC0 DUP8 ADD MSTORE PUSH2 0x268B JUMP JUMPDEST SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xC0 DUP3 ADD MLOAD AND PUSH1 0xE0 DUP6 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0xE0 DUP3 ADD MLOAD AND PUSH2 0x100 DUP6 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH2 0x100 DUP3 ADD MLOAD AND PUSH2 0x120 DUP6 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH2 0x120 DUP3 ADD MLOAD AND PUSH2 0x140 DUP6 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH2 0x140 DUP3 ADD MLOAD AND PUSH2 0x160 DUP6 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH2 0x160 DUP3 ADD MLOAD AND PUSH2 0x180 DUP6 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH2 0x180 DUP3 ADD MLOAD AND PUSH2 0x1A0 DUP6 ADD MSTORE PUSH2 0x103B PUSH2 0x1A0 DUP3 ADD MLOAD PUSH2 0x1C0 DUP7 ADD SWAP1 PUSH2 0x2711 JUMP JUMPDEST PUSH2 0x1C0 DUP2 ADD MLOAD ISZERO ISZERO DUP3 DUP6 ADD MSTORE ADD MLOAD ISZERO ISZERO PUSH2 0x200 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1C0 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C0 JUMPI PUSH2 0x1083 PUSH2 0x25B9 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x5D2 JUMPI ISZERO PUSH2 0x10F3 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 JUMPDEST DUP1 SLOAD PUSH2 0x10B4 DUP2 PUSH2 0x2C94 JUMP JUMPDEST SWAP2 DUP4 MSTORE PUSH1 0x20 DUP1 DUP5 KECCAK256 SWAP4 SWAP1 DUP1 DUP5 ADD JUMPDEST DUP4 DUP4 LT PUSH2 0x10D7 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH2 0x21F DUP8 DUP3 PUSH2 0x26B0 JUMP JUMPDEST PUSH1 0x1 DUP3 DUP2 SWAP3 PUSH2 0x10E5 DUP10 PUSH2 0x2BF5 JUMP JUMPDEST DUP2 MSTORE ADD SWAP7 ADD SWAP3 ADD SWAP2 SWAP5 PUSH2 0x10C2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0x10A9 JUMP JUMPDEST POP CALLVALUE PUSH2 0x1C0 JUMPI PUSH1 0xE0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C0 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x4 CALLDATALOAD DUP2 DUP2 GT PUSH2 0xA5F JUMPI PUSH2 0x113E SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x254E JUMP JUMPDEST SWAP1 PUSH2 0x1147 PUSH2 0x25A3 JUMP JUMPDEST SWAP1 PUSH1 0x44 CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP4 AND DUP1 SWAP4 SUB PUSH2 0x15E3 JUMPI PUSH1 0x84 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP1 SWAP2 SUB PUSH2 0xA5B JUMPI PUSH2 0x1173 PUSH2 0x2AB6 JUMP JUMPDEST PUSH2 0x117B PUSH2 0x2732 JUMP JUMPDEST PUSH2 0x1183 PUSH2 0x2A72 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP3 PUSH1 0xFF PUSH1 0x8 DUP6 DUP5 MLOAD PUSH1 0x20 SWAP8 DUP2 PUSH2 0x11A3 DUP11 SWAP4 DUP5 DUP11 ADD SWAP15 DUP16 PUSH2 0x266A JUMP JUMPDEST DUP2 ADD PUSH1 0x4 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 ADD SLOAD PUSH1 0x10 SHR AND ISZERO PUSH2 0x5C0 JUMPI PUSH1 0x40 MLOAD SWAP3 DUP3 MLOAD PUSH2 0x11C9 DUP2 DUP7 DUP12 PUSH2 0x266A JUMP JUMPDEST DUP5 ADD PUSH1 0x4 DUP2 MSTORE DUP5 DUP7 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP7 DUP8 SWAP4 SUB ADD SWAP1 KECCAK256 SLOAD AND SWAP8 DUP5 DUP4 AND DUP1 SWAP10 SUB PUSH2 0x5AE JUMPI PUSH1 0xFF PUSH1 0x8 PUSH1 0x40 MLOAD DUP9 DUP2 DUP9 MLOAD PUSH2 0x1202 DUP2 DUP4 DUP10 PUSH2 0x266A JUMP JUMPDEST DUP2 ADD PUSH1 0x4 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 ADD SLOAD AND PUSH1 0x6 DUP2 LT ISZERO PUSH2 0x15CF JUMPI PUSH2 0x588 JUMPI DUP4 MLOAD ISZERO PUSH2 0x15BD JUMPI DUP8 ISZERO PUSH2 0x15AB JUMPI PUSH2 0x1241 DUP7 PUSH1 0x6 SWAP3 PUSH1 0x40 MLOAD DUP1 SWAP4 DUP2 SWAP3 DUP10 MLOAD SWAP3 DUP4 SWAP2 PUSH2 0x266A JUMP JUMPDEST DUP2 ADD PUSH1 0x4 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 ADD SWAP2 DUP7 DUP4 SLOAD PUSH1 0xA0 SHR AND PUSH2 0x1599 JUMPI PUSH32 0x0 SWAP5 DUP6 AND SWAP1 PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE DUP11 PUSH1 0x4 DUP3 ADD MSTORE DUP8 DUP2 PUSH1 0x24 DUP2 DUP7 GAS STATICCALL DUP1 ISZERO PUSH2 0x158E JUMPI DUP11 SWAP2 DUP14 SWAP2 PUSH2 0x1559 JUMPI JUMPDEST POP LT PUSH2 0x1547 JUMPI DUP7 SWAP2 DUP4 ISZERO DUP1 ISZERO SWAP1 PUSH2 0x153C JUMPI JUMPDEST DUP1 ISZERO PUSH2 0x1531 JUMPI JUMPDEST PUSH2 0x140F JUMPI JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE ADDRESS PUSH1 0x24 DUP4 ADD MSTORE SWAP1 SWAP3 POP DUP3 SWAP1 DUP2 DUP1 PUSH1 0x44 DUP2 ADD JUMPDEST SUB SWAP2 GAS STATICCALL DUP1 ISZERO PUSH2 0x1404 JUMPI DUP8 SWAP2 DUP11 SWAP2 PUSH2 0x13D3 JUMPI JUMPDEST POP LT PUSH2 0x13C1 JUMPI PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP6 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP9 SWAP1 MSTORE ADDRESS PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP1 DUP3 ADD DUP9 SWAP1 MSTORE DUP2 MSTORE SWAP5 PUSH1 0xA0 DUP7 ADD SWAP1 DUP2 GT DUP7 DUP3 LT OR PUSH2 0x13AD JUMPI PUSH32 0x2C138F65913CD3B9CA6F36E4B59E26830A033A978CA69F935781972E6DF1F61D SWAP6 PUSH2 0x139E SWAP5 PUSH2 0x1375 SWAP3 PUSH1 0x40 MSTORE PUSH2 0x2B0A JUMP JUMPDEST DUP1 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL NOT AND TIMESTAMP PUSH1 0xA0 SHL PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL AND OR SWAP1 SSTORE PUSH2 0x2A52 JUMP JUMPDEST SWAP3 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 PUSH1 0x1 DUP2 SSTORE DUP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x13BE252B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST DUP1 SWAP3 POP DUP7 DUP1 SWAP3 POP RETURNDATASIZE DUP4 GT PUSH2 0x13FD JUMPI JUMPDEST PUSH2 0x13EC DUP2 DUP4 PUSH2 0x252D JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x5D2 JUMPI DUP7 SWAP1 MLOAD PUSH0 PUSH2 0x1307 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x13E2 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP12 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP1 SWAP3 POP SWAP3 SWAP1 SWAP3 EXTCODESIZE ISZERO PUSH2 0x152D JUMPI PUSH1 0x40 MLOAD SWAP1 PUSH4 0xD505ACCF PUSH1 0xE0 SHL DUP3 MSTORE DUP11 PUSH1 0x4 DUP4 ADD MSTORE ADDRESS PUSH1 0x24 DUP4 ADD MSTORE DUP10 PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x64 CALLDATALOAD PUSH1 0x64 DUP4 ADD MSTORE PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 CALLDATALOAD PUSH1 0xA4 DUP3 ADD MSTORE PUSH1 0xC4 CALLDATALOAD PUSH1 0xC4 DUP3 ADD MSTORE DUP11 DUP2 PUSH1 0xE4 DUP2 DUP4 DUP7 GAS CALL SWAP1 DUP2 PUSH2 0x1505 JUMPI JUMPDEST POP PUSH2 0x147F JUMPI PUSH1 0x40 MLOAD PUSH4 0xB78CB0DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE DUP7 DUP2 PUSH1 0x44 DUP2 DUP6 GAS STATICCALL DUP1 ISZERO PUSH2 0x14FA JUMPI DUP10 SWAP2 DUP13 SWAP2 PUSH2 0x14C9 JUMPI JUMPDEST POP LT PUSH2 0x13C1 JUMPI PUSH2 0x12F4 SWAP2 DUP7 SWAP2 PUSH2 0x12C5 JUMP JUMPDEST DUP1 SWAP3 POP DUP9 DUP1 SWAP3 POP RETURNDATASIZE DUP4 GT PUSH2 0x14F3 JUMPI JUMPDEST PUSH2 0x14E2 DUP2 DUP4 PUSH2 0x252D JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x5D2 JUMPI DUP9 SWAP1 MLOAD PUSH0 PUSH2 0x14B8 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x14D8 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP14 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP9 DUP2 SWAP13 SWAP3 SWAP13 GT PUSH2 0x1519 JUMPI PUSH1 0x40 MSTORE SWAP10 PUSH0 PUSH2 0x1468 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP3 REVERT JUMPDEST DUP11 DUP1 REVERT JUMPDEST POP PUSH1 0xC4 CALLDATALOAD ISZERO ISZERO PUSH2 0x12C0 JUMP JUMPDEST POP PUSH1 0xA4 CALLDATALOAD ISZERO ISZERO PUSH2 0x12B9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1E9ACF17 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST DUP1 SWAP3 POP DUP10 DUP1 SWAP3 POP RETURNDATASIZE DUP4 GT PUSH2 0x1587 JUMPI JUMPDEST PUSH2 0x1572 DUP2 DUP4 PUSH2 0x252D JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x1583 JUMPI DUP10 SWAP1 MLOAD PUSH0 PUSH2 0x12A7 JUMP JUMPDEST DUP12 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x1568 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP15 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1924FCEB PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x162908E3 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x5F0BE7AF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP12 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 DUP12 REVERT JUMPDEST DUP5 DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1C0 JUMPI PUSH2 0x15F6 CALLDATASIZE PUSH2 0x25CF JUMP JUMPDEST SWAP1 PUSH2 0x15FF PUSH2 0x2732 JUMP JUMPDEST PUSH2 0x1607 PUSH2 0x2A72 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF PUSH1 0x8 DUP4 MLOAD SWAP3 PUSH1 0x20 DUP2 DUP2 DUP8 ADD SWAP6 PUSH2 0x1623 DUP2 DUP4 DUP10 PUSH2 0x266A JUMP JUMPDEST DUP2 ADD PUSH1 0x4 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 ADD SLOAD PUSH1 0x10 SHR AND ISZERO PUSH2 0x5C0 JUMPI PUSH1 0x40 MLOAD DUP3 MLOAD PUSH2 0x1648 DUP2 DUP4 DUP6 PUSH2 0x266A JUMP JUMPDEST PUSH1 0x4 SWAP1 DUP3 ADD SWAP1 DUP2 MSTORE DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND SWAP4 AND DUP4 SWAP1 SUB PUSH2 0x5AE JUMPI PUSH1 0xFF PUSH1 0x8 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP7 MLOAD PUSH2 0x1687 DUP2 DUP4 DUP10 PUSH2 0x266A JUMP JUMPDEST DUP2 ADD PUSH1 0x4 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 ADD SLOAD AND PUSH1 0x6 DUP2 LT ISZERO PUSH2 0x1728 JUMPI PUSH2 0x588 JUMPI PUSH1 0x20 PUSH2 0x16B8 SWAP2 PUSH1 0x40 MLOAD DUP1 SWAP4 DUP2 SWAP3 DUP7 MLOAD SWAP3 DUP4 SWAP2 PUSH2 0x266A JUMP JUMPDEST DUP2 ADD PUSH1 0x4 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x6 DUP4 ADD SLOAD PUSH1 0xA0 SHR AND ISZERO PUSH2 0x1716 JUMPI PUSH1 0x8 PUSH2 0x16F0 SWAP3 ADD PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH2 0x2A52 JUMP JUMPDEST PUSH31 0xCAEC7345D2EB04A42197AC2A2CD7CD74A00B2991B69BB53E23465D4092FDFB DUP4 DUP1 LOG3 DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x47510BBD PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 DUP6 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1C0 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C0 JUMPI PUSH2 0x1756 PUSH2 0x25B9 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH2 0x1761 PUSH2 0x2732 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP2 PUSH32 0x0 AND DUP3 EQ PUSH2 0x17A6 JUMPI DUP1 ISZERO PUSH2 0x15AB JUMPI PUSH2 0x1BD SWAP2 CALLER SWAP1 PUSH2 0x2BA6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x18BA2FC1 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1C0 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C0 JUMPI PUSH1 0xFF PUSH1 0x40 PUSH1 0x20 SWAP3 PUSH2 0x17D9 PUSH2 0x25A3 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD DUP3 MSTORE PUSH1 0x2 DUP6 MSTORE DUP3 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP3 MSTORE DUP5 MSTORE KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP2 AND ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1C0 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1C0 JUMPI PUSH2 0x181A PUSH2 0x2732 JUMP JUMPDEST PUSH2 0x1822 PUSH2 0x2A72 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xFF NOT DUP2 SLOAD AND OR PUSH1 0x1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH1 0x20 PUSH1 0x40 MLOAD CALLER DUP2 MSTORE LOG1 DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x1C0 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C0 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x4 CALLDATALOAD DUP2 DUP2 GT PUSH2 0xA5F JUMPI PUSH1 0x20 PUSH2 0x60C PUSH2 0x1892 SWAP3 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x254E JUMP JUMPDEST DUP2 ADD PUSH1 0x4 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 SWAP1 PUSH1 0x8 DUP3 ADD SLOAD SWAP2 PUSH1 0xFF DUP4 PUSH1 0x10 SHR AND SWAP3 DUP4 PUSH2 0x18DC JUMPI JUMPDEST POP PUSH1 0x20 SWAP4 POP DUP3 PUSH2 0x18C8 JUMPI JUMPDEST POP POP PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH1 0x7 ADD SLOAD PUSH1 0x40 SHR AND TIMESTAMP LT ISZERO SWAP1 POP PUSH0 DUP1 PUSH2 0x18BC JUMP JUMPDEST PUSH1 0xFF SWAP2 SWAP4 POP AND SWAP3 PUSH1 0x6 DUP5 LT ISZERO PUSH2 0x1055 JUMPI POP PUSH1 0x2 PUSH1 0x20 SWAP4 EQ SWAP2 PUSH0 PUSH2 0x18B1 JUMP JUMPDEST POP CALLVALUE PUSH2 0x1C0 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1C0 JUMPI PUSH1 0x20 PUSH1 0xFF PUSH1 0x1 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1C0 JUMPI PUSH2 0x192C CALLDATASIZE PUSH2 0x2610 JUMP JUMPDEST PUSH2 0x1937 SWAP3 SWAP2 SWAP3 PUSH2 0x2732 JUMP JUMPDEST PUSH2 0x193F PUSH2 0x2A72 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 MLOAD PUSH1 0xFF PUSH1 0x8 PUSH1 0x20 SWAP4 DUP5 DUP2 DUP2 DUP10 ADD SWAP6 PUSH2 0x195C DUP2 DUP4 DUP10 PUSH2 0x266A JUMP JUMPDEST DUP2 ADD PUSH1 0x4 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 ADD SLOAD PUSH1 0x10 SHR AND ISZERO PUSH2 0x5C0 JUMPI PUSH1 0x40 MLOAD DUP5 MLOAD PUSH2 0x1981 DUP2 DUP4 DUP6 PUSH2 0x266A JUMP JUMPDEST PUSH1 0x4 SWAP1 DUP3 ADD SWAP1 DUP2 MSTORE DUP2 SWAP1 SUB DUP4 ADD SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 DUP7 AND SWAP6 AND DUP6 SWAP1 SUB PUSH2 0x5AE JUMPI PUSH1 0xFF PUSH1 0x8 PUSH1 0x40 MLOAD DUP5 DUP2 DUP9 MLOAD PUSH2 0x19BE DUP2 DUP4 DUP10 PUSH2 0x266A JUMP JUMPDEST DUP2 ADD PUSH1 0x4 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 ADD SLOAD AND PUSH1 0x6 DUP2 LT ISZERO PUSH2 0x59A JUMPI PUSH1 0x1 SUB PUSH2 0x588 JUMPI DUP2 PUSH2 0x19F1 SWAP2 PUSH1 0x40 MLOAD DUP1 SWAP4 DUP2 SWAP3 DUP9 MLOAD SWAP3 DUP4 SWAP2 PUSH2 0x266A JUMP JUMPDEST DUP2 ADD PUSH1 0x4 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 DUP2 PUSH1 0x6 DUP3 ADD SLOAD PUSH1 0x60 SHR AND TIMESTAMP GT PUSH2 0x1AF9 JUMPI DUP4 MLOAD ISZERO PUSH2 0x1AE7 JUMPI PUSH1 0x8 DUP2 ADD PUSH1 0x2 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x7 DUP2 ADD SWAP1 DUP2 SLOAD PUSH3 0x3F480 TIMESTAMP ADD DUP1 TIMESTAMP GT PUSH2 0x1AD3 JUMPI SWAP3 PUSH2 0x1AA9 DUP8 PUSH1 0x4 PUSH2 0x1AB4 SWAP6 PUSH32 0x934109F661B65DBCCFFCAE4F7EE04261EB7B36E5136E1CA86DDE1B00598CB031 SWAP11 SWAP9 SWAP6 PUSH16 0xFFFFFFFFFFFFFFFF0000000000000000 PUSH2 0x1AC9 SWAP12 SWAP10 PUSH1 0x40 SHL AND SWAP1 DUP8 TIMESTAMP AND SWAP1 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND OR OR DUP6 SSTORE ADD PUSH2 0x290E JUMP JUMPDEST SLOAD PUSH1 0x40 SHR AND SWAP6 PUSH2 0x2A52 JUMP JUMPDEST SWAP5 PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP4 PUSH1 0x40 DUP6 MSTORE PUSH1 0x40 DUP6 ADD SWAP1 PUSH2 0x268B JUMP JUMPDEST SWAP2 DUP4 ADD MSTORE SUB SWAP1 LOG3 DUP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP11 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP11 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x361178C7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x764B8E33 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1C0 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1C0 JUMPI PUSH1 0x20 PUSH1 0x3 SLOAD PUSH1 0x60 SHR PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1C0 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1C0 JUMPI PUSH2 0x1B45 PUSH2 0x2732 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0xFF DUP2 AND ISZERO PUSH2 0x1B85 JUMPI PUSH1 0xFF NOT AND PUSH1 0x1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH1 0x20 PUSH1 0x40 MLOAD CALLER DUP2 MSTORE LOG1 DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x14185D5CD8589B194E881B9BDD081C185D5CD959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1C0 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C0 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x4 CALLDATALOAD DUP2 DUP2 GT PUSH2 0xA5F JUMPI PUSH2 0x1BF3 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x254E JUMP JUMPDEST SWAP1 PUSH2 0x1BFC PUSH2 0x2AB6 JUMP JUMPDEST PUSH2 0x1C04 PUSH2 0x2732 JUMP JUMPDEST PUSH2 0x1C0C PUSH2 0x2A72 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF PUSH1 0x8 DUP5 MLOAD SWAP3 PUSH1 0x20 DUP2 DUP2 DUP9 ADD SWAP6 PUSH2 0x1C28 DUP2 DUP4 DUP10 PUSH2 0x266A JUMP JUMPDEST DUP2 ADD PUSH1 0x4 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 ADD SLOAD PUSH1 0x10 SHR AND ISZERO PUSH2 0x5C0 JUMPI PUSH1 0xFF PUSH1 0x8 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP8 MLOAD PUSH2 0x1C54 DUP2 DUP4 DUP10 PUSH2 0x266A JUMP JUMPDEST DUP2 ADD PUSH1 0x4 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 ADD SLOAD AND PUSH1 0x6 DUP2 LT ISZERO PUSH2 0x1728 JUMPI PUSH1 0x2 SUB PUSH2 0x588 JUMPI PUSH1 0x20 PUSH2 0x1C88 SWAP2 PUSH1 0x40 MLOAD DUP1 SWAP4 DUP2 SWAP3 DUP8 MLOAD SWAP3 DUP4 SWAP2 PUSH2 0x266A JUMP JUMPDEST DUP2 ADD PUSH1 0x4 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 SWAP1 PUSH1 0x7 DUP3 ADD SLOAD PUSH1 0x40 SHR AND TIMESTAMP LT PUSH2 0x1D71 JUMPI PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2DE3 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB SWAP2 PUSH2 0x4BB DUP4 PUSH1 0x6 DUP4 ADD SLOAD AND SWAP2 PUSH2 0x1CE2 PUSH2 0x2710 DUP7 PUSH2 0x1CD9 DUP2 PUSH1 0x3 SLOAD AND DUP8 PUSH2 0x2B6F JUMP JUMPDEST AND DIV DUP1 SWAP5 PUSH2 0x2B8D JUMP JUMPDEST PUSH1 0x8 DUP3 ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x4 OR SWAP1 SSTORE SWAP5 PUSH32 0x0 SWAP1 DUP1 DUP8 AND DUP1 PUSH2 0x1D52 JUMPI JUMPDEST POP DUP5 AND DUP1 PUSH2 0x1D3B JUMPI JUMPDEST POP POP PUSH1 0x1 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP5 PUSH2 0x2A52 JUMP JUMPDEST PUSH2 0x1D4B SWAP2 PUSH1 0x3 SLOAD PUSH1 0x60 SHR SWAP1 PUSH2 0x2BA6 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x1D26 JUMP JUMPDEST PUSH1 0x1 DUP5 ADD SLOAD PUSH2 0x1D6B SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH2 0x2BA6 JUMP JUMPDEST PUSH0 PUSH2 0x1D1D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x2D6BF645 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1C0 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C0 JUMPI PUSH2 0x1D9D PUSH2 0x25A3 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SUB PUSH2 0x1DB9 JUMPI PUSH2 0xC8D SWAP1 PUSH1 0x4 CALLDATALOAD PUSH2 0x284B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x334BD919 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1C0 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C0 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x23F JUMPI PUSH2 0x1BD SWAP1 PUSH2 0x1DFC PUSH2 0x2732 JUMP JUMPDEST PUSH2 0x2CBB JUMP JUMPDEST POP CALLVALUE PUSH2 0x1C0 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C0 JUMPI PUSH2 0xC8D PUSH1 0x4 CALLDATALOAD PUSH2 0x1E21 PUSH2 0x25A3 JUMP JUMPDEST SWAP1 DUP1 DUP5 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH2 0x1E3A PUSH1 0x1 PUSH1 0x40 DUP7 KECCAK256 ADD SLOAD PUSH2 0x27AB JUMP JUMPDEST PUSH2 0x27CD JUMP JUMPDEST POP CALLVALUE PUSH2 0x1C0 JUMPI PUSH2 0x1E4E CALLDATASIZE PUSH2 0x25CF JUMP JUMPDEST PUSH2 0x1E56 PUSH2 0x2AB6 JUMP JUMPDEST PUSH2 0x1E5E PUSH2 0x2732 JUMP JUMPDEST PUSH2 0x1E66 PUSH2 0x2A72 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF PUSH1 0x8 DUP5 MLOAD SWAP3 PUSH1 0x20 DUP2 DUP2 DUP9 ADD SWAP6 PUSH2 0x1E82 DUP2 DUP4 DUP10 PUSH2 0x266A JUMP JUMPDEST DUP2 ADD PUSH1 0x4 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 ADD SLOAD PUSH1 0x10 SHR AND ISZERO PUSH2 0x5C0 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD DUP5 MLOAD PUSH2 0x1EA9 DUP2 DUP4 DUP7 PUSH2 0x266A JUMP JUMPDEST DUP2 ADD PUSH1 0x4 DUP2 MSTORE DUP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 SWAP4 DUP5 SWAP4 SUB ADD SWAP1 KECCAK256 SLOAD AND SWAP4 AND DUP1 SWAP4 SUB PUSH2 0x5AE JUMPI PUSH1 0xFF PUSH1 0x8 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP9 MLOAD PUSH2 0x1EE2 DUP2 DUP4 DUP11 PUSH2 0x266A JUMP JUMPDEST DUP2 ADD PUSH1 0x4 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 ADD SLOAD AND PUSH1 0x6 DUP2 LT ISZERO PUSH2 0xBF2 JUMPI PUSH1 0x2 SUB PUSH2 0x588 JUMPI PUSH2 0x4BB PUSH2 0x1F27 PUSH1 0x20 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2DE3 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP5 PUSH1 0x40 MLOAD DUP1 SWAP4 DUP2 SWAP3 DUP11 MLOAD SWAP3 DUP4 SWAP2 PUSH2 0x266A JUMP JUMPDEST DUP2 ADD PUSH1 0x4 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB SWAP4 DUP5 PUSH1 0x6 DUP3 ADD SLOAD AND SWAP5 PUSH2 0x1F63 PUSH2 0x2710 DUP3 PUSH2 0x1F5A DUP2 PUSH1 0x3 SLOAD AND DUP11 PUSH2 0x2B6F JUMP JUMPDEST AND DIV DUP1 SWAP8 PUSH2 0x2B8D JUMP JUMPDEST PUSH1 0x8 DUP4 ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x4 OR SWAP1 SSTORE SWAP8 PUSH2 0x1F7C DUP11 PUSH2 0x2A52 JUMP JUMPDEST PUSH31 0xCAEC7345D2EB04A42197AC2A2CD7CD74A00B2991B69BB53E23465D4092FDFB DUP13 DUP1 LOG3 PUSH32 0x0 SWAP1 DUP1 DUP10 AND DUP1 PUSH2 0x1FF5 JUMPI JUMPDEST POP DUP7 AND DUP1 PUSH2 0x1FDE JUMPI JUMPDEST POP POP ADD SLOAD AND SWAP5 PUSH2 0x2A52 JUMP JUMPDEST PUSH2 0x1FEE SWAP2 PUSH1 0x3 SLOAD PUSH1 0x60 SHR SWAP1 PUSH2 0x2BA6 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x1FD3 JUMP JUMPDEST PUSH2 0x2005 SWAP1 DUP7 DUP7 DUP7 ADD SLOAD AND DUP5 PUSH2 0x2BA6 JUMP JUMPDEST PUSH0 PUSH2 0x1FCA JUMP JUMPDEST POP CALLVALUE PUSH2 0x1C0 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C0 JUMPI PUSH1 0x1 PUSH1 0x40 PUSH1 0x20 SWAP3 PUSH1 0x4 CALLDATALOAD DUP2 MSTORE PUSH1 0x2 DUP5 MSTORE KECCAK256 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1C0 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1C0 JUMPI PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0x3 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1C0 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C0 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x23F JUMPI PUSH2 0x2090 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x254E JUMP JUMPDEST PUSH2 0x2098 PUSH2 0x2AB6 JUMP JUMPDEST PUSH2 0x20A0 PUSH2 0x2732 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF PUSH1 0x8 DUP4 MLOAD SWAP3 PUSH1 0x20 DUP2 DUP2 DUP8 ADD SWAP6 PUSH2 0x20BC DUP2 DUP4 DUP10 PUSH2 0x266A JUMP JUMPDEST DUP2 ADD PUSH1 0x4 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 ADD SLOAD PUSH1 0x10 SHR AND ISZERO PUSH2 0x5C0 JUMPI PUSH1 0x20 PUSH2 0x20E8 SWAP2 PUSH1 0x40 MLOAD DUP1 SWAP4 DUP2 SWAP3 DUP7 MLOAD SWAP3 DUP4 SWAP2 PUSH2 0x266A JUMP JUMPDEST DUP2 ADD PUSH1 0x4 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 SWAP1 PUSH1 0x8 DUP3 ADD SWAP1 DUP2 SLOAD SWAP3 PUSH1 0xFF DUP5 AND PUSH1 0x6 DUP2 LT ISZERO PUSH2 0xBF2 JUMPI PUSH1 0x1 DUP2 SUB PUSH2 0x21AB JUMPI JUMPDEST POP PUSH2 0x213B SWAP3 PUSH1 0x5 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0x6 DUP5 ADD SLOAD AND SWAP6 PUSH1 0xFF NOT AND OR SWAP1 SSTORE DUP4 DUP1 PUSH2 0x216E JUMPI POP POP PUSH2 0x2A52 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 MSTORE PUSH32 0xB559D285C87E4FA0F561388264310703FF0C6C454A39AE52D0AE94032FF0DB70 PUSH1 0x20 CALLER SWAP4 LOG3 PUSH1 0x1 DUP2 SSTORE DUP1 RETURN JUMPDEST SWAP1 SLOAD PUSH2 0x21A4 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x0 PUSH2 0x2BA6 JUMP JUMPDEST PUSH0 DUP4 PUSH2 0xB8B JUMP JUMPDEST PUSH1 0x2 SUB PUSH2 0x21B8 JUMPI PUSH0 PUSH2 0x2111 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x4DF0CAD PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1C0 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1C0 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0xA8A7BC421F721CB936EA99EFDAD79237E6EE0B871A2A08CF648691F9584CDC77 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1C0 JUMPI PUSH2 0x2214 CALLDATASIZE PUSH2 0x2610 JUMP JUMPDEST SWAP1 SWAP2 PUSH2 0x221E PUSH2 0x2732 JUMP JUMPDEST PUSH2 0x2226 PUSH2 0x2A72 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP2 MLOAD PUSH1 0xFF PUSH1 0x8 PUSH1 0x20 SWAP6 DUP7 DUP2 DUP2 DUP9 ADD SWAP6 PUSH2 0x2244 DUP2 DUP4 DUP10 PUSH2 0x266A JUMP JUMPDEST DUP2 ADD PUSH1 0x4 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 ADD SLOAD PUSH1 0x10 SHR AND ISZERO PUSH2 0x5C0 JUMPI PUSH1 0x40 MLOAD DUP4 MLOAD PUSH2 0x2269 DUP2 DUP4 DUP6 PUSH2 0x266A JUMP JUMPDEST PUSH1 0x4 SWAP1 DUP3 ADD SWAP1 DUP2 MSTORE DUP2 SWAP1 SUB DUP6 ADD SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 DUP7 AND SWAP6 AND DUP6 SWAP1 SUB PUSH2 0x5AE JUMPI PUSH1 0xFF PUSH1 0x8 PUSH1 0x40 MLOAD DUP7 DUP2 DUP8 MLOAD PUSH2 0x22A3 DUP2 DUP4 DUP10 PUSH2 0x266A JUMP JUMPDEST DUP2 ADD PUSH1 0x4 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 ADD SLOAD AND PUSH1 0x6 DUP2 LT ISZERO PUSH2 0x59A JUMPI PUSH1 0x2 SUB PUSH2 0x588 JUMPI DUP4 PUSH2 0x22D6 SWAP2 PUSH1 0x40 MLOAD DUP1 SWAP4 DUP2 SWAP3 DUP8 MLOAD SWAP3 DUP4 SWAP2 PUSH2 0x266A JUMP JUMPDEST DUP2 ADD PUSH1 0x4 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 PUSH1 0x7 DUP2 ADD SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP5 SLOAD PUSH1 0x40 SHR AND TIMESTAMP LT ISZERO PUSH2 0x2398 JUMPI DUP3 MLOAD ISZERO PUSH2 0x2386 JUMPI PUSH32 0xDE7B01BEF0884582CE204F7F920E57F99DD569F93867450872F436BE5A03C755 SWAP4 PUSH2 0x2342 DUP5 PUSH1 0x5 DUP6 PUSH1 0x8 PUSH2 0x236B SWAP8 ADD PUSH1 0x3 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE ADD PUSH2 0x290E JUMP JUMPDEST DUP1 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x80 SHL NOT AND TIMESTAMP PUSH1 0x80 SHL PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x80 SHL AND OR SWAP1 SSTORE PUSH2 0x2A52 JUMP JUMPDEST SWAP3 PUSH2 0x2380 PUSH1 0x40 MLOAD SWAP3 DUP3 DUP5 SWAP4 DUP5 MSTORE DUP4 ADD SWAP1 PUSH2 0x268B JUMP JUMPDEST SUB SWAP1 LOG3 DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xBC7FD331 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x2D0F572D PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1C0 JUMPI PUSH2 0x23B9 CALLDATASIZE PUSH2 0x25CF JUMP JUMPDEST SWAP1 PUSH2 0x23C2 PUSH2 0x2732 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 MLOAD PUSH1 0xFF PUSH1 0x8 PUSH1 0x20 SWAP5 DUP6 DUP2 DUP2 DUP8 ADD SWAP6 PUSH2 0x23E0 DUP2 DUP4 DUP10 PUSH2 0x266A JUMP JUMPDEST DUP2 ADD PUSH1 0x4 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 ADD SLOAD PUSH1 0x10 SHR AND ISZERO PUSH2 0x5C0 JUMPI PUSH1 0x40 MLOAD DUP3 MLOAD PUSH2 0x2405 DUP2 DUP4 DUP6 PUSH2 0x266A JUMP JUMPDEST PUSH1 0x4 SWAP1 DUP3 ADD SWAP1 DUP2 MSTORE DUP2 SWAP1 SUB DUP5 ADD SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND SWAP5 AND DUP5 SWAP1 SUB PUSH2 0x5AE JUMPI PUSH1 0xFF PUSH1 0x8 PUSH1 0x40 MLOAD DUP6 DUP2 DUP7 MLOAD PUSH2 0x243F DUP2 DUP4 DUP10 PUSH2 0x266A JUMP JUMPDEST DUP2 ADD PUSH1 0x4 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 ADD SLOAD AND PUSH1 0x6 DUP2 LT ISZERO PUSH2 0xBF2 JUMPI PUSH2 0x588 JUMPI PUSH32 0xB559D285C87E4FA0F561388264310703FF0C6C454A39AE52D0AE94032FF0DB70 SWAP2 PUSH1 0x8 PUSH2 0x2496 DUP6 PUSH2 0x24B1 SWAP5 PUSH1 0x40 MLOAD DUP1 SWAP4 DUP2 SWAP3 DUP8 MLOAD SWAP3 DUP4 SWAP2 PUSH2 0x266A JUMP JUMPDEST DUP2 ADD PUSH1 0x4 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 ADD PUSH1 0x5 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH2 0x2A52 JUMP JUMPDEST SWAP2 PUSH1 0x40 MLOAD DUP6 DUP2 MSTORE LOG3 DUP1 RETURN JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x23F JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23F JUMPI PUSH1 0x4 CALLDATALOAD PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL DUP2 AND DUP1 SWAP2 SUB PUSH2 0xA5F JUMPI PUSH1 0x20 SWAP3 POP PUSH4 0x7965DB0B PUSH1 0xE0 SHL DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0x2500 JUMPI JUMPDEST POP ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL EQ SWAP1 POP PUSH0 PUSH2 0x24F9 JUMP JUMPDEST PUSH2 0x200 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x13AD JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x13AD JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x5D2 JUMPI DUP1 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x13AD JUMPI PUSH1 0x40 MLOAD SWAP3 PUSH2 0x2582 PUSH1 0x1F DUP5 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP6 PUSH2 0x252D JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x20 DUP4 DUP4 ADD ADD GT PUSH2 0x5D2 JUMPI DUP2 PUSH0 SWAP3 PUSH1 0x20 DUP1 SWAP4 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x5D2 JUMPI JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x5D2 JUMPI JUMP JUMPDEST PUSH1 0x40 PUSH1 0x3 NOT DUP3 ADD SLT PUSH2 0x5D2 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x5D2 JUMPI PUSH2 0x25F9 SWAP2 PUSH1 0x4 ADD PUSH2 0x254E JUMP JUMPDEST SWAP1 PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x5D2 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 NOT DUP3 ADD SLT PUSH2 0x5D2 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP2 PUSH1 0x4 CALLDATALOAD DUP4 DUP2 GT PUSH2 0x5D2 JUMPI DUP3 PUSH2 0x263C SWAP2 PUSH1 0x4 ADD PUSH2 0x254E JUMP JUMPDEST SWAP3 PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x5D2 JUMPI SWAP3 PUSH1 0x44 CALLDATALOAD SWAP2 DUP3 GT PUSH2 0x5D2 JUMPI PUSH2 0x2667 SWAP2 PUSH1 0x4 ADD PUSH2 0x254E JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT PUSH2 0x267B JUMPI POP POP PUSH0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x266C JUMP JUMPDEST SWAP1 PUSH1 0x20 SWAP2 PUSH2 0x26A4 DUP2 MLOAD DUP1 SWAP3 DUP2 DUP6 MSTORE DUP6 DUP1 DUP7 ADD SWAP2 ADD PUSH2 0x266A JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 ADD SWAP1 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 SWAP3 MSTORE PUSH1 0x40 DUP4 ADD SWAP3 DUP2 PUSH1 0x40 DUP5 PUSH1 0x5 SHL DUP4 ADD ADD SWAP6 ADD SWAP4 PUSH0 SWAP2 JUMPDEST DUP5 DUP4 LT PUSH2 0x26E3 JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 DUP5 DUP1 PUSH2 0x2701 PUSH1 0x1 SWAP4 PUSH1 0x3F NOT DUP7 DUP3 SUB ADD DUP8 MSTORE DUP11 MLOAD PUSH2 0x268B JUMP JUMPDEST SWAP9 ADD SWAP4 ADD SWAP4 ADD SWAP2 SWAP5 SWAP4 SWAP3 SWAP1 PUSH2 0x26D3 JUMP JUMPDEST SWAP1 PUSH1 0x6 DUP3 LT ISZERO PUSH2 0x271E JUMPI MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH32 0xEF73BF2AC44F84561B5498839AB1C8C5A4DD99305D838AEA0D76C5961778535C PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH32 0xA8A7BC421F721CB936EA99EFDAD79237E6EE0B871A2A08CF648691F9584CDC77 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0x278D JUMPI POP JUMP JUMPDEST PUSH1 0x44 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH4 0xE2517D3F PUSH1 0xE0 SHL DUP3 MSTORE CALLER PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE REVERT JUMPDEST DUP1 PUSH0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 CALLER PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH0 KECCAK256 SLOAD AND ISZERO PUSH2 0x278D JUMPI POP JUMP JUMPDEST SWAP1 PUSH0 SWAP2 DUP1 DUP4 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP5 KECCAK256 SLOAD AND ISZERO PUSH0 EQ PUSH2 0x2846 JUMPI DUP1 DUP4 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D CALLER SWAP4 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST POP POP SWAP1 JUMP JUMPDEST SWAP1 PUSH0 SWAP2 DUP1 DUP4 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP5 KECCAK256 SLOAD AND PUSH0 EQ PUSH2 0x2846 JUMPI DUP1 DUP4 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0xFF NOT DUP2 SLOAD AND SWAP1 SSTORE PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B CALLER SWAP4 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x28EE JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x28DA JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x28CF JUMP JUMPDEST DUP2 DUP2 LT PUSH2 0x2903 JUMPI POP POP JUMP JUMPDEST PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x28F8 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x13AD JUMPI PUSH2 0x292B DUP3 SLOAD PUSH2 0x28C0 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x29CF JUMPI JUMPDEST POP PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x296F JUMPI POP DUP2 SWAP3 SWAP4 SWAP5 PUSH0 SWAP3 PUSH2 0x2964 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 SSTORE JUMP JUMPDEST ADD MLOAD SWAP1 POP PUSH0 DUP1 PUSH2 0x294F JUMP JUMPDEST SWAP1 PUSH1 0x1F NOT DUP4 AND SWAP6 DUP5 PUSH0 MSTORE DUP3 PUSH0 KECCAK256 SWAP3 PUSH0 SWAP1 JUMPDEST DUP9 DUP3 LT PUSH2 0x29B7 JUMPI POP POP DUP4 PUSH1 0x1 SWAP6 SWAP7 SWAP8 LT PUSH2 0x299F JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE JUMP JUMPDEST ADD MLOAD PUSH0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE PUSH0 DUP1 DUP1 PUSH2 0x2995 JUMP JUMPDEST DUP1 PUSH1 0x1 DUP6 SWAP7 DUP3 SWAP5 SWAP7 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD SWAP1 PUSH2 0x2980 JUMP JUMPDEST PUSH2 0x29FA SWAP1 DUP4 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP6 LT PUSH2 0x2A00 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x28F8 JUMP JUMPDEST PUSH0 PUSH2 0x2934 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x29ED JUMP JUMPDEST SWAP1 DUP2 SLOAD PUSH9 0x10000000000000000 DUP2 LT ISZERO PUSH2 0x13AD JUMPI PUSH1 0x1 DUP2 ADD DUP1 DUP5 SSTORE DUP2 LT ISZERO PUSH2 0x2A3E JUMPI PUSH2 0x2A3C SWAP3 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH2 0x290E JUMP JUMPDEST JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x2A6A SWAP1 PUSH1 0x20 PUSH1 0x40 MLOAD SWAP3 DUP3 DUP5 DUP1 SWAP5 MLOAD SWAP4 DUP5 SWAP3 ADD PUSH2 0x266A JUMP JUMPDEST DUP2 ADD SUB SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0xFF PUSH1 0x1 SLOAD AND PUSH2 0x2A7E JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH0 SLOAD EQ PUSH2 0x2AC5 JUMPI PUSH1 0x2 PUSH0 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 PUSH0 PUSH1 0x20 SWAP2 DUP3 DUP2 MLOAD SWAP2 ADD DUP3 DUP6 GAS CALL ISZERO PUSH2 0x2B64 JUMPI PUSH0 MLOAD RETURNDATASIZE PUSH2 0x2B5B JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND EXTCODESIZE ISZERO JUMPDEST PUSH2 0x2B39 JUMPI POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x5274AFE7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x1 EQ ISZERO PUSH2 0x2B32 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP2 SWAP1 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP1 DUP1 SWAP5 AND SWAP2 AND MUL SWAP2 DUP3 AND SWAP2 DUP3 SUB PUSH2 0x515 JUMPI JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB SWAP2 DUP3 AND SWAP1 DUP3 AND SUB SWAP2 SWAP1 DUP3 GT PUSH2 0x515 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x80 DUP2 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT DUP3 DUP5 LT OR PUSH2 0x13AD JUMPI PUSH2 0x2A3C SWAP3 PUSH1 0x40 MSTORE PUSH2 0x2B0A JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH0 DUP3 SLOAD SWAP3 PUSH2 0x2C08 DUP5 PUSH2 0x28C0 JUMP JUMPDEST SWAP1 DUP2 DUP5 MSTORE PUSH1 0x1 SWAP5 DUP6 DUP2 AND SWAP1 DUP2 PUSH0 EQ PUSH2 0x2C71 JUMPI POP PUSH1 0x1 EQ PUSH2 0x2C31 JUMPI JUMPDEST POP POP PUSH2 0x2A3C SWAP3 POP SUB DUP4 PUSH2 0x252D JUMP JUMPDEST SWAP1 SWAP4 SWAP2 POP PUSH0 MSTORE PUSH1 0x20 SWAP1 DUP2 PUSH0 KECCAK256 SWAP4 PUSH0 SWAP2 JUMPDEST DUP2 DUP4 LT PUSH2 0x2C59 JUMPI POP POP PUSH2 0x2A3C SWAP4 POP DUP3 ADD ADD PUSH0 DUP1 PUSH2 0x2C23 JUMP JUMPDEST DUP6 SLOAD DUP9 DUP5 ADD DUP6 ADD MSTORE SWAP5 DUP6 ADD SWAP5 DUP8 SWAP5 POP SWAP2 DUP4 ADD SWAP2 PUSH2 0x2C41 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2A3C SWAP5 POP PUSH1 0x20 SWAP3 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD PUSH0 DUP1 PUSH2 0x2C23 JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x13AD JUMPI PUSH1 0x40 MLOAD SWAP2 PUSH2 0x2CB7 PUSH1 0x20 DUP3 PUSH1 0x5 SHL ADD DUP5 PUSH2 0x252D JUMP JUMPDEST DUP3 MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB SWAP1 DUP2 DUP2 AND PUSH2 0x3E8 DUP2 GT PUSH2 0x2D42 JUMPI PUSH1 0x3 SLOAD SWAP3 DUP4 AND SWAP1 DUP1 DUP3 EQ PUSH2 0x2D3C JUMPI PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR PUSH1 0x3 SSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0xFEEDDF72B7EE4210B769104CB8B071E5706232AC7F671FB292AF429FFD58B587 SWAP2 DUP2 SWAP1 DUP2 ADD JUMPDEST SUB SWAP1 LOG1 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xCD4E6167 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0xA33 JUMPI PUSH1 0x3 SLOAD SWAP2 DUP3 PUSH1 0x60 SHR SWAP1 DUP2 EQ PUSH2 0x2DDD JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB SWAP1 SWAP3 AND PUSH1 0x60 DUP3 SWAP1 SHL PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT AND OR PUSH1 0x3 SSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP3 SWAP1 SWAP2 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH32 0xAAEBCF1BFA00580E41D966056B48521FA9F202645C86D4DDF28113E617C1B1D3 SWAP2 SWAP1 DUP2 SWAP1 DUP2 ADD PUSH2 0x2D37 JUMP JUMPDEST POP POP POP JUMP INVALID DUP6 BALANCE NOT DUP15 0x5D SWAP5 PUSH11 0xF9A770D2EEBA00258645E1 PUSH4 0x142D835F 0xE1 0xB0 0x4E GASLIMIT DELEGATECALL 0xDB PUSH19 0xF8BA26469706673582212209F68EB11DEF6AC 0xE1 SWAP6 0xBE SWAP12 PUSH19 0x8EE01D2C0B4C80F5E7616AFED9DA57CFF3C0C4 COINBASE PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "680:21288:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;680:21288:13;;;;2499:1:0;680:21288:13;;:::i;:::-;2484:4:0;;:::i;:::-;2499:1;:::i;:::-;680:21288:13;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;680:21288:13;;:::i;:::-;;;;18033:11;680:21288;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;680:21288:13;;;;;;-1:-1:-1;;;;;680:21288:13;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;2227:103:6;;:::i;:::-;2484:4:0;;:::i;:::-;1204:72:5;;:::i;:::-;680:21288:13;;;;4453:22;680:21288;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;4453:22;680:21288;;;;4452:23;4448:50;;680:21288;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;4312:23;680:21288;;;;;4312:35;4308:63;;680:21288;4453:22;680:21288;;;;;;;;;;;:::i;:::-;;;;;;;;;;4601:22;680:21288;;;;;;;;;4601:33;4597:65;;680:21288;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;;;;680:21288:13;13882:11;;680:21288;;13921:12;;680:21288;13921:12;;680:21288;;;;;;;1810:5;4453:22;680:21288;1810:5;14063:11;;680:21288;;;;;;;4453:22;680:21288;;;;;;;;;;14261:10;14299:750;;;;;;;680:21288;;;;;-1:-1:-1;;;;;680:21288:13;;;;;;;;;;1810:5;;;14427:25;;;;;:::i;:::-;680:21288;14482:20;-1:-1:-1;;;;;680:21288:13;;14482:20;;:::i;:::-;-1:-1:-1;;;;;680:21288:13;1810:5;14555:25;;;;;:::i;:::-;680:21288;-1:-1:-1;;;;;680:21288:13;;14640:15;;;;14636:60;15234:61;14636:60;15064:155;14636:60;680:21288;14636:60;-1:-1:-1;;;;;;;;;;;14636:60:13;;;14299:750;680:21288;;-1:-1:-1;;;;;680:21288:13;;14714:16;14710:60;;14299:750;680:21288;;-1:-1:-1;;;;;680:21288:13;;14788:16;;14784:63;;14299:750;;;;;-1:-1:-1;;;;;15064:155:13;;;:::i;:::-;680:21288;;;;;;;;;;;;;;;;;;;;;15064:155;;15234:61;:::i;:::-;680:21288;;;-1:-1:-1;;;;;680:21288:13;;;;;;;;;1810:5;;;680:21288;;;15234:61;680:21288;1759:1:6;;680:21288:13;;14784:63;14806:41;680:21288;;;14806:41;;:::i;:::-;14784:63;;;;;14710:60;14732:38;;;;:::i;:::-;14710:60;;;;14636;14657:39;;;;:::i;:::-;14636:60;;;;680:21288;;;;;1861:8;;680:21288;1861:8;;680:21288;1861:8;14299:750;14878:17;;680:21288;15064:155;14878:17;15234:61;14878:17;;;-1:-1:-1;;;;;;;;;;;14878:17:13;;14909:25;;14948:15;14982:16;;14978:60;;14299:750;;;;;;14978:60;15000:38;;;:::i;:::-;14978:60;;;;;4597:65;680:21288;;-1:-1:-1;;;4643:19:13;;680:21288;;4643:19;680:21288;-1:-1:-1;;;680:21288:13;;;;;;;;4308:63;680:21288;;-1:-1:-1;;;4356:15:13;;680:21288;;4356:15;4448:50;680:21288;;-1:-1:-1;;;4484:14:13;;680:21288;;4484:14;680:21288;;;;;;;;;;;-1:-1:-1;;680:21288:13;;;;;;;-1:-1:-1;;;;;680:21288:13;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;18866:11;;;680:21288;;;;;;18865:12;18861:39;;680:21288;;;18981:12;;680:21288;19007:11;;;680:21288;19173:19;;;1861:8;-1:-1:-1;;;;;680:21288:13;;;;;;;;;;;;18932:11;;;680:21288;:::i;:::-;19084:14;680:21288;;19084:14;;680:21288;:::i;:::-;19112:15;680:21288;;19112:15;;680:21288;:::i;:::-;19141:18;;;680:21288;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;;;;680:21288:13;;;;;;;;;-1:-1:-1;;;;;680:21288:13;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;1861:8;;680:21288;1861:8;-1:-1:-1;;;;;680:21288:13;;;;;;;-1:-1:-1;;;;;680:21288:13;;;;;-1:-1:-1;;;;;680:21288:13;;;;;;;;;-1:-1:-1;;;;;680:21288:13;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;680:21288:13;;;;-1:-1:-1;;;;;680:21288:13;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;-1:-1:-1;;;;;680:21288:13;;;;;;;;;;;;;-1:-1:-1;;;;;680:21288:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2484:4:0;;;:::i;:::-;1204:72:5;;:::i;:::-;680:21288:13;5826:22;680:21288;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;5826:22;680:21288;;;;5822:54;;5890:29;;5886:58;;-1:-1:-1;;;;;680:21288:13;;5958:27;;5954:56;;6024:32;;;6020:67;;-1:-1:-1;;;;;680:21288:13;;6101:12;6097:54;;6178:15;680:21288;;;;6165:28;;6161:65;;680:21288;;6240:29;6236:61;;6961:142;680:21288;;6961:142;680:21288;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;6424:11;680:21288;6424:11;;;;680:21288;:::i;:::-;;;-1:-1:-1;;;;;;680:21288:13;;;;;;;-1:-1:-1;6491:12:13;;680:21288;;;;;;;;6531:11;;;680:21288;;;;;-1:-1:-1;;;;;680:21288:13;;;;;;;-1:-1:-1;;;680:21288:13;;;;;6597:14;;680:21288;:::i;:::-;5826:22;6634:11;;680:21288;;-1:-1:-1;;680:21288:13;;;6680:14;;;680:21288;;-1:-1:-1;;;;;680:21288:13;6178:15;680:21288;;-1:-1:-1;;;;;;680:21288:13;;;;;6730:15;;;;680:21288;;;;6730:15;680:21288;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;6851:11;680:21288;;6851:40;680:21288;;;;6851:40;:::i;:::-;680:21288;;;6531:11;680:21288;;6901:44;680:21288;;;;6901:44;:::i;:::-;6961:142;:::i;:::-;680:21288;-1:-1:-1;;;;;680:21288:13;;;;;;;;;;;;;6961:142;680:21288;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;6236:61;680:21288;;-1:-1:-1;;;6278:19:13;;680:21288;;6278:19;6161:65;680:21288;;-1:-1:-1;;;6202:24:13;;680:21288;;6202:24;6097:54;680:21288;;-1:-1:-1;;;6122:29:13;;680:21288;;6122:29;6020:67;680:21288;;-1:-1:-1;;;6065:22:13;;680:21288;;6065:22;5954:56;680:21288;;-1:-1:-1;;;5994:16:13;;680:21288;;5994:16;5822:54;680:21288;;-1:-1:-1;;;5857:19:13;;680:21288;;5857:19;680:21288;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;680:21288:13;;;;;;;;;;;;;;;:::i;:::-;2227:103:6;;:::i;:::-;2484:4:0;;:::i;:::-;1204:72:5;;:::i;:::-;680:21288:13;;;4453:22;680:21288;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;4453:22;680:21288;;;;4452:23;4448:50;;680:21288;4453:22;680:21288;;;;;;;;;;;:::i;:::-;;;;;;;;;;4601:22;680:21288;;;;;;;;15649:21;4601:33;4597:65;;680:21288;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;15755:13;680:21288;15755:13;;680:21288;;;;;;15736:15;:32;;15732:64;;4453:22;15851:11;;680:21288;;-1:-1:-1;;680:21288:13;16451:24;680:21288;;;-1:-1:-1;;;;;680:21288:13;;16012:48;;;;680:21288;;15900:97;;680:21288;16012:48;;;:::i;:::-;680:21288;;;;;;16035:10;16012:48;;15649:21;1759:1:6;;680:21288:13;;15900:97;680:21288;;15937:49;;-1:-1:-1;;;;;;680:21288:13;15937:10;:49;:::i;:::-;15900:97;;;;15732:64;680:21288;;-1:-1:-1;;;15777:19:13;;680:21288;;15777:19;680:21288;-1:-1:-1;;;680:21288:13;;;;;;;;;;;;;;;;;;;;;;;;;;;17582:10;-1:-1:-1;;;;;680:21288:13;;;;;;;;;;;;;-1:-1:-1;;680:21288:13;;;;4723:26:0;680:21288:13;;;;:::i;:::-;;;;;3877:6:0;680:21288:13;;2484:4:0;680:21288:13;;;;3877:22:0;680:21288:13;2484:4:0;:::i;:::-;4723:26;:::i;:::-;;680:21288:13;;;;;;;;;;;;;;;;-1:-1:-1;;;;;680:21288:13;;:::i;:::-;;;;18176:13;680:21288;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;680:21288:13;;;;;;-1:-1:-1;;;;;680:21288:13;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;680:21288:13;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;680:21288:13;;;;-1:-1:-1;;;;;680:21288:13;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;680:21288:13;;;;;;-1:-1:-1;;;;;1861:8:13;680:21288;1861:8;680:21288;;;;;-1:-1:-1;;;;;680:21288:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;-1:-1:-1;;;;;680:21288:13;;;;;;;;;-1:-1:-1;;;;;680:21288:13;;;;;;;;;-1:-1:-1;;;;;680:21288:13;;;;;;;;;-1:-1:-1;;;;;680:21288:13;;;;;;;;;-1:-1:-1;;;;;680:21288:13;;;;;;;;;-1:-1:-1;;;;;680:21288:13;;;;;;;;;-1:-1:-1;;;;;680:21288:13;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;680:21288:13;;;;;;;;;;;;;;;-1:-1:-1;;680:21288:13;;;;;;:::i;:::-;;;;;;;;;;19500:66;;;-1:-1:-1;;;;;680:21288:13;;;19511:11;680:21288;;;;;19500:66;680:21288;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;19500:66;-1:-1:-1;;;;;680:21288:13;;;19539:13;680:21288;;;;;19500:66;;680:21288;;;;;;;-1:-1:-1;;680:21288:13;;;;-1:-1:-1;;;;;680:21288:13;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;-1:-1:-1;;;;;680:21288:13;;;;;;;;;;;;;;;;;2227:103:6;;:::i;:::-;2484:4:0;;:::i;:::-;1204:72:5;;:::i;:::-;680:21288:13;;;;;;4453:22;680:21288;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;4453:22;680:21288;;;;4452:23;4448:50;;680:21288;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;4153:31;;;4149:59;;680:21288;4453:22;680:21288;;;;;;;;;;;:::i;:::-;;;;;;;;;;4601:22;680:21288;;;;;;;;4597:65;;680:21288;;7727:26;7723:54;;7791:12;;7787:40;;680:21288;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;7888:13;680:21288;;;;;;;7884:50;;8047:10;680:21288;;;;;;;;;8091:30;;;680:21288;8091:30;;680:21288;8091:30;;680:21288;8091:30;;;;;;;;;;;;;;680:21288;8135:22;;8131:56;;8264:7;;;;;;:27;;;680:21288;8264:47;;;;680:21288;8260:277;;680:21288;;;-1:-1:-1;;;8567:42:13;;-1:-1:-1;;;;;680:21288:13;;;;8567:42;;680:21288;8017:4;680:21288;;;;;;-1:-1:-1;680:21288:13;;;;;;;8567:42;;;;;;;;;;;;;;;680:21288;8623:19;;8619:55;;680:21288;;-1:-1:-1;;;1745:53:9;;;;680:21288:13;1745:53:9;;680:21288:13;;;8017:4;680:21288;;;;;;;;;;;1745:53:9;;680:21288:13;;;;;;;;;;;;;8809:43;680:21288;8809:43;680:21288;1745:53:9;680:21288:13;;;1745:53:9;:::i;:::-;680:21288:13;;-1:-1:-1;;;;680:21288:13;8777:15;680:21288;;-1:-1:-1;;;680:21288:13;;;;8809:43;:::i;:::-;680:21288;;;;;;8809:43;680:21288;1759:1:6;;680:21288:13;;;;;;;;;;;;;;8619:55;680:21288;;-1:-1:-1;;;8651:23:13;;680:21288;;8651:23;8567:42;;;;;;;;;;;;;;;;;;:::i;:::-;;;680:21288;;;;;;;8567:42;;;;;;;;;680:21288;;;;;;;;;8260:277;21651:54;;;;;;;;;;680:21288;;;;;;21651:54;;;680:21288;21651:54;;680:21288;8017:4;680:21288;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21651:54;;680:21288;21651:54;;;;;;;;;8260:277;-1:-1:-1;21647:313:13;;680:21288;;-1:-1:-1;;;21935:14:13;;680:21288;;21935:14;21647:313;680:21288;;-1:-1:-1;;;21793:36:13;;-1:-1:-1;;;;;680:21288:13;;;21793:36;;680:21288;8017:4;680:21288;;;;8017:4;680:21288;;;21793:36;;;;;;;;;;;;;21647:313;21847:17;;21843:53;;8567:42;21647:313;;;8260:277;;21793:36;;;;;;;;;;;;;;;;;;:::i;:::-;;;680:21288;;;;;;;21793:36;;;;;;;;;680:21288;;;;;;;;;21651:54;680:21288;;;;;;;;;;21651:54;;;;680:21288;-1:-1:-1;;;680:21288:13;;;;;;;;21651:54;680:21288;;;8264:47;680:21288;;;8295:16;;8264:47;;:27;680:21288;;;8275:16;;8264:27;;8131:56;680:21288;;-1:-1:-1;;;8166:21:13;;680:21288;;8166:21;8091:30;;;;;;;;;;;;;;;;;;:::i;:::-;;;680:21288;;;;;;;8091:30;;;680:21288;;;;8091:30;;;;;;680:21288;;;;;;;;;7884:50;680:21288;;-1:-1:-1;;;7915:19:13;;680:21288;;7915:19;7787:40;680:21288;;-1:-1:-1;;;7812:15:13;;680:21288;;7812:15;7723:54;680:21288;;-1:-1:-1;;;7762:15:13;;680:21288;;7762:15;680:21288;-1:-1:-1;;;680:21288:13;;;;;;;;;;;;;;;;;;;;:::i;:::-;2484:4:0;;;:::i;:::-;1204:72:5;;:::i;:::-;680:21288:13;;;4453:22;680:21288;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;4453:22;680:21288;;;;4452:23;4448:50;;680:21288;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;4312:23;680:21288;-1:-1:-1;;;;;680:21288:13;;;;;4312:35;;;4308:63;;680:21288;4453:22;680:21288;;;;;;;;;;;:::i;:::-;;;;;;;;;;4601:22;680:21288;;;;;;;;4597:65;;680:21288;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;9291:13;-1:-1:-1;;;;;680:21288:13;9291:13;;680:21288;;;;9291:18;9287:46;;4453:22;9395:38;9344:11;;680:21288;;;;;;;;;9395:38;:::i;:::-;;;;;680:21288;;9287:46;680:21288;;-1:-1:-1;;;9318:15:13;;680:21288;;9318:15;680:21288;-1:-1:-1;;;680:21288:13;;;;;;;;;;;;;;;-1:-1:-1;;680:21288:13;;;;;;:::i;:::-;;;2484:4:0;;:::i;:::-;-1:-1:-1;;;;;680:21288:13;;;;21068:10;680:21288;21050:29;;21046:62;;21122:12;;21118:40;;21208:7;21196:10;;21208:7;;:::i;21046:62::-;680:21288;;-1:-1:-1;;;21088:20:13;;680:21288;;21088:20;680:21288;;;;;;;-1:-1:-1;;680:21288:13;;;;;;;;;;:::i;:::-;;;;;2930:6:0;680:21288:13;;;;;-1:-1:-1;;;;;680:21288:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2484:4:0;;:::i;:::-;1204:72:5;;:::i;:::-;2255:4;680:21288:13;;;;;;2255:4:5;680:21288:13;2274:20:5;680:21288:13;;;735:10:10;680:21288:13;;2274:20:5;680:21288:13;;;;;;;;;-1:-1:-1;;680:21288:13;;;;-1:-1:-1;;;;;680:21288:13;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;19743:11;;;;680:21288;;;;;;;19743:71;;;;680:21288;19743:125;680:21288;19743:125;;;;;680:21288;;;;;;;;;;;19743:125;19849:19;;1861:8;680:21288;1861:8;680:21288;19830:15;:38;;;-1:-1:-1;19743:125:13;;;;:71;680:21288;;;;;;;;;;;;19770:44;19785:29;680:21288;19770:44;;19743:71;;;;680:21288;;;;;;;;;;;;;;;1685:7:5;680:21288:13;;;;;;;;;;;;;;;;;;:::i;:::-;2484:4:0;;;;;:::i;:::-;1204:72:5;;:::i;:::-;680:21288:13;;;;;4453:22;680:21288;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;4453:22;680:21288;;;;4452:23;4448:50;;680:21288;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;4312:23;680:21288;-1:-1:-1;;;;;680:21288:13;;;;;4312:35;;;4308:63;;680:21288;4453:22;680:21288;;;;;;;;;;;:::i;:::-;;;;;;;;;;4601:22;680:21288;;;;;;;;;4601:33;4597:65;;680:21288;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;;;;9924:13:13;;680:21288;9924:13;;680:21288;;;;9906:15;:31;9902:70;;680:21288;;9986:30;9982:63;;4453:22;10056:11;;10070:29;680:21288;;;;;;;;10109:16;;;680:21288;;;1861:8;9906:15;1861:8;9906:15;;1861:8;;;;680:21288;1861:8;680:21288;10277:134;1861:8;10277:134;1861:8;;;;;;;680:21288;1861:8;;9906:15;;;680:21288;1861:8;680:21288;1861:8;;;;;;10232:15;680:21288;:::i;:::-;1861:8;680:21288;1861:8;680:21288;10277:134;;:::i;:::-;680:21288;;;1861:8;;;680:21288;1861:8;;680:21288;1861:8;;;;:::i;:::-;;;;680:21288;10277:134;;;680:21288;;1861:8;-1:-1:-1;;;1861:8:13;;;680:21288;1861:8;;680:21288;1861:8;9982:63;680:21288;;-1:-1:-1;;;10025:20:13;;680:21288;;10025:20;9902:70;680:21288;;-1:-1:-1;;;9946:26:13;;680:21288;;9946:26;680:21288;;;;;;;;;;;;;;;1810:5;680:21288;;;;;;;;;;;;;;;;;;;;;2484:4:0;;:::i;:::-;1685:7:5;680:21288:13;;;;;;;;;;1685:7:5;680:21288:13;2521:22:5;680:21288:13;;;735:10:10;680:21288:13;;2521:22:5;680:21288:13;;;;;-1:-1:-1;;;680:21288:13;;;;;;;;;;;;-1:-1:-1;;;680:21288:13;;;;;;;;;;;;;;-1:-1:-1;;680:21288:13;;;;-1:-1:-1;;;;;680:21288:13;;;;;;;;;;;;;;:::i;:::-;2227:103:6;;;:::i;:::-;2484:4:0;;:::i;:::-;1204:72:5;;:::i;:::-;680:21288:13;;;4453:22;680:21288;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;4453:22;680:21288;;;;4452:23;4448:50;;680:21288;4453:22;680:21288;;;;;;;;;;;:::i;:::-;;;;;;;;;;4601:22;680:21288;;;;;;;;11805:29;4601:33;4597:65;;680:21288;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;11917:19;;;;1861:8;680:21288;1861:8;680:21288;11899:15;:37;11895:84;;-1:-1:-1;;;;;;;;;;;;;;;;12062:11:13;12477:66;12062:11;680:21288;12062:11;;680:21288;;;12143:25;680:21288;;12062:29;680:21288;;;;12062:29;;:::i;:::-;680:21288;1810:5;12143:25;;;:::i;:::-;4453:22;12179:11;;680:21288;;-1:-1:-1;;680:21288:13;;;;;12179:11;12243:10;;680:21288;;;;12263:96;;680:21288;;;;12373:16;12369:93;;680:21288;-1:-1:-1;;680:21288:13;12502:12;680:21288;-1:-1:-1;;;;;680:21288:13;;12477:66;:::i;12369:93::-;12405:46;1810:5;680:21288;1810:5;680:21288;;12405:46;;:::i;:::-;12369:93;;;;12263:96;680:21288;12320:12;;680:21288;12301:47;;680:21288;-1:-1:-1;;;;;680:21288:13;12301:47;;:::i;:::-;12263:96;;;11895:84;680:21288;;-1:-1:-1;;;11957:22:13;;680:21288;;11957:22;680:21288;;;;;;;-1:-1:-1;;680:21288:13;;;;;;:::i;:::-;735:10:10;-1:-1:-1;;;;;680:21288:13;;5397:34:0;5393:102;;5505:37;680:21288:13;;;5505:37:0;:::i;5393:102::-;680:21288:13;;-1:-1:-1;;;5454:30:0;;680:21288:13;;5454:30:0;680:21288:13;;;;;;;-1:-1:-1;;680:21288:13;;;;;;-1:-1:-1;;;;;680:21288:13;;;;;;2499:1:0;2484:4;;;:::i;:::-;2499:1;:::i;680:21288:13:-;;;;;;;-1:-1:-1;;680:21288:13;;;;4306:25:0;680:21288:13;;;;:::i;:::-;;;;;3877:6:0;680:21288:13;;2484:4:0;680:21288:13;;;;3877:22:0;680:21288:13;2484:4:0;:::i;:::-;4306:25;:::i;680:21288:13:-;;;;;;;;:::i;:::-;2227:103:6;;:::i;:::-;2484:4:0;;:::i;:::-;1204:72:5;;:::i;:::-;680:21288:13;;;4453:22;680:21288;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;4453:22;680:21288;;;;4452:23;4448:50;;680:21288;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;4153:31;;;4149:59;;680:21288;4453:22;680:21288;;;;;;;;;;;:::i;:::-;;;;;;;;;;4601:22;680:21288;;;;;;;;10787:29;4601:33;4597:65;;11445:66;680:21288;;-1:-1:-1;;;;;;;;;;;680:21288:13;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;10978:11:13;;680:21288;10978:11;;680:21288;;;11059:25;680:21288;;10978:29;680:21288;10992:15;680:21288;;10978:29;;:::i;:::-;680:21288;1810:5;11059:25;;;:::i;:::-;4453:22;11095:11;;680:21288;;-1:-1:-1;;680:21288:13;;;;;11095:11;11149:36;;;:::i;:::-;;;;;11211:10;680:21288;;;;11235:18;11231:96;;680:21288;;;;11341:16;11337:93;;680:21288;11470:12;;;680:21288;;11445:66;;:::i;11337:93::-;11373:46;1810:5;10992:15;1810:5;680:21288;;11373:46;;:::i;:::-;11337:93;;;;11231:96;11269:47;11288:12;;;;;680:21288;;11269:47;;:::i;:::-;11231:96;;;680:21288;;;;;;;-1:-1:-1;;680:21288:13;;;;;;;;;;;;3877:6:0;680:21288:13;;;3877:22:0;680:21288:13;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;680:21288:13;;;;;;;;;;;;;;;;-1:-1:-1;;680:21288:13;;;;;;-1:-1:-1;;;;;680:21288:13;;;;;;;;;;;:::i;:::-;2227:103:6;;:::i;:::-;2484:4:0;;:::i;:::-;680:21288:13;;;4453:22;680:21288;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;4453:22;680:21288;;;;4452:23;4448:50;;680:21288;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;16876:11;4453:22;16876:11;;680:21288;;;;;;;;;;;;;16891:21;16876:36;;16872:178;;680:21288;17082:11;17264:48;17082:11;16451:24;-1:-1:-1;;;;;680:21288:13;17082:11;;680:21288;;;;;;;;;17156:17;;17152:97;;17264:48;;;:::i;:::-;680:21288;;;;;17264:48;680:21288;17287:10;17264:48;;16891:21;1759:1:6;;680:21288:13;;17152:97;680:21288;;17189:49;;-1:-1:-1;;;;;;680:21288:13;17189:10;:49;:::i;:::-;17152:97;;;;16872:178;16947:29;16932:44;16928:112;;16872:178;;;16928:112;680:21288;;-1:-1:-1;;;17003:22:13;;680:21288;;17003:22;680:21288;;;;;;;;;;;;;;;;1949:24;680:21288;;;;;;;;;;;:::i;:::-;2484:4:0;;;;:::i;:::-;1204:72:5;;:::i;:::-;680:21288:13;;;;;;4453:22;680:21288;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;4453:22;680:21288;;;;4452:23;4448:50;;680:21288;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;680:21288:13;;;;;4153:31;;;4149:59;;680:21288;4453:22;680:21288;;;;;;;;;;;:::i;:::-;;;;;;;;;;4601:22;680:21288;;;;;;;;12916:29;4601:33;4597:65;;680:21288;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;13029:19;;;1861:8;-1:-1:-1;;;;;1861:8:13;;680:21288;1861:8;680:21288;13010:15;:38;;13006:70;;680:21288;;13090:26;13086:55;;13294:49;13152:11;680:21288;13152:11;13199:18;13152:11;4453:22;13294:49;13152:11;;13166:23;680:21288;;;;;;;;13199:18;680:21288;:::i;:::-;;;-1:-1:-1;;;;680:21288:13;13010:15;680:21288;;-1:-1:-1;;;680:21288:13;;;;13294:49;:::i;:::-;680:21288;;;;;;;;;;;;;;:::i;:::-;13294:49;;;680:21288;;13086:55;680:21288;;-1:-1:-1;;;13125:16:13;;680:21288;;13125:16;13006:70;680:21288;;-1:-1:-1;;;13057:19:13;;680:21288;;13057:19;680:21288;;;;;;;;:::i;:::-;2484:4:0;;;:::i;:::-;680:21288:13;;;;;;4453:22;680:21288;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;4453:22;680:21288;;;;4452:23;4448:50;;680:21288;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;680:21288:13;;;;;4153:31;;;4149:59;;680:21288;4453:22;680:21288;;;;;;;;;;;:::i;:::-;;;;;;;;;;4601:22;680:21288;;;;;;;;4597:65;;16491:40;680:21288;4453:22;680:21288;;16491:40;680:21288;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;16426:22;16451:24;680:21288;;;;;;;;16491:40;:::i;:::-;680:21288;;;;;;16491:40;680:21288;;;;;;;;;;-1:-1:-1;;680:21288:13;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2649:47:0;;;:87;;;;680:21288:13;;;;;;;2649:87:0;-1:-1:-1;;;829:40:11;;-1:-1:-1;2649:87:0;;;680:21288:13;;;;;;;-1:-1:-1;;;;;680:21288:13;;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;680:21288:13;;;;;;;:::o;:::-;;;;;;;;;;;;-1:-1:-1;;;;;680:21288:13;;;;;;;;;;;-1:-1:-1;;680:21288:13;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;680:21288:13;;;;;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;680:21288:13;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;680:21288:13;;;;;;:::o;:::-;;-1:-1:-1;;680:21288:13;;;;;;;;-1:-1:-1;;;;;680:21288:13;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;680:21288:13;;;;;;;:::o;:::-;;-1:-1:-1;;680:21288:13;;;;;-1:-1:-1;;;;;680:21288:13;;;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;680:21288:13;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;-1:-1:-1;;680:21288:13;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;680:21288:13;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;680:21288:13;;;;;-1:-1:-1;680:21288:13;3175:103:0;735:10:10;-1:-1:-1;680:21288:13;;;;;;;;;;1949:24;;680:21288;;3495:23:0;3491:108;;3175:103;:::o;3491:108::-;680:21288:13;;;;3541:47:0;;;;;;735:10:10;3541:47:0;;;680:21288:13;;;;;3541:47:0;3175:103;680:21288:13;-1:-1:-1;680:21288:13;2930:6:0;680:21288:13;;;-1:-1:-1;680:21288:13;735:10:10;-1:-1:-1;680:21288:13;;;;;-1:-1:-1;680:21288:13;;;3495:23:0;3491:108;;3175:103;:::o;6155:316::-;;-1:-1:-1;680:21288:13;;;;2930:6:0;680:21288:13;;;;;;;;;;;;;;;;;;;;;;;;6252:23:0;6248:217;680:21288:13;;;;;;2930:6:0;680:21288:13;;;;;;;;;;;;;;;;;;;;;;6346:40:0;735:10:10;6346:40:0;;;680:21288:13;6400:11:0;:::o;6248:217::-;6442:12;;;:::o;6708:317::-;;-1:-1:-1;680:21288:13;;;;2930:6:0;680:21288:13;;;;;;;;;;;;;;;;;;;;;;;;6802:217:0;680:21288:13;;;;;;2930:6:0;680:21288:13;;;;;;;;;;;;;;;;;;;;6900:40:0;735:10:10;6900:40:0;;;680:21288:13;6954:11:0;:::o;680:21288:13:-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;-1:-1:-1;;;;;680:21288:13;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;680:21288:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;680:21288:13;;-1:-1:-1;680:21288:13;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;680:21288:13;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;680:21288:13;;-1:-1:-1;680:21288:13;;;:::i;:::-;:::o;:::-;;;;-1:-1:-1;680:21288:13;;;;;-1:-1:-1;680:21288:13;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::o;1767:106:5:-;680:21288:13;1685:7:5;680:21288:13;;;;1767:106:5:o;680:21288:13:-;;;-1:-1:-1;;;680:21288:13;;;;;;;;;;;;-1:-1:-1;;;680:21288:13;;;;;;;2336:287:6;1759:1;2468:7;680:21288:13;2468:19:6;1759:1;;;2468:7;1759:1;2336:287::o;1759:1::-;680:21288:13;;-1:-1:-1;;;1759:1:6;;;;;;;;;;;680:21288:13;1759:1:6;680:21288:13;;;1759:1:6;;;;8370:720:9;;-1:-1:-1;8507:421:9;8370:720;8507:421;;;;;;;;;;;;-1:-1:-1;8507:421:9;;8942:15;;-1:-1:-1;;;;;;680:21288:13;;8960:26:9;:31;8942:68;8938:146;;8370:720;:::o;8938:146::-;680:21288:13;;-1:-1:-1;;;9033:40:9;;-1:-1:-1;;;;;680:21288:13;;;9033:40:9;;;680:21288:13;;;9033:40:9;8942:68;9009:1;8994:16;;8942:68;;8507:421;;;;-1:-1:-1;8507:421:9;;;;;680:21288:13;;;;-1:-1:-1;;;;;680:21288:13;;;;;;;;;;;;;;;:::o;1810:5::-;-1:-1:-1;;;;;680:21288:13;;;;;;1810:5;;;;;;;:::o;1219:160:9:-;680:21288:13;;-1:-1:-1;;;1328:43:9;;;;-1:-1:-1;;;;;680:21288:13;;;1328:43:9;;;680:21288:13;;;;;;;;;1328:43:9;;;680:21288:13;;;;-1:-1:-1;;;;;680:21288:13;;;;;;;;1328:43:9;680:21288:13;;;1328:43:9;:::i;680:21288:13:-;;;;;;-1:-1:-1;680:21288:13;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;680:21288:13;;;;-1:-1:-1;680:21288:13;;-1:-1:-1;680:21288:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;680:21288:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;680:21288:13;;;;;;;;;;;;;;;:::i;:::-;;;:::o;20051:327::-;-1:-1:-1;;;;;680:21288:13;;;;20169:4;20156:17;;20152:42;;20221:15;680:21288;;;;20250:20;;;;20246:33;;-1:-1:-1;;680:21288:13;;;;;;;20221:15;680:21288;;;;-1:-1:-1;;;;;680:21288:13;;;;;;;;;1810:5;;;680:21288;20333:38;;680:21288;;1810:5;;20333:38;;;;20051:327::o;20246:33::-;20272:7;;;;:::o;20152:42::-;680:21288;;-1:-1:-1;;;20182:12:13;;;;;20384:371;-1:-1:-1;;;;;680:21288:13;;;20494:27;;20490:56;;20580:13;1810:5;680:21288;;;;20607:29;;;20603:42;;-1:-1:-1;;;;;680:21288:13;;;;;;;-1:-1:-1;;680:21288:13;;20580:13;680:21288;;;;-1:-1:-1;;;;;680:21288:13;;;;;;;;;;;;;20700:48;;680:21288;;;;;20700:48;680:21288;20603:42;20638:7;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2366400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DEFAULT_ADMIN_ROLE()": "693",
								"SERVER_ROLE()": "228",
								"acceptDeal(string,address)": "infinite",
								"approveDeal(string,address)": "infinite",
								"autoRefundAfterDeadline(string)": "infinite",
								"autoReleasePayment(string)": "infinite",
								"brandDeals(address)": "infinite",
								"canAutoRelease(string)": "infinite",
								"cancelDeal(string,address)": "infinite",
								"createDeal(string,address,address,uint96,uint64,string)": "infinite",
								"creatorDeals(address)": "infinite",
								"deals(string)": "infinite",
								"emergencyCancelDeal(string)": "infinite",
								"emergencyWithdraw(address,uint256)": "infinite",
								"feeRecipient()": "2557",
								"fundDeal(string,address,uint96,uint256,uint8,bytes32,bytes32)": "infinite",
								"getDeal(string)": "infinite",
								"getDeals(address,bool)": "infinite",
								"getRoleAdmin(bytes32)": "2469",
								"grantRole(bytes32,address)": "33399",
								"hasRole(bytes32,address)": "2896",
								"idrxToken()": "infinite",
								"initiateDispute(string,address,string)": "infinite",
								"pause()": "30138",
								"paused()": "2607",
								"platformFeeBps()": "2393",
								"renounceRole(bytes32,address)": "29029",
								"resolveDispute(string,address,bool)": "infinite",
								"revokeRole(bytes32,address)": "33786",
								"submitContent(string,address,string)": "infinite",
								"supportsInterface(bytes4)": "279",
								"unpause()": "27901",
								"updateFeeRecipient(address)": "28887",
								"updatePlatformFee(uint96)": "28311"
							},
							"internal": {
								"_executePermit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 680,
									"end": 21968,
									"name": "PUSH",
									"source": 13,
									"value": "A0"
								},
								{
									"begin": 680,
									"end": 21968,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 680,
									"end": 21968,
									"name": "PUSHSIZE",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21968,
									"name": "CODESIZE",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21968,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21968,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21968,
									"name": "SUB",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21968,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21968,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21968,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 680,
									"end": 21968,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21968,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21968,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21968,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21968,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 680,
									"end": 21968,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21968,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21968,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21968,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21968,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21968,
									"name": "OR",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21968,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "3"
								},
								{
									"begin": 680,
									"end": 21968,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21968,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21968,
									"name": "PUSH",
									"source": 13,
									"value": "60"
								},
								{
									"begin": 680,
									"end": 21968,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21968,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21968,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21968,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 680,
									"end": 21968,
									"name": "SWAP6",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21968,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21968,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21968,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21968,
									"name": "CODECOPY",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21968,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21968,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21968,
									"name": "SUB",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21968,
									"name": "SLT",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21968,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "5"
								},
								{
									"begin": 680,
									"end": 21968,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21968,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "7"
								},
								{
									"begin": 680,
									"end": 21968,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21968,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 680,
									"end": 21968,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21968,
									"name": "tag",
									"source": 13,
									"value": "7"
								},
								{
									"begin": 680,
									"end": 21968,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21968,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21968,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "8"
								},
								{
									"begin": 680,
									"end": 21968,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21968,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "9"
								},
								{
									"begin": 680,
									"end": 21968,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 680,
									"end": 21968,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21968,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21968,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 680,
									"end": 21968,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21968,
									"name": "tag",
									"source": 13,
									"value": "9"
								},
								{
									"begin": 680,
									"end": 21968,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21968,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21968,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21968,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 680,
									"end": 21968,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21968,
									"name": "tag",
									"source": 13,
									"value": "8"
								},
								{
									"begin": 680,
									"end": 21968,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21968,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 680,
									"end": 21968,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21968,
									"name": "SLOAD",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 680,
									"end": 21968,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21968,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21968,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 680,
									"end": 21968,
									"name": "SWAP4",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21968,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21968,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21968,
									"name": "SWAP4",
									"source": 13
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4861,
									"end": 4885,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 4861,
									"end": 4885,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 4857,
									"end": 4910,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "12"
								},
								{
									"begin": 4857,
									"end": 4910,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21968,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21968,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21968,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 4924,
									"end": 4951,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 4920,
									"end": 4976,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "12"
								},
								{
									"begin": 4920,
									"end": 4976,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21968,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21968,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 4990,
									"end": 5017,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 4986,
									"end": 5042,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "14"
								},
								{
									"begin": 4986,
									"end": 5042,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 5134,
									"end": 5172,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "16"
								},
								{
									"begin": 5053,
									"end": 5084,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 5053,
									"end": 5084,
									"name": "SWAP4",
									"source": 13
								},
								{
									"begin": 5053,
									"end": 5084,
									"name": "PUSH",
									"source": 13,
									"value": "80"
								},
								{
									"begin": 5053,
									"end": 5084,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21968,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 680,
									"end": 21968,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21968,
									"name": "PUSH",
									"source": 13,
									"value": "60"
								},
								{
									"begin": 680,
									"end": 21968,
									"name": "SHL",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21968,
									"name": "SUB",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21968,
									"name": "NOT",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21968,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21968,
									"name": "PUSH",
									"source": 13,
									"value": "60"
								},
								{
									"begin": 680,
									"end": 21968,
									"name": "SHL",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21968,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 1751,
									"end": 1754,
									"name": "PUSH",
									"source": 13,
									"value": "FA"
								},
								{
									"begin": 680,
									"end": 21968,
									"name": "OR",
									"source": 13
								},
								{
									"begin": 1751,
									"end": 1754,
									"name": "PUSH",
									"source": 13,
									"value": "3"
								},
								{
									"begin": 680,
									"end": 21968,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 5134,
									"end": 5172,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "2"
								},
								{
									"begin": 5134,
									"end": 5172,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5134,
									"end": 5172,
									"name": "tag",
									"source": 13,
									"value": "16"
								},
								{
									"begin": 5134,
									"end": 5172,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5134,
									"end": 5172,
									"name": "POP",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH data",
									"source": -1,
									"value": "2B911A32A95F59603F7637B420E0D131A993F16F7410883B87320ADD8A183555"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP4",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "CODECOPY",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 680,
									"end": 21968,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 680,
									"end": 21968,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 3877,
									"end": 3883,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 680,
									"end": 21968,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 680,
									"end": 21968,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21968,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 680,
									"end": 21968,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 680,
									"end": 21968,
									"name": "KECCAK256",
									"source": 13
								},
								{
									"begin": 3877,
									"end": 3899,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 680,
									"end": 21968,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21968,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21968,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21968,
									"name": "SLOAD",
									"source": 13
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 680,
									"end": 21968,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 5862,
									"end": 5914,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 5862,
									"end": 5914,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 5862,
									"end": 5914,
									"name": "PUSH",
									"source": 0,
									"value": "BD79B86FFE0AB8E8776151514217CD7CACD52C909F66475C3AF44E129F0B00FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 5862,
									"end": 5914,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 5862,
									"end": 5914,
									"name": "LOG4",
									"source": 0
								},
								{
									"begin": 680,
									"end": 21968,
									"name": "PUSH #[$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 680,
									"end": 21968,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21968,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21968,
									"name": "PUSH [$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 680,
									"end": 21968,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21968,
									"name": "CODECOPY",
									"source": 13
								},
								{
									"begin": 5053,
									"end": 5084,
									"name": "PUSH",
									"source": 13,
									"value": "80"
								},
								{
									"begin": 680,
									"end": 21968,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21968,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21968,
									"name": "ASSIGNIMMUTABLE",
									"source": 13,
									"value": "1358"
								},
								{
									"begin": 680,
									"end": 21968,
									"name": "RETURN",
									"source": 13
								},
								{
									"begin": 4986,
									"end": 5042,
									"name": "tag",
									"source": 13,
									"value": "14"
								},
								{
									"begin": 4986,
									"end": 5042,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21968,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21968,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E6C4247B"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 5026,
									"end": 5042,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 5026,
									"end": 5042,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 5026,
									"end": 5042,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 5026,
									"end": 5042,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 5026,
									"end": 5042,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 4920,
									"end": 4976,
									"name": "tag",
									"source": 13,
									"value": "12"
								},
								{
									"begin": 4920,
									"end": 4976,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21968,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21968,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E6C4247B"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 4960,
									"end": 4976,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 4960,
									"end": 4976,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 4960,
									"end": 4976,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 4960,
									"end": 4976,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 4960,
									"end": 4976,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21968,
									"name": "tag",
									"source": 13,
									"value": "5"
								},
								{
									"begin": 680,
									"end": 21968,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 680,
									"end": 21968,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21968,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21968,
									"name": "tag",
									"source": 13,
									"value": "3"
								},
								{
									"begin": 680,
									"end": 21968,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21968,
									"name": "PUSH",
									"source": 13,
									"value": "4E487B71"
								},
								{
									"begin": 680,
									"end": 21968,
									"name": "PUSH",
									"source": 13,
									"value": "E0"
								},
								{
									"begin": 680,
									"end": 21968,
									"name": "SHL",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 680,
									"end": 21968,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21968,
									"name": "PUSH",
									"source": 13,
									"value": "41"
								},
								{
									"begin": 680,
									"end": 21968,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 680,
									"end": 21968,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21968,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 680,
									"end": 21968,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21968,
									"name": "tag",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 680,
									"end": 21968,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21968,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21968,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 680,
									"end": 21968,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21968,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21968,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21968,
									"name": "SUB",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21968,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "5"
								},
								{
									"begin": 680,
									"end": 21968,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21968,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 6155,
									"end": 6471,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 6155,
									"end": 6471,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 680,
									"end": 21968,
									"name": "AND",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 680,
									"end": 21968,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21968,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21968,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21968,
									"name": "PUSH",
									"source": 13,
									"value": "EF73BF2AC44F84561B5498839AB1C8C5A4DD99305D838AEA0D76C5961778535C"
								},
								{
									"begin": 680,
									"end": 21968,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 680,
									"end": 21968,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21968,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 680,
									"end": 21968,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21968,
									"name": "KECCAK256",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21968,
									"name": "SLOAD",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP1",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP2",
									"source": -1
								},
								{
									"begin": 680,
									"end": 21968,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH data",
									"source": -1,
									"value": "2B911A32A95F59603F7637B420E0D131A993F16F7410883B87320ADD8A183555"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP4",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "CODECOPY",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 1949,
									"end": 1973,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21968,
									"name": "PUSH",
									"source": 13,
									"value": "FF"
								},
								{
									"begin": 680,
									"end": 21968,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21968,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "19"
								},
								{
									"begin": 680,
									"end": 21968,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21968,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21968,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21968,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 2930,
									"end": 2936,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 680,
									"end": 21968,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 680,
									"end": 21968,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21968,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 680,
									"end": 21968,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21968,
									"name": "KECCAK256",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21968,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21968,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21968,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21968,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 680,
									"end": 21968,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21968,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 680,
									"end": 21968,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21968,
									"name": "KECCAK256",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21968,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 680,
									"end": 21968,
									"name": "PUSH",
									"source": 13,
									"value": "FF"
								},
								{
									"begin": 680,
									"end": 21968,
									"name": "NOT",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21968,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21968,
									"name": "SLOAD",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21968,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21968,
									"name": "OR",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21968,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21968,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "PUSH",
									"source": 0,
									"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
								},
								{
									"begin": 735,
									"end": 745,
									"name": "CALLER",
									"source": 10
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "LOG4",
									"source": 0
								},
								{
									"begin": 680,
									"end": 21968,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 6400,
									"end": 6411,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6400,
									"end": 6411,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6248,
									"end": 6465,
									"name": "tag",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 6248,
									"end": 6465,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6442,
									"end": 6454,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6442,
									"end": 6454,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6442,
									"end": 6454,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6442,
									"end": 6454,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212209f68eb11def6ace195be9b728ee01d2c0b4c80f5e7616afed9da57cff3c0c44164736f6c63430008140033",
									".code": [
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "33"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "33"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "1FFC9A7"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "35"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "3F715DA"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "37"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "E59A395"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "39"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "18CF2834"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "41"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "1A1AAEED"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "43"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "22DCD13E"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "45"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "248A9CA3"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "47"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "24D956C8"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "49"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "2F2FF15D"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "51"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "317B8C5B"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "53"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "36568ABE"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "55"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "38A13287"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "57"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "3F4BA83A"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "59"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "46904840"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "61"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "4971716F"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "63"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "5C975ABB"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "65"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "76492D3F"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "67"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "8456CB59"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "69"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "91D14854"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "71"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "95CCEA67"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "73"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "9B1221AB"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "75"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "9F1CF42D"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "77"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "9FAD59B4"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "79"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "A0A57DAC"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "81"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "A217FDDF"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "83"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "AED1505D"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "85"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "D547741F"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "87"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "D6BC7C63"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "89"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "E39FFF38"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "91"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "E4ABD4CB"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "93"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "E7079180"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "95"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "EF03C10E"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "97"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "F0C3CD20"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "99"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "F160D369"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "101"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "101"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "105"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "105"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2499,
											"end": 2500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "108"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 680,
											"end": 21968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "108"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2484,
											"end": 2488,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2499,
											"end": 2500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 2499,
											"end": 2500,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2499,
											"end": 2500,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 2499,
											"end": 2500,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "105"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "99"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "105"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "112"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "114"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 680,
											"end": 21968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "114"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 18033,
											"end": 18044,
											"name": "PUSH",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "115"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "30"
										},
										{
											"begin": 680,
											"end": 21968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "115"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "116"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "117"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "119"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "10"
										},
										{
											"begin": 680,
											"end": 21968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "119"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "117"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "120"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "29"
										},
										{
											"begin": 680,
											"end": 21968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "120"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP7",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "116"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "112"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "97"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "105"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "105"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "112"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "127"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 680,
											"end": 21968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "127"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "128"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "128"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "129"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 2227,
											"end": 2330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "tag",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2484,
											"end": 2488,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1204,
											"end": 1276,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 1204,
											"end": 1276,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 1204,
											"end": 1276,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1204,
											"end": 1276,
											"name": "tag",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 1204,
											"end": 1276,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 4453,
											"end": 4475,
											"name": "PUSH",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP7",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "134"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP11",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 680,
											"end": 21968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "134"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 4453,
											"end": 4475,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "10"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4452,
											"end": 4475,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4448,
											"end": 4498,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "135"
										},
										{
											"begin": 4448,
											"end": 4498,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "137"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 680,
											"end": 21968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "137"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "A0"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP7",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 4312,
											"end": 4335,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4312,
											"end": 4347,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4308,
											"end": 4371,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "138"
										},
										{
											"begin": 4308,
											"end": 4371,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 4453,
											"end": 4475,
											"name": "PUSH",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "140"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 680,
											"end": 21968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "140"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 4601,
											"end": 4623,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "141"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 4601,
											"end": 4634,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4597,
											"end": 4662,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "143"
										},
										{
											"begin": 4597,
											"end": 4662,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "145"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 680,
											"end": 21968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "145"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 13882,
											"end": 13893,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13882,
											"end": 13893,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 13921,
											"end": 13933,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 13921,
											"end": 13933,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 13921,
											"end": 13933,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 13921,
											"end": 13933,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1810,
											"end": 1815,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4453,
											"end": 4475,
											"name": "PUSH",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 1810,
											"end": 1815,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 14063,
											"end": 14074,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 14063,
											"end": 14074,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "FF00"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4453,
											"end": 4475,
											"name": "PUSH",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "FFFF"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 14261,
											"end": 14271,
											"name": "PUSHIMMUTABLE",
											"source": 13,
											"value": "1358"
										},
										{
											"begin": 14299,
											"end": 15049,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 14299,
											"end": 15049,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 14299,
											"end": 15049,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 14299,
											"end": 15049,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14299,
											"end": 15049,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 14299,
											"end": 15049,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "146"
										},
										{
											"begin": 14299,
											"end": 15049,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "1388"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "148"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "2710"
										},
										{
											"begin": 1810,
											"end": 1815,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1810,
											"end": 1815,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 1810,
											"end": 1815,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 14427,
											"end": 14452,
											"name": "SWAP8",
											"source": 13
										},
										{
											"begin": 14427,
											"end": 14452,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 14427,
											"end": 14452,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "150"
										},
										{
											"begin": 14427,
											"end": 14452,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 14427,
											"end": 14452,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "26"
										},
										{
											"begin": 14427,
											"end": 14452,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14427,
											"end": 14452,
											"name": "tag",
											"source": 13,
											"value": "150"
										},
										{
											"begin": 14427,
											"end": 14452,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 14482,
											"end": 14502,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "151"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 14482,
											"end": 14502,
											"name": "DUP11",
											"source": 13
										},
										{
											"begin": 14482,
											"end": 14502,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "25"
										},
										{
											"begin": 14482,
											"end": 14502,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14482,
											"end": 14502,
											"name": "tag",
											"source": 13,
											"value": "151"
										},
										{
											"begin": 14482,
											"end": 14502,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1810,
											"end": 1815,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 14555,
											"end": 14580,
											"name": "SWAP8",
											"source": 13
										},
										{
											"begin": 14555,
											"end": 14580,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 14555,
											"end": 14580,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "152"
										},
										{
											"begin": 14555,
											"end": 14580,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 14555,
											"end": 14580,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "26"
										},
										{
											"begin": 14555,
											"end": 14580,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14555,
											"end": 14580,
											"name": "tag",
											"source": 13,
											"value": "152"
										},
										{
											"begin": 14555,
											"end": 14580,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP10",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP12",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 14640,
											"end": 14655,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 14640,
											"end": 14655,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 14640,
											"end": 14655,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 14640,
											"end": 14655,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 14636,
											"end": 14696,
											"name": "SWAP11",
											"source": 13
										},
										{
											"begin": 15234,
											"end": 15295,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "153"
										},
										{
											"begin": 14636,
											"end": 14696,
											"name": "SWAP10",
											"source": 13
										},
										{
											"begin": 15064,
											"end": 15219,
											"name": "PUSH",
											"source": 13,
											"value": "EA4EA4B4229888EEBA3EB2772DF89C52AF23C7FE3D530B0C1F2CA146F32C12BA"
										},
										{
											"begin": 14636,
											"end": 14696,
											"name": "SWAP7",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 14636,
											"end": 14696,
											"name": "SWAP7",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "A8EDA418A66B2F5395D4A15B2F03DE75B34FFF39BB2E2A8B57F6BE974D56E7B0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 14636,
											"end": 14696,
											"name": "SWAP15",
											"source": 13
										},
										{
											"begin": 14636,
											"end": 14696,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "154"
										},
										{
											"begin": 14636,
											"end": 14696,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 14299,
											"end": 15049,
											"name": "tag",
											"source": 13,
											"value": "155"
										},
										{
											"begin": 14299,
											"end": 15049,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "POP",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 14714,
											"end": 14730,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 14710,
											"end": 14770,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "156"
										},
										{
											"begin": 14710,
											"end": 14770,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 14299,
											"end": 15049,
											"name": "tag",
											"source": 13,
											"value": "157"
										},
										{
											"begin": 14299,
											"end": 15049,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "POP",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP12",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 14788,
											"end": 14804,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14788,
											"end": 14804,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14784,
											"end": 14847,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "158"
										},
										{
											"begin": 14784,
											"end": 14847,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 14299,
											"end": 15049,
											"name": "tag",
											"source": 13,
											"value": "159"
										},
										{
											"begin": 14299,
											"end": 15049,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14299,
											"end": 15049,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14299,
											"end": 15049,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14299,
											"end": 15049,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14299,
											"end": 15049,
											"name": "tag",
											"source": 13,
											"value": "160"
										},
										{
											"begin": 14299,
											"end": 15049,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15064,
											"end": 15219,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "161"
										},
										{
											"begin": 15064,
											"end": 15219,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 15064,
											"end": 15219,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 15064,
											"end": 15219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15064,
											"end": 15219,
											"name": "tag",
											"source": 13,
											"value": "161"
										},
										{
											"begin": 15064,
											"end": 15219,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP8",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP14",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 15064,
											"end": 15219,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 15064,
											"end": 15219,
											"name": "LOG3",
											"source": 13
										},
										{
											"begin": 15234,
											"end": 15295,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 15234,
											"end": 15295,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15234,
											"end": 15295,
											"name": "tag",
											"source": 13,
											"value": "153"
										},
										{
											"begin": 15234,
											"end": 15295,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1810,
											"end": 1815,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1810,
											"end": 1815,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1810,
											"end": 1815,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15234,
											"end": 15295,
											"name": "LOG3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 14784,
											"end": 14847,
											"name": "tag",
											"source": 13,
											"value": "158"
										},
										{
											"begin": 14784,
											"end": 14847,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14806,
											"end": 14847,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "163"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 14806,
											"end": 14847,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14806,
											"end": 14847,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "28"
										},
										{
											"begin": 14806,
											"end": 14847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14806,
											"end": 14847,
											"name": "tag",
											"source": 13,
											"value": "163"
										},
										{
											"begin": 14806,
											"end": 14847,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14784,
											"end": 14847,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14784,
											"end": 14847,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 14784,
											"end": 14847,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 14784,
											"end": 14847,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "159"
										},
										{
											"begin": 14784,
											"end": 14847,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14710,
											"end": 14770,
											"name": "tag",
											"source": 13,
											"value": "156"
										},
										{
											"begin": 14710,
											"end": 14770,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14732,
											"end": 14770,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "164"
										},
										{
											"begin": 14732,
											"end": 14770,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 14732,
											"end": 14770,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 14732,
											"end": 14770,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "28"
										},
										{
											"begin": 14732,
											"end": 14770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14732,
											"end": 14770,
											"name": "tag",
											"source": 13,
											"value": "164"
										},
										{
											"begin": 14732,
											"end": 14770,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14710,
											"end": 14770,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14710,
											"end": 14770,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 14710,
											"end": 14770,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "157"
										},
										{
											"begin": 14710,
											"end": 14770,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14636,
											"end": 14696,
											"name": "tag",
											"source": 13,
											"value": "154"
										},
										{
											"begin": 14636,
											"end": 14696,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14657,
											"end": 14696,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "165"
										},
										{
											"begin": 14657,
											"end": 14696,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 14657,
											"end": 14696,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 14657,
											"end": 14696,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "28"
										},
										{
											"begin": 14657,
											"end": 14696,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14657,
											"end": 14696,
											"name": "tag",
											"source": 13,
											"value": "165"
										},
										{
											"begin": 14657,
											"end": 14696,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14636,
											"end": 14696,
											"name": "DUP15",
											"source": 13
										},
										{
											"begin": 14636,
											"end": 14696,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14636,
											"end": 14696,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "155"
										},
										{
											"begin": 14636,
											"end": 14696,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "148"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B71"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1861,
											"end": 1869,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1861,
											"end": 1869,
											"name": "PUSH",
											"source": 13,
											"value": "11"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 1861,
											"end": 1869,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1861,
											"end": 1869,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1861,
											"end": 1869,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 14299,
											"end": 15049,
											"name": "tag",
											"source": 13,
											"value": "146"
										},
										{
											"begin": 14299,
											"end": 15049,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14878,
											"end": 14895,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 14878,
											"end": 14895,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 15064,
											"end": 15219,
											"name": "PUSH",
											"source": 13,
											"value": "EA4EA4B4229888EEBA3EB2772DF89C52AF23C7FE3D530B0C1F2CA146F32C12BA"
										},
										{
											"begin": 14878,
											"end": 14895,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 15234,
											"end": 15295,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "153"
										},
										{
											"begin": 14878,
											"end": 14895,
											"name": "SWAP7",
											"source": 13
										},
										{
											"begin": 14878,
											"end": 14895,
											"name": "SWAP8",
											"source": 13
										},
										{
											"begin": 14878,
											"end": 14895,
											"name": "SWAP10",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "A8EDA418A66B2F5395D4A15B2F03DE75B34FFF39BB2E2A8B57F6BE974D56E7B0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 14878,
											"end": 14895,
											"name": "SWAP10",
											"source": 13
										},
										{
											"begin": 14878,
											"end": 14895,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 14909,
											"end": 14934,
											"name": "SWAP12",
											"source": 13
										},
										{
											"begin": 14909,
											"end": 14934,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 14948,
											"end": 14963,
											"name": "SWAP7",
											"source": 13
										},
										{
											"begin": 14982,
											"end": 14998,
											"name": "SWAP11",
											"source": 13
										},
										{
											"begin": 14982,
											"end": 14998,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14978,
											"end": 15038,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "166"
										},
										{
											"begin": 14978,
											"end": 15038,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 14299,
											"end": 15049,
											"name": "tag",
											"source": 13,
											"value": "167"
										},
										{
											"begin": 14299,
											"end": 15049,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14299,
											"end": 15049,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14299,
											"end": 15049,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14299,
											"end": 15049,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14299,
											"end": 15049,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "160"
										},
										{
											"begin": 14299,
											"end": 15049,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14978,
											"end": 15038,
											"name": "tag",
											"source": 13,
											"value": "166"
										},
										{
											"begin": 14978,
											"end": 15038,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15000,
											"end": 15038,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "168"
										},
										{
											"begin": 15000,
											"end": 15038,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 15000,
											"end": 15038,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "28"
										},
										{
											"begin": 15000,
											"end": 15038,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15000,
											"end": 15038,
											"name": "tag",
											"source": 13,
											"value": "168"
										},
										{
											"begin": 15000,
											"end": 15038,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14978,
											"end": 15038,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14978,
											"end": 15038,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 14978,
											"end": 15038,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 14978,
											"end": 15038,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "167"
										},
										{
											"begin": 14978,
											"end": 15038,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4597,
											"end": 4662,
											"name": "tag",
											"source": 13,
											"value": "143"
										},
										{
											"begin": 4597,
											"end": 4662,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5E40B94F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4643,
											"end": 4662,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4643,
											"end": 4662,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4643,
											"end": 4662,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "141"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "21"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 4308,
											"end": 4371,
											"name": "tag",
											"source": 13,
											"value": "138"
										},
										{
											"begin": 4308,
											"end": 4371,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "EA8E4EB5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4356,
											"end": 4371,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4356,
											"end": 4371,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4356,
											"end": 4371,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 4448,
											"end": 4498,
											"name": "tag",
											"source": 13,
											"value": "135"
										},
										{
											"begin": 4448,
											"end": 4498,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "223DA473"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4484,
											"end": 4498,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4484,
											"end": 4498,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4484,
											"end": 4498,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "129"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "95"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "105"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "105"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "105"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "175"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "176"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 680,
											"end": 21968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "176"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 680,
											"end": 21968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "175"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 18866,
											"end": 18877,
											"name": "PUSH",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 18866,
											"end": 18877,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 18866,
											"end": 18877,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "10"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 18865,
											"end": 18877,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 18861,
											"end": 18900,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "135"
										},
										{
											"begin": 18861,
											"end": 18900,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 18981,
											"end": 18993,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 18981,
											"end": 18993,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 19007,
											"end": 19018,
											"name": "PUSH",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 19007,
											"end": 19018,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 19007,
											"end": 19018,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 19173,
											"end": 19192,
											"name": "PUSH",
											"source": 13,
											"value": "7"
										},
										{
											"begin": 19173,
											"end": 19192,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 19173,
											"end": 19192,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1861,
											"end": 1869,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "179"
										},
										{
											"begin": 18932,
											"end": 18943,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 18932,
											"end": 18943,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 18932,
											"end": 18943,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "29"
										},
										{
											"begin": 680,
											"end": 21968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "179"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19084,
											"end": 19098,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "180"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 19084,
											"end": 19098,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 19084,
											"end": 19098,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "29"
										},
										{
											"begin": 680,
											"end": 21968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "180"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19112,
											"end": 19127,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "181"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 19112,
											"end": 19127,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 19112,
											"end": 19127,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "29"
										},
										{
											"begin": 680,
											"end": 21968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "181"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19141,
											"end": 19159,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 19141,
											"end": 19159,
											"name": "PUSH",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 19141,
											"end": 19159,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "182"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "29"
										},
										{
											"begin": 680,
											"end": 21968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "182"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP9",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP9",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "1E0"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP12",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP11",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "183"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "9"
										},
										{
											"begin": 680,
											"end": 21968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "183"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP11",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "A0"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "184"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "11"
										},
										{
											"begin": 680,
											"end": 21968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "184"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "C0"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "185"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "9"
										},
										{
											"begin": 680,
											"end": 21968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "185"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "186"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "9"
										},
										{
											"begin": 680,
											"end": 21968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "186"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "187"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "9"
										},
										{
											"begin": 680,
											"end": 21968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "187"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1861,
											"end": 1869,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1861,
											"end": 1869,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1861,
											"end": 1869,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "120"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "A0"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "140"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "160"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "180"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "C0"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "1A0"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "1C0"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "93"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "105"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "C0"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "105"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "192"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "194"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 680,
											"end": 21968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "194"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "195"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "195"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "129"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "129"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "200"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "A4"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "202"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "204"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 680,
											"end": 21968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "204"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2484,
											"end": 2488,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "tag",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1204,
											"end": 1276,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "206"
										},
										{
											"begin": 1204,
											"end": 1276,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 1204,
											"end": 1276,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1204,
											"end": 1276,
											"name": "tag",
											"source": 5,
											"value": "206"
										},
										{
											"begin": 1204,
											"end": 1276,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 5826,
											"end": 5848,
											"name": "PUSH",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "207"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP12",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 680,
											"end": 21968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "207"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 5826,
											"end": 5848,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "10"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 5822,
											"end": 5876,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "208"
										},
										{
											"begin": 5822,
											"end": 5876,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5890,
											"end": 5919,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 5890,
											"end": 5919,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5886,
											"end": 5944,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "212"
										},
										{
											"begin": 5886,
											"end": 5944,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 5958,
											"end": 5985,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 5958,
											"end": 5985,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5954,
											"end": 6010,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "212"
										},
										{
											"begin": 5954,
											"end": 6010,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6024,
											"end": 6056,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 6024,
											"end": 6056,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 6024,
											"end": 6056,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 6020,
											"end": 6087,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "214"
										},
										{
											"begin": 6020,
											"end": 6087,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 6101,
											"end": 6113,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 6097,
											"end": 6151,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "216"
										},
										{
											"begin": 6097,
											"end": 6151,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6178,
											"end": 6193,
											"name": "TIMESTAMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 6165,
											"end": 6193,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 6165,
											"end": 6193,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 6161,
											"end": 6226,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "218"
										},
										{
											"begin": 6161,
											"end": 6226,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 6240,
											"end": 6269,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 6236,
											"end": 6297,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "220"
										},
										{
											"begin": 6236,
											"end": 6297,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6961,
											"end": 7103,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "222"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6961,
											"end": 7103,
											"name": "PUSH",
											"source": 13,
											"value": "CEB1A488BE98B2739817F21E7D3B0A343434519CD0FE4DB3EF5FC27A96E8D295"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "223"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "224"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP11",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 680,
											"end": 21968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "224"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 6424,
											"end": 6435,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "225"
										},
										{
											"begin": 6424,
											"end": 6435,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 6424,
											"end": 6435,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 6424,
											"end": 6435,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 6424,
											"end": 6435,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "18"
										},
										{
											"begin": 680,
											"end": 21968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "225"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP12",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 6491,
											"end": 6503,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 6491,
											"end": 6503,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP14",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 6531,
											"end": 6542,
											"name": "PUSH",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 6531,
											"end": 6542,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 6531,
											"end": 6542,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "AND",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 6597,
											"end": 6611,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6597,
											"end": 6611,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "18"
										},
										{
											"begin": 680,
											"end": 21968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "223"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5826,
											"end": 5848,
											"name": "PUSH",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 6634,
											"end": 6645,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6634,
											"end": 6645,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 6680,
											"end": 6694,
											"name": "PUSH",
											"source": 13,
											"value": "7"
										},
										{
											"begin": 6680,
											"end": 6694,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6680,
											"end": 6694,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 6178,
											"end": 6193,
											"name": "TIMESTAMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "C0"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 6730,
											"end": 6745,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6730,
											"end": 6745,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6730,
											"end": 6745,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6730,
											"end": 6745,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6730,
											"end": 6745,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "226"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "16"
										},
										{
											"begin": 680,
											"end": 21968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "226"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "227"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "228"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "10000"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "FF0000"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6851,
											"end": 6862,
											"name": "PUSH",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6851,
											"end": 6891,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "229"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP12",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 6851,
											"end": 6891,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "19"
										},
										{
											"begin": 6851,
											"end": 6891,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6851,
											"end": 6891,
											"name": "tag",
											"source": 13,
											"value": "229"
										},
										{
											"begin": 6851,
											"end": 6891,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6531,
											"end": 6542,
											"name": "PUSH",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6901,
											"end": 6945,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "230"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP12",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 6901,
											"end": 6945,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "19"
										},
										{
											"begin": 6901,
											"end": 6945,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6901,
											"end": 6945,
											"name": "tag",
											"source": 13,
											"value": "230"
										},
										{
											"begin": 6901,
											"end": 6945,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6961,
											"end": 7103,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6961,
											"end": 7103,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6961,
											"end": 7103,
											"name": "tag",
											"source": 13,
											"value": "222"
										},
										{
											"begin": 6961,
											"end": 7103,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6961,
											"end": 7103,
											"name": "LOG4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "227"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "231"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "17"
										},
										{
											"begin": 680,
											"end": 21968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "231"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "228"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6236,
											"end": 6297,
											"name": "tag",
											"source": 13,
											"value": "220"
										},
										{
											"begin": 6236,
											"end": 6297,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7E4DD01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6278,
											"end": 6297,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6278,
											"end": 6297,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6278,
											"end": 6297,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 6161,
											"end": 6226,
											"name": "tag",
											"source": 13,
											"value": "218"
										},
										{
											"begin": 6161,
											"end": 6226,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "642CE77"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6202,
											"end": 6226,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6202,
											"end": 6226,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6202,
											"end": 6226,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 6097,
											"end": 6151,
											"name": "tag",
											"source": 13,
											"value": "216"
										},
										{
											"begin": 6097,
											"end": 6151,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5E85AE73"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6122,
											"end": 6151,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6122,
											"end": 6151,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6122,
											"end": 6151,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 6020,
											"end": 6087,
											"name": "tag",
											"source": 13,
											"value": "214"
										},
										{
											"begin": 6020,
											"end": 6087,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "24DA0345"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6065,
											"end": 6087,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6065,
											"end": 6087,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6065,
											"end": 6087,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 5954,
											"end": 6010,
											"name": "tag",
											"source": 13,
											"value": "212"
										},
										{
											"begin": 5954,
											"end": 6010,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E6C4247B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5994,
											"end": 6010,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5994,
											"end": 6010,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5994,
											"end": 6010,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 5822,
											"end": 5876,
											"name": "tag",
											"source": 13,
											"value": "208"
										},
										{
											"begin": 5822,
											"end": 5876,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "38A6A807"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5857,
											"end": 5876,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5857,
											"end": 5876,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5857,
											"end": 5876,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "202"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "200"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "192"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "91"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "105"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "112"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "236"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "238"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 680,
											"end": 21968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "238"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "239"
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 2227,
											"end": 2330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "tag",
											"source": 6,
											"value": "239"
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2484,
											"end": 2488,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "tag",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1204,
											"end": 1276,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "241"
										},
										{
											"begin": 1204,
											"end": 1276,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 1204,
											"end": 1276,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1204,
											"end": 1276,
											"name": "tag",
											"source": 5,
											"value": "241"
										},
										{
											"begin": 1204,
											"end": 1276,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 4453,
											"end": 4475,
											"name": "PUSH",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "242"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 680,
											"end": 21968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "242"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 4453,
											"end": 4475,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "10"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4452,
											"end": 4475,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4448,
											"end": 4498,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "135"
										},
										{
											"begin": 4448,
											"end": 4498,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 4453,
											"end": 4475,
											"name": "PUSH",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "245"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 680,
											"end": 21968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "245"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 4601,
											"end": 4623,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "246"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 15649,
											"end": 15670,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 4601,
											"end": 4634,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4597,
											"end": 4662,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "143"
										},
										{
											"begin": 4597,
											"end": 4662,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "250"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 680,
											"end": 21968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "250"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 15755,
											"end": 15768,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 15755,
											"end": 15768,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 15755,
											"end": 15768,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 15736,
											"end": 15751,
											"name": "TIMESTAMP",
											"source": 13
										},
										{
											"begin": 15736,
											"end": 15768,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 15736,
											"end": 15768,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 15732,
											"end": 15796,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "251"
										},
										{
											"begin": 15732,
											"end": 15796,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4453,
											"end": 4475,
											"name": "PUSH",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 15851,
											"end": 15862,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 15851,
											"end": 15862,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 16451,
											"end": 16475,
											"name": "PUSH",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 16012,
											"end": 16060,
											"name": "PUSH",
											"source": 13,
											"value": "B559D285C87E4FA0F561388264310703FF0C6C454A39AE52D0AE94032FF0DB70"
										},
										{
											"begin": 16012,
											"end": 16060,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 16012,
											"end": 16060,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "253"
										},
										{
											"begin": 16012,
											"end": 16060,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 15900,
											"end": 15997,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "254"
										},
										{
											"begin": 15900,
											"end": 15997,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "255"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16012,
											"end": 16060,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16012,
											"end": 16060,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16012,
											"end": 16060,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 16012,
											"end": 16060,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16012,
											"end": 16060,
											"name": "tag",
											"source": 13,
											"value": "253"
										},
										{
											"begin": 16012,
											"end": 16060,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 16035,
											"end": 16045,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 16012,
											"end": 16060,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 16012,
											"end": 16060,
											"name": "LOG3",
											"source": 13
										},
										{
											"begin": 15649,
											"end": 15670,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 15900,
											"end": 15997,
											"name": "tag",
											"source": 13,
											"value": "254"
										},
										{
											"begin": 15900,
											"end": 15997,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 15937,
											"end": 15986,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "256"
										},
										{
											"begin": 15937,
											"end": 15986,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 15937,
											"end": 15947,
											"name": "PUSHIMMUTABLE",
											"source": 13,
											"value": "1358"
										},
										{
											"begin": 15937,
											"end": 15986,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "28"
										},
										{
											"begin": 15937,
											"end": 15986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15937,
											"end": 15986,
											"name": "tag",
											"source": 13,
											"value": "256"
										},
										{
											"begin": 15937,
											"end": 15986,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15900,
											"end": 15997,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 15900,
											"end": 15997,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 15900,
											"end": 15997,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "255"
										},
										{
											"begin": 15900,
											"end": 15997,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15732,
											"end": 15796,
											"name": "tag",
											"source": 13,
											"value": "251"
										},
										{
											"begin": 15732,
											"end": 15796,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2EB3543"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15777,
											"end": 15796,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 15777,
											"end": 15796,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15777,
											"end": 15796,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "246"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "21"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "236"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "89"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "105"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "105"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 17582,
											"end": 17592,
											"name": "PUSHIMMUTABLE",
											"source": 13,
											"value": "1358"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "87"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "105"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "105"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4723,
											"end": 4749,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "266"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "266"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3877,
											"end": 3883,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 3877,
											"end": 3899,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 2484,
											"end": 2488,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "tag",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4723,
											"end": 4749,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 4723,
											"end": 4749,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4723,
											"end": 4749,
											"name": "tag",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 4723,
											"end": 4749,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4723,
											"end": 4749,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "85"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "105"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "112"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "272"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 680,
											"end": 21968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "272"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 18176,
											"end": 18189,
											"name": "PUSH",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "273"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "30"
										},
										{
											"begin": 680,
											"end": 21968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "273"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "274"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "275"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "119"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "10"
										},
										{
											"begin": 680,
											"end": 21968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "275"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "278"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "29"
										},
										{
											"begin": 680,
											"end": 21968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "278"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP7",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "274"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "83"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "105"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "105"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "81"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "105"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "105"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "112"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "289"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "290"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 680,
											"end": 21968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "289"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "1E0"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "291"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 680,
											"end": 21968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "291"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "A0"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "C0"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "120"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "140"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "160"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "180"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "1A0"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "1C0"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 680,
											"end": 21968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "290"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "292"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 680,
											"end": 21968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "292"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "293"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "29"
										},
										{
											"begin": 680,
											"end": 21968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "293"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "294"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "29"
										},
										{
											"begin": 680,
											"end": 21968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "294"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "295"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "29"
										},
										{
											"begin": 680,
											"end": 21968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "295"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "296"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "29"
										},
										{
											"begin": 680,
											"end": 21968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "296"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "A0"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "C0"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "A0"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "7"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "120"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1861,
											"end": 1869,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1861,
											"end": 1869,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "140"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "160"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "C0"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "180"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "297"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "1A0"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "1C0"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "10"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "1E0"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "A0"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "A0"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "1E0"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "299"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "300"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "200"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "220"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "9"
										},
										{
											"begin": 680,
											"end": 21968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "300"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "301"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "302"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP11",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "9"
										},
										{
											"begin": 680,
											"end": 21968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "302"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "A0"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "9"
										},
										{
											"begin": 680,
											"end": 21968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "301"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "A0"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "C0"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "9"
										},
										{
											"begin": 680,
											"end": 21968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "299"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "C0"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "120"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "120"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "140"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "140"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "160"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "160"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "180"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "180"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "1A0"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "303"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "1A0"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "1C0"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "11"
										},
										{
											"begin": 680,
											"end": 21968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "303"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "1C0"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "200"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "297"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "21"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "79"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "105"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "105"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "308"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 680,
											"end": 21968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "308"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "129"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 19500,
											"end": 19566,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 19500,
											"end": 19566,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "311"
										},
										{
											"begin": 19500,
											"end": 19566,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 19511,
											"end": 19522,
											"name": "PUSH",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 19500,
											"end": 19566,
											"name": "tag",
											"source": 13,
											"value": "313"
										},
										{
											"begin": 19500,
											"end": 19566,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "314"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "30"
										},
										{
											"begin": 680,
											"end": 21968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "314"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "315"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "316"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "119"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "10"
										},
										{
											"begin": 680,
											"end": 21968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "316"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "319"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "29"
										},
										{
											"begin": 680,
											"end": 21968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "319"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP7",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "315"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19500,
											"end": 19566,
											"name": "tag",
											"source": 13,
											"value": "311"
										},
										{
											"begin": 19500,
											"end": 19566,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 19539,
											"end": 19552,
											"name": "PUSH",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 19500,
											"end": 19566,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "313"
										},
										{
											"begin": 19500,
											"end": 19566,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "77"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "105"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "105"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "192"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "326"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 680,
											"end": 21968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "326"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "327"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "327"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "328"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "200"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "332"
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 2227,
											"end": 2330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "tag",
											"source": 6,
											"value": "332"
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "333"
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2484,
											"end": 2488,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "tag",
											"source": 0,
											"value": "333"
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1204,
											"end": 1276,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "334"
										},
										{
											"begin": 1204,
											"end": 1276,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 1204,
											"end": 1276,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1204,
											"end": 1276,
											"name": "tag",
											"source": 5,
											"value": "334"
										},
										{
											"begin": 1204,
											"end": 1276,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 4453,
											"end": 4475,
											"name": "PUSH",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP8",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "335"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP11",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP11",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP15",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP16",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 680,
											"end": 21968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "335"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 4453,
											"end": 4475,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "10"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4452,
											"end": 4475,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4448,
											"end": 4498,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "135"
										},
										{
											"begin": 4448,
											"end": 4498,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "338"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP12",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 680,
											"end": 21968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "338"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "A0"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP7",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP8",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4153,
											"end": 4184,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4153,
											"end": 4184,
											"name": "SWAP10",
											"source": 13
										},
										{
											"begin": 4153,
											"end": 4184,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4149,
											"end": 4208,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "138"
										},
										{
											"begin": 4149,
											"end": 4208,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 4453,
											"end": 4475,
											"name": "PUSH",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "341"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 680,
											"end": 21968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "341"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 4601,
											"end": 4623,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "342"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4597,
											"end": 4662,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "143"
										},
										{
											"begin": 4597,
											"end": 4662,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 7727,
											"end": 7753,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 7723,
											"end": 7777,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "346"
										},
										{
											"begin": 7723,
											"end": 7777,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7791,
											"end": 7803,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 7791,
											"end": 7803,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 7787,
											"end": 7827,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "348"
										},
										{
											"begin": 7787,
											"end": 7827,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "350"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 680,
											"end": 21968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "350"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 7888,
											"end": 7901,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "A0"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 7884,
											"end": 7934,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "351"
										},
										{
											"begin": 7884,
											"end": 7934,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 8047,
											"end": 8057,
											"name": "PUSHIMMUTABLE",
											"source": 13,
											"value": "1358"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "70A08231"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 8091,
											"end": 8121,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8091,
											"end": 8121,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8091,
											"end": 8121,
											"name": "DUP11",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 8091,
											"end": 8121,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8091,
											"end": 8121,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8091,
											"end": 8121,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 8091,
											"end": 8121,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 8091,
											"end": 8121,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8091,
											"end": 8121,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 8091,
											"end": 8121,
											"name": "GAS",
											"source": 13
										},
										{
											"begin": 8091,
											"end": 8121,
											"name": "STATICCALL",
											"source": 13
										},
										{
											"begin": 8091,
											"end": 8121,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 8091,
											"end": 8121,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 8091,
											"end": 8121,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "353"
										},
										{
											"begin": 8091,
											"end": 8121,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 8091,
											"end": 8121,
											"name": "DUP11",
											"source": 13
										},
										{
											"begin": 8091,
											"end": 8121,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8091,
											"end": 8121,
											"name": "DUP14",
											"source": 13
										},
										{
											"begin": 8091,
											"end": 8121,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8091,
											"end": 8121,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "355"
										},
										{
											"begin": 8091,
											"end": 8121,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "356"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8135,
											"end": 8157,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8135,
											"end": 8157,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 8131,
											"end": 8187,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "357"
										},
										{
											"begin": 8131,
											"end": 8187,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 8264,
											"end": 8271,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 8264,
											"end": 8271,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8264,
											"end": 8271,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 8264,
											"end": 8271,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 8264,
											"end": 8271,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 8264,
											"end": 8271,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 8264,
											"end": 8291,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8264,
											"end": 8291,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "359"
										},
										{
											"begin": 8264,
											"end": 8291,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "360"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8264,
											"end": 8311,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 8264,
											"end": 8311,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 8264,
											"end": 8311,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "361"
										},
										{
											"begin": 8264,
											"end": 8311,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "362"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8260,
											"end": 8537,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "363"
										},
										{
											"begin": 8260,
											"end": 8537,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "364"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6EB1769F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8567,
											"end": 8609,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8567,
											"end": 8609,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 8567,
											"end": 8609,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 8567,
											"end": 8609,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8017,
											"end": 8021,
											"name": "ADDRESS",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8567,
											"end": 8609,
											"name": "tag",
											"source": 13,
											"value": "365"
										},
										{
											"begin": 8567,
											"end": 8609,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8567,
											"end": 8609,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 8567,
											"end": 8609,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8567,
											"end": 8609,
											"name": "GAS",
											"source": 13
										},
										{
											"begin": 8567,
											"end": 8609,
											"name": "STATICCALL",
											"source": 13
										},
										{
											"begin": 8567,
											"end": 8609,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 8567,
											"end": 8609,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 8567,
											"end": 8609,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "366"
										},
										{
											"begin": 8567,
											"end": 8609,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 8567,
											"end": 8609,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 8567,
											"end": 8609,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8567,
											"end": 8609,
											"name": "DUP11",
											"source": 13
										},
										{
											"begin": 8567,
											"end": 8609,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8567,
											"end": 8609,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "368"
										},
										{
											"begin": 8567,
											"end": 8609,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "369"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8623,
											"end": 8642,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8623,
											"end": 8642,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 8619,
											"end": 8674,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "370"
										},
										{
											"begin": 8619,
											"end": 8674,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8017,
											"end": 8021,
											"name": "ADDRESS",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "A0"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "372"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 8809,
											"end": 8852,
											"name": "PUSH",
											"source": 13,
											"value": "2C138F65913CD3B9CA6F36E4B59E26830A033A978CA69F935781972E6DF1F61D"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 8809,
											"end": 8852,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "374"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "375"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 1745,
											"end": 1798,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "tag",
											"source": 9,
											"value": "375"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 8777,
											"end": 8792,
											"name": "TIMESTAMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "A0"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 8809,
											"end": 8852,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 8809,
											"end": 8852,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8809,
											"end": 8852,
											"name": "tag",
											"source": 13,
											"value": "374"
										},
										{
											"begin": 8809,
											"end": 8852,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8809,
											"end": 8852,
											"name": "LOG3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "372"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B71"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "41"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 8619,
											"end": 8674,
											"name": "tag",
											"source": 13,
											"value": "370"
										},
										{
											"begin": 8619,
											"end": 8674,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "13BE252B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8651,
											"end": 8674,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8651,
											"end": 8674,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8651,
											"end": 8674,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 8567,
											"end": 8609,
											"name": "tag",
											"source": 13,
											"value": "368"
										},
										{
											"begin": 8567,
											"end": 8609,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8567,
											"end": 8609,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 8567,
											"end": 8609,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 8567,
											"end": 8609,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8567,
											"end": 8609,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 8567,
											"end": 8609,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 8567,
											"end": 8609,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 8567,
											"end": 8609,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8567,
											"end": 8609,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 8567,
											"end": 8609,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 8567,
											"end": 8609,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 8567,
											"end": 8609,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "376"
										},
										{
											"begin": 8567,
											"end": 8609,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 8567,
											"end": 8609,
											"name": "tag",
											"source": 13,
											"value": "377"
										},
										{
											"begin": 8567,
											"end": 8609,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8567,
											"end": 8609,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "378"
										},
										{
											"begin": 8567,
											"end": 8609,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8567,
											"end": 8609,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 8567,
											"end": 8609,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 8567,
											"end": 8609,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8567,
											"end": 8609,
											"name": "tag",
											"source": 13,
											"value": "378"
										},
										{
											"begin": 8567,
											"end": 8609,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8567,
											"end": 8609,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8567,
											"end": 8609,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "129"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 8567,
											"end": 8609,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8567,
											"end": 8609,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "369"
										},
										{
											"begin": 8567,
											"end": 8609,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8567,
											"end": 8609,
											"name": "tag",
											"source": 13,
											"value": "376"
										},
										{
											"begin": 8567,
											"end": 8609,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8567,
											"end": 8609,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8567,
											"end": 8609,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 8567,
											"end": 8609,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "377"
										},
										{
											"begin": 8567,
											"end": 8609,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8567,
											"end": 8609,
											"name": "tag",
											"source": 13,
											"value": "366"
										},
										{
											"begin": 8567,
											"end": 8609,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP12",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "RETURNDATACOPY",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 8260,
											"end": 8537,
											"name": "tag",
											"source": 13,
											"value": "363"
										},
										{
											"begin": 8260,
											"end": 8537,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21651,
											"end": 21705,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 21651,
											"end": 21705,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 21651,
											"end": 21705,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21651,
											"end": 21705,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 21651,
											"end": 21705,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 21651,
											"end": 21705,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 21651,
											"end": 21705,
											"name": "EXTCODESIZE",
											"source": 13
										},
										{
											"begin": 21651,
											"end": 21705,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 21651,
											"end": 21705,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "381"
										},
										{
											"begin": 21651,
											"end": 21705,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "D505ACCF"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 21651,
											"end": 21705,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 21651,
											"end": 21705,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 21651,
											"end": 21705,
											"name": "DUP11",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 21651,
											"end": 21705,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 21651,
											"end": 21705,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8017,
											"end": 8021,
											"name": "ADDRESS",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "A4"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "A4"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "C4"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "C4"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 21651,
											"end": 21705,
											"name": "DUP11",
											"source": 13
										},
										{
											"begin": 21651,
											"end": 21705,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "E4"
										},
										{
											"begin": 21651,
											"end": 21705,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 21651,
											"end": 21705,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 21651,
											"end": 21705,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 21651,
											"end": 21705,
											"name": "GAS",
											"source": 13
										},
										{
											"begin": 21651,
											"end": 21705,
											"name": "CALL",
											"source": 13
										},
										{
											"begin": 21651,
											"end": 21705,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 21651,
											"end": 21705,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 21651,
											"end": 21705,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "383"
										},
										{
											"begin": 21651,
											"end": 21705,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 8260,
											"end": 8537,
											"name": "tag",
											"source": 13,
											"value": "384"
										},
										{
											"begin": 8260,
											"end": 8537,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 21647,
											"end": 21960,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "385"
										},
										{
											"begin": 21647,
											"end": 21960,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B78CB0DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 21935,
											"end": 21949,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 21935,
											"end": 21949,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 21935,
											"end": 21949,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 21647,
											"end": 21960,
											"name": "tag",
											"source": 13,
											"value": "385"
										},
										{
											"begin": 21647,
											"end": 21960,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6EB1769F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 21793,
											"end": 21829,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 21793,
											"end": 21829,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 21793,
											"end": 21829,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 21793,
											"end": 21829,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8017,
											"end": 8021,
											"name": "ADDRESS",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8017,
											"end": 8021,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 21793,
											"end": 21829,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 21793,
											"end": 21829,
											"name": "GAS",
											"source": 13
										},
										{
											"begin": 21793,
											"end": 21829,
											"name": "STATICCALL",
											"source": 13
										},
										{
											"begin": 21793,
											"end": 21829,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 21793,
											"end": 21829,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 21793,
											"end": 21829,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "388"
										},
										{
											"begin": 21793,
											"end": 21829,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 21793,
											"end": 21829,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 21793,
											"end": 21829,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 21793,
											"end": 21829,
											"name": "DUP13",
											"source": 13
										},
										{
											"begin": 21793,
											"end": 21829,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 21793,
											"end": 21829,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "390"
										},
										{
											"begin": 21793,
											"end": 21829,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 21647,
											"end": 21960,
											"name": "tag",
											"source": 13,
											"value": "391"
										},
										{
											"begin": 21647,
											"end": 21960,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21847,
											"end": 21864,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21847,
											"end": 21864,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 21843,
											"end": 21896,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "370"
										},
										{
											"begin": 21843,
											"end": 21896,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 8567,
											"end": 8609,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "365"
										},
										{
											"begin": 21647,
											"end": 21960,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 21647,
											"end": 21960,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 21647,
											"end": 21960,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8260,
											"end": 8537,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "364"
										},
										{
											"begin": 8260,
											"end": 8537,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 21793,
											"end": 21829,
											"name": "tag",
											"source": 13,
											"value": "390"
										},
										{
											"begin": 21793,
											"end": 21829,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21793,
											"end": 21829,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 21793,
											"end": 21829,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 21793,
											"end": 21829,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21793,
											"end": 21829,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 21793,
											"end": 21829,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 21793,
											"end": 21829,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 21793,
											"end": 21829,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21793,
											"end": 21829,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 21793,
											"end": 21829,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 21793,
											"end": 21829,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 21793,
											"end": 21829,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "394"
										},
										{
											"begin": 21793,
											"end": 21829,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 21793,
											"end": 21829,
											"name": "tag",
											"source": 13,
											"value": "395"
										},
										{
											"begin": 21793,
											"end": 21829,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21793,
											"end": 21829,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "396"
										},
										{
											"begin": 21793,
											"end": 21829,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 21793,
											"end": 21829,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 21793,
											"end": 21829,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 21793,
											"end": 21829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 21793,
											"end": 21829,
											"name": "tag",
											"source": 13,
											"value": "396"
										},
										{
											"begin": 21793,
											"end": 21829,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21793,
											"end": 21829,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 21793,
											"end": 21829,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "129"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 21793,
											"end": 21829,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 21793,
											"end": 21829,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "391"
										},
										{
											"begin": 21793,
											"end": 21829,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 21793,
											"end": 21829,
											"name": "tag",
											"source": 13,
											"value": "394"
										},
										{
											"begin": 21793,
											"end": 21829,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21793,
											"end": 21829,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21793,
											"end": 21829,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 21793,
											"end": 21829,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "395"
										},
										{
											"begin": 21793,
											"end": 21829,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 21793,
											"end": 21829,
											"name": "tag",
											"source": 13,
											"value": "388"
										},
										{
											"begin": 21793,
											"end": 21829,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP14",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "RETURNDATACOPY",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 21651,
											"end": 21705,
											"name": "tag",
											"source": 13,
											"value": "383"
										},
										{
											"begin": 21651,
											"end": 21705,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP13",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP13",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "399"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 21651,
											"end": 21705,
											"name": "SWAP10",
											"source": 13
										},
										{
											"begin": 21651,
											"end": 21705,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 21651,
											"end": 21705,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "384"
										},
										{
											"begin": 21651,
											"end": 21705,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "399"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "41"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 21651,
											"end": 21705,
											"name": "tag",
											"source": 13,
											"value": "381"
										},
										{
											"begin": 21651,
											"end": 21705,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP11",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 8264,
											"end": 8311,
											"name": "tag",
											"source": 13,
											"value": "361"
										},
										{
											"begin": 8264,
											"end": 8311,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "C4"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 8295,
											"end": 8311,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 8295,
											"end": 8311,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 8264,
											"end": 8311,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "362"
										},
										{
											"begin": 8264,
											"end": 8311,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8264,
											"end": 8291,
											"name": "tag",
											"source": 13,
											"value": "359"
										},
										{
											"begin": 8264,
											"end": 8291,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "A4"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 8275,
											"end": 8291,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 8275,
											"end": 8291,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 8264,
											"end": 8291,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "360"
										},
										{
											"begin": 8264,
											"end": 8291,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8131,
											"end": 8187,
											"name": "tag",
											"source": 13,
											"value": "357"
										},
										{
											"begin": 8131,
											"end": 8187,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1E9ACF17"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8166,
											"end": 8187,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8166,
											"end": 8187,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8166,
											"end": 8187,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 8091,
											"end": 8121,
											"name": "tag",
											"source": 13,
											"value": "355"
										},
										{
											"begin": 8091,
											"end": 8121,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8091,
											"end": 8121,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 8091,
											"end": 8121,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 8091,
											"end": 8121,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8091,
											"end": 8121,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 8091,
											"end": 8121,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 8091,
											"end": 8121,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 8091,
											"end": 8121,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8091,
											"end": 8121,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 8091,
											"end": 8121,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 8091,
											"end": 8121,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 8091,
											"end": 8121,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "401"
										},
										{
											"begin": 8091,
											"end": 8121,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 8091,
											"end": 8121,
											"name": "tag",
											"source": 13,
											"value": "402"
										},
										{
											"begin": 8091,
											"end": 8121,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8091,
											"end": 8121,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "403"
										},
										{
											"begin": 8091,
											"end": 8121,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8091,
											"end": 8121,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 8091,
											"end": 8121,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 8091,
											"end": 8121,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8091,
											"end": 8121,
											"name": "tag",
											"source": 13,
											"value": "403"
										},
										{
											"begin": 8091,
											"end": 8121,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8091,
											"end": 8121,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8091,
											"end": 8121,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "404"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 8091,
											"end": 8121,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8091,
											"end": 8121,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "356"
										},
										{
											"begin": 8091,
											"end": 8121,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "404"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP12",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 8091,
											"end": 8121,
											"name": "tag",
											"source": 13,
											"value": "401"
										},
										{
											"begin": 8091,
											"end": 8121,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8091,
											"end": 8121,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8091,
											"end": 8121,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 8091,
											"end": 8121,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "402"
										},
										{
											"begin": 8091,
											"end": 8121,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8091,
											"end": 8121,
											"name": "tag",
											"source": 13,
											"value": "353"
										},
										{
											"begin": 8091,
											"end": 8121,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP15",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "RETURNDATACOPY",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 7884,
											"end": 7934,
											"name": "tag",
											"source": 13,
											"value": "351"
										},
										{
											"begin": 7884,
											"end": 7934,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1924FCEB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7915,
											"end": 7934,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7915,
											"end": 7934,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7915,
											"end": 7934,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 7787,
											"end": 7827,
											"name": "tag",
											"source": 13,
											"value": "348"
										},
										{
											"begin": 7787,
											"end": 7827,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "162908E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7812,
											"end": 7827,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7812,
											"end": 7827,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7812,
											"end": 7827,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 7723,
											"end": 7777,
											"name": "tag",
											"source": 13,
											"value": "346"
										},
										{
											"begin": 7723,
											"end": 7777,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5F0BE7AF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7762,
											"end": 7777,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7762,
											"end": 7777,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7762,
											"end": 7777,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "342"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP12",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "21"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP12",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "328"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "75"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "105"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "408"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 680,
											"end": 21968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "408"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "409"
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2484,
											"end": 2488,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "tag",
											"source": 0,
											"value": "409"
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1204,
											"end": 1276,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "410"
										},
										{
											"begin": 1204,
											"end": 1276,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 1204,
											"end": 1276,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1204,
											"end": 1276,
											"name": "tag",
											"source": 5,
											"value": "410"
										},
										{
											"begin": 1204,
											"end": 1276,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 4453,
											"end": 4475,
											"name": "PUSH",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "411"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 680,
											"end": 21968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "411"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 4453,
											"end": 4475,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "10"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4452,
											"end": 4475,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4448,
											"end": 4498,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "135"
										},
										{
											"begin": 4448,
											"end": 4498,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "414"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 680,
											"end": 21968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "414"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 4312,
											"end": 4335,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4312,
											"end": 4347,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4312,
											"end": 4347,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4312,
											"end": 4347,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4308,
											"end": 4371,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "138"
										},
										{
											"begin": 4308,
											"end": 4371,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 4453,
											"end": 4475,
											"name": "PUSH",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "417"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 680,
											"end": 21968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "417"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 4601,
											"end": 4623,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "418"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4597,
											"end": 4662,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "143"
										},
										{
											"begin": 4597,
											"end": 4662,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "422"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 680,
											"end": 21968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "422"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 9291,
											"end": 9304,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 9291,
											"end": 9304,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 9291,
											"end": 9304,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "A0"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 9291,
											"end": 9309,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 9287,
											"end": 9333,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "423"
										},
										{
											"begin": 9287,
											"end": 9333,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4453,
											"end": 4475,
											"name": "PUSH",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 9395,
											"end": 9433,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "425"
										},
										{
											"begin": 9344,
											"end": 9355,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 9344,
											"end": 9355,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 9395,
											"end": 9433,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 9395,
											"end": 9433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9395,
											"end": 9433,
											"name": "tag",
											"source": 13,
											"value": "425"
										},
										{
											"begin": 9395,
											"end": 9433,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9395,
											"end": 9433,
											"name": "PUSH",
											"source": 13,
											"value": "CAEC7345D2EB04A42197AC2A2CD7CD74A00B2991B69BB53E23465D4092FDFB"
										},
										{
											"begin": 9395,
											"end": 9433,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 9395,
											"end": 9433,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 9395,
											"end": 9433,
											"name": "LOG3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 9287,
											"end": 9333,
											"name": "tag",
											"source": 13,
											"value": "423"
										},
										{
											"begin": 9287,
											"end": 9333,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "47510BBD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9318,
											"end": 9333,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9318,
											"end": 9333,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9318,
											"end": 9333,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "418"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "21"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "73"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "105"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "105"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "430"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 680,
											"end": 21968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "430"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "431"
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2484,
											"end": 2488,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "tag",
											"source": 0,
											"value": "431"
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 21068,
											"end": 21078,
											"name": "PUSHIMMUTABLE",
											"source": 13,
											"value": "1358"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 21050,
											"end": 21079,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 21050,
											"end": 21079,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 21046,
											"end": 21108,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "432"
										},
										{
											"begin": 21046,
											"end": 21108,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 21122,
											"end": 21134,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 21122,
											"end": 21134,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 21118,
											"end": 21158,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "348"
										},
										{
											"begin": 21118,
											"end": 21158,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 21208,
											"end": 21215,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "107"
										},
										{
											"begin": 21196,
											"end": 21206,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 21196,
											"end": 21206,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 21208,
											"end": 21215,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 21208,
											"end": 21215,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "28"
										},
										{
											"begin": 21208,
											"end": 21215,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 21046,
											"end": 21108,
											"name": "tag",
											"source": 13,
											"value": "432"
										},
										{
											"begin": 21046,
											"end": 21108,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "18BA2FC1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 21088,
											"end": 21108,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 21088,
											"end": 21108,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 21088,
											"end": 21108,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "71"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "105"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "105"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "441"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "441"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2930,
											"end": 2936,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "69"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "105"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "105"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "446"
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2484,
											"end": 2488,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "tag",
											"source": 0,
											"value": "446"
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1204,
											"end": 1276,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "447"
										},
										{
											"begin": 1204,
											"end": 1276,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 1204,
											"end": 1276,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1204,
											"end": 1276,
											"name": "tag",
											"source": 5,
											"value": "447"
										},
										{
											"begin": 1204,
											"end": 1276,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2255,
											"end": 2259,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 2255,
											"end": 2259,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 2274,
											"end": 2294,
											"name": "PUSH",
											"source": 5,
											"value": "62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2274,
											"end": 2294,
											"name": "LOG1",
											"source": 5
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "67"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "105"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "105"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "192"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "176"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "455"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 680,
											"end": 21968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "455"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 19743,
											"end": 19754,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 19743,
											"end": 19754,
											"name": "PUSH",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 19743,
											"end": 19754,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 19743,
											"end": 19754,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "10"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 19743,
											"end": 19814,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 19743,
											"end": 19814,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 19743,
											"end": 19814,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "456"
										},
										{
											"begin": 19743,
											"end": 19814,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "457"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19743,
											"end": 19868,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 19743,
											"end": 19868,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 19743,
											"end": 19868,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19743,
											"end": 19868,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 19743,
											"end": 19868,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "458"
										},
										{
											"begin": 19743,
											"end": 19868,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "459"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 19743,
											"end": 19868,
											"name": "tag",
											"source": 13,
											"value": "458"
										},
										{
											"begin": 19743,
											"end": 19868,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19849,
											"end": 19868,
											"name": "PUSH",
											"source": 13,
											"value": "7"
										},
										{
											"begin": 19849,
											"end": 19868,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1861,
											"end": 1869,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1861,
											"end": 1869,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 19830,
											"end": 19845,
											"name": "TIMESTAMP",
											"source": 13
										},
										{
											"begin": 19830,
											"end": 19868,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 19830,
											"end": 19868,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 19830,
											"end": 19868,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 19743,
											"end": 19868,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 19743,
											"end": 19868,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 19743,
											"end": 19868,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "459"
										},
										{
											"begin": 19743,
											"end": 19868,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19743,
											"end": 19814,
											"name": "tag",
											"source": 13,
											"value": "456"
										},
										{
											"begin": 19743,
											"end": 19814,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "297"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 19770,
											"end": 19814,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19785,
											"end": 19814,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 19770,
											"end": 19814,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 19770,
											"end": 19814,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 19743,
											"end": 19814,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 19743,
											"end": 19814,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 19743,
											"end": 19814,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "457"
										},
										{
											"begin": 19743,
											"end": 19814,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "65"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "105"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "105"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "63"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "105"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "468"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "7"
										},
										{
											"begin": 680,
											"end": 21968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "468"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "469"
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2484,
											"end": 2488,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "tag",
											"source": 0,
											"value": "469"
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1204,
											"end": 1276,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "470"
										},
										{
											"begin": 1204,
											"end": 1276,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 1204,
											"end": 1276,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1204,
											"end": 1276,
											"name": "tag",
											"source": 5,
											"value": "470"
										},
										{
											"begin": 1204,
											"end": 1276,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 4453,
											"end": 4475,
											"name": "PUSH",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "471"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 680,
											"end": 21968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "471"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 4453,
											"end": 4475,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "10"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4452,
											"end": 4475,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4448,
											"end": 4498,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "135"
										},
										{
											"begin": 4448,
											"end": 4498,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "474"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 680,
											"end": 21968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "474"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 4312,
											"end": 4335,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4312,
											"end": 4347,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 4312,
											"end": 4347,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4312,
											"end": 4347,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4308,
											"end": 4371,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "138"
										},
										{
											"begin": 4308,
											"end": 4371,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 4453,
											"end": 4475,
											"name": "PUSH",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "477"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 680,
											"end": 21968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "477"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 4601,
											"end": 4623,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "141"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 4601,
											"end": 4634,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4597,
											"end": 4662,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "143"
										},
										{
											"begin": 4597,
											"end": 4662,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "482"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 680,
											"end": 21968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "482"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9924,
											"end": 9937,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9924,
											"end": 9937,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 9924,
											"end": 9937,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9924,
											"end": 9937,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 9906,
											"end": 9921,
											"name": "TIMESTAMP",
											"source": 13
										},
										{
											"begin": 9906,
											"end": 9937,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 9902,
											"end": 9972,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "483"
										},
										{
											"begin": 9902,
											"end": 9972,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 9986,
											"end": 10016,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 9982,
											"end": 10045,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "485"
										},
										{
											"begin": 9982,
											"end": 10045,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4453,
											"end": 4475,
											"name": "PUSH",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 10056,
											"end": 10067,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10056,
											"end": 10067,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10070,
											"end": 10099,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 10109,
											"end": 10125,
											"name": "PUSH",
											"source": 13,
											"value": "7"
										},
										{
											"begin": 10109,
											"end": 10125,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10109,
											"end": 10125,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 1861,
											"end": 1869,
											"name": "PUSH",
											"source": 13,
											"value": "3F480"
										},
										{
											"begin": 9906,
											"end": 9921,
											"name": "TIMESTAMP",
											"source": 13
										},
										{
											"begin": 1861,
											"end": 1869,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9906,
											"end": 9921,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 9906,
											"end": 9921,
											"name": "TIMESTAMP",
											"source": 13
										},
										{
											"begin": 1861,
											"end": 1869,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 1861,
											"end": 1869,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "487"
										},
										{
											"begin": 1861,
											"end": 1869,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1861,
											"end": 1869,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "489"
										},
										{
											"begin": 1861,
											"end": 1869,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 10277,
											"end": 10411,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "490"
										},
										{
											"begin": 1861,
											"end": 1869,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 10277,
											"end": 10411,
											"name": "PUSH",
											"source": 13,
											"value": "934109F661B65DBCCFFCAE4F7EE04261EB7B36E5136E1CA86DDE1B00598CB031"
										},
										{
											"begin": 1861,
											"end": 1869,
											"name": "SWAP11",
											"source": 13
										},
										{
											"begin": 1861,
											"end": 1869,
											"name": "SWAP9",
											"source": 13
										},
										{
											"begin": 1861,
											"end": 1869,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 1861,
											"end": 1869,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF0000000000000000"
										},
										{
											"begin": 1861,
											"end": 1869,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "491"
										},
										{
											"begin": 1861,
											"end": 1869,
											"name": "SWAP12",
											"source": 13
										},
										{
											"begin": 1861,
											"end": 1869,
											"name": "SWAP10",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1861,
											"end": 1869,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 1861,
											"end": 1869,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 9906,
											"end": 9921,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9906,
											"end": 9921,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 9906,
											"end": 9921,
											"name": "TIMESTAMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1861,
											"end": 1869,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1861,
											"end": 1869,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 1861,
											"end": 1869,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1861,
											"end": 1869,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 1861,
											"end": 1869,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 1861,
											"end": 1869,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 1861,
											"end": 1869,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 10232,
											"end": 10247,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "18"
										},
										{
											"begin": 680,
											"end": 21968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "489"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1861,
											"end": 1869,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1861,
											"end": 1869,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 10277,
											"end": 10411,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 10277,
											"end": 10411,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 10277,
											"end": 10411,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10277,
											"end": 10411,
											"name": "tag",
											"source": 13,
											"value": "490"
										},
										{
											"begin": 10277,
											"end": 10411,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1861,
											"end": 1869,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 1861,
											"end": 1869,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1861,
											"end": 1869,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1861,
											"end": 1869,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 1861,
											"end": 1869,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1861,
											"end": 1869,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 1861,
											"end": 1869,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1861,
											"end": 1869,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1861,
											"end": 1869,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "9"
										},
										{
											"begin": 1861,
											"end": 1869,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1861,
											"end": 1869,
											"name": "tag",
											"source": 13,
											"value": "491"
										},
										{
											"begin": 1861,
											"end": 1869,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1861,
											"end": 1869,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1861,
											"end": 1869,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1861,
											"end": 1869,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10277,
											"end": 10411,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 10277,
											"end": 10411,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10277,
											"end": 10411,
											"name": "LOG3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 1861,
											"end": 1869,
											"name": "tag",
											"source": 13,
											"value": "487"
										},
										{
											"begin": 1861,
											"end": 1869,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1861,
											"end": 1869,
											"name": "DUP11",
											"source": 13
										},
										{
											"begin": 1861,
											"end": 1869,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1861,
											"end": 1869,
											"name": "PUSH",
											"source": 13,
											"value": "11"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 1861,
											"end": 1869,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1861,
											"end": 1869,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP11",
											"source": 13
										},
										{
											"begin": 1861,
											"end": 1869,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 9982,
											"end": 10045,
											"name": "tag",
											"source": 13,
											"value": "485"
										},
										{
											"begin": 9982,
											"end": 10045,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "361178C7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10025,
											"end": 10045,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10025,
											"end": 10045,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10025,
											"end": 10045,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 9902,
											"end": 9972,
											"name": "tag",
											"source": 13,
											"value": "483"
										},
										{
											"begin": 9902,
											"end": 9972,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "764B8E33"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9946,
											"end": 9972,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9946,
											"end": 9972,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9946,
											"end": 9972,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "61"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "105"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "105"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 1810,
											"end": 1815,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "59"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "105"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "105"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "500"
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2484,
											"end": 2488,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "tag",
											"source": 0,
											"value": "500"
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "501"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 2521,
											"end": 2543,
											"name": "PUSH",
											"source": 5,
											"value": "5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2521,
											"end": 2543,
											"name": "LOG1",
											"source": 5
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "501"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "14"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "14185D5CD8589B194E881B9BDD081C185D5CD959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "62"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "57"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "105"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "105"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "192"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "509"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 680,
											"end": 21968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "509"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "510"
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 2227,
											"end": 2330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "tag",
											"source": 6,
											"value": "510"
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "511"
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2484,
											"end": 2488,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "tag",
											"source": 0,
											"value": "511"
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1204,
											"end": 1276,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "512"
										},
										{
											"begin": 1204,
											"end": 1276,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 1204,
											"end": 1276,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1204,
											"end": 1276,
											"name": "tag",
											"source": 5,
											"value": "512"
										},
										{
											"begin": 1204,
											"end": 1276,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 4453,
											"end": 4475,
											"name": "PUSH",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "513"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 680,
											"end": 21968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "513"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 4453,
											"end": 4475,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "10"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4452,
											"end": 4475,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4448,
											"end": 4498,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "135"
										},
										{
											"begin": 4448,
											"end": 4498,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 4453,
											"end": 4475,
											"name": "PUSH",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "516"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 680,
											"end": 21968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "516"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 4601,
											"end": 4623,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "418"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 11805,
											"end": 11834,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 4601,
											"end": 4634,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4597,
											"end": 4662,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "143"
										},
										{
											"begin": 4597,
											"end": 4662,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "521"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 680,
											"end": 21968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "521"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 11917,
											"end": 11936,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11917,
											"end": 11936,
											"name": "PUSH",
											"source": 13,
											"value": "7"
										},
										{
											"begin": 11917,
											"end": 11936,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11917,
											"end": 11936,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1861,
											"end": 1869,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1861,
											"end": 1869,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 11899,
											"end": 11914,
											"name": "TIMESTAMP",
											"source": 13
										},
										{
											"begin": 11899,
											"end": 11936,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 11895,
											"end": 11979,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "522"
										},
										{
											"begin": 11895,
											"end": 11979,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "A8EDA418A66B2F5395D4A15B2F03DE75B34FFF39BB2E2A8B57F6BE974D56E7B0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12062,
											"end": 12073,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 12477,
											"end": 12543,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "153"
										},
										{
											"begin": 12062,
											"end": 12073,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 12062,
											"end": 12073,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 12062,
											"end": 12073,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 12143,
											"end": 12168,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "525"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "2710"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 12062,
											"end": 12091,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "526"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 12062,
											"end": 12091,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 12062,
											"end": 12091,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "25"
										},
										{
											"begin": 12062,
											"end": 12091,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12062,
											"end": 12091,
											"name": "tag",
											"source": 13,
											"value": "526"
										},
										{
											"begin": 12062,
											"end": 12091,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1810,
											"end": 1815,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 12143,
											"end": 12168,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 12143,
											"end": 12168,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 12143,
											"end": 12168,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "26"
										},
										{
											"begin": 12143,
											"end": 12168,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12143,
											"end": 12168,
											"name": "tag",
											"source": 13,
											"value": "525"
										},
										{
											"begin": 12143,
											"end": 12168,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4453,
											"end": 4475,
											"name": "PUSH",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 12179,
											"end": 12190,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12179,
											"end": 12190,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 12179,
											"end": 12190,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 12243,
											"end": 12253,
											"name": "PUSHIMMUTABLE",
											"source": 13,
											"value": "1358"
										},
										{
											"begin": 12243,
											"end": 12253,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 12263,
											"end": 12359,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "527"
										},
										{
											"begin": 12263,
											"end": 12359,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "528"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 12373,
											"end": 12389,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 12369,
											"end": 12462,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "529"
										},
										{
											"begin": 12369,
											"end": 12462,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "530"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 12502,
											"end": 12514,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 12477,
											"end": 12543,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 12477,
											"end": 12543,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12369,
											"end": 12462,
											"name": "tag",
											"source": 13,
											"value": "529"
										},
										{
											"begin": 12369,
											"end": 12462,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12405,
											"end": 12451,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "532"
										},
										{
											"begin": 1810,
											"end": 1815,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 1810,
											"end": 1815,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 12405,
											"end": 12451,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12405,
											"end": 12451,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "28"
										},
										{
											"begin": 12405,
											"end": 12451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12405,
											"end": 12451,
											"name": "tag",
											"source": 13,
											"value": "532"
										},
										{
											"begin": 12405,
											"end": 12451,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12369,
											"end": 12462,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12369,
											"end": 12462,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 12369,
											"end": 12462,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "530"
										},
										{
											"begin": 12369,
											"end": 12462,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12263,
											"end": 12359,
											"name": "tag",
											"source": 13,
											"value": "527"
										},
										{
											"begin": 12263,
											"end": 12359,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 12320,
											"end": 12332,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 12320,
											"end": 12332,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 12301,
											"end": 12348,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "533"
										},
										{
											"begin": 12301,
											"end": 12348,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 12301,
											"end": 12348,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 12301,
											"end": 12348,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "28"
										},
										{
											"begin": 12301,
											"end": 12348,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12301,
											"end": 12348,
											"name": "tag",
											"source": 13,
											"value": "533"
										},
										{
											"begin": 12301,
											"end": 12348,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12263,
											"end": 12359,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12263,
											"end": 12359,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "528"
										},
										{
											"begin": 12263,
											"end": 12359,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11895,
											"end": 11979,
											"name": "tag",
											"source": 13,
											"value": "522"
										},
										{
											"begin": 11895,
											"end": 11979,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2D6BF645"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11957,
											"end": 11979,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11957,
											"end": 11979,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11957,
											"end": 11979,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "55"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "105"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "105"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "538"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "538"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 5397,
											"end": 5431,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5393,
											"end": 5495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "539"
										},
										{
											"begin": 5393,
											"end": 5495,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5505,
											"end": 5542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 5505,
											"end": 5542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 5505,
											"end": 5542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5393,
											"end": 5495,
											"name": "tag",
											"source": 0,
											"value": "539"
										},
										{
											"begin": 5393,
											"end": 5495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "334BD919"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "53"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "105"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "105"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "112"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2499,
											"end": 2500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "549"
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2484,
											"end": 2488,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "tag",
											"source": 0,
											"value": "549"
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2499,
											"end": 2500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 2499,
											"end": 2500,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "51"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "105"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "105"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4306,
											"end": 4331,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "555"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "555"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3877,
											"end": 3883,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "556"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 3877,
											"end": 3899,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 2484,
											"end": 2488,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "tag",
											"source": 0,
											"value": "556"
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4306,
											"end": 4331,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 4306,
											"end": 4331,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "49"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "105"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "559"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 680,
											"end": 21968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "559"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "560"
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 2227,
											"end": 2330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "tag",
											"source": 6,
											"value": "560"
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "561"
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2484,
											"end": 2488,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "tag",
											"source": 0,
											"value": "561"
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1204,
											"end": 1276,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "562"
										},
										{
											"begin": 1204,
											"end": 1276,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 1204,
											"end": 1276,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1204,
											"end": 1276,
											"name": "tag",
											"source": 5,
											"value": "562"
										},
										{
											"begin": 1204,
											"end": 1276,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 4453,
											"end": 4475,
											"name": "PUSH",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "563"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 680,
											"end": 21968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "563"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 4453,
											"end": 4475,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "10"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4452,
											"end": 4475,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4448,
											"end": 4498,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "135"
										},
										{
											"begin": 4448,
											"end": 4498,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "566"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 680,
											"end": 21968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "566"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "A0"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4153,
											"end": 4184,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4153,
											"end": 4184,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 4153,
											"end": 4184,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4149,
											"end": 4208,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "138"
										},
										{
											"begin": 4149,
											"end": 4208,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 4453,
											"end": 4475,
											"name": "PUSH",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "569"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP11",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 680,
											"end": 21968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "569"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 4601,
											"end": 4623,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "246"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 10787,
											"end": 10816,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 4601,
											"end": 4634,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4597,
											"end": 4662,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "143"
										},
										{
											"begin": 4597,
											"end": 4662,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 11445,
											"end": 11511,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "153"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "575"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "A8EDA418A66B2F5395D4A15B2F03DE75B34FFF39BB2E2A8B57F6BE974D56E7B0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP11",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 680,
											"end": 21968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "575"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10978,
											"end": 10989,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 10978,
											"end": 10989,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 10978,
											"end": 10989,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10978,
											"end": 10989,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 11059,
											"end": 11084,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "576"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "2710"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10978,
											"end": 11007,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "577"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10992,
											"end": 11007,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 10978,
											"end": 11007,
											"name": "DUP11",
											"source": 13
										},
										{
											"begin": 10978,
											"end": 11007,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "25"
										},
										{
											"begin": 10978,
											"end": 11007,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10978,
											"end": 11007,
											"name": "tag",
											"source": 13,
											"value": "577"
										},
										{
											"begin": 10978,
											"end": 11007,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1810,
											"end": 1815,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 11059,
											"end": 11084,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 11059,
											"end": 11084,
											"name": "SWAP8",
											"source": 13
										},
										{
											"begin": 11059,
											"end": 11084,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "26"
										},
										{
											"begin": 11059,
											"end": 11084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11059,
											"end": 11084,
											"name": "tag",
											"source": 13,
											"value": "576"
										},
										{
											"begin": 11059,
											"end": 11084,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4453,
											"end": 4475,
											"name": "PUSH",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 11095,
											"end": 11106,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 11095,
											"end": 11106,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 11095,
											"end": 11106,
											"name": "SWAP8",
											"source": 13
										},
										{
											"begin": 11149,
											"end": 11185,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "578"
										},
										{
											"begin": 11149,
											"end": 11185,
											"name": "DUP11",
											"source": 13
										},
										{
											"begin": 11149,
											"end": 11185,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 11149,
											"end": 11185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11149,
											"end": 11185,
											"name": "tag",
											"source": 13,
											"value": "578"
										},
										{
											"begin": 11149,
											"end": 11185,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11149,
											"end": 11185,
											"name": "PUSH",
											"source": 13,
											"value": "CAEC7345D2EB04A42197AC2A2CD7CD74A00B2991B69BB53E23465D4092FDFB"
										},
										{
											"begin": 11149,
											"end": 11185,
											"name": "DUP13",
											"source": 13
										},
										{
											"begin": 11149,
											"end": 11185,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 11149,
											"end": 11185,
											"name": "LOG3",
											"source": 13
										},
										{
											"begin": 11211,
											"end": 11221,
											"name": "PUSHIMMUTABLE",
											"source": 13,
											"value": "1358"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 11235,
											"end": 11253,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 11231,
											"end": 11327,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "579"
										},
										{
											"begin": 11231,
											"end": 11327,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "580"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 11341,
											"end": 11357,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 11337,
											"end": 11430,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "581"
										},
										{
											"begin": 11337,
											"end": 11430,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "582"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11470,
											"end": 11482,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11470,
											"end": 11482,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11470,
											"end": 11482,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 11445,
											"end": 11511,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 11445,
											"end": 11511,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 11445,
											"end": 11511,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11337,
											"end": 11430,
											"name": "tag",
											"source": 13,
											"value": "581"
										},
										{
											"begin": 11337,
											"end": 11430,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11373,
											"end": 11419,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "584"
										},
										{
											"begin": 1810,
											"end": 1815,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 10992,
											"end": 11007,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 1810,
											"end": 1815,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 11373,
											"end": 11419,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11373,
											"end": 11419,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "28"
										},
										{
											"begin": 11373,
											"end": 11419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11373,
											"end": 11419,
											"name": "tag",
											"source": 13,
											"value": "584"
										},
										{
											"begin": 11373,
											"end": 11419,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11337,
											"end": 11430,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11337,
											"end": 11430,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 11337,
											"end": 11430,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "582"
										},
										{
											"begin": 11337,
											"end": 11430,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11231,
											"end": 11327,
											"name": "tag",
											"source": 13,
											"value": "579"
										},
										{
											"begin": 11231,
											"end": 11327,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11269,
											"end": 11316,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "585"
										},
										{
											"begin": 11288,
											"end": 11300,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11288,
											"end": 11300,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 11288,
											"end": 11300,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 11288,
											"end": 11300,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 11288,
											"end": 11300,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 11269,
											"end": 11316,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 11269,
											"end": 11316,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "28"
										},
										{
											"begin": 11269,
											"end": 11316,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11269,
											"end": 11316,
											"name": "tag",
											"source": 13,
											"value": "585"
										},
										{
											"begin": 11269,
											"end": 11316,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11231,
											"end": 11327,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11231,
											"end": 11327,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "580"
										},
										{
											"begin": 11231,
											"end": 11327,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "47"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "105"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "105"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3877,
											"end": 3883,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 3877,
											"end": 3899,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "45"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "105"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "105"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "43"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "105"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "105"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "112"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "600"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 680,
											"end": 21968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "600"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "601"
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 2227,
											"end": 2330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "tag",
											"source": 6,
											"value": "601"
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "602"
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2484,
											"end": 2488,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "tag",
											"source": 0,
											"value": "602"
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 4453,
											"end": 4475,
											"name": "PUSH",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "603"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 680,
											"end": 21968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "603"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 4453,
											"end": 4475,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "10"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4452,
											"end": 4475,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4448,
											"end": 4498,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "135"
										},
										{
											"begin": 4448,
											"end": 4498,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "606"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 680,
											"end": 21968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "606"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 16876,
											"end": 16887,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4453,
											"end": 4475,
											"name": "PUSH",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 16876,
											"end": 16887,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16876,
											"end": 16887,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "246"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 16891,
											"end": 16912,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 16876,
											"end": 16912,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 16876,
											"end": 16912,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 16872,
											"end": 17050,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "609"
										},
										{
											"begin": 16872,
											"end": 17050,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "610"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17082,
											"end": 17093,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17264,
											"end": 17312,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "611"
										},
										{
											"begin": 17082,
											"end": 17093,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 16451,
											"end": 16475,
											"name": "PUSH",
											"source": 13,
											"value": "5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 17082,
											"end": 17093,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 17082,
											"end": 17093,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 17156,
											"end": 17173,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 17156,
											"end": 17173,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 17152,
											"end": 17249,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "612"
										},
										{
											"begin": 17152,
											"end": 17249,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 17264,
											"end": 17312,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17264,
											"end": 17312,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17264,
											"end": 17312,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 17264,
											"end": 17312,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17264,
											"end": 17312,
											"name": "tag",
											"source": 13,
											"value": "611"
										},
										{
											"begin": 17264,
											"end": 17312,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 17264,
											"end": 17312,
											"name": "PUSH",
											"source": 13,
											"value": "B559D285C87E4FA0F561388264310703FF0C6C454A39AE52D0AE94032FF0DB70"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 17287,
											"end": 17297,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 17264,
											"end": 17312,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 17264,
											"end": 17312,
											"name": "LOG3",
											"source": 13
										},
										{
											"begin": 16891,
											"end": 16912,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 17152,
											"end": 17249,
											"name": "tag",
											"source": 13,
											"value": "612"
										},
										{
											"begin": 17152,
											"end": 17249,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 17189,
											"end": 17238,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "614"
										},
										{
											"begin": 17189,
											"end": 17238,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 17189,
											"end": 17199,
											"name": "PUSHIMMUTABLE",
											"source": 13,
											"value": "1358"
										},
										{
											"begin": 17189,
											"end": 17238,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "28"
										},
										{
											"begin": 17189,
											"end": 17238,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17189,
											"end": 17238,
											"name": "tag",
											"source": 13,
											"value": "614"
										},
										{
											"begin": 17189,
											"end": 17238,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17152,
											"end": 17249,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 17152,
											"end": 17249,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 17152,
											"end": 17249,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "255"
										},
										{
											"begin": 17152,
											"end": 17249,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16872,
											"end": 17050,
											"name": "tag",
											"source": 13,
											"value": "609"
										},
										{
											"begin": 16872,
											"end": 17050,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16947,
											"end": 16976,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 16932,
											"end": 16976,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 16928,
											"end": 17040,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "615"
										},
										{
											"begin": 16928,
											"end": 17040,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 16872,
											"end": 17050,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 16872,
											"end": 17050,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "610"
										},
										{
											"begin": 16872,
											"end": 17050,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16928,
											"end": 17040,
											"name": "tag",
											"source": 13,
											"value": "615"
										},
										{
											"begin": 16928,
											"end": 17040,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4DF0CAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17003,
											"end": 17025,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 17003,
											"end": 17025,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 17003,
											"end": 17025,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "41"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "105"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "105"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1949,
											"end": 1973,
											"name": "PUSH",
											"source": 13,
											"value": "A8A7BC421F721CB936EA99EFDAD79237E6EE0B871A2A08CF648691F9584CDC77"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "39"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "105"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "623"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "7"
										},
										{
											"begin": 680,
											"end": 21968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "623"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "624"
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2484,
											"end": 2488,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "tag",
											"source": 0,
											"value": "624"
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1204,
											"end": 1276,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "625"
										},
										{
											"begin": 1204,
											"end": 1276,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 1204,
											"end": 1276,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1204,
											"end": 1276,
											"name": "tag",
											"source": 5,
											"value": "625"
										},
										{
											"begin": 1204,
											"end": 1276,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 4453,
											"end": 4475,
											"name": "PUSH",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "626"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 680,
											"end": 21968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "626"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 4453,
											"end": 4475,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "10"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4452,
											"end": 4475,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4448,
											"end": 4498,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "135"
										},
										{
											"begin": 4448,
											"end": 4498,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "629"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 680,
											"end": 21968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "629"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4153,
											"end": 4184,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 4153,
											"end": 4184,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4153,
											"end": 4184,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4149,
											"end": 4208,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "138"
										},
										{
											"begin": 4149,
											"end": 4208,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 4453,
											"end": 4475,
											"name": "PUSH",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "632"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 680,
											"end": 21968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "632"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 4601,
											"end": 4623,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "141"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 12916,
											"end": 12945,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 4601,
											"end": 4634,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4597,
											"end": 4662,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "143"
										},
										{
											"begin": 4597,
											"end": 4662,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "637"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 680,
											"end": 21968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "637"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 13029,
											"end": 13048,
											"name": "PUSH",
											"source": 13,
											"value": "7"
										},
										{
											"begin": 13029,
											"end": 13048,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 13029,
											"end": 13048,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1861,
											"end": 1869,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1861,
											"end": 1869,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1861,
											"end": 1869,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1861,
											"end": 1869,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 13010,
											"end": 13025,
											"name": "TIMESTAMP",
											"source": 13
										},
										{
											"begin": 13010,
											"end": 13048,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 13010,
											"end": 13048,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 13006,
											"end": 13076,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "638"
										},
										{
											"begin": 13006,
											"end": 13076,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 13090,
											"end": 13116,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 13086,
											"end": 13141,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "640"
										},
										{
											"begin": 13086,
											"end": 13141,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 13294,
											"end": 13343,
											"name": "PUSH",
											"source": 13,
											"value": "DE7B01BEF0884582CE204F7F920E57F99DD569F93867450872F436BE5A03C755"
										},
										{
											"begin": 13152,
											"end": 13163,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "642"
										},
										{
											"begin": 13152,
											"end": 13163,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 13199,
											"end": 13217,
											"name": "PUSH",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 13152,
											"end": 13163,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 4453,
											"end": 4475,
											"name": "PUSH",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 13294,
											"end": 13343,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "643"
										},
										{
											"begin": 13152,
											"end": 13163,
											"name": "SWAP8",
											"source": 13
										},
										{
											"begin": 13152,
											"end": 13163,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13166,
											"end": 13189,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 13199,
											"end": 13217,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "18"
										},
										{
											"begin": 680,
											"end": 21968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "642"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 13010,
											"end": 13025,
											"name": "TIMESTAMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 13294,
											"end": 13343,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 13294,
											"end": 13343,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13294,
											"end": 13343,
											"name": "tag",
											"source": 13,
											"value": "643"
										},
										{
											"begin": 13294,
											"end": 13343,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "644"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "9"
										},
										{
											"begin": 680,
											"end": 21968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "644"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13294,
											"end": 13343,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 13294,
											"end": 13343,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13294,
											"end": 13343,
											"name": "LOG3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 13086,
											"end": 13141,
											"name": "tag",
											"source": 13,
											"value": "640"
										},
										{
											"begin": 13086,
											"end": 13141,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "BC7FD331"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13125,
											"end": 13141,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 13125,
											"end": 13141,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13125,
											"end": 13141,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 13006,
											"end": 13076,
											"name": "tag",
											"source": 13,
											"value": "638"
										},
										{
											"begin": 13006,
											"end": 13076,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2D0F572D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13057,
											"end": 13076,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 13057,
											"end": 13076,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13057,
											"end": 13076,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "37"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "105"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "647"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 680,
											"end": 21968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "647"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "648"
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2484,
											"end": 2488,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "tag",
											"source": 0,
											"value": "648"
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 4453,
											"end": 4475,
											"name": "PUSH",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "649"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 680,
											"end": 21968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "649"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 4453,
											"end": 4475,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "10"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4452,
											"end": 4475,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4448,
											"end": 4498,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "135"
										},
										{
											"begin": 4448,
											"end": 4498,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "652"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 680,
											"end": 21968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "652"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4153,
											"end": 4184,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4153,
											"end": 4184,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4153,
											"end": 4184,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4149,
											"end": 4208,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "138"
										},
										{
											"begin": 4149,
											"end": 4208,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 4453,
											"end": 4475,
											"name": "PUSH",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "655"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 680,
											"end": 21968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "655"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 4601,
											"end": 4623,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "246"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4597,
											"end": 4662,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "143"
										},
										{
											"begin": 4597,
											"end": 4662,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 16491,
											"end": 16531,
											"name": "PUSH",
											"source": 13,
											"value": "B559D285C87E4FA0F561388264310703FF0C6C454A39AE52D0AE94032FF0DB70"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4453,
											"end": 4475,
											"name": "PUSH",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "660"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 16491,
											"end": 16531,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "661"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 680,
											"end": 21968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "660"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 16426,
											"end": 16448,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16451,
											"end": 16475,
											"name": "PUSH",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 16491,
											"end": 16531,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 16491,
											"end": 16531,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16491,
											"end": 16531,
											"name": "tag",
											"source": 13,
											"value": "661"
										},
										{
											"begin": 16491,
											"end": 16531,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 16491,
											"end": 16531,
											"name": "LOG3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "35"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "112"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "112"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFF"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "192"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7965DB0B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2649,
											"end": 2696,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2649,
											"end": 2696,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2649,
											"end": 2696,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2649,
											"end": 2736,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2649,
											"end": 2736,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2649,
											"end": 2736,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "668"
										},
										{
											"begin": 2649,
											"end": 2736,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "669"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 2649,
											"end": 2736,
											"name": "tag",
											"source": 0,
											"value": "668"
										},
										{
											"begin": 2649,
											"end": 2736,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1FFC9A7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 829,
											"end": 869,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 829,
											"end": 869,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2649,
											"end": 2736,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2649,
											"end": 2736,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "669"
										},
										{
											"begin": 2649,
											"end": 2736,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "200"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "LT",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "372"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "LT",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "372"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "129"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "372"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "678"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 680,
											"end": 21968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "678"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "129"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "CALLDATACOPY",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "129"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "129"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "129"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "129"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "689"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 680,
											"end": 21968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "689"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "129"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "7"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "129"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "129"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "696"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 680,
											"end": 21968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "696"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "129"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "129"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "701"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 680,
											"end": 21968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "701"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "702"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "703"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "703"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "702"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "9"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "705"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 680,
											"end": 21968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "705"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "10"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "706"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "707"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "707"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "709"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "3F"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP11",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "9"
										},
										{
											"begin": 680,
											"end": 21968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "709"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP9",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "706"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "11"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "710"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "710"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B71"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "21"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3175,
											"end": 3278,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 3175,
											"end": 3278,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "EF73BF2AC44F84561B5498839AB1C8C5A4DD99305D838AEA0D76C5961778535C"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 1949,
											"end": 1973,
											"name": "PUSH",
											"source": 13,
											"value": "A8A7BC421F721CB936EA99EFDAD79237E6EE0B871A2A08CF648691F9584CDC77"
										},
										{
											"begin": 1949,
											"end": 1973,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3495,
											"end": 3518,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3491,
											"end": 3599,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "712"
										},
										{
											"begin": 3491,
											"end": 3599,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3175,
											"end": 3278,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3175,
											"end": 3278,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3491,
											"end": 3599,
											"name": "tag",
											"source": 0,
											"value": "712"
										},
										{
											"begin": 3491,
											"end": 3599,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "PUSH",
											"source": 0,
											"value": "E2517D3F"
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3175,
											"end": 3278,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 3175,
											"end": 3278,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2930,
											"end": 2936,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3495,
											"end": 3518,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3491,
											"end": 3599,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "712"
										},
										{
											"begin": 3491,
											"end": 3599,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3175,
											"end": 3278,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3175,
											"end": 3278,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6155,
											"end": 6471,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 6155,
											"end": 6471,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6155,
											"end": 6471,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2930,
											"end": 2936,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "A0"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 6252,
											"end": 6275,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6248,
											"end": 6465,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "716"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2930,
											"end": 2936,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "PUSH",
											"source": 0,
											"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 6400,
											"end": 6411,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6400,
											"end": 6411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6248,
											"end": 6465,
											"name": "tag",
											"source": 0,
											"value": "716"
										},
										{
											"begin": 6248,
											"end": 6465,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6442,
											"end": 6454,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6442,
											"end": 6454,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6442,
											"end": 6454,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6442,
											"end": 6454,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6708,
											"end": 7025,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 6708,
											"end": 7025,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6708,
											"end": 7025,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2930,
											"end": 2936,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "A0"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 6802,
											"end": 7019,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "716"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2930,
											"end": 2936,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "PUSH",
											"source": 0,
											"value": "F6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 6954,
											"end": 6965,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6954,
											"end": 6965,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "16"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "720"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "721"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "722"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "722"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B71"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "22"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "720"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "7F"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "721"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "17"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "725"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "725"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "17"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "18"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "372"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "729"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "16"
										},
										{
											"begin": 680,
											"end": 21968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "729"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "730"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "731"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "732"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "734"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "735"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "734"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "735"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "732"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "737"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "738"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP7",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP8",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "740"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "741"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "740"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "F8"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "741"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "738"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP7",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP7",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "737"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "730"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "742"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "743"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "744"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "17"
										},
										{
											"begin": 680,
											"end": 21968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "742"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "731"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "743"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "744"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "19"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "10000000000000000"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "372"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "747"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "749"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "18"
										},
										{
											"begin": 680,
											"end": 21968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "749"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "747"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B71"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "32"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "750"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 680,
											"end": 21968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "750"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1767,
											"end": 1873,
											"name": "tag",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 1767,
											"end": 1873,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "751"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1767,
											"end": 1873,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "751"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "10"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "14185D5CD8589B194E881C185D5CD959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "82"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "tag",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 2468,
											"end": 2487,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "753"
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2336,
											"end": 2623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "tag",
											"source": 6,
											"value": "753"
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 6,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 8370,
											"end": 9090,
											"name": "tag",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 8370,
											"end": 9090,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8370,
											"end": 9090,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8370,
											"end": 9090,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "CALL",
											"source": 9
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "755"
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 8942,
											"end": 8957,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "757"
										},
										{
											"begin": 8942,
											"end": 8957,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 8960,
											"end": 8986,
											"name": "EXTCODESIZE",
											"source": 9
										},
										{
											"begin": 8960,
											"end": 8991,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "tag",
											"source": 9,
											"value": "759"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "760"
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8370,
											"end": 9090,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8370,
											"end": 9090,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "tag",
											"source": 9,
											"value": "760"
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5274AFE7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "tag",
											"source": 9,
											"value": "757"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9009,
											"end": 9010,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 8994,
											"end": 9010,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 8994,
											"end": 9010,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "759"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "tag",
											"source": 9,
											"value": "755"
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "25"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "148"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1810,
											"end": 1815,
											"name": "tag",
											"source": 13,
											"value": "26"
										},
										{
											"begin": 1810,
											"end": 1815,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1810,
											"end": 1815,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1810,
											"end": 1815,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1810,
											"end": 1815,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1810,
											"end": 1815,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1810,
											"end": 1815,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 1810,
											"end": 1815,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "148"
										},
										{
											"begin": 1810,
											"end": 1815,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1810,
											"end": 1815,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "tag",
											"source": 9,
											"value": "28"
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "372"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "749"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 1328,
											"end": 1371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "29"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "769"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "16"
										},
										{
											"begin": 680,
											"end": 21968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "769"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "770"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "772"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "773"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "749"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 680,
											"end": 21968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "772"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "POP",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "775"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "776"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "749"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "773"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "776"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "775"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "770"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "749"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "773"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "30"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "372"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "780"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 680,
											"end": 21968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "tag",
											"source": 13,
											"value": "780"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20051,
											"end": 20378,
											"name": "tag",
											"source": 13,
											"value": "31"
										},
										{
											"begin": 20051,
											"end": 20378,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 20169,
											"end": 20173,
											"name": "PUSH",
											"source": 13,
											"value": "3E8"
										},
										{
											"begin": 20156,
											"end": 20173,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 20156,
											"end": 20173,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 20152,
											"end": 20194,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "781"
										},
										{
											"begin": 20152,
											"end": 20194,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 20221,
											"end": 20236,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 20250,
											"end": 20270,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 20250,
											"end": 20270,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 20250,
											"end": 20270,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 20250,
											"end": 20270,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 20246,
											"end": 20279,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "783"
										},
										{
											"begin": 20246,
											"end": 20279,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 20221,
											"end": 20236,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1810,
											"end": 1815,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1810,
											"end": 1815,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1810,
											"end": 1815,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 20333,
											"end": 20371,
											"name": "PUSH",
											"source": 13,
											"value": "FEEDDF72B7EE4210B769104CB8B071E5706232AC7F671FB292AF429FFD58B587"
										},
										{
											"begin": 20333,
											"end": 20371,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1810,
											"end": 1815,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1810,
											"end": 1815,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 20333,
											"end": 20371,
											"name": "tag",
											"source": 13,
											"value": "785"
										},
										{
											"begin": 20333,
											"end": 20371,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20333,
											"end": 20371,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 20333,
											"end": 20371,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 20333,
											"end": 20371,
											"name": "LOG1",
											"source": 13
										},
										{
											"begin": 20051,
											"end": 20378,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20246,
											"end": 20279,
											"name": "tag",
											"source": 13,
											"value": "783"
										},
										{
											"begin": 20246,
											"end": 20279,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20272,
											"end": 20279,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20272,
											"end": 20279,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20272,
											"end": 20279,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20272,
											"end": 20279,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20272,
											"end": 20279,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20152,
											"end": 20194,
											"name": "tag",
											"source": 13,
											"value": "781"
										},
										{
											"begin": 20152,
											"end": 20194,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "CD4E6167"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 20182,
											"end": 20194,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 20182,
											"end": 20194,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 20182,
											"end": 20194,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 20182,
											"end": 20194,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 20182,
											"end": 20194,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 20384,
											"end": 20755,
											"name": "tag",
											"source": 13,
											"value": "32"
										},
										{
											"begin": 20384,
											"end": 20755,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 20494,
											"end": 20521,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 20494,
											"end": 20521,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 20490,
											"end": 20546,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "212"
										},
										{
											"begin": 20490,
											"end": 20546,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 20580,
											"end": 20593,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 1810,
											"end": 1815,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 20607,
											"end": 20636,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 20607,
											"end": 20636,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 20607,
											"end": 20636,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 20603,
											"end": 20645,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "788"
										},
										{
											"begin": 20603,
											"end": 20645,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 20580,
											"end": 20593,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 20700,
											"end": 20748,
											"name": "PUSH",
											"source": 13,
											"value": "AAEBCF1BFA00580E41D966056B48521FA9F202645C86D4DDF28113E617C1B1D3"
										},
										{
											"begin": 20700,
											"end": 20748,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 20700,
											"end": 20748,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "785"
										},
										{
											"begin": 680,
											"end": 21968,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20603,
											"end": 20645,
											"name": "tag",
											"source": 13,
											"value": "788"
										},
										{
											"begin": 20603,
											"end": 20645,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20638,
											"end": 20645,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20638,
											"end": 20645,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20638,
											"end": 20645,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20638,
											"end": 20645,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										}
									],
									".data": {
										"A8EDA418A66B2F5395D4A15B2F03DE75B34FFF39BB2E2A8B57F6BE974D56E7B0": "8531198e5d946af9a770d2eeba00258645e163142d835fe1b04e45f4db720f8b"
									}
								},
								"2B911A32A95F59603F7637B420E0D131A993F16F7410883B87320ADD8A183555": "a8a7bc421f721cb936ea99efdad79237e6ee0b871a2a08cf648691f9584cdc77"
							},
							"sourceList": [
								"@openzeppelin/contracts/access/AccessControl.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/security/Pausable.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/EtharisEscrow.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"SERVER_ROLE()": "18cf2834",
							"acceptDeal(string,address)": "9b1221ab",
							"approveDeal(string,address)": "24d956c8",
							"autoRefundAfterDeadline(string)": "e39fff38",
							"autoReleasePayment(string)": "38a13287",
							"brandDeals(address)": "f0c3cd20",
							"canAutoRelease(string)": "76492d3f",
							"cancelDeal(string,address)": "03f715da",
							"createDeal(string,address,address,uint96,uint64,string)": "e4abd4cb",
							"creatorDeals(address)": "aed1505d",
							"deals(string)": "a0a57dac",
							"emergencyCancelDeal(string)": "1a1aaeed",
							"emergencyWithdraw(address,uint256)": "95ccea67",
							"feeRecipient()": "46904840",
							"fundDeal(string,address,uint96,uint256,uint8,bytes32,bytes32)": "9f1cf42d",
							"getDeal(string)": "e7079180",
							"getDeals(address,bool)": "9fad59b4",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"idrxToken()": "d6bc7c63",
							"initiateDispute(string,address,string)": "0e59a395",
							"pause()": "8456cb59",
							"paused()": "5c975abb",
							"platformFeeBps()": "22dcd13e",
							"renounceRole(bytes32,address)": "36568abe",
							"resolveDispute(string,address,bool)": "ef03c10e",
							"revokeRole(bytes32,address)": "d547741f",
							"submitContent(string,address,string)": "4971716f",
							"supportsInterface(bytes4)": "01ffc9a7",
							"unpause()": "3f4ba83a",
							"updateFeeRecipient(address)": "f160d369",
							"updatePlatformFee(uint96)": "317b8c5b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"idrxToken_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"feeRecipient_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"initialOwner_\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AmountMustBeGreaterThanZero\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BriefHashRequired\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CannotCancelThisDeal\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CannotWithdrawIDRX\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ContentUrlRequired\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CreatorCannotBeBrand\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DeadlineMustBeInFuture\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DeadlineNotPassed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DealAlreadyExists\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DealAlreadyFunded\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DealNotFound\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DealNotFunded\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FeeTooHigh\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidDealID\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidDealStatus\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotAuthorized\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PermitFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReasonRequired\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReviewPeriodEnded\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReviewPeriodNotEnded\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SubmissionDeadlinePassed\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"string\",\"name\":\"dealId\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"contentUrl\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"reviewDeadline\",\"type\":\"uint64\"}],\"name\":\"ContentSubmitted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"string\",\"name\":\"dealId\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"brand\",\"type\":\"address\"}],\"name\":\"DealApproved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"string\",\"name\":\"dealId\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"initiator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint96\",\"name\":\"refundAmount\",\"type\":\"uint96\"}],\"name\":\"DealCancelled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"string\",\"name\":\"dealId\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"brand\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint96\",\"name\":\"amount\",\"type\":\"uint96\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"deadline\",\"type\":\"uint64\"}],\"name\":\"DealCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"string\",\"name\":\"dealId\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"brand\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint96\",\"name\":\"amount\",\"type\":\"uint96\"}],\"name\":\"DealFunded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"string\",\"name\":\"dealId\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"brand\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"DisputeInitiated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"string\",\"name\":\"dealId\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"acceptedDispute\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint96\",\"name\":\"creatorAmount\",\"type\":\"uint96\"},{\"indexed\":false,\"internalType\":\"uint96\",\"name\":\"brandRefund\",\"type\":\"uint96\"}],\"name\":\"DisputeResolved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldRecipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newRecipient\",\"type\":\"address\"}],\"name\":\"FeeRecipientUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"string\",\"name\":\"dealId\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint96\",\"name\":\"amount\",\"type\":\"uint96\"},{\"indexed\":false,\"internalType\":\"uint96\",\"name\":\"platformFee\",\"type\":\"uint96\"}],\"name\":\"PaymentReleased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint96\",\"name\":\"oldFee\",\"type\":\"uint96\"},{\"indexed\":false,\"internalType\":\"uint96\",\"name\":\"newFee\",\"type\":\"uint96\"}],\"name\":\"PlatformFeeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SERVER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_dealId\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_creatorAddress\",\"type\":\"address\"}],\"name\":\"acceptDeal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_dealId\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_brandAddress\",\"type\":\"address\"}],\"name\":\"approveDeal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_dealId\",\"type\":\"string\"}],\"name\":\"autoRefundAfterDeadline\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_dealId\",\"type\":\"string\"}],\"name\":\"autoReleasePayment\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_brand\",\"type\":\"address\"}],\"name\":\"brandDeals\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_dealId\",\"type\":\"string\"}],\"name\":\"canAutoRelease\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_dealId\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_brandAddress\",\"type\":\"address\"}],\"name\":\"cancelDeal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_dealId\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_brandAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_creatorAddress\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"_amount\",\"type\":\"uint96\"},{\"internalType\":\"uint64\",\"name\":\"_deadline\",\"type\":\"uint64\"},{\"internalType\":\"string\",\"name\":\"_briefHash\",\"type\":\"string\"}],\"name\":\"createDeal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_creator\",\"type\":\"address\"}],\"name\":\"creatorDeals\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_dealId\",\"type\":\"string\"}],\"name\":\"deals\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"brand\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"dealId\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"briefHash\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"contentUrl\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"disputeReason\",\"type\":\"string\"},{\"internalType\":\"uint96\",\"name\":\"amount\",\"type\":\"uint96\"},{\"internalType\":\"uint64\",\"name\":\"deadline\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"fundedAt\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"submittedAt\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"reviewDeadline\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"disputedAt\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"createdAt\",\"type\":\"uint64\"},{\"internalType\":\"enum EtharisEscrow.ContractStatus\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"acceptedDispute\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"exists\",\"type\":\"bool\"}],\"internalType\":\"struct EtharisEscrow.Deal\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_dealId\",\"type\":\"string\"}],\"name\":\"emergencyCancelDeal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"emergencyWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeRecipient\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_dealId\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_brandAddress\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"_amount\",\"type\":\"uint96\"},{\"internalType\":\"uint256\",\"name\":\"_deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"_v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"_r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"_s\",\"type\":\"bytes32\"}],\"name\":\"fundDeal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_dealId\",\"type\":\"string\"}],\"name\":\"getDeal\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"dealId\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"brand\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"amount\",\"type\":\"uint96\"},{\"internalType\":\"uint64\",\"name\":\"deadline\",\"type\":\"uint64\"},{\"internalType\":\"enum EtharisEscrow.ContractStatus\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"briefHash\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"contentUrl\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"disputeReason\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"reviewDeadline\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"fundedAt\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"submittedAt\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"disputedAt\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"createdAt\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"exists\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_isBrand\",\"type\":\"bool\"}],\"name\":\"getDeals\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"idrxToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_dealId\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_brandAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_reason\",\"type\":\"string\"}],\"name\":\"initiateDispute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"platformFeeBps\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_dealId\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_creatorAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_acceptDispute\",\"type\":\"bool\"}],\"name\":\"resolveDispute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_dealId\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_creatorAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_contentUrl\",\"type\":\"string\"}],\"name\":\"submitContent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newRecipient\",\"type\":\"address\"}],\"name\":\"updateFeeRecipient\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint96\",\"name\":\"_newFeeBps\",\"type\":\"uint96\"}],\"name\":\"updatePlatformFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Etharis Team\",\"details\":\"Escrow contract for sponsorship deals. All action functions can only be called by the Server Wallet (Owner).\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"createDeal(string,address,address,uint96,uint64,string)\":{\"details\":\"Only SERVER_ROLE can call this function\"},\"fundDeal(string,address,uint96,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Brands sign permit off-chain, server executes with signature for gasless transaction\"},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"title\":\"EtharisEscrow\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"acceptDeal(string,address)\":{\"notice\":\"[CUSTODIAL] Creator accepts the funded deal\"},\"approveDeal(string,address)\":{\"notice\":\"[CUSTODIAL] Brand approve content & release payment.\"},\"autoRefundAfterDeadline(string)\":{\"notice\":\"Triggers a full refund to the Brand if the Creator fails to submit content before the deadline.\"},\"autoReleasePayment(string)\":{\"notice\":\"Auto-release payment after review period\"},\"cancelDeal(string,address)\":{\"notice\":\"[CUSTODIAL] Cancel the deal before it is funded.\"},\"createDeal(string,address,address,uint96,uint64,string)\":{\"notice\":\"[CUSTODIAL] Brand creates a new deal.\"},\"emergencyCancelDeal(string)\":{\"notice\":\"Emergency cancel deal (SERVER_ROLE only).\"},\"fundDeal(string,address,uint96,uint256,uint8,bytes32,bytes32)\":{\"notice\":\"[CUSTODIAL] Brand fund deal with gasless permit support\"},\"initiateDispute(string,address,string)\":{\"notice\":\"[CUSTODIAL] Brand initiate dispute.\"},\"resolveDispute(string,address,bool)\":{\"notice\":\"[CUSTODIAL] Creator resolve dispute.\"},\"submitContent(string,address,string)\":{\"notice\":\"[CUSTODIAL] Creator submits the content.\"}},\"notice\":\"Uses IDRX as the payment token (Indonesian Rupiah stablecoin).\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/EtharisEscrow.sol\":\"EtharisEscrow\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x1a6b4f6b7798ab80929d491b89d5427a9b3338c0fd1acd0ba325f69c6f1646af\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7bb7f346c12a14dc622bc105ce3c47202fbc89f4b153a28a63bb68193297330c\",\"dweb:/ipfs/QmagwF8P3bUBXwdo159ueEnY9dLSvEWwK24kk2op58egwG\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xbff9f59c84e5337689161ce7641c0ef8e872d6a7536fbc1f5133f128887aba3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b308f882e796f7b79c9502deacb0a62983035c6f6f4e962b319ba6a1f4a77d3d\",\"dweb:/ipfs/QmaWCW7ahEQqFjwhSUhV7Ae7WhfNvzSpE7DQ58hvEooqPL\"]},\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100\",\"dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d\",\"dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF\"]},\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x2fa0657dd7b8bc75475a47f64bc04a9adb42236b15d65e6781594ea69a46c3e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7496f42681aed94bf0142a077324e50b86046610c1724e7c12e96cf1c365914a\",\"dweb:/ipfs/QmZvhNdSAAbN4PKPdheAqwpXukUiXp3Q3TdQccDMg2NDTV\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x2d9dc2fe26180f74c11c13663647d38e259e45f95eb88f57b61d2160b0109d3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81233d1f98060113d9922180bb0f14f8335856fe9f339134b09335e9f678c377\",\"dweb:/ipfs/QmWh6R35SarhAn4z2wH8SU456jJSYL2FgucfTFgbHJJN4E\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"contracts/EtharisEscrow.sol\":{\"keccak256\":\"0xb6a150303001cf37418ea900cbfc7808f45d7fe8eb643f3db05a8db27eb84d36\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e27abd9b9f7e577162b80e46927b8215243b373eec4fdccd1c5d155c906c4da4\",\"dweb:/ipfs/QmdYJZcPTdLi71RKwRkaVDSwW6eRokA8cE9EPmm1NT89Ze\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 588,
								"contract": "contracts/EtharisEscrow.sol:EtharisEscrow",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 487,
								"contract": "contracts/EtharisEscrow.sol:EtharisEscrow",
								"label": "_paused",
								"offset": 0,
								"slot": "1",
								"type": "t_bool"
							},
							{
								"astId": 27,
								"contract": "contracts/EtharisEscrow.sol:EtharisEscrow",
								"label": "_roles",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)22_storage)"
							},
							{
								"astId": 1361,
								"contract": "contracts/EtharisEscrow.sol:EtharisEscrow",
								"label": "_platformFeeBps",
								"offset": 0,
								"slot": "3",
								"type": "t_uint96"
							},
							{
								"astId": 1369,
								"contract": "contracts/EtharisEscrow.sol:EtharisEscrow",
								"label": "_feeRecipient",
								"offset": 12,
								"slot": "3",
								"type": "t_address"
							},
							{
								"astId": 1420,
								"contract": "contracts/EtharisEscrow.sol:EtharisEscrow",
								"label": "_deals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_string_memory_ptr,t_struct(Deal)1415_storage)"
							},
							{
								"astId": 1425,
								"contract": "contracts/EtharisEscrow.sol:EtharisEscrow",
								"label": "_brandDeals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_array(t_string_storage)dyn_storage)"
							},
							{
								"astId": 1430,
								"contract": "contracts/EtharisEscrow.sol:EtharisEscrow",
								"label": "_creatorDeals",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_address,t_array(t_string_storage)dyn_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_string_storage)dyn_storage": {
								"base": "t_string_storage",
								"encoding": "dynamic_array",
								"label": "string[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_enum(ContractStatus)1381": {
								"encoding": "inplace",
								"label": "enum EtharisEscrow.ContractStatus",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_array(t_string_storage)dyn_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => string[])",
								"numberOfBytes": "32",
								"value": "t_array(t_string_storage)dyn_storage"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)22_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)22_storage"
							},
							"t_mapping(t_string_memory_ptr,t_struct(Deal)1415_storage)": {
								"encoding": "mapping",
								"key": "t_string_memory_ptr",
								"label": "mapping(string => struct EtharisEscrow.Deal)",
								"numberOfBytes": "32",
								"value": "t_struct(Deal)1415_storage"
							},
							"t_string_memory_ptr": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(Deal)1415_storage": {
								"encoding": "inplace",
								"label": "struct EtharisEscrow.Deal",
								"members": [
									{
										"astId": 1383,
										"contract": "contracts/EtharisEscrow.sol:EtharisEscrow",
										"label": "brand",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 1385,
										"contract": "contracts/EtharisEscrow.sol:EtharisEscrow",
										"label": "creator",
										"offset": 0,
										"slot": "1",
										"type": "t_address"
									},
									{
										"astId": 1387,
										"contract": "contracts/EtharisEscrow.sol:EtharisEscrow",
										"label": "dealId",
										"offset": 0,
										"slot": "2",
										"type": "t_string_storage"
									},
									{
										"astId": 1389,
										"contract": "contracts/EtharisEscrow.sol:EtharisEscrow",
										"label": "briefHash",
										"offset": 0,
										"slot": "3",
										"type": "t_string_storage"
									},
									{
										"astId": 1391,
										"contract": "contracts/EtharisEscrow.sol:EtharisEscrow",
										"label": "contentUrl",
										"offset": 0,
										"slot": "4",
										"type": "t_string_storage"
									},
									{
										"astId": 1393,
										"contract": "contracts/EtharisEscrow.sol:EtharisEscrow",
										"label": "disputeReason",
										"offset": 0,
										"slot": "5",
										"type": "t_string_storage"
									},
									{
										"astId": 1395,
										"contract": "contracts/EtharisEscrow.sol:EtharisEscrow",
										"label": "amount",
										"offset": 0,
										"slot": "6",
										"type": "t_uint96"
									},
									{
										"astId": 1397,
										"contract": "contracts/EtharisEscrow.sol:EtharisEscrow",
										"label": "deadline",
										"offset": 12,
										"slot": "6",
										"type": "t_uint64"
									},
									{
										"astId": 1399,
										"contract": "contracts/EtharisEscrow.sol:EtharisEscrow",
										"label": "fundedAt",
										"offset": 20,
										"slot": "6",
										"type": "t_uint64"
									},
									{
										"astId": 1401,
										"contract": "contracts/EtharisEscrow.sol:EtharisEscrow",
										"label": "submittedAt",
										"offset": 0,
										"slot": "7",
										"type": "t_uint64"
									},
									{
										"astId": 1403,
										"contract": "contracts/EtharisEscrow.sol:EtharisEscrow",
										"label": "reviewDeadline",
										"offset": 8,
										"slot": "7",
										"type": "t_uint64"
									},
									{
										"astId": 1405,
										"contract": "contracts/EtharisEscrow.sol:EtharisEscrow",
										"label": "disputedAt",
										"offset": 16,
										"slot": "7",
										"type": "t_uint64"
									},
									{
										"astId": 1407,
										"contract": "contracts/EtharisEscrow.sol:EtharisEscrow",
										"label": "createdAt",
										"offset": 24,
										"slot": "7",
										"type": "t_uint64"
									},
									{
										"astId": 1410,
										"contract": "contracts/EtharisEscrow.sol:EtharisEscrow",
										"label": "status",
										"offset": 0,
										"slot": "8",
										"type": "t_enum(ContractStatus)1381"
									},
									{
										"astId": 1412,
										"contract": "contracts/EtharisEscrow.sol:EtharisEscrow",
										"label": "acceptedDispute",
										"offset": 1,
										"slot": "8",
										"type": "t_bool"
									},
									{
										"astId": 1414,
										"contract": "contracts/EtharisEscrow.sol:EtharisEscrow",
										"label": "exists",
										"offset": 2,
										"slot": "8",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "288"
							},
							"t_struct(RoleData)22_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 19,
										"contract": "contracts/EtharisEscrow.sol:EtharisEscrow",
										"label": "hasRole",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 21,
										"contract": "contracts/EtharisEscrow.sol:EtharisEscrow",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint64": {
								"encoding": "inplace",
								"label": "uint64",
								"numberOfBytes": "8"
							},
							"t_uint96": {
								"encoding": "inplace",
								"label": "uint96",
								"numberOfBytes": "12"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"acceptDeal(string,address)": {
								"notice": "[CUSTODIAL] Creator accepts the funded deal"
							},
							"approveDeal(string,address)": {
								"notice": "[CUSTODIAL] Brand approve content & release payment."
							},
							"autoRefundAfterDeadline(string)": {
								"notice": "Triggers a full refund to the Brand if the Creator fails to submit content before the deadline."
							},
							"autoReleasePayment(string)": {
								"notice": "Auto-release payment after review period"
							},
							"cancelDeal(string,address)": {
								"notice": "[CUSTODIAL] Cancel the deal before it is funded."
							},
							"createDeal(string,address,address,uint96,uint64,string)": {
								"notice": "[CUSTODIAL] Brand creates a new deal."
							},
							"emergencyCancelDeal(string)": {
								"notice": "Emergency cancel deal (SERVER_ROLE only)."
							},
							"fundDeal(string,address,uint96,uint256,uint8,bytes32,bytes32)": {
								"notice": "[CUSTODIAL] Brand fund deal with gasless permit support"
							},
							"initiateDispute(string,address,string)": {
								"notice": "[CUSTODIAL] Brand initiate dispute."
							},
							"resolveDispute(string,address,bool)": {
								"notice": "[CUSTODIAL] Creator resolve dispute."
							},
							"submitContent(string,address,string)": {
								"notice": "[CUSTODIAL] Creator submits the content."
							}
						},
						"notice": "Uses IDRX as the payment token (Indonesian Rupiah stablecoin).",
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
					"exportedSymbols": {
						"AccessControl": [
							296
						],
						"Context": [
							1250
						],
						"ERC165": [
							1274
						],
						"IAccessControl": [
							379
						],
						"IERC165": [
							1286
						]
					},
					"id": 297,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
							"file": "./IAccessControl.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 297,
							"sourceUnit": 380,
							"src": "134:52:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "IAccessControl",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 379,
										"src": "142:14:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 297,
							"sourceUnit": 1251,
							"src": "187:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1250,
										"src": "195:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../utils/introspection/ERC165.sol",
							"id": 8,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 297,
							"sourceUnit": 1275,
							"src": "233:66:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 6,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1286,
										"src": "241:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 7,
										"name": "ERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1274,
										"src": "250:6:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 10,
										"name": "Context",
										"nameLocations": [
											"1997:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1250,
										"src": "1997:7:0"
									},
									"id": 11,
									"nodeType": "InheritanceSpecifier",
									"src": "1997:7:0"
								},
								{
									"baseName": {
										"id": 12,
										"name": "IAccessControl",
										"nameLocations": [
											"2006:14:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 379,
										"src": "2006:14:0"
									},
									"id": 13,
									"nodeType": "InheritanceSpecifier",
									"src": "2006:14:0"
								},
								{
									"baseName": {
										"id": 14,
										"name": "ERC165",
										"nameLocations": [
											"2022:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1274,
										"src": "2022:6:0"
									},
									"id": 15,
									"nodeType": "InheritanceSpecifier",
									"src": "2022:6:0"
								}
							],
							"canonicalName": "AccessControl",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 9,
								"nodeType": "StructuredDocumentation",
								"src": "301:1660:0",
								"text": " @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```solidity\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```solidity\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n to enforce additional security measures for this role."
							},
							"fullyImplemented": true,
							"id": 296,
							"linearizedBaseContracts": [
								296,
								1274,
								1286,
								379,
								1250
							],
							"name": "AccessControl",
							"nameLocation": "1980:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "AccessControl.RoleData",
									"id": 22,
									"members": [
										{
											"constant": false,
											"id": 19,
											"mutability": "mutable",
											"name": "hasRole",
											"nameLocation": "2094:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 22,
											"src": "2061:40:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"typeName": {
												"id": 18,
												"keyName": "account",
												"keyNameLocation": "2077:7:0",
												"keyType": {
													"id": 16,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2069:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "2061:32:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
													"typeString": "mapping(address => bool)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 17,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2088:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 21,
											"mutability": "mutable",
											"name": "adminRole",
											"nameLocation": "2119:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 22,
											"src": "2111:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 20,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "2111:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "RoleData",
									"nameLocation": "2042:8:0",
									"nodeType": "StructDefinition",
									"scope": 296,
									"src": "2035:100:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 27,
									"mutability": "mutable",
									"name": "_roles",
									"nameLocation": "2183:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 296,
									"src": "2141:48:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$22_storage_$",
										"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
									},
									"typeName": {
										"id": 26,
										"keyName": "role",
										"keyNameLocation": "2157:4:0",
										"keyType": {
											"id": 23,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "2149:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "2141:33:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$22_storage_$",
											"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 25,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 24,
												"name": "RoleData",
												"nameLocations": [
													"2165:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 22,
												"src": "2165:8:0"
											},
											"referencedDeclaration": 22,
											"src": "2165:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_RoleData_$22_storage_ptr",
												"typeString": "struct AccessControl.RoleData"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"functionSelector": "a217fddf",
									"id": 30,
									"mutability": "constant",
									"name": "DEFAULT_ADMIN_ROLE",
									"nameLocation": "2220:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 296,
									"src": "2196:49:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 28,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2196:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "30783030",
										"id": 29,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2241:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0x00"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 40,
										"nodeType": "Block",
										"src": "2463:44:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 36,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 33,
															"src": "2484:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 35,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															94,
															115
														],
														"referencedDeclaration": 94,
														"src": "2473:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32) view"
														}
													},
													"id": 37,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2473:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 38,
												"nodeType": "ExpressionStatement",
												"src": "2473:16:0"
											},
											{
												"id": 39,
												"nodeType": "PlaceholderStatement",
												"src": "2499:1:0"
											}
										]
									},
									"documentation": {
										"id": 31,
										"nodeType": "StructuredDocumentation",
										"src": "2252:174:0",
										"text": " @dev Modifier that checks that an account has a specific role. Reverts\n with an {AccessControlUnauthorizedAccount} error including the required role."
									},
									"id": 41,
									"name": "onlyRole",
									"nameLocation": "2440:8:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2457:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "2449:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 32,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2449:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2448:14:0"
									},
									"src": "2431:76:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1273
									],
									"body": {
										"id": 62,
										"nodeType": "Block",
										"src": "2632:111:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 60,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 55,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 50,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 44,
															"src": "2649:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 52,
																		"name": "IAccessControl",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 379,
																		"src": "2669:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$379_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$379_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	],
																	"id": 51,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "2664:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 53,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2664:20:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IAccessControl_$379",
																	"typeString": "type(contract IAccessControl)"
																}
															},
															"id": 54,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "2685:11:0",
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "2664:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "2649:47:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 58,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 44,
																"src": "2724:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 56,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "2700:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_AccessControl_$296_$",
																	"typeString": "type(contract super AccessControl)"
																}
															},
															"id": 57,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2706:17:0",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1273,
															"src": "2700:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 59,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2700:36:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2649:87:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 49,
												"id": 61,
												"nodeType": "Return",
												"src": "2642:94:0"
											}
										]
									},
									"documentation": {
										"id": 42,
										"nodeType": "StructuredDocumentation",
										"src": "2513:23:0",
										"text": "@inheritdoc IERC165"
									},
									"functionSelector": "01ffc9a7",
									"id": 63,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "2550:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 46,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2608:8:0"
									},
									"parameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "2575:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 63,
												"src": "2568:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 43,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2568:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2567:20:0"
									},
									"returnParameters": {
										"id": 49,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 48,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 63,
												"src": "2626:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 47,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2626:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2625:6:0"
									},
									"scope": 296,
									"src": "2541:202:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										346
									],
									"body": {
										"id": 80,
										"nodeType": "Block",
										"src": "2913:53:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"baseExpression": {
																"id": 73,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 27,
																"src": "2930:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$22_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 75,
															"indexExpression": {
																"id": 74,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 66,
																"src": "2937:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2930:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$22_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 76,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2943:7:0",
														"memberName": "hasRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 19,
														"src": "2930:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 78,
													"indexExpression": {
														"id": 77,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 68,
														"src": "2951:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2930:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 72,
												"id": 79,
												"nodeType": "Return",
												"src": "2923:36:0"
											}
										]
									},
									"documentation": {
										"id": 64,
										"nodeType": "StructuredDocumentation",
										"src": "2749:76:0",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 81,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "2839:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 66,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2855:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "2847:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 65,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2847:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 68,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2869:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "2861:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 67,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2861:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2846:31:0"
									},
									"returnParameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "2907:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 70,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2907:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2906:6:0"
									},
									"scope": 296,
									"src": "2830:136:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 93,
										"nodeType": "Block",
										"src": "3231:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 88,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 84,
															"src": "3252:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 89,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1232,
																"src": "3258:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 90,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3258:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 87,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															94,
															115
														],
														"referencedDeclaration": 115,
														"src": "3241:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address) view"
														}
													},
													"id": 91,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3241:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 92,
												"nodeType": "ExpressionStatement",
												"src": "3241:30:0"
											}
										]
									},
									"documentation": {
										"id": 82,
										"nodeType": "StructuredDocumentation",
										"src": "2972:198:0",
										"text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier."
									},
									"id": 94,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3184:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 85,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 84,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3203:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 94,
												"src": "3195:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 83,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3195:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3194:14:0"
									},
									"returnParameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3231:0:0"
									},
									"scope": 296,
									"src": "3175:103:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 114,
										"nodeType": "Block",
										"src": "3481:124:0",
										"statements": [
											{
												"condition": {
													"id": 106,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3495:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 103,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 97,
																"src": "3504:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 104,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 99,
																"src": "3510:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 102,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 81,
															"src": "3496:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 105,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3496:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 113,
												"nodeType": "IfStatement",
												"src": "3491:108:0",
												"trueBody": {
													"id": 112,
													"nodeType": "Block",
													"src": "3520:79:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 108,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 99,
																		"src": "3574:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 109,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 97,
																		"src": "3583:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 107,
																	"name": "AccessControlUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 306,
																	"src": "3541:32:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_bytes32_$returns$__$",
																		"typeString": "function (address,bytes32) pure"
																	}
																},
																"id": 110,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3541:47:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 111,
															"nodeType": "RevertStatement",
															"src": "3534:54:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 95,
										"nodeType": "StructuredDocumentation",
										"src": "3284:119:0",
										"text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n is missing `role`."
									},
									"id": 115,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3417:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3436:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 115,
												"src": "3428:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 96,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3428:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3450:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 115,
												"src": "3442:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 98,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3442:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3427:31:0"
									},
									"returnParameters": {
										"id": 101,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3481:0:0"
									},
									"scope": 296,
									"src": "3408:197:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										354
									],
									"body": {
										"id": 128,
										"nodeType": "Block",
										"src": "3860:46:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 123,
															"name": "_roles",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "3877:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$22_storage_$",
																"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
															}
														},
														"id": 125,
														"indexExpression": {
															"id": 124,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 118,
															"src": "3884:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3877:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RoleData_$22_storage",
															"typeString": "struct AccessControl.RoleData storage ref"
														}
													},
													"id": 126,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3890:9:0",
													"memberName": "adminRole",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 21,
													"src": "3877:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 122,
												"id": 127,
												"nodeType": "Return",
												"src": "3870:29:0"
											}
										]
									},
									"documentation": {
										"id": 116,
										"nodeType": "StructuredDocumentation",
										"src": "3611:170:0",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 129,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "3795:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 118,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3816:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 129,
												"src": "3808:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 117,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3808:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3807:14:0"
									},
									"returnParameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 129,
												"src": "3851:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 120,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3851:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3850:9:0"
									},
									"scope": 296,
									"src": "3786:120:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										362
									],
									"body": {
										"id": 147,
										"nodeType": "Block",
										"src": "4296:42:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 143,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 132,
															"src": "4317:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 144,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 134,
															"src": "4323:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 142,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 257,
														"src": "4306:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 145,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4306:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 146,
												"nodeType": "ExpressionStatement",
												"src": "4306:25:0"
											}
										]
									},
									"documentation": {
										"id": 130,
										"nodeType": "StructuredDocumentation",
										"src": "3912:285:0",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."
									},
									"functionSelector": "2f2ff15d",
									"id": 148,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 138,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 132,
															"src": "4289:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 137,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "4276:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 139,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4276:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 140,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 136,
												"name": "onlyRole",
												"nameLocations": [
													"4267:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 41,
												"src": "4267:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4267:28:0"
										}
									],
									"name": "grantRole",
									"nameLocation": "4211:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 132,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4229:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 148,
												"src": "4221:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 131,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4221:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4243:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 148,
												"src": "4235:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 133,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4235:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4220:31:0"
									},
									"returnParameters": {
										"id": 141,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4296:0:0"
									},
									"scope": 296,
									"src": "4202:136:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										370
									],
									"body": {
										"id": 166,
										"nodeType": "Block",
										"src": "4713:43:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 162,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 151,
															"src": "4735:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 163,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 153,
															"src": "4741:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 161,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 295,
														"src": "4723:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 164,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4723:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 165,
												"nodeType": "ExpressionStatement",
												"src": "4723:26:0"
											}
										]
									},
									"documentation": {
										"id": 149,
										"nodeType": "StructuredDocumentation",
										"src": "4344:269:0",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "d547741f",
									"id": 167,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 157,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 151,
															"src": "4706:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 156,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "4693:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 158,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4693:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 159,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 155,
												"name": "onlyRole",
												"nameLocations": [
													"4684:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 41,
												"src": "4684:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4684:28:0"
										}
									],
									"name": "revokeRole",
									"nameLocation": "4627:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 151,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4646:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "4638:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 150,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4638:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4660:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "4652:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4652:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4637:31:0"
									},
									"returnParameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4713:0:0"
									},
									"scope": 296,
									"src": "4618:138:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										378
									],
									"body": {
										"id": 189,
										"nodeType": "Block",
										"src": "5383:166:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 178,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 175,
														"name": "callerConfirmation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 172,
														"src": "5397:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 176,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1232,
															"src": "5419:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 177,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5419:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5397:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 183,
												"nodeType": "IfStatement",
												"src": "5393:102:0",
												"trueBody": {
													"id": 182,
													"nodeType": "Block",
													"src": "5433:62:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 179,
																	"name": "AccessControlBadConfirmation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 309,
																	"src": "5454:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 180,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5454:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 181,
															"nodeType": "RevertStatement",
															"src": "5447:37:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 185,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 170,
															"src": "5517:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 186,
															"name": "callerConfirmation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 172,
															"src": "5523:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 184,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 295,
														"src": "5505:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5505:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 188,
												"nodeType": "ExpressionStatement",
												"src": "5505:37:0"
											}
										]
									},
									"documentation": {
										"id": 168,
										"nodeType": "StructuredDocumentation",
										"src": "4762:537:0",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "36568abe",
									"id": 190,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "5313:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 170,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5334:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "5326:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 169,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5326:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "callerConfirmation",
												"nameLocation": "5348:18:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "5340:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5340:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5325:42:0"
									},
									"returnParameters": {
										"id": 174,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5383:0:0"
									},
									"scope": 296,
									"src": "5304:245:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 217,
										"nodeType": "Block",
										"src": "5747:174:0",
										"statements": [
											{
												"assignments": [
													199
												],
												"declarations": [
													{
														"constant": false,
														"id": 199,
														"mutability": "mutable",
														"name": "previousAdminRole",
														"nameLocation": "5765:17:0",
														"nodeType": "VariableDeclaration",
														"scope": 217,
														"src": "5757:25:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 198,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "5757:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 203,
												"initialValue": {
													"arguments": [
														{
															"id": 201,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 193,
															"src": "5798:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 200,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "5785:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 202,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5785:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5757:46:0"
											},
											{
												"expression": {
													"id": 209,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 204,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 27,
																"src": "5813:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$22_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 206,
															"indexExpression": {
																"id": 205,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 193,
																"src": "5820:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5813:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$22_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 207,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5826:9:0",
														"memberName": "adminRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 21,
														"src": "5813:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 208,
														"name": "adminRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 195,
														"src": "5838:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "5813:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 210,
												"nodeType": "ExpressionStatement",
												"src": "5813:34:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 212,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 193,
															"src": "5879:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 213,
															"name": "previousAdminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 199,
															"src": "5885:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 214,
															"name": "adminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 195,
															"src": "5904:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 211,
														"name": "RoleAdminChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 318,
														"src": "5862:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32,bytes32,bytes32)"
														}
													},
													"id": 215,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5862:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 216,
												"nodeType": "EmitStatement",
												"src": "5857:57:0"
											}
										]
									},
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "5555:114:0",
										"text": " @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."
									},
									"id": 218,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setRoleAdmin",
									"nameLocation": "5683:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5705:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 218,
												"src": "5697:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 192,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5697:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "adminRole",
												"nameLocation": "5719:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 218,
												"src": "5711:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 194,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5711:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5696:33:0"
									},
									"returnParameters": {
										"id": 197,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5747:0:0"
									},
									"scope": 296,
									"src": "5674:247:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 256,
										"nodeType": "Block",
										"src": "6238:233:0",
										"statements": [
											{
												"condition": {
													"id": 232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "6252:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 229,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 221,
																"src": "6261:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 230,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 223,
																"src": "6267:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 228,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 81,
															"src": "6253:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 231,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6253:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 254,
													"nodeType": "Block",
													"src": "6428:37:0",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 252,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6449:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 227,
															"id": 253,
															"nodeType": "Return",
															"src": "6442:12:0"
														}
													]
												},
												"id": 255,
												"nodeType": "IfStatement",
												"src": "6248:217:0",
												"trueBody": {
													"id": 251,
													"nodeType": "Block",
													"src": "6277:145:0",
													"statements": [
														{
															"expression": {
																"id": 240,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 233,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 27,
																				"src": "6291:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$22_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 235,
																			"indexExpression": {
																				"id": 234,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 221,
																				"src": "6298:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6291:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$22_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 236,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6304:7:0",
																		"memberName": "hasRole",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 19,
																		"src": "6291:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 238,
																	"indexExpression": {
																		"id": 237,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 223,
																		"src": "6312:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6291:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 239,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6323:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "6291:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 241,
															"nodeType": "ExpressionStatement",
															"src": "6291:36:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 243,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 221,
																		"src": "6358:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 244,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 223,
																		"src": "6364:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 245,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1232,
																			"src": "6373:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 246,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6373:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 242,
																	"name": "RoleGranted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 327,
																	"src": "6346:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 247,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6346:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 248,
															"nodeType": "EmitStatement",
															"src": "6341:45:0"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 249,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6407:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 227,
															"id": 250,
															"nodeType": "Return",
															"src": "6400:11:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 219,
										"nodeType": "StructuredDocumentation",
										"src": "5927:223:0",
										"text": " @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n Internal function without access restriction.\n May emit a {RoleGranted} event."
									},
									"id": 257,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_grantRole",
									"nameLocation": "6164:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6183:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "6175:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 220,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6175:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6197:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "6189:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 222,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6189:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6174:31:0"
									},
									"returnParameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "6232:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 225,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6232:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6231:6:0"
									},
									"scope": 296,
									"src": "6155:316:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 294,
										"nodeType": "Block",
										"src": "6792:233:0",
										"statements": [
											{
												"condition": {
													"arguments": [
														{
															"id": 268,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 260,
															"src": "6814:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 269,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 262,
															"src": "6820:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 267,
														"name": "hasRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 81,
														"src": "6806:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) view returns (bool)"
														}
													},
													"id": 270,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6806:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 292,
													"nodeType": "Block",
													"src": "6982:37:0",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 290,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7003:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 266,
															"id": 291,
															"nodeType": "Return",
															"src": "6996:12:0"
														}
													]
												},
												"id": 293,
												"nodeType": "IfStatement",
												"src": "6802:217:0",
												"trueBody": {
													"id": 289,
													"nodeType": "Block",
													"src": "6830:146:0",
													"statements": [
														{
															"expression": {
																"id": 278,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 271,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 27,
																				"src": "6844:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$22_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 273,
																			"indexExpression": {
																				"id": 272,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 260,
																				"src": "6851:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6844:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$22_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 274,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6857:7:0",
																		"memberName": "hasRole",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 19,
																		"src": "6844:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 276,
																	"indexExpression": {
																		"id": 275,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 262,
																		"src": "6865:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6844:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 277,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6876:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "6844:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 279,
															"nodeType": "ExpressionStatement",
															"src": "6844:37:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 281,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 260,
																		"src": "6912:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 282,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 262,
																		"src": "6918:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 283,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1232,
																			"src": "6927:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 284,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6927:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 280,
																	"name": "RoleRevoked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 336,
																	"src": "6900:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 285,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6900:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 286,
															"nodeType": "EmitStatement",
															"src": "6895:45:0"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 287,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6961:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 266,
															"id": 288,
															"nodeType": "Return",
															"src": "6954:11:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 258,
										"nodeType": "StructuredDocumentation",
										"src": "6477:226:0",
										"text": " @dev Attempts to revoke `role` from `account` and returns a boolean indicating if `role` was revoked.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."
									},
									"id": 295,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revokeRole",
									"nameLocation": "6717:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 260,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6737:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "6729:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 259,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6729:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6751:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "6743:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6743:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6728:31:0"
									},
									"returnParameters": {
										"id": 266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "6786:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 264,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6786:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6785:6:0"
									},
									"scope": 296,
									"src": "6708:317:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 297,
							"src": "1962:5065:0",
							"usedErrors": [
								306,
								309
							],
							"usedEvents": [
								318,
								327,
								336
							]
						}
					],
					"src": "108:6920:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
					"exportedSymbols": {
						"IAccessControl": [
							379
						]
					},
					"id": 380,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 298,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IAccessControl",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 299,
								"nodeType": "StructuredDocumentation",
								"src": "135:90:1",
								"text": " @dev External interface of AccessControl declared to support ERC-165 detection."
							},
							"fullyImplemented": false,
							"id": 379,
							"linearizedBaseContracts": [
								379
							],
							"name": "IAccessControl",
							"nameLocation": "236:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 300,
										"nodeType": "StructuredDocumentation",
										"src": "257:56:1",
										"text": " @dev The `account` is missing a role."
									},
									"errorSelector": "e2517d3f",
									"id": 306,
									"name": "AccessControlUnauthorizedAccount",
									"nameLocation": "324:32:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 305,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 302,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "365:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 306,
												"src": "357:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 301,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "357:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 304,
												"mutability": "mutable",
												"name": "neededRole",
												"nameLocation": "382:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 306,
												"src": "374:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 303,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "374:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "356:37:1"
									},
									"src": "318:76:1"
								},
								{
									"documentation": {
										"id": 307,
										"nodeType": "StructuredDocumentation",
										"src": "400:148:1",
										"text": " @dev The caller of a function is not the expected one.\n NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
									},
									"errorSelector": "6697b232",
									"id": 309,
									"name": "AccessControlBadConfirmation",
									"nameLocation": "559:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 308,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "587:2:1"
									},
									"src": "553:37:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 310,
										"nodeType": "StructuredDocumentation",
										"src": "596:254:1",
										"text": " @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted to signal this."
									},
									"eventSelector": "bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff",
									"id": 318,
									"name": "RoleAdminChanged",
									"nameLocation": "861:16:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 317,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "894:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "878:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 311,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "878:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 314,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousAdminRole",
												"nameLocation": "916:17:1",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "900:33:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 313,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "900:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 316,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAdminRole",
												"nameLocation": "951:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "935:28:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 315,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "877:87:1"
									},
									"src": "855:110:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 319,
										"nodeType": "StructuredDocumentation",
										"src": "971:295:1",
										"text": " @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
									},
									"eventSelector": "2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d",
									"id": 327,
									"name": "RoleGranted",
									"nameLocation": "1277:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 321,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1305:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "1289:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 320,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1289:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 323,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1327:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "1311:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 322,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1311:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 325,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1352:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "1336:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 324,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1336:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1288:71:1"
									},
									"src": "1271:89:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 328,
										"nodeType": "StructuredDocumentation",
										"src": "1366:275:1",
										"text": " @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
									},
									"eventSelector": "f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b",
									"id": 336,
									"name": "RoleRevoked",
									"nameLocation": "1652:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 335,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 330,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1680:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1664:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 329,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1664:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 332,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1702:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1686:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 331,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1686:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 334,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1727:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1711:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 333,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1711:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1663:71:1"
									},
									"src": "1646:89:1"
								},
								{
									"documentation": {
										"id": 337,
										"nodeType": "StructuredDocumentation",
										"src": "1741:76:1",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 346,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "1831:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1847:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "1839:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 338,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1839:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1861:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "1853:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 340,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1853:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1838:31:1"
									},
									"returnParameters": {
										"id": 345,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 344,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "1893:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 343,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1893:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1892:6:1"
									},
									"scope": 379,
									"src": "1822:77:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 347,
										"nodeType": "StructuredDocumentation",
										"src": "1905:184:1",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 354,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "2103:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2124:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "2116:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 348,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2116:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2115:14:1"
									},
									"returnParameters": {
										"id": 353,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 352,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "2153:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 351,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2153:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2152:9:1"
									},
									"scope": 379,
									"src": "2094:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 355,
										"nodeType": "StructuredDocumentation",
										"src": "2168:239:1",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "2f2ff15d",
									"id": 362,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "grantRole",
									"nameLocation": "2421:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 357,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2439:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 362,
												"src": "2431:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 356,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2431:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 359,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2453:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 362,
												"src": "2445:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 358,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2445:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2430:31:1"
									},
									"returnParameters": {
										"id": 361,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2470:0:1"
									},
									"scope": 379,
									"src": "2412:59:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 363,
										"nodeType": "StructuredDocumentation",
										"src": "2477:223:1",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "d547741f",
									"id": 370,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "revokeRole",
									"nameLocation": "2714:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 365,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2733:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 370,
												"src": "2725:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 364,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2747:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 370,
												"src": "2739:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 366,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2739:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2724:31:1"
									},
									"returnParameters": {
										"id": 369,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2764:0:1"
									},
									"scope": 379,
									"src": "2705:60:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 371,
										"nodeType": "StructuredDocumentation",
										"src": "2771:491:1",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`."
									},
									"functionSelector": "36568abe",
									"id": 378,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "3276:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 373,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3297:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 378,
												"src": "3289:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 372,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3289:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "callerConfirmation",
												"nameLocation": "3311:18:1",
												"nodeType": "VariableDeclaration",
												"scope": 378,
												"src": "3303:26:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 374,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3303:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3288:42:1"
									},
									"returnParameters": {
										"id": 377,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3339:0:1"
									},
									"scope": 379,
									"src": "3267:73:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 380,
							"src": "226:3116:1",
							"usedErrors": [
								306,
								309
							],
							"usedEvents": [
								318,
								327,
								336
							]
						}
					],
					"src": "109:3234:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
					"exportedSymbols": {
						"IERC1363": [
							461
						],
						"IERC165": [
							1286
						],
						"IERC20": [
							720
						]
					},
					"id": 462,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 381,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 383,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 462,
							"sourceUnit": 470,
							"src": "133:36:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 382,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 720,
										"src": "141:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 385,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 462,
							"sourceUnit": 466,
							"src": "170:38:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 384,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1286,
										"src": "178:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 387,
										"name": "IERC20",
										"nameLocations": [
											"590:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 720,
										"src": "590:6:2"
									},
									"id": 388,
									"nodeType": "InheritanceSpecifier",
									"src": "590:6:2"
								},
								{
									"baseName": {
										"id": 389,
										"name": "IERC165",
										"nameLocations": [
											"598:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1286,
										"src": "598:7:2"
									},
									"id": 390,
									"nodeType": "InheritanceSpecifier",
									"src": "598:7:2"
								}
							],
							"canonicalName": "IERC1363",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 386,
								"nodeType": "StructuredDocumentation",
								"src": "210:357:2",
								"text": " @title IERC1363\n @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction."
							},
							"fullyImplemented": false,
							"id": 461,
							"linearizedBaseContracts": [
								461,
								1286,
								720
							],
							"name": "IERC1363",
							"nameLocation": "578:8:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 391,
										"nodeType": "StructuredDocumentation",
										"src": "1148:370:2",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "1296ee62",
									"id": 400,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "1532:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 396,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1556:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 400,
												"src": "1548:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 392,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1548:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 395,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1568:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 400,
												"src": "1560:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 394,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1560:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1547:27:2"
									},
									"returnParameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 400,
												"src": "1593:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 397,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1593:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1592:6:2"
									},
									"scope": 461,
									"src": "1523:76:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 401,
										"nodeType": "StructuredDocumentation",
										"src": "1605:453:2",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "4000aea0",
									"id": 412,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "2072:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 408,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 403,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2096:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 412,
												"src": "2088:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 402,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2088:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 405,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2108:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 412,
												"src": "2100:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 404,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2100:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 407,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2130:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 412,
												"src": "2115:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 406,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2115:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2087:48:2"
									},
									"returnParameters": {
										"id": 411,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 410,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 412,
												"src": "2154:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 409,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2154:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2153:6:2"
									},
									"scope": 461,
									"src": "2063:97:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 413,
										"nodeType": "StructuredDocumentation",
										"src": "2166:453:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "d8fbe994",
									"id": 424,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "2633:19:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 420,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 415,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2661:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 424,
												"src": "2653:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 414,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2653:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2675:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 424,
												"src": "2667:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 416,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2667:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 419,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2687:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 424,
												"src": "2679:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 418,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2679:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2652:41:2"
									},
									"returnParameters": {
										"id": 423,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 422,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 424,
												"src": "2712:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 421,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2712:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:6:2"
									},
									"scope": 461,
									"src": "2624:94:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 425,
										"nodeType": "StructuredDocumentation",
										"src": "2724:536:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "c1d34b89",
									"id": 438,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "3274:19:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 434,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 427,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3302:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 438,
												"src": "3294:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 426,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3294:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3316:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 438,
												"src": "3308:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 428,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3308:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3328:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 438,
												"src": "3320:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 430,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3320:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 433,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3350:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 438,
												"src": "3335:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 432,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3335:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3293:62:2"
									},
									"returnParameters": {
										"id": 437,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 436,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 438,
												"src": "3374:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 435,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3374:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3373:6:2"
									},
									"scope": 461,
									"src": "3265:115:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 439,
										"nodeType": "StructuredDocumentation",
										"src": "3386:390:2",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "3177029f",
									"id": 448,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "3790:14:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 441,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3813:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 448,
												"src": "3805:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 440,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3805:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 443,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3830:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 448,
												"src": "3822:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 442,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3822:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3804:32:2"
									},
									"returnParameters": {
										"id": 447,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 446,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 448,
												"src": "3855:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 445,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3855:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3854:6:2"
									},
									"scope": 461,
									"src": "3781:80:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 449,
										"nodeType": "StructuredDocumentation",
										"src": "3867:478:2",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @param data Additional data with no specified format, sent in call to `spender`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "cae9ca51",
									"id": 460,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "4359:14:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 456,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 451,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4382:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 460,
												"src": "4374:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 450,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4374:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4399:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 460,
												"src": "4391:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 452,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4391:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4421:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 460,
												"src": "4406:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 454,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4406:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4373:53:2"
									},
									"returnParameters": {
										"id": 459,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 458,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 460,
												"src": "4445:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 457,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4445:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4444:6:2"
									},
									"scope": 461,
									"src": "4350:101:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 462,
							"src": "568:3885:2",
							"usedErrors": [],
							"usedEvents": [
								654,
								663
							]
						}
					],
					"src": "107:4347:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1286
						]
					},
					"id": 466,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 463,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "106:25:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../utils/introspection/IERC165.sol",
							"id": 465,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 466,
							"sourceUnit": 1287,
							"src": "133:59:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 464,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1286,
										"src": "141:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "106:87:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							720
						]
					},
					"id": 470,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 467,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "105:25:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../token/ERC20/IERC20.sol",
							"id": 469,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 470,
							"sourceUnit": 721,
							"src": "132:49:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 468,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 720,
										"src": "140:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "105:77:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/security/Pausable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/Pausable.sol",
					"exportedSymbols": {
						"Context": [
							1250
						],
						"Pausable": [
							577
						]
					},
					"id": 578,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 471,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "105:23:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 472,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 578,
							"sourceUnit": 1251,
							"src": "130:30:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 474,
										"name": "Context",
										"nameLocations": [
											"632:7:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1250,
										"src": "632:7:5"
									},
									"id": 475,
									"nodeType": "InheritanceSpecifier",
									"src": "632:7:5"
								}
							],
							"canonicalName": "Pausable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 473,
								"nodeType": "StructuredDocumentation",
								"src": "162:439:5",
								"text": " @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."
							},
							"fullyImplemented": true,
							"id": 577,
							"linearizedBaseContracts": [
								577,
								1250
							],
							"name": "Pausable",
							"nameLocation": "620:8:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 476,
										"nodeType": "StructuredDocumentation",
										"src": "646:73:5",
										"text": " @dev Emitted when the pause is triggered by `account`."
									},
									"eventSelector": "62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258",
									"id": 480,
									"name": "Paused",
									"nameLocation": "730:6:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 479,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 478,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "745:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "737:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 477,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "737:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "736:17:5"
									},
									"src": "724:30:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 481,
										"nodeType": "StructuredDocumentation",
										"src": "760:70:5",
										"text": " @dev Emitted when the pause is lifted by `account`."
									},
									"eventSelector": "5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa",
									"id": 485,
									"name": "Unpaused",
									"nameLocation": "841:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 484,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 483,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "858:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 485,
												"src": "850:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 482,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "850:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "849:17:5"
									},
									"src": "835:32:5"
								},
								{
									"constant": false,
									"id": 487,
									"mutability": "mutable",
									"name": "_paused",
									"nameLocation": "886:7:5",
									"nodeType": "VariableDeclaration",
									"scope": 577,
									"src": "873:20:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 486,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "873:4:5",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 495,
										"nodeType": "Block",
										"src": "986:32:5",
										"statements": [
											{
												"expression": {
													"id": 493,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 491,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 487,
														"src": "996:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 492,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1006:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "996:15:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 494,
												"nodeType": "ExpressionStatement",
												"src": "996:15:5"
											}
										]
									},
									"documentation": {
										"id": 488,
										"nodeType": "StructuredDocumentation",
										"src": "900:67:5",
										"text": " @dev Initializes the contract in unpaused state."
									},
									"id": 496,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 489,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "983:2:5"
									},
									"returnParameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "986:0:5"
									},
									"scope": 577,
									"src": "972:46:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 503,
										"nodeType": "Block",
										"src": "1229:47:5",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 499,
														"name": "_requireNotPaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 533,
														"src": "1239:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 500,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1239:19:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 501,
												"nodeType": "ExpressionStatement",
												"src": "1239:19:5"
											},
											{
												"id": 502,
												"nodeType": "PlaceholderStatement",
												"src": "1268:1:5"
											}
										]
									},
									"documentation": {
										"id": 497,
										"nodeType": "StructuredDocumentation",
										"src": "1024:175:5",
										"text": " @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."
									},
									"id": 504,
									"name": "whenNotPaused",
									"nameLocation": "1213:13:5",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 498,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1226:2:5"
									},
									"src": "1204:72:5",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 511,
										"nodeType": "Block",
										"src": "1476:44:5",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 507,
														"name": "_requirePaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 544,
														"src": "1486:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 508,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1486:16:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 509,
												"nodeType": "ExpressionStatement",
												"src": "1486:16:5"
											},
											{
												"id": 510,
												"nodeType": "PlaceholderStatement",
												"src": "1512:1:5"
											}
										]
									},
									"documentation": {
										"id": 505,
										"nodeType": "StructuredDocumentation",
										"src": "1282:167:5",
										"text": " @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."
									},
									"id": 512,
									"name": "whenPaused",
									"nameLocation": "1463:10:5",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 506,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1473:2:5"
									},
									"src": "1454:66:5",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 520,
										"nodeType": "Block",
										"src": "1668:31:5",
										"statements": [
											{
												"expression": {
													"id": 518,
													"name": "_paused",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 487,
													"src": "1685:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 517,
												"id": 519,
												"nodeType": "Return",
												"src": "1678:14:5"
											}
										]
									},
									"documentation": {
										"id": 513,
										"nodeType": "StructuredDocumentation",
										"src": "1526:84:5",
										"text": " @dev Returns true if the contract is paused, and false otherwise."
									},
									"functionSelector": "5c975abb",
									"id": 521,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "paused",
									"nameLocation": "1624:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 514,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1630:2:5"
									},
									"returnParameters": {
										"id": 517,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 516,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 521,
												"src": "1662:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 515,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1662:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1661:6:5"
									},
									"scope": 577,
									"src": "1615:84:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 532,
										"nodeType": "Block",
										"src": "1818:55:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 528,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "1836:9:5",
															"subExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 526,
																	"name": "paused",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 521,
																	"src": "1837:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																		"typeString": "function () view returns (bool)"
																	}
																},
																"id": 527,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1837:8:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a20706175736564",
															"id": 529,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1847:18:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															},
															"value": "Pausable: paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															}
														],
														"id": 525,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1828:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 530,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1828:38:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 531,
												"nodeType": "ExpressionStatement",
												"src": "1828:38:5"
											}
										]
									},
									"documentation": {
										"id": 522,
										"nodeType": "StructuredDocumentation",
										"src": "1705:57:5",
										"text": " @dev Throws if the contract is paused."
									},
									"id": 533,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireNotPaused",
									"nameLocation": "1776:17:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 523,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1793:2:5"
									},
									"returnParameters": {
										"id": 524,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1818:0:5"
									},
									"scope": 577,
									"src": "1767:106:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 543,
										"nodeType": "Block",
										"src": "1993:58:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 538,
																"name": "paused",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 521,
																"src": "2011:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																	"typeString": "function () view returns (bool)"
																}
															},
															"id": 539,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2011:8:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a206e6f7420706175736564",
															"id": 540,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2021:22:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															},
															"value": "Pausable: not paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															}
														],
														"id": 537,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2003:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 541,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2003:41:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 542,
												"nodeType": "ExpressionStatement",
												"src": "2003:41:5"
											}
										]
									},
									"documentation": {
										"id": 534,
										"nodeType": "StructuredDocumentation",
										"src": "1879:61:5",
										"text": " @dev Throws if the contract is not paused."
									},
									"id": 544,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requirePaused",
									"nameLocation": "1954:14:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 535,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1968:2:5"
									},
									"returnParameters": {
										"id": 536,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1993:0:5"
									},
									"scope": 577,
									"src": "1945:106:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 559,
										"nodeType": "Block",
										"src": "2235:66:5",
										"statements": [
											{
												"expression": {
													"id": 552,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 550,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 487,
														"src": "2245:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 551,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2255:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2245:14:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 553,
												"nodeType": "ExpressionStatement",
												"src": "2245:14:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 555,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1232,
																"src": "2281:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 556,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2281:12:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 554,
														"name": "Paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 480,
														"src": "2274:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 557,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2274:20:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 558,
												"nodeType": "EmitStatement",
												"src": "2269:25:5"
											}
										]
									},
									"documentation": {
										"id": 545,
										"nodeType": "StructuredDocumentation",
										"src": "2057:124:5",
										"text": " @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."
									},
									"id": 560,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 548,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 547,
												"name": "whenNotPaused",
												"nameLocations": [
													"2221:13:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 504,
												"src": "2221:13:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "2221:13:5"
										}
									],
									"name": "_pause",
									"nameLocation": "2195:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 546,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2201:2:5"
									},
									"returnParameters": {
										"id": 549,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2235:0:5"
									},
									"scope": 577,
									"src": "2186:115:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 575,
										"nodeType": "Block",
										"src": "2481:69:5",
										"statements": [
											{
												"expression": {
													"id": 568,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 566,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 487,
														"src": "2491:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 567,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2501:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "2491:15:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 569,
												"nodeType": "ExpressionStatement",
												"src": "2491:15:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 571,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1232,
																"src": "2530:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 572,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2530:12:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 570,
														"name": "Unpaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 485,
														"src": "2521:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 573,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2521:22:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 574,
												"nodeType": "EmitStatement",
												"src": "2516:27:5"
											}
										]
									},
									"documentation": {
										"id": 561,
										"nodeType": "StructuredDocumentation",
										"src": "2307:121:5",
										"text": " @dev Returns to normal state.\n Requirements:\n - The contract must be paused."
									},
									"id": 576,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 564,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 563,
												"name": "whenPaused",
												"nameLocations": [
													"2470:10:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 512,
												"src": "2470:10:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "2470:10:5"
										}
									],
									"name": "_unpause",
									"nameLocation": "2442:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 562,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2450:2:5"
									},
									"returnParameters": {
										"id": 565,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2481:0:5"
									},
									"scope": 577,
									"src": "2433:117:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 578,
							"src": "602:1950:5",
							"usedErrors": [],
							"usedEvents": [
								480,
								485
							]
						}
					],
					"src": "105:2448:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							642
						]
					},
					"id": 643,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 579,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:6"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 580,
								"nodeType": "StructuredDocumentation",
								"src": "137:750:6",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 642,
							"linearizedBaseContracts": [
								642
							],
							"name": "ReentrancyGuard",
							"nameLocation": "906:15:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 583,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1701:12:6",
									"nodeType": "VariableDeclaration",
									"scope": 642,
									"src": "1676:41:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 581,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1676:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 582,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1716:1:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 586,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1748:8:6",
									"nodeType": "VariableDeclaration",
									"scope": 642,
									"src": "1723:37:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 584,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1723:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 585,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1759:1:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 588,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1783:7:6",
									"nodeType": "VariableDeclaration",
									"scope": 642,
									"src": "1767:23:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 587,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1767:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 595,
										"nodeType": "Block",
										"src": "1811:39:6",
										"statements": [
											{
												"expression": {
													"id": 593,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 591,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 588,
														"src": "1821:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 592,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 583,
														"src": "1831:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1821:22:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 594,
												"nodeType": "ExpressionStatement",
												"src": "1821:22:6"
											}
										]
									},
									"id": 596,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 589,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1808:2:6"
									},
									"returnParameters": {
										"id": 590,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1811:0:6"
									},
									"scope": 642,
									"src": "1797:53:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 606,
										"nodeType": "Block",
										"src": "2251:79:6",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 599,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 622,
														"src": "2261:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 600,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2261:21:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 601,
												"nodeType": "ExpressionStatement",
												"src": "2261:21:6"
											},
											{
												"id": 602,
												"nodeType": "PlaceholderStatement",
												"src": "2292:1:6"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 603,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 630,
														"src": "2303:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 604,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2303:20:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 605,
												"nodeType": "ExpressionStatement",
												"src": "2303:20:6"
											}
										]
									},
									"documentation": {
										"id": 597,
										"nodeType": "StructuredDocumentation",
										"src": "1856:366:6",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 607,
									"name": "nonReentrant",
									"nameLocation": "2236:12:6",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 598,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2248:2:6"
									},
									"src": "2227:103:6",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 621,
										"nodeType": "Block",
										"src": "2375:248:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 613,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 611,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 588,
																"src": "2468:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 612,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 586,
																"src": "2479:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2468:19:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 614,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2489:33:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 610,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2460:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 615,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2460:63:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 616,
												"nodeType": "ExpressionStatement",
												"src": "2460:63:6"
											},
											{
												"expression": {
													"id": 619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 617,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 588,
														"src": "2598:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 618,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 586,
														"src": "2608:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2598:18:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 620,
												"nodeType": "ExpressionStatement",
												"src": "2598:18:6"
											}
										]
									},
									"id": 622,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2345:19:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 608,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2364:2:6"
									},
									"returnParameters": {
										"id": 609,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2375:0:6"
									},
									"scope": 642,
									"src": "2336:287:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 629,
										"nodeType": "Block",
										"src": "2667:171:6",
										"statements": [
											{
												"expression": {
													"id": 627,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 625,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 588,
														"src": "2809:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 626,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 583,
														"src": "2819:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2809:22:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 628,
												"nodeType": "ExpressionStatement",
												"src": "2809:22:6"
											}
										]
									},
									"id": 630,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2638:18:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 623,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2656:2:6"
									},
									"returnParameters": {
										"id": 624,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2667:0:6"
									},
									"scope": 642,
									"src": "2629:209:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 640,
										"nodeType": "Block",
										"src": "3081:43:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 638,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 636,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 588,
														"src": "3098:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 637,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 586,
														"src": "3109:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3098:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 635,
												"id": 639,
												"nodeType": "Return",
												"src": "3091:26:6"
											}
										]
									},
									"documentation": {
										"id": 631,
										"nodeType": "StructuredDocumentation",
										"src": "2844:168:6",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 641,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3026:23:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 632,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3049:2:6"
									},
									"returnParameters": {
										"id": 635,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 634,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 641,
												"src": "3075:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 633,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3075:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3074:6:6"
									},
									"scope": 642,
									"src": "3017:107:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 643,
							"src": "888:2238:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "112:3015:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							720
						]
					},
					"id": 721,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 644,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "106:25:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 645,
								"nodeType": "StructuredDocumentation",
								"src": "133:71:7",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 720,
							"linearizedBaseContracts": [
								720
							],
							"name": "IERC20",
							"nameLocation": "215:6:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 646,
										"nodeType": "StructuredDocumentation",
										"src": "228:158:7",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 654,
									"name": "Transfer",
									"nameLocation": "397:8:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 653,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 648,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "422:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 654,
												"src": "406:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 647,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "406:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 650,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "444:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 654,
												"src": "428:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 649,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "428:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 652,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "456:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 654,
												"src": "448:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 651,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "448:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "405:57:7"
									},
									"src": "391:72:7"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 655,
										"nodeType": "StructuredDocumentation",
										"src": "469:148:7",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 663,
									"name": "Approval",
									"nameLocation": "628:8:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 662,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 657,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "653:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "637:21:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 656,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "637:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 659,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "676:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "660:23:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 658,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "660:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 661,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "693:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "685:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 660,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "636:63:7"
									},
									"src": "622:78:7"
								},
								{
									"documentation": {
										"id": 664,
										"nodeType": "StructuredDocumentation",
										"src": "706:65:7",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 669,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "785:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 665,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "796:2:7"
									},
									"returnParameters": {
										"id": 668,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 667,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 669,
												"src": "822:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 666,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "822:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "821:9:7"
									},
									"scope": 720,
									"src": "776:55:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 670,
										"nodeType": "StructuredDocumentation",
										"src": "837:71:7",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 677,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "922:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 673,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 672,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "940:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 677,
												"src": "932:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 671,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "932:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "931:17:7"
									},
									"returnParameters": {
										"id": 676,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 677,
												"src": "972:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 674,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "972:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "971:9:7"
									},
									"scope": 720,
									"src": "913:68:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 678,
										"nodeType": "StructuredDocumentation",
										"src": "987:213:7",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 687,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1214:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 683,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 680,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1231:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 687,
												"src": "1223:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 679,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 682,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1243:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 687,
												"src": "1235:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 681,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1235:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1222:27:7"
									},
									"returnParameters": {
										"id": 686,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 685,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 687,
												"src": "1268:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 684,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:6:7"
									},
									"scope": 720,
									"src": "1205:69:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 688,
										"nodeType": "StructuredDocumentation",
										"src": "1280:264:7",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 697,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1558:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 693,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 690,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1576:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 697,
												"src": "1568:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 689,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1568:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 692,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1591:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 697,
												"src": "1583:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 691,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1583:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1567:32:7"
									},
									"returnParameters": {
										"id": 696,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 697,
												"src": "1623:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 694,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1623:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1622:9:7"
									},
									"scope": 720,
									"src": "1549:83:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 698,
										"nodeType": "StructuredDocumentation",
										"src": "1638:667:7",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 707,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2319:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 703,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 700,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2335:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 707,
												"src": "2327:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 699,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2327:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 702,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2352:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 707,
												"src": "2344:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 701,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2344:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2326:32:7"
									},
									"returnParameters": {
										"id": 706,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 705,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 707,
												"src": "2377:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 704,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2377:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2376:6:7"
									},
									"scope": 720,
									"src": "2310:73:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 708,
										"nodeType": "StructuredDocumentation",
										"src": "2389:297:7",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 719,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2700:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 715,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 710,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2721:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 719,
												"src": "2713:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 709,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2713:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 712,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2735:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 719,
												"src": "2727:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 711,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2727:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 714,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2747:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 719,
												"src": "2739:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 713,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2739:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2712:41:7"
									},
									"returnParameters": {
										"id": 718,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 717,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 719,
												"src": "2772:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 716,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2772:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2771:6:7"
									},
									"scope": 720,
									"src": "2691:87:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 721,
							"src": "205:2575:7",
							"usedErrors": [],
							"usedEvents": [
								654,
								663
							]
						}
					],
					"src": "106:2675:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
					"exportedSymbols": {
						"IERC20Permit": [
							756
						]
					},
					"id": 757,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 722,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "123:25:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Permit",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 723,
								"nodeType": "StructuredDocumentation",
								"src": "150:1965:8",
								"text": " @dev Interface of the ERC-20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[ERC-2612].\n Adds the {permit} method, which can be used to change an account's ERC-20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all.\n ==== Security Considerations\n There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n considered as an intention to spend the allowance in any specific way. The second is that because permits have\n built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n generally recommended is:\n ```solidity\n function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n     doThing(..., value);\n }\n function doThing(..., uint256 value) public {\n     token.safeTransferFrom(msg.sender, address(this), value);\n     ...\n }\n ```\n Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n {SafeERC20-safeTransferFrom}).\n Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n contracts should have entry points that don't rely on permit."
							},
							"fullyImplemented": false,
							"id": 756,
							"linearizedBaseContracts": [
								756
							],
							"name": "IERC20Permit",
							"nameLocation": "2126:12:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 724,
										"nodeType": "StructuredDocumentation",
										"src": "2145:850:8",
										"text": " @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section].\n CAUTION: See Security Considerations above."
									},
									"functionSelector": "d505accf",
									"id": 741,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nameLocation": "3009:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 739,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 726,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3033:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 741,
												"src": "3025:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 725,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3025:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 728,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3056:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 741,
												"src": "3048:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 727,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3048:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 730,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3081:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 741,
												"src": "3073:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 729,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3073:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 732,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "3104:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 741,
												"src": "3096:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 731,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3096:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 734,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "3128:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 741,
												"src": "3122:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 733,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3122:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 736,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3147:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 741,
												"src": "3139:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 735,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3139:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 738,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "3166:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 741,
												"src": "3158:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 737,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3158:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3015:158:8"
									},
									"returnParameters": {
										"id": 740,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3182:0:8"
									},
									"scope": 756,
									"src": "3000:183:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 742,
										"nodeType": "StructuredDocumentation",
										"src": "3189:294:8",
										"text": " @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."
									},
									"functionSelector": "7ecebe00",
									"id": 749,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nameLocation": "3497:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 745,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 744,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3512:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 749,
												"src": "3504:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 743,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3504:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3503:15:8"
									},
									"returnParameters": {
										"id": 748,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 747,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 749,
												"src": "3542:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 746,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3542:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3541:9:8"
									},
									"scope": 756,
									"src": "3488:63:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 750,
										"nodeType": "StructuredDocumentation",
										"src": "3557:128:8",
										"text": " @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
									},
									"functionSelector": "3644e515",
									"id": 755,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nameLocation": "3752:16:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 751,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3768:2:8"
									},
									"returnParameters": {
										"id": 754,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 755,
												"src": "3794:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 752,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3794:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3793:9:8"
									},
									"scope": 756,
									"src": "3743:60:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 757,
							"src": "2116:1689:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "123:3683:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"IERC1363": [
							461
						],
						"IERC20": [
							720
						],
						"SafeERC20": [
							1220
						]
					},
					"id": 1221,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 758,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:9"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 760,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1221,
							"sourceUnit": 721,
							"src": "141:37:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 759,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 720,
										"src": "149:6:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
							"file": "../../../interfaces/IERC1363.sol",
							"id": 762,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1221,
							"sourceUnit": 462,
							"src": "179:58:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 761,
										"name": "IERC1363",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 461,
										"src": "187:8:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 763,
								"nodeType": "StructuredDocumentation",
								"src": "239:458:9",
								"text": " @title SafeERC20\n @dev Wrappers around ERC-20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 1220,
							"linearizedBaseContracts": [
								1220
							],
							"name": "SafeERC20",
							"nameLocation": "706:9:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 764,
										"nodeType": "StructuredDocumentation",
										"src": "722:65:9",
										"text": " @dev An operation with an ERC-20 token failed."
									},
									"errorSelector": "5274afe7",
									"id": 768,
									"name": "SafeERC20FailedOperation",
									"nameLocation": "798:24:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 767,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 766,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "831:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 768,
												"src": "823:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 765,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "823:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "822:15:9"
									},
									"src": "792:46:9"
								},
								{
									"documentation": {
										"id": 769,
										"nodeType": "StructuredDocumentation",
										"src": "844:71:9",
										"text": " @dev Indicates a failed `decreaseAllowance` request."
									},
									"errorSelector": "e570110f",
									"id": 777,
									"name": "SafeERC20FailedDecreaseAllowance",
									"nameLocation": "926:32:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 776,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 771,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "967:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 777,
												"src": "959:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 770,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "959:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 773,
												"mutability": "mutable",
												"name": "currentAllowance",
												"nameLocation": "984:16:9",
												"nodeType": "VariableDeclaration",
												"scope": 777,
												"src": "976:24:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 772,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "976:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 775,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "1010:17:9",
												"nodeType": "VariableDeclaration",
												"scope": 777,
												"src": "1002:25:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 774,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1002:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "958:70:9"
									},
									"src": "920:109:9"
								},
								{
									"body": {
										"id": 800,
										"nodeType": "Block",
										"src": "1291:88:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 789,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 781,
															"src": "1321:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$720",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 792,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 781,
																		"src": "1343:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$720",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 793,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1349:8:9",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 687,
																	"src": "1343:14:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 794,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 783,
																			"src": "1360:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 795,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 785,
																			"src": "1364:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 796,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1359:11:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 790,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1328:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 791,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1332:10:9",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1328:14:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 797,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1328:43:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$720",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 788,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1178,
														"src": "1301:19:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$720_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 798,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1301:71:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 799,
												"nodeType": "ExpressionStatement",
												"src": "1301:71:9"
											}
										]
									},
									"documentation": {
										"id": 778,
										"nodeType": "StructuredDocumentation",
										"src": "1035:179:9",
										"text": " @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 801,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "1228:12:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 786,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 781,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1248:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 801,
												"src": "1241:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$720",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 780,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 779,
														"name": "IERC20",
														"nameLocations": [
															"1241:6:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 720,
														"src": "1241:6:9"
													},
													"referencedDeclaration": 720,
													"src": "1241:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$720",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 783,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1263:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 801,
												"src": "1255:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 782,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1255:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 785,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1275:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 801,
												"src": "1267:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 784,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1267:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1240:41:9"
									},
									"returnParameters": {
										"id": 787,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1291:0:9"
									},
									"scope": 1220,
									"src": "1219:160:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 827,
										"nodeType": "Block",
										"src": "1708:98:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 815,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 805,
															"src": "1738:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$720",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 818,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 805,
																		"src": "1760:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$720",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 819,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1766:12:9",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 719,
																	"src": "1760:18:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 820,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 807,
																			"src": "1781:4:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 821,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 809,
																			"src": "1787:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 822,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 811,
																			"src": "1791:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 823,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1780:17:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 816,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1745:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 817,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1749:10:9",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1745:14:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 824,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1745:53:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$720",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 814,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1178,
														"src": "1718:19:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$720_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 825,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1718:81:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 826,
												"nodeType": "ExpressionStatement",
												"src": "1718:81:9"
											}
										]
									},
									"documentation": {
										"id": 802,
										"nodeType": "StructuredDocumentation",
										"src": "1385:228:9",
										"text": " @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."
									},
									"id": 828,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1627:16:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 812,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 805,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1651:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 828,
												"src": "1644:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$720",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 804,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 803,
														"name": "IERC20",
														"nameLocations": [
															"1644:6:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 720,
														"src": "1644:6:9"
													},
													"referencedDeclaration": 720,
													"src": "1644:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$720",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 807,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1666:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 828,
												"src": "1658:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 806,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1658:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 809,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1680:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 828,
												"src": "1672:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 808,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1672:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 811,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1692:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 828,
												"src": "1684:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 810,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1643:55:9"
									},
									"returnParameters": {
										"id": 813,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1708:0:9"
									},
									"scope": 1220,
									"src": "1618:188:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 853,
										"nodeType": "Block",
										"src": "2033:99:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 842,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 832,
															"src": "2074:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$720",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 845,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 832,
																		"src": "2096:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$720",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 846,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2102:8:9",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 687,
																	"src": "2096:14:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 847,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 834,
																			"src": "2113:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 848,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 836,
																			"src": "2117:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 849,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2112:11:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 843,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2081:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 844,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2085:10:9",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "2081:14:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 850,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2081:43:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$720",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 841,
														"name": "_callOptionalReturnBool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1219,
														"src": "2050:23:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$720_$_t_bytes_memory_ptr_$returns$_t_bool_$",
															"typeString": "function (contract IERC20,bytes memory) returns (bool)"
														}
													},
													"id": 851,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2050:75:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 840,
												"id": 852,
												"nodeType": "Return",
												"src": "2043:82:9"
											}
										]
									},
									"documentation": {
										"id": 829,
										"nodeType": "StructuredDocumentation",
										"src": "1812:126:9",
										"text": " @dev Variant of {safeTransfer} that returns a bool instead of reverting if the operation is not successful."
									},
									"id": 854,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySafeTransfer",
									"nameLocation": "1952:15:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 837,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1975:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1968:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$720",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 831,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 830,
														"name": "IERC20",
														"nameLocations": [
															"1968:6:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 720,
														"src": "1968:6:9"
													},
													"referencedDeclaration": 720,
													"src": "1968:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$720",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 834,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1990:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1982:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 833,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1982:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 836,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2002:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1994:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 835,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1994:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1967:41:9"
									},
									"returnParameters": {
										"id": 840,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 839,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "2027:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 838,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2027:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2026:6:9"
									},
									"scope": 1220,
									"src": "1943:189:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 882,
										"nodeType": "Block",
										"src": "2381:109:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 870,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 858,
															"src": "2422:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$720",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 873,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 858,
																		"src": "2444:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$720",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 874,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2450:12:9",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 719,
																	"src": "2444:18:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 875,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 860,
																			"src": "2465:4:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 876,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 862,
																			"src": "2471:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 877,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 864,
																			"src": "2475:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 878,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2464:17:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 871,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2429:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 872,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2433:10:9",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "2429:14:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 879,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2429:53:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$720",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 869,
														"name": "_callOptionalReturnBool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1219,
														"src": "2398:23:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$720_$_t_bytes_memory_ptr_$returns$_t_bool_$",
															"typeString": "function (contract IERC20,bytes memory) returns (bool)"
														}
													},
													"id": 880,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2398:85:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 868,
												"id": 881,
												"nodeType": "Return",
												"src": "2391:92:9"
											}
										]
									},
									"documentation": {
										"id": 855,
										"nodeType": "StructuredDocumentation",
										"src": "2138:130:9",
										"text": " @dev Variant of {safeTransferFrom} that returns a bool instead of reverting if the operation is not successful."
									},
									"id": 883,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySafeTransferFrom",
									"nameLocation": "2282:19:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 865,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 858,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2309:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 883,
												"src": "2302:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$720",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 857,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 856,
														"name": "IERC20",
														"nameLocations": [
															"2302:6:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 720,
														"src": "2302:6:9"
													},
													"referencedDeclaration": 720,
													"src": "2302:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$720",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 860,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2324:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 883,
												"src": "2316:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 859,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2316:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 862,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2338:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 883,
												"src": "2330:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 861,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2330:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 864,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 883,
												"src": "2342:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 863,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2301:55:9"
									},
									"returnParameters": {
										"id": 868,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 867,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 883,
												"src": "2375:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 866,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:9"
									},
									"scope": 1220,
									"src": "2273:217:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 913,
										"nodeType": "Block",
										"src": "3232:139:9",
										"statements": [
											{
												"assignments": [
													895
												],
												"declarations": [
													{
														"constant": false,
														"id": 895,
														"mutability": "mutable",
														"name": "oldAllowance",
														"nameLocation": "3250:12:9",
														"nodeType": "VariableDeclaration",
														"scope": 913,
														"src": "3242:20:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 894,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3242:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 904,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 900,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3289:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SafeERC20_$1220",
																		"typeString": "library SafeERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SafeERC20_$1220",
																		"typeString": "library SafeERC20"
																	}
																],
																"id": 899,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3281:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 898,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3281:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 901,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3281:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 902,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 889,
															"src": "3296:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 896,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 887,
															"src": "3265:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$720",
																"typeString": "contract IERC20"
															}
														},
														"id": 897,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3271:9:9",
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 697,
														"src": "3265:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 903,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3265:39:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3242:62:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 906,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 887,
															"src": "3327:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$720",
																"typeString": "contract IERC20"
															}
														},
														{
															"id": 907,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 889,
															"src": "3334:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 910,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 908,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 895,
																"src": "3343:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 909,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 891,
																"src": "3358:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3343:20:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$720",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 905,
														"name": "forceApprove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1004,
														"src": "3314:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$720_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 911,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3314:50:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 912,
												"nodeType": "ExpressionStatement",
												"src": "3314:50:9"
											}
										]
									},
									"documentation": {
										"id": 884,
										"nodeType": "StructuredDocumentation",
										"src": "2496:645:9",
										"text": " @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 914,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "3155:21:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 892,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 887,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3184:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 914,
												"src": "3177:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$720",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 886,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 885,
														"name": "IERC20",
														"nameLocations": [
															"3177:6:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 720,
														"src": "3177:6:9"
													},
													"referencedDeclaration": 720,
													"src": "3177:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$720",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 889,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3199:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 914,
												"src": "3191:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 888,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3191:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 891,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3216:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 914,
												"src": "3208:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 890,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3208:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3176:46:9"
									},
									"returnParameters": {
										"id": 893,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3232:0:9"
									},
									"scope": 1220,
									"src": "3146:225:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 956,
										"nodeType": "Block",
										"src": "4137:370:9",
										"statements": [
											{
												"id": 955,
												"nodeType": "UncheckedBlock",
												"src": "4147:354:9",
												"statements": [
													{
														"assignments": [
															926
														],
														"declarations": [
															{
																"constant": false,
																"id": 926,
																"mutability": "mutable",
																"name": "currentAllowance",
																"nameLocation": "4179:16:9",
																"nodeType": "VariableDeclaration",
																"scope": 955,
																"src": "4171:24:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 925,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4171:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 935,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 931,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4222:4:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$1220",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$1220",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 930,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4214:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 929,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4214:7:9",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 932,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4214:13:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 933,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 920,
																	"src": "4229:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 927,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 918,
																	"src": "4198:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$720",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 928,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4204:9:9",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 697,
																"src": "4198:15:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 934,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4198:39:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4171:66:9"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 938,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 936,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 926,
																"src": "4255:16:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 937,
																"name": "requestedDecrease",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 922,
																"src": "4274:17:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4255:36:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 946,
														"nodeType": "IfStatement",
														"src": "4251:160:9",
														"trueBody": {
															"id": 945,
															"nodeType": "Block",
															"src": "4293:118:9",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 940,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 920,
																				"src": "4351:7:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 941,
																				"name": "currentAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 926,
																				"src": "4360:16:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 942,
																				"name": "requestedDecrease",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 922,
																				"src": "4378:17:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 939,
																			"name": "SafeERC20FailedDecreaseAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 777,
																			"src": "4318:32:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																				"typeString": "function (address,uint256,uint256) pure"
																			}
																		},
																		"id": 943,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4318:78:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 944,
																	"nodeType": "RevertStatement",
																	"src": "4311:85:9"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 948,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 918,
																	"src": "4437:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$720",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"id": 949,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 920,
																	"src": "4444:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 952,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 950,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 926,
																		"src": "4453:16:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 951,
																		"name": "requestedDecrease",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 922,
																		"src": "4472:17:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4453:36:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$720",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 947,
																"name": "forceApprove",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1004,
																"src": "4424:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$720_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (contract IERC20,address,uint256)"
																}
															},
															"id": 953,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4424:66:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 954,
														"nodeType": "ExpressionStatement",
														"src": "4424:66:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 915,
										"nodeType": "StructuredDocumentation",
										"src": "3377:657:9",
										"text": " @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 957,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "4048:21:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 923,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 918,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4077:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 957,
												"src": "4070:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$720",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 917,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 916,
														"name": "IERC20",
														"nameLocations": [
															"4070:6:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 720,
														"src": "4070:6:9"
													},
													"referencedDeclaration": 720,
													"src": "4070:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$720",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 920,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4092:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 957,
												"src": "4084:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 919,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4084:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 922,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "4109:17:9",
												"nodeType": "VariableDeclaration",
												"scope": 957,
												"src": "4101:25:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 921,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4101:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4069:58:9"
									},
									"returnParameters": {
										"id": 924,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4137:0:9"
									},
									"scope": 1220,
									"src": "4039:468:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1003,
										"nodeType": "Block",
										"src": "5161:303:9",
										"statements": [
											{
												"assignments": [
													969
												],
												"declarations": [
													{
														"constant": false,
														"id": 969,
														"mutability": "mutable",
														"name": "approvalCall",
														"nameLocation": "5184:12:9",
														"nodeType": "VariableDeclaration",
														"scope": 1003,
														"src": "5171:25:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 968,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5171:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 978,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 972,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 961,
																"src": "5214:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$720",
																	"typeString": "contract IERC20"
																}
															},
															"id": 973,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5220:7:9",
															"memberName": "approve",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 707,
															"src": "5214:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															}
														},
														{
															"components": [
																{
																	"id": 974,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 963,
																	"src": "5230:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 975,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 965,
																	"src": "5239:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 976,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5229:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															},
															{
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														],
														"expression": {
															"id": 970,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "5199:3:9",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 971,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "5203:10:9",
														"memberName": "encodeCall",
														"nodeType": "MemberAccess",
														"src": "5199:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 977,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5199:47:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5171:75:9"
											},
											{
												"condition": {
													"id": 983,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5261:45:9",
													"subExpression": {
														"arguments": [
															{
																"id": 980,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 961,
																"src": "5286:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$720",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 981,
																"name": "approvalCall",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 969,
																"src": "5293:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$720",
																	"typeString": "contract IERC20"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 979,
															"name": "_callOptionalReturnBool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1219,
															"src": "5262:23:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$720_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																"typeString": "function (contract IERC20,bytes memory) returns (bool)"
															}
														},
														"id": 982,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5262:44:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1002,
												"nodeType": "IfStatement",
												"src": "5257:201:9",
												"trueBody": {
													"id": 1001,
													"nodeType": "Block",
													"src": "5308:150:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 985,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 961,
																		"src": "5342:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$720",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 988,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 961,
																					"src": "5364:5:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$720",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 989,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "5370:7:9",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 707,
																				"src": "5364:13:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 990,
																						"name": "spender",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 963,
																						"src": "5380:7:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"hexValue": "30",
																						"id": 991,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "5389:1:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					}
																				],
																				"id": 992,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "5379:12:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				},
																				{
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			],
																			"expression": {
																				"id": 986,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "5349:3:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 987,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "5353:10:9",
																			"memberName": "encodeCall",
																			"nodeType": "MemberAccess",
																			"src": "5349:14:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 993,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5349:43:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$720",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 984,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1178,
																	"src": "5322:19:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$720_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 994,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5322:71:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 995,
															"nodeType": "ExpressionStatement",
															"src": "5322:71:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 997,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 961,
																		"src": "5427:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$720",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"id": 998,
																		"name": "approvalCall",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 969,
																		"src": "5434:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$720",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 996,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1178,
																	"src": "5407:19:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$720_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 999,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5407:40:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1000,
															"nodeType": "ExpressionStatement",
															"src": "5407:40:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 958,
										"nodeType": "StructuredDocumentation",
										"src": "4513:566:9",
										"text": " @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT.\n NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n set here."
									},
									"id": 1004,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "forceApprove",
									"nameLocation": "5093:12:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 966,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 961,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5113:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1004,
												"src": "5106:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$720",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 960,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 959,
														"name": "IERC20",
														"nameLocations": [
															"5106:6:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 720,
														"src": "5106:6:9"
													},
													"referencedDeclaration": 720,
													"src": "5106:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$720",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 963,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5128:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1004,
												"src": "5120:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 962,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5120:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 965,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5145:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1004,
												"src": "5137:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 964,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5137:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5105:46:9"
									},
									"returnParameters": {
										"id": 967,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5161:0:9"
									},
									"scope": 1220,
									"src": "5084:380:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1046,
										"nodeType": "Block",
										"src": "5911:219:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1021,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1017,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1010,
																"src": "5925:2:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1018,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5928:4:9",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "5925:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1019,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5933:6:9",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5925:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1020,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5943:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5925:19:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 1035,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "6011:39:9",
														"subExpression": {
															"arguments": [
																{
																	"id": 1031,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1010,
																	"src": "6034:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1032,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1012,
																	"src": "6038:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1033,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1014,
																	"src": "6045:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 1029,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1008,
																	"src": "6012:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$461",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 1030,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6018:15:9",
																"memberName": "transferAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 412,
																"src": "6012:21:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 1034,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6012:38:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1044,
													"nodeType": "IfStatement",
													"src": "6007:117:9",
													"trueBody": {
														"id": 1043,
														"nodeType": "Block",
														"src": "6052:72:9",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 1039,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1008,
																					"src": "6106:5:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$461",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$461",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 1038,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6098:7:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1037,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "6098:7:9",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1040,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6098:14:9",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1036,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 768,
																		"src": "6073:24:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																			"typeString": "function (address) pure"
																		}
																	},
																	"id": 1041,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6073:40:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 1042,
																"nodeType": "RevertStatement",
																"src": "6066:47:9"
															}
														]
													}
												},
												"id": 1045,
												"nodeType": "IfStatement",
												"src": "5921:203:9",
												"trueBody": {
													"id": 1028,
													"nodeType": "Block",
													"src": "5946:55:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1023,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1008,
																		"src": "5973:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$461",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 1024,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1010,
																		"src": "5980:2:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1025,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1012,
																		"src": "5984:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$461",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1022,
																	"name": "safeTransfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 801,
																	"src": "5960:12:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$720_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 1026,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5960:30:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1027,
															"nodeType": "ExpressionStatement",
															"src": "5960:30:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1005,
										"nodeType": "StructuredDocumentation",
										"src": "5470:333:9",
										"text": " @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 1047,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCallRelaxed",
									"nameLocation": "5817:22:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1015,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1008,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5849:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1047,
												"src": "5840:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$461",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 1007,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1006,
														"name": "IERC1363",
														"nameLocations": [
															"5840:8:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 461,
														"src": "5840:8:9"
													},
													"referencedDeclaration": 461,
													"src": "5840:8:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$461",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1010,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5864:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1047,
												"src": "5856:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1009,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5856:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1012,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5876:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1047,
												"src": "5868:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1011,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5868:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1014,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5896:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1047,
												"src": "5883:17:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1013,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5883:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5839:62:9"
									},
									"returnParameters": {
										"id": 1016,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5911:0:9"
									},
									"scope": 1220,
									"src": "5808:322:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1093,
										"nodeType": "Block",
										"src": "6649:239:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1066,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1062,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1055,
																"src": "6663:2:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1063,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6666:4:9",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "6663:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1064,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6671:6:9",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6663:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1065,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6681:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6663:19:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 1082,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "6759:49:9",
														"subExpression": {
															"arguments": [
																{
																	"id": 1077,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1053,
																	"src": "6786:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1078,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1055,
																	"src": "6792:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1079,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1057,
																	"src": "6796:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1080,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1059,
																	"src": "6803:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 1075,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1051,
																	"src": "6760:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$461",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 1076,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6766:19:9",
																"memberName": "transferFromAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 438,
																"src": "6760:25:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 1081,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6760:48:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1091,
													"nodeType": "IfStatement",
													"src": "6755:127:9",
													"trueBody": {
														"id": 1090,
														"nodeType": "Block",
														"src": "6810:72:9",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 1086,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1051,
																					"src": "6864:5:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$461",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$461",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 1085,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6856:7:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1084,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "6856:7:9",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1087,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6856:14:9",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1083,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 768,
																		"src": "6831:24:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																			"typeString": "function (address) pure"
																		}
																	},
																	"id": 1088,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6831:40:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 1089,
																"nodeType": "RevertStatement",
																"src": "6824:47:9"
															}
														]
													}
												},
												"id": 1092,
												"nodeType": "IfStatement",
												"src": "6659:223:9",
												"trueBody": {
													"id": 1074,
													"nodeType": "Block",
													"src": "6684:65:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1068,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1051,
																		"src": "6715:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$461",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 1069,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1053,
																		"src": "6722:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1070,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1055,
																		"src": "6728:2:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1071,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1057,
																		"src": "6732:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$461",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1067,
																	"name": "safeTransferFrom",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 828,
																	"src": "6698:16:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$720_$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,address,uint256)"
																	}
																},
																"id": 1072,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6698:40:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1073,
															"nodeType": "ExpressionStatement",
															"src": "6698:40:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1048,
										"nodeType": "StructuredDocumentation",
										"src": "6136:341:9",
										"text": " @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 1094,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCallRelaxed",
									"nameLocation": "6491:26:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1060,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1051,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "6536:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1094,
												"src": "6527:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$461",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 1050,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1049,
														"name": "IERC1363",
														"nameLocations": [
															"6527:8:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 461,
														"src": "6527:8:9"
													},
													"referencedDeclaration": 461,
													"src": "6527:8:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$461",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1053,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6559:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1094,
												"src": "6551:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1052,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6551:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1055,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6581:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1094,
												"src": "6573:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1054,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6573:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1057,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6601:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1094,
												"src": "6593:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1056,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6593:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1059,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6629:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1094,
												"src": "6616:17:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1058,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6616:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6517:122:9"
									},
									"returnParameters": {
										"id": 1061,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6649:0:9"
									},
									"scope": 1220,
									"src": "6482:406:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1136,
										"nodeType": "Block",
										"src": "7655:218:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1107,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1100,
																"src": "7669:2:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1108,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7672:4:9",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "7669:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1109,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7677:6:9",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "7669:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7687:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7669:19:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 1125,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "7755:38:9",
														"subExpression": {
															"arguments": [
																{
																	"id": 1121,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1100,
																	"src": "7777:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1122,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1102,
																	"src": "7781:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1123,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1104,
																	"src": "7788:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 1119,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1098,
																	"src": "7756:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$461",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 1120,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7762:14:9",
																"memberName": "approveAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 460,
																"src": "7756:20:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 1124,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7756:37:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1134,
													"nodeType": "IfStatement",
													"src": "7751:116:9",
													"trueBody": {
														"id": 1133,
														"nodeType": "Block",
														"src": "7795:72:9",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 1129,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1098,
																					"src": "7849:5:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$461",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$461",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 1128,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "7841:7:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1127,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "7841:7:9",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1130,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7841:14:9",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1126,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 768,
																		"src": "7816:24:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																			"typeString": "function (address) pure"
																		}
																	},
																	"id": 1131,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7816:40:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 1132,
																"nodeType": "RevertStatement",
																"src": "7809:47:9"
															}
														]
													}
												},
												"id": 1135,
												"nodeType": "IfStatement",
												"src": "7665:202:9",
												"trueBody": {
													"id": 1118,
													"nodeType": "Block",
													"src": "7690:55:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1113,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1098,
																		"src": "7717:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$461",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 1114,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1100,
																		"src": "7724:2:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1115,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1102,
																		"src": "7728:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$461",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1112,
																	"name": "forceApprove",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1004,
																	"src": "7704:12:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$720_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 1116,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7704:30:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1117,
															"nodeType": "ExpressionStatement",
															"src": "7704:30:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1095,
										"nodeType": "StructuredDocumentation",
										"src": "6894:654:9",
										"text": " @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n once without retrying, and relies on the returned value to be true.\n Reverts if the returned value is other than `true`."
									},
									"id": 1137,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCallRelaxed",
									"nameLocation": "7562:21:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1098,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "7593:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1137,
												"src": "7584:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$461",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 1097,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1096,
														"name": "IERC1363",
														"nameLocations": [
															"7584:8:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 461,
														"src": "7584:8:9"
													},
													"referencedDeclaration": 461,
													"src": "7584:8:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$461",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1100,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7608:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1137,
												"src": "7600:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1099,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7600:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1102,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7620:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1137,
												"src": "7612:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1101,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7612:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1104,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7640:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1137,
												"src": "7627:17:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1103,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7627:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7583:62:9"
									},
									"returnParameters": {
										"id": 1106,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7655:0:9"
									},
									"scope": 1220,
									"src": "7553:320:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1177,
										"nodeType": "Block",
										"src": "8440:650:9",
										"statements": [
											{
												"assignments": [
													1147
												],
												"declarations": [
													{
														"constant": false,
														"id": 1147,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "8458:10:9",
														"nodeType": "VariableDeclaration",
														"scope": 1177,
														"src": "8450:18:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1146,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8450:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1148,
												"nodeType": "VariableDeclarationStatement",
												"src": "8450:18:9"
											},
											{
												"assignments": [
													1150
												],
												"declarations": [
													{
														"constant": false,
														"id": 1150,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "8486:11:9",
														"nodeType": "VariableDeclaration",
														"scope": 1177,
														"src": "8478:19:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1149,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8478:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1151,
												"nodeType": "VariableDeclarationStatement",
												"src": "8478:19:9"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "8532:396:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8546:75:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nodeType": "YulIdentifier",
																			"src": "8566:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8566:5:9"
																	},
																	{
																		"name": "token",
																		"nodeType": "YulIdentifier",
																		"src": "8573:5:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8580:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nodeType": "YulIdentifier",
																				"src": "8587:4:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8593:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8583:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8583:15:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nodeType": "YulIdentifier",
																				"src": "8606:4:9"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "8600:5:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8600:11:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8613:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8616:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nodeType": "YulIdentifier",
																	"src": "8561:4:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8561:60:9"
															},
															"variables": [
																{
																	"name": "success",
																	"nodeType": "YulTypedName",
																	"src": "8550:7:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8682:157:9",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "8700:22:9",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8717:4:9",
																					"type": "",
																					"value": "0x40"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "8711:5:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8711:11:9"
																		},
																		"variables": [
																			{
																				"name": "ptr",
																				"nodeType": "YulTypedName",
																				"src": "8704:3:9",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nodeType": "YulIdentifier",
																					"src": "8754:3:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8759:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nodeType": "YulIdentifier",
																						"src": "8762:14:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8762:16:9"
																				}
																			],
																			"functionName": {
																				"name": "returndatacopy",
																				"nodeType": "YulIdentifier",
																				"src": "8739:14:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8739:40:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8739:40:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nodeType": "YulIdentifier",
																					"src": "8803:3:9"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nodeType": "YulIdentifier",
																						"src": "8808:14:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8808:16:9"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8796:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8796:29:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8796:29:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "success",
																		"nodeType": "YulIdentifier",
																		"src": "8673:7:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8666:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8666:15:9"
															},
															"nodeType": "YulIf",
															"src": "8663:176:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8852:30:9",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nodeType": "YulIdentifier",
																	"src": "8866:14:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8866:16:9"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nodeType": "YulIdentifier",
																	"src": "8852:10:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8895:23:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8916:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "8910:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8910:8:9"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nodeType": "YulIdentifier",
																	"src": "8895:11:9"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1143,
														"isOffset": false,
														"isSlot": false,
														"src": "8587:4:9",
														"valueSize": 1
													},
													{
														"declaration": 1143,
														"isOffset": false,
														"isSlot": false,
														"src": "8606:4:9",
														"valueSize": 1
													},
													{
														"declaration": 1147,
														"isOffset": false,
														"isSlot": false,
														"src": "8852:10:9",
														"valueSize": 1
													},
													{
														"declaration": 1150,
														"isOffset": false,
														"isSlot": false,
														"src": "8895:11:9",
														"valueSize": 1
													},
													{
														"declaration": 1141,
														"isOffset": false,
														"isSlot": false,
														"src": "8573:5:9",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1152,
												"nodeType": "InlineAssembly",
												"src": "8507:421:9"
											},
											{
												"condition": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1155,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1153,
															"name": "returnSize",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1147,
															"src": "8942:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1154,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8956:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8942:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1166,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1164,
															"name": "returnValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1150,
															"src": "8994:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "31",
															"id": 1165,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9009:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "8994:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1167,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "8942:68:9",
													"trueExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1163,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1158,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1141,
																			"src": "8968:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$720",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$720",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 1157,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8960:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1156,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "8960:7:9",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1159,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8960:14:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1160,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8975:4:9",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "8960:19:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1161,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8980:6:9",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "8960:26:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1162,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8990:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8960:31:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1176,
												"nodeType": "IfStatement",
												"src": "8938:146:9",
												"trueBody": {
													"id": 1175,
													"nodeType": "Block",
													"src": "9012:72:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1171,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1141,
																				"src": "9066:5:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$720",
																					"typeString": "contract IERC20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IERC20_$720",
																					"typeString": "contract IERC20"
																				}
																			],
																			"id": 1170,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9058:7:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1169,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9058:7:9",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1172,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9058:14:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1168,
																	"name": "SafeERC20FailedOperation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 768,
																	"src": "9033:24:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1173,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9033:40:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1174,
															"nodeType": "RevertStatement",
															"src": "9026:47:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1138,
										"nodeType": "StructuredDocumentation",
										"src": "7879:486:9",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements."
									},
									"id": 1178,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "8379:19:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1144,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1141,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "8406:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1178,
												"src": "8399:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$720",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1140,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1139,
														"name": "IERC20",
														"nameLocations": [
															"8399:6:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 720,
														"src": "8399:6:9"
													},
													"referencedDeclaration": 720,
													"src": "8399:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$720",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1143,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "8426:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1178,
												"src": "8413:17:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1142,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8413:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8398:33:9"
									},
									"returnParameters": {
										"id": 1145,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8440:0:9"
									},
									"scope": 1220,
									"src": "8370:720:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1218,
										"nodeType": "Block",
										"src": "9681:391:9",
										"statements": [
											{
												"assignments": [
													1190
												],
												"declarations": [
													{
														"constant": false,
														"id": 1190,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "9696:7:9",
														"nodeType": "VariableDeclaration",
														"scope": 1218,
														"src": "9691:12:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1189,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "9691:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1191,
												"nodeType": "VariableDeclarationStatement",
												"src": "9691:12:9"
											},
											{
												"assignments": [
													1193
												],
												"declarations": [
													{
														"constant": false,
														"id": 1193,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "9721:10:9",
														"nodeType": "VariableDeclaration",
														"scope": 1218,
														"src": "9713:18:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1192,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9713:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1194,
												"nodeType": "VariableDeclarationStatement",
												"src": "9713:18:9"
											},
											{
												"assignments": [
													1196
												],
												"declarations": [
													{
														"constant": false,
														"id": 1196,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "9749:11:9",
														"nodeType": "VariableDeclaration",
														"scope": 1218,
														"src": "9741:19:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1195,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9741:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1197,
												"nodeType": "VariableDeclarationStatement",
												"src": "9741:19:9"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "9795:174:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9809:71:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nodeType": "YulIdentifier",
																			"src": "9825:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9825:5:9"
																	},
																	{
																		"name": "token",
																		"nodeType": "YulIdentifier",
																		"src": "9832:5:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9839:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nodeType": "YulIdentifier",
																				"src": "9846:4:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9852:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9842:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9842:15:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nodeType": "YulIdentifier",
																				"src": "9865:4:9"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "9859:5:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9859:11:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9872:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9875:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nodeType": "YulIdentifier",
																	"src": "9820:4:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9820:60:9"
															},
															"variableNames": [
																{
																	"name": "success",
																	"nodeType": "YulIdentifier",
																	"src": "9809:7:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9893:30:9",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nodeType": "YulIdentifier",
																	"src": "9907:14:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9907:16:9"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nodeType": "YulIdentifier",
																	"src": "9893:10:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9936:23:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9957:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "9951:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9951:8:9"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nodeType": "YulIdentifier",
																	"src": "9936:11:9"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1184,
														"isOffset": false,
														"isSlot": false,
														"src": "9846:4:9",
														"valueSize": 1
													},
													{
														"declaration": 1184,
														"isOffset": false,
														"isSlot": false,
														"src": "9865:4:9",
														"valueSize": 1
													},
													{
														"declaration": 1193,
														"isOffset": false,
														"isSlot": false,
														"src": "9893:10:9",
														"valueSize": 1
													},
													{
														"declaration": 1196,
														"isOffset": false,
														"isSlot": false,
														"src": "9936:11:9",
														"valueSize": 1
													},
													{
														"declaration": 1190,
														"isOffset": false,
														"isSlot": false,
														"src": "9809:7:9",
														"valueSize": 1
													},
													{
														"declaration": 1182,
														"isOffset": false,
														"isSlot": false,
														"src": "9832:5:9",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1198,
												"nodeType": "InlineAssembly",
												"src": "9770:199:9"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1216,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1199,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1190,
														"src": "9985:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1202,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1200,
																		"name": "returnSize",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1193,
																		"src": "9997:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1201,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10011:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "9997:15:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1213,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1211,
																		"name": "returnValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1196,
																		"src": "10048:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1212,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10063:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "10048:16:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 1214,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "Conditional",
																"src": "9997:67:9",
																"trueExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1210,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"arguments": [
																					{
																						"id": 1205,
																						"name": "token",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1182,
																						"src": "10023:5:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_IERC20_$720",
																							"typeString": "contract IERC20"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_contract$_IERC20_$720",
																							"typeString": "contract IERC20"
																						}
																					],
																					"id": 1204,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "10015:7:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_address_$",
																						"typeString": "type(address)"
																					},
																					"typeName": {
																						"id": 1203,
																						"name": "address",
																						"nodeType": "ElementaryTypeName",
																						"src": "10015:7:9",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 1206,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10015:14:9",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 1207,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "10030:4:9",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "10015:19:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 1208,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "10035:6:9",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "10015:26:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1209,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10044:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "10015:30:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 1215,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9996:69:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "9985:80:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1188,
												"id": 1217,
												"nodeType": "Return",
												"src": "9978:87:9"
											}
										]
									},
									"documentation": {
										"id": 1179,
										"nodeType": "StructuredDocumentation",
										"src": "9096:491:9",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead."
									},
									"id": 1219,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturnBool",
									"nameLocation": "9601:23:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1182,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "9632:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1219,
												"src": "9625:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$720",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1181,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1180,
														"name": "IERC20",
														"nameLocations": [
															"9625:6:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 720,
														"src": "9625:6:9"
													},
													"referencedDeclaration": 720,
													"src": "9625:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$720",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1184,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "9652:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1219,
												"src": "9639:17:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1183,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9639:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9624:33:9"
									},
									"returnParameters": {
										"id": 1188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1187,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1219,
												"src": "9675:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1186,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9675:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9674:6:9"
									},
									"scope": 1220,
									"src": "9592:480:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1221,
							"src": "698:9376:9",
							"usedErrors": [
								768,
								777
							],
							"usedEvents": []
						}
					],
					"src": "115:9960:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1250
						]
					},
					"id": 1251,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1222,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:10"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1223,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:10",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1250,
							"linearizedBaseContracts": [
								1250
							],
							"name": "Context",
							"nameLocation": "642:7:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1231,
										"nodeType": "Block",
										"src": "718:34:10",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1228,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:10",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1229,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:10",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:10",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1227,
												"id": 1230,
												"nodeType": "Return",
												"src": "728:17:10"
											}
										]
									},
									"id": 1232,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1224,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:10"
									},
									"returnParameters": {
										"id": 1227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1226,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1232,
												"src": "709:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1225,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:10"
									},
									"scope": 1250,
									"src": "656:96:10",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1240,
										"nodeType": "Block",
										"src": "825:32:10",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1237,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:10",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1238,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:10",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1236,
												"id": 1239,
												"nodeType": "Return",
												"src": "835:15:10"
											}
										]
									},
									"id": 1241,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1233,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:10"
									},
									"returnParameters": {
										"id": 1236,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1235,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1241,
												"src": "809:14:10",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1234,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:10"
									},
									"scope": 1250,
									"src": "758:99:10",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1248,
										"nodeType": "Block",
										"src": "935:25:10",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1246,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:10",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1245,
												"id": 1247,
												"nodeType": "Return",
												"src": "945:8:10"
											}
										]
									},
									"id": 1249,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1242,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:10"
									},
									"returnParameters": {
										"id": 1245,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1244,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1249,
												"src": "926:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1243,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:10"
									},
									"scope": 1250,
									"src": "863:97:10",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1251,
							"src": "624:338:10",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:10"
				},
				"id": 10
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							1274
						],
						"IERC165": [
							1286
						]
					},
					"id": 1275,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1252,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:11"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 1254,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1275,
							"sourceUnit": 1287,
							"src": "140:38:11",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1253,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1286,
										"src": "148:7:11",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1256,
										"name": "IERC165",
										"nameLocations": [
											"688:7:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1286,
										"src": "688:7:11"
									},
									"id": 1257,
									"nodeType": "InheritanceSpecifier",
									"src": "688:7:11"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1255,
								"nodeType": "StructuredDocumentation",
								"src": "180:479:11",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 1274,
							"linearizedBaseContracts": [
								1274,
								1286
							],
							"name": "ERC165",
							"nameLocation": "678:6:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										1285
									],
									"body": {
										"id": 1272,
										"nodeType": "Block",
										"src": "812:64:11",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 1270,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1265,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1260,
														"src": "829:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1267,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1286,
																	"src": "849:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1286_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1286_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 1266,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "844:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1268,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "844:13:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$1286",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 1269,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "858:11:11",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "844:25:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "829:40:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1264,
												"id": 1271,
												"nodeType": "Return",
												"src": "822:47:11"
											}
										]
									},
									"documentation": {
										"id": 1258,
										"nodeType": "StructuredDocumentation",
										"src": "702:23:11",
										"text": "@inheritdoc IERC165"
									},
									"functionSelector": "01ffc9a7",
									"id": 1273,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "739:17:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1261,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1260,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "764:11:11",
												"nodeType": "VariableDeclaration",
												"scope": 1273,
												"src": "757:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1259,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "757:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "756:20:11"
									},
									"returnParameters": {
										"id": 1264,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1263,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1273,
												"src": "806:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1262,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "806:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "805:6:11"
									},
									"scope": 1274,
									"src": "730:146:11",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1275,
							"src": "660:218:11",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "114:765:11"
				},
				"id": 11
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1286
						]
					},
					"id": 1287,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1276,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "115:25:12"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1277,
								"nodeType": "StructuredDocumentation",
								"src": "142:280:12",
								"text": " @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1286,
							"linearizedBaseContracts": [
								1286
							],
							"name": "IERC165",
							"nameLocation": "433:7:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1278,
										"nodeType": "StructuredDocumentation",
										"src": "447:340:12",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1285,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "801:17:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1280,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "826:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 1285,
												"src": "819:18:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1279,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "819:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "818:20:12"
									},
									"returnParameters": {
										"id": 1284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1283,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1285,
												"src": "862:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1282,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "862:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "861:6:12"
									},
									"scope": 1286,
									"src": "792:76:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1287,
							"src": "423:447:12",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:756:12"
				},
				"id": 12
			},
			"contracts/EtharisEscrow.sol": {
				"ast": {
					"absolutePath": "contracts/EtharisEscrow.sol",
					"exportedSymbols": {
						"AccessControl": [
							296
						],
						"Context": [
							1250
						],
						"ERC165": [
							1274
						],
						"EtharisEscrow": [
							3190
						],
						"IAccessControl": [
							379
						],
						"IERC1363": [
							461
						],
						"IERC165": [
							1286
						],
						"IERC20": [
							720
						],
						"IERC20Permit": [
							756
						],
						"Pausable": [
							577
						],
						"ReentrancyGuard": [
							642
						],
						"SafeERC20": [
							1220
						]
					},
					"id": 3191,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1288,
							"literals": [
								"solidity",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:13"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 1289,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3191,
							"sourceUnit": 721,
							"src": "57:56:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
							"file": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
							"id": 1290,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3191,
							"sourceUnit": 757,
							"src": "114:73:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 1291,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3191,
							"sourceUnit": 1221,
							"src": "188:65:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 1292,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3191,
							"sourceUnit": 643,
							"src": "254:62:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/Pausable.sol",
							"file": "@openzeppelin/contracts/security/Pausable.sol",
							"id": 1293,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3191,
							"sourceUnit": 578,
							"src": "317:55:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
							"file": "@openzeppelin/contracts/access/AccessControl.sol",
							"id": 1294,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3191,
							"sourceUnit": 297,
							"src": "373:58:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1296,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"706:15:13"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 642,
										"src": "706:15:13"
									},
									"id": 1297,
									"nodeType": "InheritanceSpecifier",
									"src": "706:15:13"
								},
								{
									"baseName": {
										"id": 1298,
										"name": "Pausable",
										"nameLocations": [
											"723:8:13"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 577,
										"src": "723:8:13"
									},
									"id": 1299,
									"nodeType": "InheritanceSpecifier",
									"src": "723:8:13"
								},
								{
									"baseName": {
										"id": 1300,
										"name": "AccessControl",
										"nameLocations": [
											"733:13:13"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 296,
										"src": "733:13:13"
									},
									"id": 1301,
									"nodeType": "InheritanceSpecifier",
									"src": "733:13:13"
								}
							],
							"canonicalName": "EtharisEscrow",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1295,
								"nodeType": "StructuredDocumentation",
								"src": "433:246:13",
								"text": " @title EtharisEscrow\n @author Etharis Team\n @dev Escrow contract for sponsorship deals. All action functions can only be called by the Server Wallet (Owner).\n @notice Uses IDRX as the payment token (Indonesian Rupiah stablecoin)."
							},
							"fullyImplemented": true,
							"id": 3190,
							"linearizedBaseContracts": [
								3190,
								296,
								1274,
								1286,
								379,
								577,
								1250,
								642
							],
							"name": "EtharisEscrow",
							"nameLocation": "689:13:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1305,
									"libraryName": {
										"id": 1302,
										"name": "SafeERC20",
										"nameLocations": [
											"759:9:13"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1220,
										"src": "759:9:13"
									},
									"nodeType": "UsingForDirective",
									"src": "753:27:13",
									"typeName": {
										"id": 1304,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1303,
											"name": "IERC20",
											"nameLocations": [
												"773:6:13"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 720,
											"src": "773:6:13"
										},
										"referencedDeclaration": 720,
										"src": "773:6:13",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$720",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"errorSelector": "714d500e",
									"id": 1307,
									"name": "DealAlreadyExists",
									"nameLocation": "858:17:13",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1306,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "875:2:13"
									},
									"src": "852:26:13"
								},
								{
									"errorSelector": "e6c4247b",
									"id": 1309,
									"name": "InvalidAddress",
									"nameLocation": "889:14:13",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1308,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "903:2:13"
									},
									"src": "883:23:13"
								},
								{
									"errorSelector": "93680d14",
									"id": 1311,
									"name": "CreatorCannotBeBrand",
									"nameLocation": "917:20:13",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1310,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "937:2:13"
									},
									"src": "911:29:13"
								},
								{
									"errorSelector": "5e85ae73",
									"id": 1313,
									"name": "AmountMustBeGreaterThanZero",
									"nameLocation": "951:27:13",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1312,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "978:2:13"
									},
									"src": "945:36:13"
								},
								{
									"errorSelector": "0642ce77",
									"id": 1315,
									"name": "DeadlineMustBeInFuture",
									"nameLocation": "992:22:13",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1314,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1014:2:13"
									},
									"src": "986:31:13"
								},
								{
									"errorSelector": "3f26e808",
									"id": 1317,
									"name": "BriefHashRequired",
									"nameLocation": "1028:17:13",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1316,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1045:2:13"
									},
									"src": "1022:26:13"
								},
								{
									"errorSelector": "88f691cc",
									"id": 1319,
									"name": "DealNotFound",
									"nameLocation": "1059:12:13",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1318,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1071:2:13"
									},
									"src": "1053:21:13"
								},
								{
									"errorSelector": "5e40b94f",
									"id": 1321,
									"name": "InvalidDealStatus",
									"nameLocation": "1085:17:13",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1320,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1102:2:13"
									},
									"src": "1079:26:13"
								},
								{
									"errorSelector": "ea8e4eb5",
									"id": 1323,
									"name": "NotAuthorized",
									"nameLocation": "1116:13:13",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1322,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1129:2:13"
									},
									"src": "1110:22:13"
								},
								{
									"errorSelector": "c927e758",
									"id": 1325,
									"name": "DealAlreadyFunded",
									"nameLocation": "1143:17:13",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1324,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1160:2:13"
									},
									"src": "1137:26:13"
								},
								{
									"errorSelector": "f4d678b8",
									"id": 1327,
									"name": "InsufficientBalance",
									"nameLocation": "1174:19:13",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1326,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1193:2:13"
									},
									"src": "1168:28:13"
								},
								{
									"errorSelector": "13be252b",
									"id": 1329,
									"name": "InsufficientAllowance",
									"nameLocation": "1207:21:13",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1328,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1228:2:13"
									},
									"src": "1201:30:13"
								},
								{
									"errorSelector": "8ea2177a",
									"id": 1331,
									"name": "DealNotFunded",
									"nameLocation": "1242:13:13",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1330,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1255:2:13"
									},
									"src": "1236:22:13"
								},
								{
									"errorSelector": "ec971c66",
									"id": 1333,
									"name": "SubmissionDeadlinePassed",
									"nameLocation": "1269:24:13",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1332,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1293:2:13"
									},
									"src": "1263:33:13"
								},
								{
									"errorSelector": "361178c7",
									"id": 1335,
									"name": "ContentUrlRequired",
									"nameLocation": "1307:18:13",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1334,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1325:2:13"
									},
									"src": "1301:27:13"
								},
								{
									"errorSelector": "2d6bf645",
									"id": 1337,
									"name": "ReviewPeriodNotEnded",
									"nameLocation": "1339:20:13",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1336,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1359:2:13"
									},
									"src": "1333:29:13"
								},
								{
									"errorSelector": "5a1eae5a",
									"id": 1339,
									"name": "ReviewPeriodEnded",
									"nameLocation": "1373:17:13",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1338,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1390:2:13"
									},
									"src": "1367:26:13"
								},
								{
									"errorSelector": "bc7fd331",
									"id": 1341,
									"name": "ReasonRequired",
									"nameLocation": "1404:14:13",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1340,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1418:2:13"
									},
									"src": "1398:23:13"
								},
								{
									"errorSelector": "2eb35430",
									"id": 1343,
									"name": "DeadlineNotPassed",
									"nameLocation": "1432:17:13",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1342,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1449:2:13"
									},
									"src": "1426:26:13"
								},
								{
									"errorSelector": "26f86568",
									"id": 1345,
									"name": "CannotCancelThisDeal",
									"nameLocation": "1463:20:13",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1344,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1483:2:13"
									},
									"src": "1457:29:13"
								},
								{
									"errorSelector": "cd4e6167",
									"id": 1347,
									"name": "FeeTooHigh",
									"nameLocation": "1497:10:13",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1346,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1507:2:13"
									},
									"src": "1491:19:13"
								},
								{
									"errorSelector": "c5d17e08",
									"id": 1349,
									"name": "CannotWithdrawIDRX",
									"nameLocation": "1521:18:13",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1348,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1539:2:13"
									},
									"src": "1515:27:13"
								},
								{
									"errorSelector": "5f0be7af",
									"id": 1351,
									"name": "InvalidDealID",
									"nameLocation": "1553:13:13",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1350,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1566:2:13"
									},
									"src": "1547:22:13"
								},
								{
									"errorSelector": "2c5211c6",
									"id": 1353,
									"name": "InvalidAmount",
									"nameLocation": "1580:13:13",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1352,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1593:2:13"
									},
									"src": "1574:22:13"
								},
								{
									"errorSelector": "b78cb0dd",
									"id": 1355,
									"name": "PermitFailed",
									"nameLocation": "1607:12:13",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1354,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1619:2:13"
									},
									"src": "1601:21:13"
								},
								{
									"constant": false,
									"id": 1358,
									"mutability": "immutable",
									"name": "_idrxToken",
									"nameLocation": "1702:10:13",
									"nodeType": "VariableDeclaration",
									"scope": 3190,
									"src": "1677:35:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$720",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 1357,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1356,
											"name": "IERC20",
											"nameLocations": [
												"1677:6:13"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 720,
											"src": "1677:6:13"
										},
										"referencedDeclaration": 720,
										"src": "1677:6:13",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$720",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1361,
									"mutability": "mutable",
									"name": "_platformFeeBps",
									"nameLocation": "1733:15:13",
									"nodeType": "VariableDeclaration",
									"scope": 3190,
									"src": "1718:36:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint96",
										"typeString": "uint96"
									},
									"typeName": {
										"id": 1359,
										"name": "uint96",
										"nodeType": "ElementaryTypeName",
										"src": "1718:6:13",
										"typeDescriptions": {
											"typeIdentifier": "t_uint96",
											"typeString": "uint96"
										}
									},
									"value": {
										"hexValue": "323530",
										"id": 1360,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1751:3:13",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_250_by_1",
											"typeString": "int_const 250"
										},
										"value": "250"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1364,
									"mutability": "constant",
									"name": "BPS_DENOMINATOR",
									"nameLocation": "1792:15:13",
									"nodeType": "VariableDeclaration",
									"scope": 3190,
									"src": "1768:47:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint96",
										"typeString": "uint96"
									},
									"typeName": {
										"id": 1362,
										"name": "uint96",
										"nodeType": "ElementaryTypeName",
										"src": "1768:6:13",
										"typeDescriptions": {
											"typeIdentifier": "t_uint96",
											"typeString": "uint96"
										}
									},
									"value": {
										"hexValue": "3130303030",
										"id": 1363,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1810:5:13",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10000_by_1",
											"typeString": "int_const 10000"
										},
										"value": "10000"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1367,
									"mutability": "constant",
									"name": "REVIEW_PERIOD",
									"nameLocation": "1845:13:13",
									"nodeType": "VariableDeclaration",
									"scope": 3190,
									"src": "1821:48:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint64",
										"typeString": "uint64"
									},
									"typeName": {
										"id": 1365,
										"name": "uint64",
										"nodeType": "ElementaryTypeName",
										"src": "1821:6:13",
										"typeDescriptions": {
											"typeIdentifier": "t_uint64",
											"typeString": "uint64"
										}
									},
									"value": {
										"hexValue": "3732",
										"id": 1366,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1861:8:13",
										"subdenomination": "hours",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_259200_by_1",
											"typeString": "int_const 259200"
										},
										"value": "72"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1369,
									"mutability": "mutable",
									"name": "_feeRecipient",
									"nameLocation": "1891:13:13",
									"nodeType": "VariableDeclaration",
									"scope": 3190,
									"src": "1875:29:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1368,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1875:7:13",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"functionSelector": "18cf2834",
									"id": 1374,
									"mutability": "constant",
									"name": "SERVER_ROLE",
									"nameLocation": "1935:11:13",
									"nodeType": "VariableDeclaration",
									"scope": 3190,
									"src": "1911:62:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1370,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1911:7:13",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "5345525645525f524f4c45",
												"id": 1372,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1959:13:13",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_a8a7bc421f721cb936ea99efdad79237e6ee0b871a2a08cf648691f9584cdc77",
													"typeString": "literal_string \"SERVER_ROLE\""
												},
												"value": "SERVER_ROLE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_a8a7bc421f721cb936ea99efdad79237e6ee0b871a2a08cf648691f9584cdc77",
													"typeString": "literal_string \"SERVER_ROLE\""
												}
											],
											"id": 1371,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "1949:9:13",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 1373,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1949:24:13",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"canonicalName": "EtharisEscrow.ContractStatus",
									"id": 1381,
									"members": [
										{
											"id": 1375,
											"name": "PENDING",
											"nameLocation": "2010:7:13",
											"nodeType": "EnumValue",
											"src": "2010:7:13"
										},
										{
											"id": 1376,
											"name": "ACTIVE",
											"nameLocation": "2027:6:13",
											"nodeType": "EnumValue",
											"src": "2027:6:13"
										},
										{
											"id": 1377,
											"name": "PENDING_REVIEW",
											"nameLocation": "2043:14:13",
											"nodeType": "EnumValue",
											"src": "2043:14:13"
										},
										{
											"id": 1378,
											"name": "DISPUTED",
											"nameLocation": "2067:8:13",
											"nodeType": "EnumValue",
											"src": "2067:8:13"
										},
										{
											"id": 1379,
											"name": "COMPLETED",
											"nameLocation": "2085:9:13",
											"nodeType": "EnumValue",
											"src": "2085:9:13"
										},
										{
											"id": 1380,
											"name": "CANCELLED",
											"nameLocation": "2104:9:13",
											"nodeType": "EnumValue",
											"src": "2104:9:13"
										}
									],
									"name": "ContractStatus",
									"nameLocation": "1985:14:13",
									"nodeType": "EnumDefinition",
									"src": "1980:139:13"
								},
								{
									"canonicalName": "EtharisEscrow.Deal",
									"id": 1415,
									"members": [
										{
											"constant": false,
											"id": 1383,
											"mutability": "mutable",
											"name": "brand",
											"nameLocation": "2155:5:13",
											"nodeType": "VariableDeclaration",
											"scope": 1415,
											"src": "2147:13:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1382,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "2147:7:13",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1385,
											"mutability": "mutable",
											"name": "creator",
											"nameLocation": "2178:7:13",
											"nodeType": "VariableDeclaration",
											"scope": 1415,
											"src": "2170:15:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1384,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "2170:7:13",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1387,
											"mutability": "mutable",
											"name": "dealId",
											"nameLocation": "2202:6:13",
											"nodeType": "VariableDeclaration",
											"scope": 1415,
											"src": "2195:13:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 1386,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "2195:6:13",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1389,
											"mutability": "mutable",
											"name": "briefHash",
											"nameLocation": "2225:9:13",
											"nodeType": "VariableDeclaration",
											"scope": 1415,
											"src": "2218:16:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 1388,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "2218:6:13",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1391,
											"mutability": "mutable",
											"name": "contentUrl",
											"nameLocation": "2251:10:13",
											"nodeType": "VariableDeclaration",
											"scope": 1415,
											"src": "2244:17:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 1390,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "2244:6:13",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1393,
											"mutability": "mutable",
											"name": "disputeReason",
											"nameLocation": "2278:13:13",
											"nodeType": "VariableDeclaration",
											"scope": 1415,
											"src": "2271:20:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 1392,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "2271:6:13",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1395,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "2308:6:13",
											"nodeType": "VariableDeclaration",
											"scope": 1415,
											"src": "2301:13:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint96",
												"typeString": "uint96"
											},
											"typeName": {
												"id": 1394,
												"name": "uint96",
												"nodeType": "ElementaryTypeName",
												"src": "2301:6:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1397,
											"mutability": "mutable",
											"name": "deadline",
											"nameLocation": "2331:8:13",
											"nodeType": "VariableDeclaration",
											"scope": 1415,
											"src": "2324:15:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 1396,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "2324:6:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1399,
											"mutability": "mutable",
											"name": "fundedAt",
											"nameLocation": "2356:8:13",
											"nodeType": "VariableDeclaration",
											"scope": 1415,
											"src": "2349:15:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 1398,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "2349:6:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1401,
											"mutability": "mutable",
											"name": "submittedAt",
											"nameLocation": "2381:11:13",
											"nodeType": "VariableDeclaration",
											"scope": 1415,
											"src": "2374:18:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 1400,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "2374:6:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1403,
											"mutability": "mutable",
											"name": "reviewDeadline",
											"nameLocation": "2409:14:13",
											"nodeType": "VariableDeclaration",
											"scope": 1415,
											"src": "2402:21:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 1402,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "2402:6:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1405,
											"mutability": "mutable",
											"name": "disputedAt",
											"nameLocation": "2440:10:13",
											"nodeType": "VariableDeclaration",
											"scope": 1415,
											"src": "2433:17:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 1404,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "2433:6:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1407,
											"mutability": "mutable",
											"name": "createdAt",
											"nameLocation": "2467:9:13",
											"nodeType": "VariableDeclaration",
											"scope": 1415,
											"src": "2460:16:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 1406,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "2460:6:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1410,
											"mutability": "mutable",
											"name": "status",
											"nameLocation": "2501:6:13",
											"nodeType": "VariableDeclaration",
											"scope": 1415,
											"src": "2486:21:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_enum$_ContractStatus_$1381",
												"typeString": "enum EtharisEscrow.ContractStatus"
											},
											"typeName": {
												"id": 1409,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 1408,
													"name": "ContractStatus",
													"nameLocations": [
														"2486:14:13"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 1381,
													"src": "2486:14:13"
												},
												"referencedDeclaration": 1381,
												"src": "2486:14:13",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_ContractStatus_$1381",
													"typeString": "enum EtharisEscrow.ContractStatus"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1412,
											"mutability": "mutable",
											"name": "acceptedDispute",
											"nameLocation": "2522:15:13",
											"nodeType": "VariableDeclaration",
											"scope": 1415,
											"src": "2517:20:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1411,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "2517:4:13",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1414,
											"mutability": "mutable",
											"name": "exists",
											"nameLocation": "2553:6:13",
											"nodeType": "VariableDeclaration",
											"scope": 1415,
											"src": "2548:11:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1413,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "2548:4:13",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Deal",
									"nameLocation": "2132:4:13",
									"nodeType": "StructDefinition",
									"scope": 3190,
									"src": "2125:441:13",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1420,
									"mutability": "mutable",
									"name": "_deals",
									"nameLocation": "2620:6:13",
									"nodeType": "VariableDeclaration",
									"scope": 3190,
									"src": "2572:54:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_Deal_$1415_storage_$",
										"typeString": "mapping(string => struct EtharisEscrow.Deal)"
									},
									"typeName": {
										"id": 1419,
										"keyName": "dealId",
										"keyNameLocation": "2587:6:13",
										"keyType": {
											"id": 1416,
											"name": "string",
											"nodeType": "ElementaryTypeName",
											"src": "2580:6:13",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											}
										},
										"nodeType": "Mapping",
										"src": "2572:39:13",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_Deal_$1415_storage_$",
											"typeString": "mapping(string => struct EtharisEscrow.Deal)"
										},
										"valueName": "dealData",
										"valueNameLocation": "2602:8:13",
										"valueType": {
											"id": 1418,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 1417,
												"name": "Deal",
												"nameLocations": [
													"2597:4:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1415,
												"src": "2597:4:13"
											},
											"referencedDeclaration": 1415,
											"src": "2597:4:13",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Deal_$1415_storage_ptr",
												"typeString": "struct EtharisEscrow.Deal"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1425,
									"mutability": "mutable",
									"name": "_brandDeals",
									"nameLocation": "2682:11:13",
									"nodeType": "VariableDeclaration",
									"scope": 3190,
									"src": "2632:61:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_string_storage_$dyn_storage_$",
										"typeString": "mapping(address => string[])"
									},
									"typeName": {
										"id": 1424,
										"keyName": "user",
										"keyNameLocation": "2648:4:13",
										"keyType": {
											"id": 1421,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2640:7:13",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2632:41:13",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_string_storage_$dyn_storage_$",
											"typeString": "mapping(address => string[])"
										},
										"valueName": "dealIds",
										"valueNameLocation": "2665:7:13",
										"valueType": {
											"baseType": {
												"id": 1422,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "2656:6:13",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"id": 1423,
											"nodeType": "ArrayTypeName",
											"src": "2656:8:13",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
												"typeString": "string[]"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1430,
									"mutability": "mutable",
									"name": "_creatorDeals",
									"nameLocation": "2749:13:13",
									"nodeType": "VariableDeclaration",
									"scope": 3190,
									"src": "2699:63:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_string_storage_$dyn_storage_$",
										"typeString": "mapping(address => string[])"
									},
									"typeName": {
										"id": 1429,
										"keyName": "user",
										"keyNameLocation": "2715:4:13",
										"keyType": {
											"id": 1426,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2707:7:13",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2699:41:13",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_string_storage_$dyn_storage_$",
											"typeString": "mapping(address => string[])"
										},
										"valueName": "dealIds",
										"valueNameLocation": "2732:7:13",
										"valueType": {
											"baseType": {
												"id": 1427,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "2723:6:13",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"id": 1428,
											"nodeType": "ArrayTypeName",
											"src": "2723:8:13",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
												"typeString": "string[]"
											}
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "ceb1a488be98b2739817f21e7d3b0a343434519cd0fe4db3ef5fc27a96e8d295",
									"id": 1442,
									"name": "DealCreated",
									"nameLocation": "2815:11:13",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1441,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1432,
												"indexed": true,
												"mutability": "mutable",
												"name": "dealId",
												"nameLocation": "2851:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 1442,
												"src": "2836:21:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1431,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2836:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1434,
												"indexed": true,
												"mutability": "mutable",
												"name": "brand",
												"nameLocation": "2883:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 1442,
												"src": "2867:21:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1433,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2867:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1436,
												"indexed": true,
												"mutability": "mutable",
												"name": "creator",
												"nameLocation": "2914:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 1442,
												"src": "2898:23:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1435,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2898:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1438,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2938:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 1442,
												"src": "2931:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 1437,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "2931:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1440,
												"indexed": false,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "2961:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 1442,
												"src": "2954:15:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 1439,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "2954:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2826:149:13"
									},
									"src": "2809:167:13"
								},
								{
									"anonymous": false,
									"eventSelector": "2c138f65913cd3b9ca6f36e4b59e26830a033a978ca69f935781972e6df1f61d",
									"id": 1450,
									"name": "DealFunded",
									"nameLocation": "2987:10:13",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1449,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1444,
												"indexed": true,
												"mutability": "mutable",
												"name": "dealId",
												"nameLocation": "3022:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 1450,
												"src": "3007:21:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1443,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3007:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1446,
												"indexed": true,
												"mutability": "mutable",
												"name": "brand",
												"nameLocation": "3054:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 1450,
												"src": "3038:21:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1445,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3038:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1448,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3076:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 1450,
												"src": "3069:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 1447,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "3069:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2997:91:13"
									},
									"src": "2981:108:13"
								},
								{
									"anonymous": false,
									"eventSelector": "934109f661b65dbccffcae4f7ee04261eb7b36e5136e1ca86dde1b00598cb031",
									"id": 1460,
									"name": "ContentSubmitted",
									"nameLocation": "3100:16:13",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1459,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1452,
												"indexed": true,
												"mutability": "mutable",
												"name": "dealId",
												"nameLocation": "3141:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 1460,
												"src": "3126:21:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1451,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3126:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1454,
												"indexed": true,
												"mutability": "mutable",
												"name": "creator",
												"nameLocation": "3173:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 1460,
												"src": "3157:23:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1453,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3157:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1456,
												"indexed": false,
												"mutability": "mutable",
												"name": "contentUrl",
												"nameLocation": "3197:10:13",
												"nodeType": "VariableDeclaration",
												"scope": 1460,
												"src": "3190:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1455,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3190:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1458,
												"indexed": false,
												"mutability": "mutable",
												"name": "reviewDeadline",
												"nameLocation": "3224:14:13",
												"nodeType": "VariableDeclaration",
												"scope": 1460,
												"src": "3217:21:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 1457,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "3217:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3116:128:13"
									},
									"src": "3094:151:13"
								},
								{
									"anonymous": false,
									"eventSelector": "00caec7345d2eb04a42197ac2a2cd7cd74a00b2991b69bb53e23465d4092fdfb",
									"id": 1466,
									"name": "DealApproved",
									"nameLocation": "3256:12:13",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1465,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1462,
												"indexed": true,
												"mutability": "mutable",
												"name": "dealId",
												"nameLocation": "3284:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 1466,
												"src": "3269:21:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1461,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3269:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1464,
												"indexed": true,
												"mutability": "mutable",
												"name": "brand",
												"nameLocation": "3308:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 1466,
												"src": "3292:21:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1463,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3292:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3268:46:13"
									},
									"src": "3250:65:13"
								},
								{
									"anonymous": false,
									"eventSelector": "8531198e5d946af9a770d2eeba00258645e163142d835fe1b04e45f4db720f8b",
									"id": 1476,
									"name": "PaymentReleased",
									"nameLocation": "3326:15:13",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1475,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1468,
												"indexed": true,
												"mutability": "mutable",
												"name": "dealId",
												"nameLocation": "3366:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 1476,
												"src": "3351:21:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1467,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3351:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1470,
												"indexed": true,
												"mutability": "mutable",
												"name": "creator",
												"nameLocation": "3398:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 1476,
												"src": "3382:23:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1469,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3382:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1472,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3422:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 1476,
												"src": "3415:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 1471,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "3415:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1474,
												"indexed": false,
												"mutability": "mutable",
												"name": "platformFee",
												"nameLocation": "3445:11:13",
												"nodeType": "VariableDeclaration",
												"scope": 1476,
												"src": "3438:18:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 1473,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "3438:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3341:121:13"
									},
									"src": "3320:143:13"
								},
								{
									"anonymous": false,
									"eventSelector": "de7b01bef0884582ce204f7f920e57f99dd569f93867450872f436be5a03c755",
									"id": 1484,
									"name": "DisputeInitiated",
									"nameLocation": "3474:16:13",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1483,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1478,
												"indexed": true,
												"mutability": "mutable",
												"name": "dealId",
												"nameLocation": "3515:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 1484,
												"src": "3500:21:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1477,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3500:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1480,
												"indexed": true,
												"mutability": "mutable",
												"name": "brand",
												"nameLocation": "3547:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 1484,
												"src": "3531:21:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1479,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3531:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1482,
												"indexed": false,
												"mutability": "mutable",
												"name": "reason",
												"nameLocation": "3569:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 1484,
												"src": "3562:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1481,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3562:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3490:91:13"
									},
									"src": "3468:114:13"
								},
								{
									"anonymous": false,
									"eventSelector": "ea4ea4b4229888eeba3eb2772df89c52af23c7fe3d530b0c1f2ca146f32c12ba",
									"id": 1496,
									"name": "DisputeResolved",
									"nameLocation": "3593:15:13",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1495,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1486,
												"indexed": true,
												"mutability": "mutable",
												"name": "dealId",
												"nameLocation": "3633:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 1496,
												"src": "3618:21:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1485,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3618:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1488,
												"indexed": true,
												"mutability": "mutable",
												"name": "creator",
												"nameLocation": "3665:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 1496,
												"src": "3649:23:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1487,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3649:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1490,
												"indexed": false,
												"mutability": "mutable",
												"name": "acceptedDispute",
												"nameLocation": "3687:15:13",
												"nodeType": "VariableDeclaration",
												"scope": 1496,
												"src": "3682:20:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1489,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3682:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1492,
												"indexed": false,
												"mutability": "mutable",
												"name": "creatorAmount",
												"nameLocation": "3719:13:13",
												"nodeType": "VariableDeclaration",
												"scope": 1496,
												"src": "3712:20:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 1491,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "3712:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1494,
												"indexed": false,
												"mutability": "mutable",
												"name": "brandRefund",
												"nameLocation": "3749:11:13",
												"nodeType": "VariableDeclaration",
												"scope": 1496,
												"src": "3742:18:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 1493,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "3742:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3608:158:13"
									},
									"src": "3587:180:13"
								},
								{
									"anonymous": false,
									"eventSelector": "b559d285c87e4fa0f561388264310703ff0c6c454a39ae52d0ae94032ff0db70",
									"id": 1504,
									"name": "DealCancelled",
									"nameLocation": "3778:13:13",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1503,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1498,
												"indexed": true,
												"mutability": "mutable",
												"name": "dealId",
												"nameLocation": "3816:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 1504,
												"src": "3801:21:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1497,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3801:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1500,
												"indexed": true,
												"mutability": "mutable",
												"name": "initiator",
												"nameLocation": "3848:9:13",
												"nodeType": "VariableDeclaration",
												"scope": 1504,
												"src": "3832:25:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1499,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3832:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1502,
												"indexed": false,
												"mutability": "mutable",
												"name": "refundAmount",
												"nameLocation": "3874:12:13",
												"nodeType": "VariableDeclaration",
												"scope": 1504,
												"src": "3867:19:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 1501,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "3867:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3791:101:13"
									},
									"src": "3772:121:13"
								},
								{
									"anonymous": false,
									"eventSelector": "feeddf72b7ee4210b769104cb8b071e5706232ac7f671fb292af429ffd58b587",
									"id": 1510,
									"name": "PlatformFeeUpdated",
									"nameLocation": "3904:18:13",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1509,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1506,
												"indexed": false,
												"mutability": "mutable",
												"name": "oldFee",
												"nameLocation": "3930:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 1510,
												"src": "3923:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 1505,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "3923:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1508,
												"indexed": false,
												"mutability": "mutable",
												"name": "newFee",
												"nameLocation": "3945:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 1510,
												"src": "3938:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 1507,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "3938:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3922:30:13"
									},
									"src": "3898:55:13"
								},
								{
									"anonymous": false,
									"eventSelector": "aaebcf1bfa00580e41d966056b48521fa9f202645c86d4ddf28113e617c1b1d3",
									"id": 1516,
									"name": "FeeRecipientUpdated",
									"nameLocation": "3964:19:13",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1515,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1512,
												"indexed": false,
												"mutability": "mutable",
												"name": "oldRecipient",
												"nameLocation": "3992:12:13",
												"nodeType": "VariableDeclaration",
												"scope": 1516,
												"src": "3984:20:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1511,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3984:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1514,
												"indexed": false,
												"mutability": "mutable",
												"name": "newRecipient",
												"nameLocation": "4014:12:13",
												"nodeType": "VariableDeclaration",
												"scope": 1516,
												"src": "4006:20:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1513,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4006:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3983:44:13"
									},
									"src": "3958:70:13"
								},
								{
									"body": {
										"id": 1533,
										"nodeType": "Block",
										"src": "4139:87:13",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1527,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"baseExpression": {
																"id": 1522,
																"name": "_deals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1420,
																"src": "4153:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_Deal_$1415_storage_$",
																	"typeString": "mapping(string memory => struct EtharisEscrow.Deal storage ref)"
																}
															},
															"id": 1524,
															"indexExpression": {
																"id": 1523,
																"name": "_dealId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1518,
																"src": "4160:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4153:15:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Deal_$1415_storage",
																"typeString": "struct EtharisEscrow.Deal storage ref"
															}
														},
														"id": 1525,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4169:5:13",
														"memberName": "brand",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1383,
														"src": "4153:21:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 1526,
														"name": "_brand",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1520,
														"src": "4178:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4153:31:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1531,
												"nodeType": "IfStatement",
												"src": "4149:59:13",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1528,
															"name": "NotAuthorized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1323,
															"src": "4193:13:13",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1529,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4193:15:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1530,
													"nodeType": "RevertStatement",
													"src": "4186:22:13"
												}
											},
											{
												"id": 1532,
												"nodeType": "PlaceholderStatement",
												"src": "4218:1:13"
											}
										]
									},
									"id": 1534,
									"name": "onlyDealBrand",
									"nameLocation": "4086:13:13",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1521,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1518,
												"mutability": "mutable",
												"name": "_dealId",
												"nameLocation": "4114:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 1534,
												"src": "4100:21:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1517,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4100:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1520,
												"mutability": "mutable",
												"name": "_brand",
												"nameLocation": "4131:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 1534,
												"src": "4123:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1519,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4123:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4099:39:13"
									},
									"src": "4077:149:13",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1551,
										"nodeType": "Block",
										"src": "4298:91:13",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1545,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"baseExpression": {
																"id": 1540,
																"name": "_deals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1420,
																"src": "4312:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_Deal_$1415_storage_$",
																	"typeString": "mapping(string memory => struct EtharisEscrow.Deal storage ref)"
																}
															},
															"id": 1542,
															"indexExpression": {
																"id": 1541,
																"name": "_dealId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1536,
																"src": "4319:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4312:15:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Deal_$1415_storage",
																"typeString": "struct EtharisEscrow.Deal storage ref"
															}
														},
														"id": 1543,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4328:7:13",
														"memberName": "creator",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1385,
														"src": "4312:23:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 1544,
														"name": "_creator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1538,
														"src": "4339:8:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4312:35:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1549,
												"nodeType": "IfStatement",
												"src": "4308:63:13",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1546,
															"name": "NotAuthorized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1323,
															"src": "4356:13:13",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1547,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4356:15:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1548,
													"nodeType": "RevertStatement",
													"src": "4349:22:13"
												}
											},
											{
												"id": 1550,
												"nodeType": "PlaceholderStatement",
												"src": "4381:1:13"
											}
										]
									},
									"id": 1552,
									"name": "onlyDealCreator",
									"nameLocation": "4241:15:13",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1539,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1536,
												"mutability": "mutable",
												"name": "_dealId",
												"nameLocation": "4271:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 1552,
												"src": "4257:21:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1535,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4257:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1538,
												"mutability": "mutable",
												"name": "_creator",
												"nameLocation": "4288:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 1552,
												"src": "4280:16:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1537,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4280:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4256:41:13"
									},
									"src": "4232:157:13",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1566,
										"nodeType": "Block",
										"src": "4438:78:13",
										"statements": [
											{
												"condition": {
													"id": 1560,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4452:23:13",
													"subExpression": {
														"expression": {
															"baseExpression": {
																"id": 1556,
																"name": "_deals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1420,
																"src": "4453:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_Deal_$1415_storage_$",
																	"typeString": "mapping(string memory => struct EtharisEscrow.Deal storage ref)"
																}
															},
															"id": 1558,
															"indexExpression": {
																"id": 1557,
																"name": "_dealId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1554,
																"src": "4460:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4453:15:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Deal_$1415_storage",
																"typeString": "struct EtharisEscrow.Deal storage ref"
															}
														},
														"id": 1559,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4469:6:13",
														"memberName": "exists",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1414,
														"src": "4453:22:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1564,
												"nodeType": "IfStatement",
												"src": "4448:50:13",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1561,
															"name": "DealNotFound",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1319,
															"src": "4484:12:13",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1562,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4484:14:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1563,
													"nodeType": "RevertStatement",
													"src": "4477:21:13"
												}
											},
											{
												"id": 1565,
												"nodeType": "PlaceholderStatement",
												"src": "4508:1:13"
											}
										]
									},
									"id": 1567,
									"name": "dealExists",
									"nameLocation": "4404:10:13",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1555,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1554,
												"mutability": "mutable",
												"name": "_dealId",
												"nameLocation": "4429:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 1567,
												"src": "4415:21:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1553,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4415:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4414:23:13"
									},
									"src": "4395:121:13",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1585,
										"nodeType": "Block",
										"src": "4587:93:13",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_enum$_ContractStatus_$1381",
														"typeString": "enum EtharisEscrow.ContractStatus"
													},
													"id": 1579,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"baseExpression": {
																"id": 1574,
																"name": "_deals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1420,
																"src": "4601:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_Deal_$1415_storage_$",
																	"typeString": "mapping(string memory => struct EtharisEscrow.Deal storage ref)"
																}
															},
															"id": 1576,
															"indexExpression": {
																"id": 1575,
																"name": "_dealId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1569,
																"src": "4608:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4601:15:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Deal_$1415_storage",
																"typeString": "struct EtharisEscrow.Deal storage ref"
															}
														},
														"id": 1577,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4617:6:13",
														"memberName": "status",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1410,
														"src": "4601:22:13",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_ContractStatus_$1381",
															"typeString": "enum EtharisEscrow.ContractStatus"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 1578,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1572,
														"src": "4627:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_ContractStatus_$1381",
															"typeString": "enum EtharisEscrow.ContractStatus"
														}
													},
													"src": "4601:33:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1583,
												"nodeType": "IfStatement",
												"src": "4597:65:13",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1580,
															"name": "InvalidDealStatus",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1321,
															"src": "4643:17:13",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1581,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4643:19:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1582,
													"nodeType": "RevertStatement",
													"src": "4636:26:13"
												}
											},
											{
												"id": 1584,
												"nodeType": "PlaceholderStatement",
												"src": "4672:1:13"
											}
										]
									},
									"id": 1586,
									"name": "inStatus",
									"nameLocation": "4531:8:13",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1573,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1569,
												"mutability": "mutable",
												"name": "_dealId",
												"nameLocation": "4554:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 1586,
												"src": "4540:21:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1568,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4540:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1572,
												"mutability": "mutable",
												"name": "_status",
												"nameLocation": "4578:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 1586,
												"src": "4563:22:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_ContractStatus_$1381",
													"typeString": "enum EtharisEscrow.ContractStatus"
												},
												"typeName": {
													"id": 1571,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1570,
														"name": "ContractStatus",
														"nameLocations": [
															"4563:14:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1381,
														"src": "4563:14:13"
													},
													"referencedDeclaration": 1381,
													"src": "4563:14:13",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_ContractStatus_$1381",
														"typeString": "enum EtharisEscrow.ContractStatus"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4539:47:13"
									},
									"src": "4522:158:13",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1645,
										"nodeType": "Block",
										"src": "4847:381:13",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1600,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1595,
														"name": "idrxToken_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1588,
														"src": "4861:10:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1598,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4883:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1597,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4875:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1596,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "4875:7:13",
																"typeDescriptions": {}
															}
														},
														"id": 1599,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4875:10:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4861:24:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1604,
												"nodeType": "IfStatement",
												"src": "4857:53:13",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1601,
															"name": "InvalidAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1309,
															"src": "4894:14:13",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1602,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4894:16:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1603,
													"nodeType": "RevertStatement",
													"src": "4887:23:13"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1610,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1605,
														"name": "feeRecipient_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1590,
														"src": "4924:13:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1608,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4949:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1607,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4941:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1606,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "4941:7:13",
																"typeDescriptions": {}
															}
														},
														"id": 1609,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4941:10:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4924:27:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1614,
												"nodeType": "IfStatement",
												"src": "4920:56:13",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1611,
															"name": "InvalidAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1309,
															"src": "4960:14:13",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1612,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4960:16:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1613,
													"nodeType": "RevertStatement",
													"src": "4953:23:13"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1620,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1615,
														"name": "initialOwner_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1592,
														"src": "4990:13:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1618,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5015:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1617,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5007:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1616,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5007:7:13",
																"typeDescriptions": {}
															}
														},
														"id": 1619,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5007:10:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4990:27:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1624,
												"nodeType": "IfStatement",
												"src": "4986:56:13",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1621,
															"name": "InvalidAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1309,
															"src": "5026:14:13",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1622,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5026:16:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1623,
													"nodeType": "RevertStatement",
													"src": "5019:23:13"
												}
											},
											{
												"expression": {
													"id": 1629,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1625,
														"name": "_idrxToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1358,
														"src": "5053:10:13",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$720",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1627,
																"name": "idrxToken_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1588,
																"src": "5073:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1626,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 720,
															"src": "5066:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$720_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 1628,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5066:18:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$720",
															"typeString": "contract IERC20"
														}
													},
													"src": "5053:31:13",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$720",
														"typeString": "contract IERC20"
													}
												},
												"id": 1630,
												"nodeType": "ExpressionStatement",
												"src": "5053:31:13"
											},
											{
												"expression": {
													"id": 1633,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1631,
														"name": "_feeRecipient",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1369,
														"src": "5094:13:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1632,
														"name": "feeRecipient_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1590,
														"src": "5110:13:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5094:29:13",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1634,
												"nodeType": "ExpressionStatement",
												"src": "5094:29:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1636,
															"name": "SERVER_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1374,
															"src": "5145:11:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1637,
															"name": "initialOwner_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1592,
															"src": "5158:13:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1635,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 257,
														"src": "5134:10:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 1638,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5134:38:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1639,
												"nodeType": "ExpressionStatement",
												"src": "5134:38:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1641,
															"name": "SERVER_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1374,
															"src": "5196:11:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1642,
															"name": "SERVER_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1374,
															"src": "5209:11:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1640,
														"name": "_setRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 218,
														"src": "5182:13:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32,bytes32)"
														}
													},
													"id": 1643,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5182:39:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1644,
												"nodeType": "ExpressionStatement",
												"src": "5182:39:13"
											}
										]
									},
									"id": 1646,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1593,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1588,
												"mutability": "mutable",
												"name": "idrxToken_",
												"nameLocation": "4760:10:13",
												"nodeType": "VariableDeclaration",
												"scope": 1646,
												"src": "4752:18:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1587,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4752:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1590,
												"mutability": "mutable",
												"name": "feeRecipient_",
												"nameLocation": "4788:13:13",
												"nodeType": "VariableDeclaration",
												"scope": 1646,
												"src": "4780:21:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1589,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4780:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1592,
												"mutability": "mutable",
												"name": "initialOwner_",
												"nameLocation": "4819:13:13",
												"nodeType": "VariableDeclaration",
												"scope": 1646,
												"src": "4811:21:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1591,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4811:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4742:96:13"
									},
									"returnParameters": {
										"id": 1594,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4847:0:13"
									},
									"scope": 3190,
									"src": "4731:497:13",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1822,
										"nodeType": "Block",
										"src": "5812:1298:13",
										"statements": [
											{
												"condition": {
													"expression": {
														"baseExpression": {
															"id": 1667,
															"name": "_deals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1420,
															"src": "5826:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_Deal_$1415_storage_$",
																"typeString": "mapping(string memory => struct EtharisEscrow.Deal storage ref)"
															}
														},
														"id": 1669,
														"indexExpression": {
															"id": 1668,
															"name": "_dealId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1649,
															"src": "5833:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "5826:15:13",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Deal_$1415_storage",
															"typeString": "struct EtharisEscrow.Deal storage ref"
														}
													},
													"id": 1670,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "5842:6:13",
													"memberName": "exists",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1414,
													"src": "5826:22:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1674,
												"nodeType": "IfStatement",
												"src": "5822:54:13",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1671,
															"name": "DealAlreadyExists",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1307,
															"src": "5857:17:13",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1672,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5857:19:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1673,
													"nodeType": "RevertStatement",
													"src": "5850:26:13"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1680,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1675,
														"name": "_creatorAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1653,
														"src": "5890:15:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1678,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5917:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1677,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5909:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1676,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5909:7:13",
																"typeDescriptions": {}
															}
														},
														"id": 1679,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5909:10:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5890:29:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1684,
												"nodeType": "IfStatement",
												"src": "5886:58:13",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1681,
															"name": "InvalidAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1309,
															"src": "5928:14:13",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1682,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5928:16:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1683,
													"nodeType": "RevertStatement",
													"src": "5921:23:13"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1690,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1685,
														"name": "_brandAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1651,
														"src": "5958:13:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1688,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5983:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1687,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5975:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1686,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5975:7:13",
																"typeDescriptions": {}
															}
														},
														"id": 1689,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5975:10:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5958:27:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1694,
												"nodeType": "IfStatement",
												"src": "5954:56:13",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1691,
															"name": "InvalidAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1309,
															"src": "5994:14:13",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1692,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5994:16:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1693,
													"nodeType": "RevertStatement",
													"src": "5987:23:13"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1697,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1695,
														"name": "_brandAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1651,
														"src": "6024:13:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 1696,
														"name": "_creatorAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1653,
														"src": "6041:15:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6024:32:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1701,
												"nodeType": "IfStatement",
												"src": "6020:67:13",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1698,
															"name": "CreatorCannotBeBrand",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1311,
															"src": "6065:20:13",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1699,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6065:22:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1700,
													"nodeType": "RevertStatement",
													"src": "6058:29:13"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													},
													"id": 1704,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1702,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1655,
														"src": "6101:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1703,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6112:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6101:12:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1708,
												"nodeType": "IfStatement",
												"src": "6097:54:13",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1705,
															"name": "AmountMustBeGreaterThanZero",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1313,
															"src": "6122:27:13",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1706,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6122:29:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1707,
													"nodeType": "RevertStatement",
													"src": "6115:36:13"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1712,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1709,
														"name": "_deadline",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1657,
														"src": "6165:9:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"expression": {
															"id": 1710,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "6178:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1711,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6184:9:13",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "6178:15:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6165:28:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1716,
												"nodeType": "IfStatement",
												"src": "6161:65:13",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1713,
															"name": "DeadlineMustBeInFuture",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1315,
															"src": "6202:22:13",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1714,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6202:24:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1715,
													"nodeType": "RevertStatement",
													"src": "6195:31:13"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1723,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1719,
																	"name": "_briefHash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1659,
																	"src": "6246:10:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1718,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6240:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																	"typeString": "type(bytes storage pointer)"
																},
																"typeName": {
																	"id": 1717,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "6240:5:13",
																	"typeDescriptions": {}
																}
															},
															"id": 1720,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6240:17:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1721,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6258:6:13",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6240:24:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1722,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6268:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6240:29:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1727,
												"nodeType": "IfStatement",
												"src": "6236:61:13",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1724,
															"name": "BriefHashRequired",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1317,
															"src": "6278:17:13",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1725,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6278:19:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1726,
													"nodeType": "RevertStatement",
													"src": "6271:26:13"
												}
											},
											{
												"assignments": [
													1730
												],
												"declarations": [
													{
														"constant": false,
														"id": 1730,
														"mutability": "mutable",
														"name": "deal",
														"nameLocation": "6392:4:13",
														"nodeType": "VariableDeclaration",
														"scope": 1822,
														"src": "6379:17:13",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Deal_$1415_storage_ptr",
															"typeString": "struct EtharisEscrow.Deal"
														},
														"typeName": {
															"id": 1729,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1728,
																"name": "Deal",
																"nameLocations": [
																	"6379:4:13"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1415,
																"src": "6379:4:13"
															},
															"referencedDeclaration": 1415,
															"src": "6379:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Deal_$1415_storage_ptr",
																"typeString": "struct EtharisEscrow.Deal"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1734,
												"initialValue": {
													"baseExpression": {
														"id": 1731,
														"name": "_deals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1420,
														"src": "6399:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_Deal_$1415_storage_$",
															"typeString": "mapping(string memory => struct EtharisEscrow.Deal storage ref)"
														}
													},
													"id": 1733,
													"indexExpression": {
														"id": 1732,
														"name": "_dealId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1649,
														"src": "6406:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6399:15:13",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Deal_$1415_storage",
														"typeString": "struct EtharisEscrow.Deal storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6379:35:13"
											},
											{
												"expression": {
													"id": 1739,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1735,
															"name": "deal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1730,
															"src": "6424:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Deal_$1415_storage_ptr",
																"typeString": "struct EtharisEscrow.Deal storage pointer"
															}
														},
														"id": 1737,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6429:6:13",
														"memberName": "dealId",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1387,
														"src": "6424:11:13",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1738,
														"name": "_dealId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1649,
														"src": "6438:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "6424:21:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 1740,
												"nodeType": "ExpressionStatement",
												"src": "6424:21:13"
											},
											{
												"expression": {
													"id": 1745,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1741,
															"name": "deal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1730,
															"src": "6455:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Deal_$1415_storage_ptr",
																"typeString": "struct EtharisEscrow.Deal storage pointer"
															}
														},
														"id": 1743,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6460:5:13",
														"memberName": "brand",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1383,
														"src": "6455:10:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1744,
														"name": "_brandAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1651,
														"src": "6468:13:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6455:26:13",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1746,
												"nodeType": "ExpressionStatement",
												"src": "6455:26:13"
											},
											{
												"expression": {
													"id": 1751,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1747,
															"name": "deal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1730,
															"src": "6491:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Deal_$1415_storage_ptr",
																"typeString": "struct EtharisEscrow.Deal storage pointer"
															}
														},
														"id": 1749,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6496:7:13",
														"memberName": "creator",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1385,
														"src": "6491:12:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1750,
														"name": "_creatorAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1653,
														"src": "6506:15:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6491:30:13",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1752,
												"nodeType": "ExpressionStatement",
												"src": "6491:30:13"
											},
											{
												"expression": {
													"id": 1757,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1753,
															"name": "deal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1730,
															"src": "6531:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Deal_$1415_storage_ptr",
																"typeString": "struct EtharisEscrow.Deal storage pointer"
															}
														},
														"id": 1755,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6536:6:13",
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1395,
														"src": "6531:11:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1756,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1655,
														"src": "6545:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"src": "6531:21:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"id": 1758,
												"nodeType": "ExpressionStatement",
												"src": "6531:21:13"
											},
											{
												"expression": {
													"id": 1763,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1759,
															"name": "deal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1730,
															"src": "6562:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Deal_$1415_storage_ptr",
																"typeString": "struct EtharisEscrow.Deal storage pointer"
															}
														},
														"id": 1761,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6567:8:13",
														"memberName": "deadline",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1397,
														"src": "6562:13:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1762,
														"name": "_deadline",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1657,
														"src": "6578:9:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "6562:25:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 1764,
												"nodeType": "ExpressionStatement",
												"src": "6562:25:13"
											},
											{
												"expression": {
													"id": 1769,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1765,
															"name": "deal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1730,
															"src": "6597:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Deal_$1415_storage_ptr",
																"typeString": "struct EtharisEscrow.Deal storage pointer"
															}
														},
														"id": 1767,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6602:9:13",
														"memberName": "briefHash",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1389,
														"src": "6597:14:13",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1768,
														"name": "_briefHash",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1659,
														"src": "6614:10:13",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "6597:27:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 1770,
												"nodeType": "ExpressionStatement",
												"src": "6597:27:13"
											},
											{
												"expression": {
													"id": 1776,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1771,
															"name": "deal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1730,
															"src": "6634:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Deal_$1415_storage_ptr",
																"typeString": "struct EtharisEscrow.Deal storage pointer"
															}
														},
														"id": 1773,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6639:6:13",
														"memberName": "status",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1410,
														"src": "6634:11:13",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_ContractStatus_$1381",
															"typeString": "enum EtharisEscrow.ContractStatus"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1774,
															"name": "ContractStatus",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1381,
															"src": "6648:14:13",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_ContractStatus_$1381_$",
																"typeString": "type(enum EtharisEscrow.ContractStatus)"
															}
														},
														"id": 1775,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "6663:7:13",
														"memberName": "PENDING",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1375,
														"src": "6648:22:13",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_ContractStatus_$1381",
															"typeString": "enum EtharisEscrow.ContractStatus"
														}
													},
													"src": "6634:36:13",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_ContractStatus_$1381",
														"typeString": "enum EtharisEscrow.ContractStatus"
													}
												},
												"id": 1777,
												"nodeType": "ExpressionStatement",
												"src": "6634:36:13"
											},
											{
												"expression": {
													"id": 1786,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1778,
															"name": "deal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1730,
															"src": "6680:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Deal_$1415_storage_ptr",
																"typeString": "struct EtharisEscrow.Deal storage pointer"
															}
														},
														"id": 1780,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6685:9:13",
														"memberName": "createdAt",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1407,
														"src": "6680:14:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 1783,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "6704:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1784,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6710:9:13",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "6704:15:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1782,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6697:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint64_$",
																"typeString": "type(uint64)"
															},
															"typeName": {
																"id": 1781,
																"name": "uint64",
																"nodeType": "ElementaryTypeName",
																"src": "6697:6:13",
																"typeDescriptions": {}
															}
														},
														"id": 1785,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6697:23:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "6680:40:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 1787,
												"nodeType": "ExpressionStatement",
												"src": "6680:40:13"
											},
											{
												"expression": {
													"id": 1792,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1788,
															"name": "deal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1730,
															"src": "6730:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Deal_$1415_storage_ptr",
																"typeString": "struct EtharisEscrow.Deal storage pointer"
															}
														},
														"id": 1790,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6735:10:13",
														"memberName": "contentUrl",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1391,
														"src": "6730:15:13",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "",
														"id": 1791,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6748:2:13",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
															"typeString": "literal_string \"\""
														},
														"value": ""
													},
													"src": "6730:20:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 1793,
												"nodeType": "ExpressionStatement",
												"src": "6730:20:13"
											},
											{
												"expression": {
													"id": 1798,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1794,
															"name": "deal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1730,
															"src": "6760:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Deal_$1415_storage_ptr",
																"typeString": "struct EtharisEscrow.Deal storage pointer"
															}
														},
														"id": 1796,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6765:6:13",
														"memberName": "exists",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1414,
														"src": "6760:11:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1797,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6774:4:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "6760:18:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1799,
												"nodeType": "ExpressionStatement",
												"src": "6760:18:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1804,
															"name": "_dealId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1649,
															"src": "6883:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"expression": {
															"baseExpression": {
																"id": 1800,
																"name": "_brandDeals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1425,
																"src": "6851:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_string_storage_$dyn_storage_$",
																	"typeString": "mapping(address => string storage ref[] storage ref)"
																}
															},
															"id": 1802,
															"indexExpression": {
																"id": 1801,
																"name": "_brandAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1651,
																"src": "6863:13:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "6851:26:13",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
																"typeString": "string storage ref[] storage ref"
															}
														},
														"id": 1803,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6878:4:13",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "6851:31:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_string_storage_$dyn_storage_ptr_$_t_string_storage_$returns$__$attached_to$_t_array$_t_string_storage_$dyn_storage_ptr_$",
															"typeString": "function (string storage ref[] storage pointer,string storage ref)"
														}
													},
													"id": 1805,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6851:40:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1806,
												"nodeType": "ExpressionStatement",
												"src": "6851:40:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1811,
															"name": "_dealId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1649,
															"src": "6937:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"expression": {
															"baseExpression": {
																"id": 1807,
																"name": "_creatorDeals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1430,
																"src": "6901:13:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_string_storage_$dyn_storage_$",
																	"typeString": "mapping(address => string storage ref[] storage ref)"
																}
															},
															"id": 1809,
															"indexExpression": {
																"id": 1808,
																"name": "_creatorAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1653,
																"src": "6915:15:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "6901:30:13",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
																"typeString": "string storage ref[] storage ref"
															}
														},
														"id": 1810,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6932:4:13",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "6901:35:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_string_storage_$dyn_storage_ptr_$_t_string_storage_$returns$__$attached_to$_t_array$_t_string_storage_$dyn_storage_ptr_$",
															"typeString": "function (string storage ref[] storage pointer,string storage ref)"
														}
													},
													"id": 1812,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6901:44:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1813,
												"nodeType": "ExpressionStatement",
												"src": "6901:44:13"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1815,
															"name": "_dealId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1649,
															"src": "6986:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"id": 1816,
															"name": "_brandAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1651,
															"src": "7007:13:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1817,
															"name": "_creatorAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1653,
															"src": "7034:15:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1818,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1655,
															"src": "7063:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														},
														{
															"id": 1819,
															"name": "_deadline",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1657,
															"src": "7084:9:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															},
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														],
														"id": 1814,
														"name": "DealCreated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1442,
														"src": "6961:11:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_address_$_t_address_$_t_uint96_$_t_uint64_$returns$__$",
															"typeString": "function (string memory,address,address,uint96,uint64)"
														}
													},
													"id": 1820,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6961:142:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1821,
												"nodeType": "EmitStatement",
												"src": "6956:147:13"
											}
										]
									},
									"documentation": {
										"id": 1647,
										"nodeType": "StructuredDocumentation",
										"src": "5441:116:13",
										"text": " @notice [CUSTODIAL] Brand creates a new deal.\n @dev Only SERVER_ROLE can call this function"
									},
									"functionSelector": "e4abd4cb",
									"id": 1823,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1662,
													"name": "SERVER_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1374,
													"src": "5785:11:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 1663,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1661,
												"name": "onlyRole",
												"nameLocations": [
													"5776:8:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 41,
												"src": "5776:8:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "5776:21:13"
										},
										{
											"id": 1665,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1664,
												"name": "whenNotPaused",
												"nameLocations": [
													"5798:13:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 504,
												"src": "5798:13:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "5798:13:13"
										}
									],
									"name": "createDeal",
									"nameLocation": "5571:10:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1660,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1649,
												"mutability": "mutable",
												"name": "_dealId",
												"nameLocation": "5605:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 1823,
												"src": "5591:21:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1648,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5591:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1651,
												"mutability": "mutable",
												"name": "_brandAddress",
												"nameLocation": "5630:13:13",
												"nodeType": "VariableDeclaration",
												"scope": 1823,
												"src": "5622:21:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1650,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5622:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1653,
												"mutability": "mutable",
												"name": "_creatorAddress",
												"nameLocation": "5661:15:13",
												"nodeType": "VariableDeclaration",
												"scope": 1823,
												"src": "5653:23:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1652,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5653:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1655,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "5693:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 1823,
												"src": "5686:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 1654,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "5686:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1657,
												"mutability": "mutable",
												"name": "_deadline",
												"nameLocation": "5717:9:13",
												"nodeType": "VariableDeclaration",
												"scope": 1823,
												"src": "5710:16:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 1656,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "5710:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1659,
												"mutability": "mutable",
												"name": "_briefHash",
												"nameLocation": "5750:10:13",
												"nodeType": "VariableDeclaration",
												"scope": 1823,
												"src": "5736:24:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1658,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5736:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5581:185:13"
									},
									"returnParameters": {
										"id": 1666,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5812:0:13"
									},
									"scope": 3190,
									"src": "5562:1548:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1987,
										"nodeType": "Block",
										"src": "7713:1146:13",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1866,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1862,
																	"name": "_dealId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1826,
																	"src": "7733:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1861,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7727:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																	"typeString": "type(bytes storage pointer)"
																},
																"typeName": {
																	"id": 1860,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "7727:5:13",
																	"typeDescriptions": {}
																}
															},
															"id": 1863,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7727:14:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1864,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7742:6:13",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "7727:21:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1865,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7752:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7727:26:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1870,
												"nodeType": "IfStatement",
												"src": "7723:54:13",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1867,
															"name": "InvalidDealID",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1351,
															"src": "7762:13:13",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1868,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7762:15:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1869,
													"nodeType": "RevertStatement",
													"src": "7755:22:13"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													},
													"id": 1873,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1871,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1830,
														"src": "7791:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1872,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7802:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7791:12:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1877,
												"nodeType": "IfStatement",
												"src": "7787:40:13",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1874,
															"name": "InvalidAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1353,
															"src": "7812:13:13",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1875,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7812:15:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1876,
													"nodeType": "RevertStatement",
													"src": "7805:22:13"
												}
											},
											{
												"assignments": [
													1880
												],
												"declarations": [
													{
														"constant": false,
														"id": 1880,
														"mutability": "mutable",
														"name": "deal",
														"nameLocation": "7851:4:13",
														"nodeType": "VariableDeclaration",
														"scope": 1987,
														"src": "7838:17:13",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Deal_$1415_storage_ptr",
															"typeString": "struct EtharisEscrow.Deal"
														},
														"typeName": {
															"id": 1879,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1878,
																"name": "Deal",
																"nameLocations": [
																	"7838:4:13"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1415,
																"src": "7838:4:13"
															},
															"referencedDeclaration": 1415,
															"src": "7838:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Deal_$1415_storage_ptr",
																"typeString": "struct EtharisEscrow.Deal"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1884,
												"initialValue": {
													"baseExpression": {
														"id": 1881,
														"name": "_deals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1420,
														"src": "7858:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_Deal_$1415_storage_$",
															"typeString": "mapping(string memory => struct EtharisEscrow.Deal storage ref)"
														}
													},
													"id": 1883,
													"indexExpression": {
														"id": 1882,
														"name": "_dealId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1826,
														"src": "7865:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7858:15:13",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Deal_$1415_storage",
														"typeString": "struct EtharisEscrow.Deal storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7838:35:13"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													},
													"id": 1888,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1885,
															"name": "deal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1880,
															"src": "7888:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Deal_$1415_storage_ptr",
																"typeString": "struct EtharisEscrow.Deal storage pointer"
															}
														},
														"id": 1886,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7893:8:13",
														"memberName": "fundedAt",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1399,
														"src": "7888:13:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1887,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7905:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7888:18:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1892,
												"nodeType": "IfStatement",
												"src": "7884:50:13",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1889,
															"name": "DealAlreadyFunded",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1325,
															"src": "7915:17:13",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1890,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7915:19:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1891,
													"nodeType": "RevertStatement",
													"src": "7908:26:13"
												}
											},
											{
												"assignments": [
													1894
												],
												"declarations": [
													{
														"constant": false,
														"id": 1894,
														"mutability": "mutable",
														"name": "cachedThis",
														"nameLocation": "7996:10:13",
														"nodeType": "VariableDeclaration",
														"scope": 1987,
														"src": "7988:18:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1893,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "7988:7:13",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1899,
												"initialValue": {
													"arguments": [
														{
															"id": 1897,
															"name": "this",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967268,
															"src": "8017:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_EtharisEscrow_$3190",
																"typeString": "contract EtharisEscrow"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_EtharisEscrow_$3190",
																"typeString": "contract EtharisEscrow"
															}
														],
														"id": 1896,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "8009:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 1895,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "8009:7:13",
															"typeDescriptions": {}
														}
													},
													"id": 1898,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8009:13:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7988:34:13"
											},
											{
												"assignments": [
													1902
												],
												"declarations": [
													{
														"constant": false,
														"id": 1902,
														"mutability": "mutable",
														"name": "token",
														"nameLocation": "8039:5:13",
														"nodeType": "VariableDeclaration",
														"scope": 1987,
														"src": "8032:12:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$720",
															"typeString": "contract IERC20"
														},
														"typeName": {
															"id": 1901,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1900,
																"name": "IERC20",
																"nameLocations": [
																	"8032:6:13"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 720,
																"src": "8032:6:13"
															},
															"referencedDeclaration": 720,
															"src": "8032:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$720",
																"typeString": "contract IERC20"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1904,
												"initialValue": {
													"id": 1903,
													"name": "_idrxToken",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1358,
													"src": "8047:10:13",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$720",
														"typeString": "contract IERC20"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8032:25:13"
											},
											{
												"assignments": [
													1906
												],
												"declarations": [
													{
														"constant": false,
														"id": 1906,
														"mutability": "mutable",
														"name": "brandBalance",
														"nameLocation": "8076:12:13",
														"nodeType": "VariableDeclaration",
														"scope": 1987,
														"src": "8068:20:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1905,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8068:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1911,
												"initialValue": {
													"arguments": [
														{
															"id": 1909,
															"name": "_brandAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1828,
															"src": "8107:13:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1907,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1902,
															"src": "8091:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$720",
																"typeString": "contract IERC20"
															}
														},
														"id": 1908,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8097:9:13",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 677,
														"src": "8091:15:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1910,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8091:30:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8068:53:13"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1914,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1912,
														"name": "brandBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1906,
														"src": "8135:12:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1913,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1830,
														"src": "8150:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"src": "8135:22:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1918,
												"nodeType": "IfStatement",
												"src": "8131:56:13",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1915,
															"name": "InsufficientBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1327,
															"src": "8166:19:13",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1916,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8166:21:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1917,
													"nodeType": "RevertStatement",
													"src": "8159:28:13"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1935,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 1928,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															"id": 1921,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1919,
																"name": "_v",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1834,
																"src": "8264:2:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 1920,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8270:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8264:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															"id": 1927,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1922,
																"name": "_r",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1836,
																"src": "8275:2:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1925,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8289:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1924,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8281:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes32_$",
																		"typeString": "type(bytes32)"
																	},
																	"typeName": {
																		"id": 1923,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "8281:7:13",
																		"typeDescriptions": {}
																	}
																},
																"id": 1926,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8281:10:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"src": "8275:16:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "8264:27:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"id": 1934,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1929,
															"name": "_s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1838,
															"src": "8295:2:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1932,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8309:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1931,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8301:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 1930,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "8301:7:13",
																	"typeDescriptions": {}
																}
															},
															"id": 1933,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8301:10:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"src": "8295:16:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "8264:47:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1947,
												"nodeType": "IfStatement",
												"src": "8260:277:13",
												"trueBody": {
													"id": 1946,
													"nodeType": "Block",
													"src": "8313:224:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1937,
																		"name": "_brandAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1828,
																		"src": "8359:13:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1938,
																		"name": "cachedThis",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1894,
																		"src": "8390:10:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1939,
																		"name": "_amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1830,
																		"src": "8418:7:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint96",
																			"typeString": "uint96"
																		}
																	},
																	{
																		"id": 1940,
																		"name": "_deadline",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1832,
																		"src": "8443:9:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1941,
																		"name": "_v",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1834,
																		"src": "8470:2:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	{
																		"id": 1942,
																		"name": "_r",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1836,
																		"src": "8490:2:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 1943,
																		"name": "_s",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1838,
																		"src": "8510:2:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint96",
																			"typeString": "uint96"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 1936,
																	"name": "_executePermit",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3189,
																	"src": "8327:14:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$__$",
																		"typeString": "function (address,address,uint256,uint256,uint8,bytes32,bytes32)"
																	}
																},
																"id": 1944,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8327:199:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1945,
															"nodeType": "ExpressionStatement",
															"src": "8327:199:13"
														}
													]
												}
											},
											{
												"assignments": [
													1949
												],
												"declarations": [
													{
														"constant": false,
														"id": 1949,
														"mutability": "mutable",
														"name": "allowance",
														"nameLocation": "8555:9:13",
														"nodeType": "VariableDeclaration",
														"scope": 1987,
														"src": "8547:17:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1948,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8547:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1955,
												"initialValue": {
													"arguments": [
														{
															"id": 1952,
															"name": "_brandAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1828,
															"src": "8583:13:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1953,
															"name": "cachedThis",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1894,
															"src": "8598:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1950,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1902,
															"src": "8567:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$720",
																"typeString": "contract IERC20"
															}
														},
														"id": 1951,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8573:9:13",
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 697,
														"src": "8567:15:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 1954,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8567:42:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8547:62:13"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1958,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1956,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1949,
														"src": "8623:9:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1957,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1830,
														"src": "8635:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"src": "8623:19:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1962,
												"nodeType": "IfStatement",
												"src": "8619:55:13",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1959,
															"name": "InsufficientAllowance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1329,
															"src": "8651:21:13",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1960,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8651:23:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1961,
													"nodeType": "RevertStatement",
													"src": "8644:30:13"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1966,
															"name": "_brandAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1828,
															"src": "8708:13:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1967,
															"name": "cachedThis",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1894,
															"src": "8723:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1968,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1830,
															"src": "8735:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														],
														"expression": {
															"id": 1963,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1902,
															"src": "8685:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$720",
																"typeString": "contract IERC20"
															}
														},
														"id": 1965,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8691:16:13",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 828,
														"src": "8685:22:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$720_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$720_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 1969,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8685:58:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1970,
												"nodeType": "ExpressionStatement",
												"src": "8685:58:13"
											},
											{
												"expression": {
													"id": 1979,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1971,
															"name": "deal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1880,
															"src": "8754:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Deal_$1415_storage_ptr",
																"typeString": "struct EtharisEscrow.Deal storage pointer"
															}
														},
														"id": 1973,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "8759:8:13",
														"memberName": "fundedAt",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1399,
														"src": "8754:13:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 1976,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "8777:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1977,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8783:9:13",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "8777:15:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1975,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8770:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint64_$",
																"typeString": "type(uint64)"
															},
															"typeName": {
																"id": 1974,
																"name": "uint64",
																"nodeType": "ElementaryTypeName",
																"src": "8770:6:13",
																"typeDescriptions": {}
															}
														},
														"id": 1978,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8770:23:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "8754:39:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 1980,
												"nodeType": "ExpressionStatement",
												"src": "8754:39:13"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1982,
															"name": "_dealId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1826,
															"src": "8820:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"id": 1983,
															"name": "_brandAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1828,
															"src": "8829:13:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1984,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1830,
															"src": "8844:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														],
														"id": 1981,
														"name": "DealFunded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1450,
														"src": "8809:10:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_address_$_t_uint96_$returns$__$",
															"typeString": "function (string memory,address,uint96)"
														}
													},
													"id": 1985,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8809:43:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1986,
												"nodeType": "EmitStatement",
												"src": "8804:48:13"
											}
										]
									},
									"documentation": {
										"id": 1824,
										"nodeType": "StructuredDocumentation",
										"src": "7116:179:13",
										"text": " @notice [CUSTODIAL] Brand fund deal with gasless permit support\n @dev Brands sign permit off-chain, server executes with signature for gasless transaction"
									},
									"functionSelector": "9f1cf42d",
									"id": 1988,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1841,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1840,
												"name": "nonReentrant",
												"nameLocations": [
													"7520:12:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 607,
												"src": "7520:12:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "7520:12:13"
										},
										{
											"arguments": [
												{
													"id": 1843,
													"name": "SERVER_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1374,
													"src": "7550:11:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 1844,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1842,
												"name": "onlyRole",
												"nameLocations": [
													"7541:8:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 41,
												"src": "7541:8:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "7541:21:13"
										},
										{
											"id": 1846,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1845,
												"name": "whenNotPaused",
												"nameLocations": [
													"7571:13:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 504,
												"src": "7571:13:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "7571:13:13"
										},
										{
											"arguments": [
												{
													"id": 1848,
													"name": "_dealId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1826,
													"src": "7604:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												}
											],
											"id": 1849,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1847,
												"name": "dealExists",
												"nameLocations": [
													"7593:10:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1567,
												"src": "7593:10:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "7593:19:13"
										},
										{
											"arguments": [
												{
													"id": 1851,
													"name": "_dealId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1826,
													"src": "7635:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												{
													"id": 1852,
													"name": "_brandAddress",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1828,
													"src": "7644:13:13",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1853,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1850,
												"name": "onlyDealBrand",
												"nameLocations": [
													"7621:13:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1534,
												"src": "7621:13:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "7621:37:13"
										},
										{
											"arguments": [
												{
													"id": 1855,
													"name": "_dealId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1826,
													"src": "7676:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												{
													"expression": {
														"id": 1856,
														"name": "ContractStatus",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1381,
														"src": "7685:14:13",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_enum$_ContractStatus_$1381_$",
															"typeString": "type(enum EtharisEscrow.ContractStatus)"
														}
													},
													"id": 1857,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberLocation": "7700:7:13",
													"memberName": "PENDING",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1375,
													"src": "7685:22:13",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_ContractStatus_$1381",
														"typeString": "enum EtharisEscrow.ContractStatus"
													}
												}
											],
											"id": 1858,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1854,
												"name": "inStatus",
												"nameLocations": [
													"7667:8:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1586,
												"src": "7667:8:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "7667:41:13"
										}
									],
									"name": "fundDeal",
									"nameLocation": "7309:8:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1839,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1826,
												"mutability": "mutable",
												"name": "_dealId",
												"nameLocation": "7341:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 1988,
												"src": "7327:21:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1825,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7327:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1828,
												"mutability": "mutable",
												"name": "_brandAddress",
												"nameLocation": "7366:13:13",
												"nodeType": "VariableDeclaration",
												"scope": 1988,
												"src": "7358:21:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1827,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7358:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1830,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "7396:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 1988,
												"src": "7389:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 1829,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "7389:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1832,
												"mutability": "mutable",
												"name": "_deadline",
												"nameLocation": "7421:9:13",
												"nodeType": "VariableDeclaration",
												"scope": 1988,
												"src": "7413:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1831,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7413:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1834,
												"mutability": "mutable",
												"name": "_v",
												"nameLocation": "7446:2:13",
												"nodeType": "VariableDeclaration",
												"scope": 1988,
												"src": "7440:8:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1833,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "7440:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1836,
												"mutability": "mutable",
												"name": "_r",
												"nameLocation": "7466:2:13",
												"nodeType": "VariableDeclaration",
												"scope": 1988,
												"src": "7458:10:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1835,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7458:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1838,
												"mutability": "mutable",
												"name": "_s",
												"nameLocation": "7486:2:13",
												"nodeType": "VariableDeclaration",
												"scope": 1988,
												"src": "7478:10:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1837,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7478:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7317:177:13"
									},
									"returnParameters": {
										"id": 1859,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7713:0:13"
									},
									"scope": 3190,
									"src": "7300:1559:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2040,
										"nodeType": "Block",
										"src": "9231:209:13",
										"statements": [
											{
												"assignments": [
													2015
												],
												"declarations": [
													{
														"constant": false,
														"id": 2015,
														"mutability": "mutable",
														"name": "deal",
														"nameLocation": "9254:4:13",
														"nodeType": "VariableDeclaration",
														"scope": 2040,
														"src": "9241:17:13",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Deal_$1415_storage_ptr",
															"typeString": "struct EtharisEscrow.Deal"
														},
														"typeName": {
															"id": 2014,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2013,
																"name": "Deal",
																"nameLocations": [
																	"9241:4:13"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1415,
																"src": "9241:4:13"
															},
															"referencedDeclaration": 1415,
															"src": "9241:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Deal_$1415_storage_ptr",
																"typeString": "struct EtharisEscrow.Deal"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2019,
												"initialValue": {
													"baseExpression": {
														"id": 2016,
														"name": "_deals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1420,
														"src": "9261:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_Deal_$1415_storage_$",
															"typeString": "mapping(string memory => struct EtharisEscrow.Deal storage ref)"
														}
													},
													"id": 2018,
													"indexExpression": {
														"id": 2017,
														"name": "_dealId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1991,
														"src": "9268:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9261:15:13",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Deal_$1415_storage",
														"typeString": "struct EtharisEscrow.Deal storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9241:35:13"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													},
													"id": 2023,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 2020,
															"name": "deal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2015,
															"src": "9291:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Deal_$1415_storage_ptr",
																"typeString": "struct EtharisEscrow.Deal storage pointer"
															}
														},
														"id": 2021,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9296:8:13",
														"memberName": "fundedAt",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1399,
														"src": "9291:13:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2022,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9308:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "9291:18:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2027,
												"nodeType": "IfStatement",
												"src": "9287:46:13",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 2024,
															"name": "DealNotFunded",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1331,
															"src": "9318:13:13",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 2025,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9318:15:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 2026,
													"nodeType": "RevertStatement",
													"src": "9311:22:13"
												}
											},
											{
												"expression": {
													"id": 2033,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2028,
															"name": "deal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2015,
															"src": "9344:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Deal_$1415_storage_ptr",
																"typeString": "struct EtharisEscrow.Deal storage pointer"
															}
														},
														"id": 2030,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "9349:6:13",
														"memberName": "status",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1410,
														"src": "9344:11:13",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_ContractStatus_$1381",
															"typeString": "enum EtharisEscrow.ContractStatus"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 2031,
															"name": "ContractStatus",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1381,
															"src": "9358:14:13",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_ContractStatus_$1381_$",
																"typeString": "type(enum EtharisEscrow.ContractStatus)"
															}
														},
														"id": 2032,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "9373:6:13",
														"memberName": "ACTIVE",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1376,
														"src": "9358:21:13",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_ContractStatus_$1381",
															"typeString": "enum EtharisEscrow.ContractStatus"
														}
													},
													"src": "9344:35:13",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_ContractStatus_$1381",
														"typeString": "enum EtharisEscrow.ContractStatus"
													}
												},
												"id": 2034,
												"nodeType": "ExpressionStatement",
												"src": "9344:35:13"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2036,
															"name": "_dealId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1991,
															"src": "9408:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"id": 2037,
															"name": "_creatorAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1993,
															"src": "9417:15:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2035,
														"name": "DealApproved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1466,
														"src": "9395:12:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_address_$returns$__$",
															"typeString": "function (string memory,address)"
														}
													},
													"id": 2038,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9395:38:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2039,
												"nodeType": "EmitStatement",
												"src": "9390:43:13"
											}
										]
									},
									"documentation": {
										"id": 1989,
										"nodeType": "StructuredDocumentation",
										"src": "8865:70:13",
										"text": " @notice [CUSTODIAL] Creator accepts the funded deal"
									},
									"functionSelector": "9b1221ab",
									"id": 2041,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1996,
													"name": "SERVER_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1374,
													"src": "9064:11:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 1997,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1995,
												"name": "onlyRole",
												"nameLocations": [
													"9055:8:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 41,
												"src": "9055:8:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "9055:21:13"
										},
										{
											"id": 1999,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1998,
												"name": "whenNotPaused",
												"nameLocations": [
													"9085:13:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 504,
												"src": "9085:13:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "9085:13:13"
										},
										{
											"arguments": [
												{
													"id": 2001,
													"name": "_dealId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1991,
													"src": "9118:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												}
											],
											"id": 2002,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2000,
												"name": "dealExists",
												"nameLocations": [
													"9107:10:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1567,
												"src": "9107:10:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "9107:19:13"
										},
										{
											"arguments": [
												{
													"id": 2004,
													"name": "_dealId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1991,
													"src": "9151:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												{
													"id": 2005,
													"name": "_creatorAddress",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1993,
													"src": "9160:15:13",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 2006,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2003,
												"name": "onlyDealCreator",
												"nameLocations": [
													"9135:15:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1552,
												"src": "9135:15:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "9135:41:13"
										},
										{
											"arguments": [
												{
													"id": 2008,
													"name": "_dealId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1991,
													"src": "9194:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												{
													"expression": {
														"id": 2009,
														"name": "ContractStatus",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1381,
														"src": "9203:14:13",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_enum$_ContractStatus_$1381_$",
															"typeString": "type(enum EtharisEscrow.ContractStatus)"
														}
													},
													"id": 2010,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberLocation": "9218:7:13",
													"memberName": "PENDING",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1375,
													"src": "9203:22:13",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_ContractStatus_$1381",
														"typeString": "enum EtharisEscrow.ContractStatus"
													}
												}
											],
											"id": 2011,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2007,
												"name": "inStatus",
												"nameLocations": [
													"9185:8:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1586,
												"src": "9185:8:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "9185:41:13"
										}
									],
									"name": "acceptDeal",
									"nameLocation": "8949:10:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1994,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1991,
												"mutability": "mutable",
												"name": "_dealId",
												"nameLocation": "8983:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 2041,
												"src": "8969:21:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1990,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8969:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1993,
												"mutability": "mutable",
												"name": "_creatorAddress",
												"nameLocation": "9008:15:13",
												"nodeType": "VariableDeclaration",
												"scope": 2041,
												"src": "9000:23:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1992,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9000:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8959:70:13"
									},
									"returnParameters": {
										"id": 2012,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9231:0:13"
									},
									"scope": 3190,
									"src": "8940:500:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2138,
										"nodeType": "Block",
										"src": "9846:572:13",
										"statements": [
											{
												"assignments": [
													2070
												],
												"declarations": [
													{
														"constant": false,
														"id": 2070,
														"mutability": "mutable",
														"name": "deal",
														"nameLocation": "9869:4:13",
														"nodeType": "VariableDeclaration",
														"scope": 2138,
														"src": "9856:17:13",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Deal_$1415_storage_ptr",
															"typeString": "struct EtharisEscrow.Deal"
														},
														"typeName": {
															"id": 2069,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2068,
																"name": "Deal",
																"nameLocations": [
																	"9856:4:13"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1415,
																"src": "9856:4:13"
															},
															"referencedDeclaration": 1415,
															"src": "9856:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Deal_$1415_storage_ptr",
																"typeString": "struct EtharisEscrow.Deal"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2074,
												"initialValue": {
													"baseExpression": {
														"id": 2071,
														"name": "_deals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1420,
														"src": "9876:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_Deal_$1415_storage_$",
															"typeString": "mapping(string memory => struct EtharisEscrow.Deal storage ref)"
														}
													},
													"id": 2073,
													"indexExpression": {
														"id": 2072,
														"name": "_dealId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2044,
														"src": "9883:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9876:15:13",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Deal_$1415_storage",
														"typeString": "struct EtharisEscrow.Deal storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9856:35:13"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2079,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 2075,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "9906:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 2076,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9912:9:13",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "9906:15:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"id": 2077,
															"name": "deal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2070,
															"src": "9924:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Deal_$1415_storage_ptr",
																"typeString": "struct EtharisEscrow.Deal storage pointer"
															}
														},
														"id": 2078,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9929:8:13",
														"memberName": "deadline",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1397,
														"src": "9924:13:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "9906:31:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2083,
												"nodeType": "IfStatement",
												"src": "9902:70:13",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 2080,
															"name": "SubmissionDeadlinePassed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1333,
															"src": "9946:24:13",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 2081,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9946:26:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 2082,
													"nodeType": "RevertStatement",
													"src": "9939:33:13"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2090,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2086,
																	"name": "_contentUrl",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2048,
																	"src": "9992:11:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 2085,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9986:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																	"typeString": "type(bytes storage pointer)"
																},
																"typeName": {
																	"id": 2084,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "9986:5:13",
																	"typeDescriptions": {}
																}
															},
															"id": 2087,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9986:18:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 2088,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "10005:6:13",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "9986:25:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2089,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10015:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "9986:30:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2094,
												"nodeType": "IfStatement",
												"src": "9982:63:13",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 2091,
															"name": "ContentUrlRequired",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1335,
															"src": "10025:18:13",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 2092,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10025:20:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 2093,
													"nodeType": "RevertStatement",
													"src": "10018:27:13"
												}
											},
											{
												"expression": {
													"id": 2100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2095,
															"name": "deal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2070,
															"src": "10056:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Deal_$1415_storage_ptr",
																"typeString": "struct EtharisEscrow.Deal storage pointer"
															}
														},
														"id": 2097,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "10061:6:13",
														"memberName": "status",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1410,
														"src": "10056:11:13",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_ContractStatus_$1381",
															"typeString": "enum EtharisEscrow.ContractStatus"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 2098,
															"name": "ContractStatus",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1381,
															"src": "10070:14:13",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_ContractStatus_$1381_$",
																"typeString": "type(enum EtharisEscrow.ContractStatus)"
															}
														},
														"id": 2099,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10085:14:13",
														"memberName": "PENDING_REVIEW",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1377,
														"src": "10070:29:13",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_ContractStatus_$1381",
															"typeString": "enum EtharisEscrow.ContractStatus"
														}
													},
													"src": "10056:43:13",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_ContractStatus_$1381",
														"typeString": "enum EtharisEscrow.ContractStatus"
													}
												},
												"id": 2101,
												"nodeType": "ExpressionStatement",
												"src": "10056:43:13"
											},
											{
												"expression": {
													"id": 2110,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2102,
															"name": "deal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2070,
															"src": "10109:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Deal_$1415_storage_ptr",
																"typeString": "struct EtharisEscrow.Deal storage pointer"
															}
														},
														"id": 2104,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "10114:11:13",
														"memberName": "submittedAt",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1401,
														"src": "10109:16:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 2107,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "10135:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 2108,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "10141:9:13",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "10135:15:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 2106,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10128:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint64_$",
																"typeString": "type(uint64)"
															},
															"typeName": {
																"id": 2105,
																"name": "uint64",
																"nodeType": "ElementaryTypeName",
																"src": "10128:6:13",
																"typeDescriptions": {}
															}
														},
														"id": 2109,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10128:23:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "10109:42:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 2111,
												"nodeType": "ExpressionStatement",
												"src": "10109:42:13"
											},
											{
												"expression": {
													"id": 2122,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2112,
															"name": "deal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2070,
															"src": "10161:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Deal_$1415_storage_ptr",
																"typeString": "struct EtharisEscrow.Deal storage pointer"
															}
														},
														"id": 2114,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "10166:14:13",
														"memberName": "reviewDeadline",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1403,
														"src": "10161:19:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2120,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 2117,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "10190:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 2118,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "10196:9:13",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "10190:15:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 2119,
																	"name": "REVIEW_PERIOD",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1367,
																	"src": "10208:13:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"src": "10190:31:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 2116,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10183:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint64_$",
																"typeString": "type(uint64)"
															},
															"typeName": {
																"id": 2115,
																"name": "uint64",
																"nodeType": "ElementaryTypeName",
																"src": "10183:6:13",
																"typeDescriptions": {}
															}
														},
														"id": 2121,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10183:39:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "10161:61:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 2123,
												"nodeType": "ExpressionStatement",
												"src": "10161:61:13"
											},
											{
												"expression": {
													"id": 2128,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2124,
															"name": "deal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2070,
															"src": "10232:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Deal_$1415_storage_ptr",
																"typeString": "struct EtharisEscrow.Deal storage pointer"
															}
														},
														"id": 2126,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "10237:10:13",
														"memberName": "contentUrl",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1391,
														"src": "10232:15:13",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2127,
														"name": "_contentUrl",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2048,
														"src": "10250:11:13",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "10232:29:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 2129,
												"nodeType": "ExpressionStatement",
												"src": "10232:29:13"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2131,
															"name": "_dealId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2044,
															"src": "10307:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"id": 2132,
															"name": "_creatorAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2046,
															"src": "10328:15:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2133,
															"name": "_contentUrl",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2048,
															"src": "10357:11:13",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"expression": {
																"id": 2134,
																"name": "deal",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2070,
																"src": "10382:4:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Deal_$1415_storage_ptr",
																	"typeString": "struct EtharisEscrow.Deal storage pointer"
																}
															},
															"id": 2135,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10387:14:13",
															"memberName": "reviewDeadline",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1403,
															"src": "10382:19:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														],
														"id": 2130,
														"name": "ContentSubmitted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1460,
														"src": "10277:16:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_address_$_t_string_memory_ptr_$_t_uint64_$returns$__$",
															"typeString": "function (string memory,address,string memory,uint64)"
														}
													},
													"id": 2136,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10277:134:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2137,
												"nodeType": "EmitStatement",
												"src": "10272:139:13"
											}
										]
									},
									"documentation": {
										"id": 2042,
										"nodeType": "StructuredDocumentation",
										"src": "9446:67:13",
										"text": " @notice [CUSTODIAL] Creator submits the content."
									},
									"functionSelector": "4971716f",
									"id": 2139,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 2051,
													"name": "SERVER_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1374,
													"src": "9680:11:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 2052,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2050,
												"name": "onlyRole",
												"nameLocations": [
													"9671:8:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 41,
												"src": "9671:8:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "9671:21:13"
										},
										{
											"id": 2054,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2053,
												"name": "whenNotPaused",
												"nameLocations": [
													"9701:13:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 504,
												"src": "9701:13:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "9701:13:13"
										},
										{
											"arguments": [
												{
													"id": 2056,
													"name": "_dealId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2044,
													"src": "9734:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												}
											],
											"id": 2057,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2055,
												"name": "dealExists",
												"nameLocations": [
													"9723:10:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1567,
												"src": "9723:10:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "9723:19:13"
										},
										{
											"arguments": [
												{
													"id": 2059,
													"name": "_dealId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2044,
													"src": "9767:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												{
													"id": 2060,
													"name": "_creatorAddress",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2046,
													"src": "9776:15:13",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 2061,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2058,
												"name": "onlyDealCreator",
												"nameLocations": [
													"9751:15:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1552,
												"src": "9751:15:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "9751:41:13"
										},
										{
											"arguments": [
												{
													"id": 2063,
													"name": "_dealId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2044,
													"src": "9810:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												{
													"expression": {
														"id": 2064,
														"name": "ContractStatus",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1381,
														"src": "9819:14:13",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_enum$_ContractStatus_$1381_$",
															"typeString": "type(enum EtharisEscrow.ContractStatus)"
														}
													},
													"id": 2065,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberLocation": "9834:6:13",
													"memberName": "ACTIVE",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1376,
													"src": "9819:21:13",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_ContractStatus_$1381",
														"typeString": "enum EtharisEscrow.ContractStatus"
													}
												}
											],
											"id": 2066,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2062,
												"name": "inStatus",
												"nameLocations": [
													"9801:8:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1586,
												"src": "9801:8:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "9801:40:13"
										}
									],
									"name": "submitContent",
									"nameLocation": "9527:13:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2049,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2044,
												"mutability": "mutable",
												"name": "_dealId",
												"nameLocation": "9564:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 2139,
												"src": "9550:21:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2043,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "9550:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2046,
												"mutability": "mutable",
												"name": "_creatorAddress",
												"nameLocation": "9589:15:13",
												"nodeType": "VariableDeclaration",
												"scope": 2139,
												"src": "9581:23:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2045,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9581:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2048,
												"mutability": "mutable",
												"name": "_contentUrl",
												"nameLocation": "9628:11:13",
												"nodeType": "VariableDeclaration",
												"scope": 2139,
												"src": "9614:25:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2047,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "9614:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9540:105:13"
									},
									"returnParameters": {
										"id": 2067,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9846:0:13"
									},
									"scope": 3190,
									"src": "9518:900:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2240,
										"nodeType": "Block",
										"src": "10822:696:13",
										"statements": [
											{
												"assignments": [
													2168
												],
												"declarations": [
													{
														"constant": false,
														"id": 2168,
														"mutability": "mutable",
														"name": "deal",
														"nameLocation": "10845:4:13",
														"nodeType": "VariableDeclaration",
														"scope": 2240,
														"src": "10832:17:13",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Deal_$1415_storage_ptr",
															"typeString": "struct EtharisEscrow.Deal"
														},
														"typeName": {
															"id": 2167,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2166,
																"name": "Deal",
																"nameLocations": [
																	"10832:4:13"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1415,
																"src": "10832:4:13"
															},
															"referencedDeclaration": 1415,
															"src": "10832:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Deal_$1415_storage_ptr",
																"typeString": "struct EtharisEscrow.Deal"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2172,
												"initialValue": {
													"baseExpression": {
														"id": 2169,
														"name": "_deals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1420,
														"src": "10852:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_Deal_$1415_storage_$",
															"typeString": "mapping(string memory => struct EtharisEscrow.Deal storage ref)"
														}
													},
													"id": 2171,
													"indexExpression": {
														"id": 2170,
														"name": "_dealId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2142,
														"src": "10859:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "10852:15:13",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Deal_$1415_storage",
														"typeString": "struct EtharisEscrow.Deal storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10832:35:13"
											},
											{
												"assignments": [
													2174
												],
												"declarations": [
													{
														"constant": false,
														"id": 2174,
														"mutability": "mutable",
														"name": "platformFee",
														"nameLocation": "10963:11:13",
														"nodeType": "VariableDeclaration",
														"scope": 2240,
														"src": "10956:18:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														},
														"typeName": {
															"id": 2173,
															"name": "uint96",
															"nodeType": "ElementaryTypeName",
															"src": "10956:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2182,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													},
													"id": 2181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																},
																"id": 2178,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 2175,
																		"name": "deal",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2168,
																		"src": "10978:4:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Deal_$1415_storage_ptr",
																			"typeString": "struct EtharisEscrow.Deal storage pointer"
																		}
																	},
																	"id": 2176,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "10983:6:13",
																	"memberName": "amount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1395,
																	"src": "10978:11:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint96",
																		"typeString": "uint96"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2177,
																	"name": "_platformFeeBps",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1361,
																	"src": "10992:15:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint96",
																		"typeString": "uint96"
																	}
																},
																"src": "10978:29:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															}
														],
														"id": 2179,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "10977:31:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 2180,
														"name": "BPS_DENOMINATOR",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1364,
														"src": "11011:15:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"src": "10977:49:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10956:70:13"
											},
											{
												"assignments": [
													2184
												],
												"declarations": [
													{
														"constant": false,
														"id": 2184,
														"mutability": "mutable",
														"name": "creatorAmount",
														"nameLocation": "11043:13:13",
														"nodeType": "VariableDeclaration",
														"scope": 2240,
														"src": "11036:20:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														},
														"typeName": {
															"id": 2183,
															"name": "uint96",
															"nodeType": "ElementaryTypeName",
															"src": "11036:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2189,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													},
													"id": 2188,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 2185,
															"name": "deal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2168,
															"src": "11059:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Deal_$1415_storage_ptr",
																"typeString": "struct EtharisEscrow.Deal storage pointer"
															}
														},
														"id": 2186,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "11064:6:13",
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1395,
														"src": "11059:11:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 2187,
														"name": "platformFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2174,
														"src": "11073:11:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"src": "11059:25:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11036:48:13"
											},
											{
												"expression": {
													"id": 2195,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2190,
															"name": "deal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2168,
															"src": "11095:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Deal_$1415_storage_ptr",
																"typeString": "struct EtharisEscrow.Deal storage pointer"
															}
														},
														"id": 2192,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "11100:6:13",
														"memberName": "status",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1410,
														"src": "11095:11:13",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_ContractStatus_$1381",
															"typeString": "enum EtharisEscrow.ContractStatus"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 2193,
															"name": "ContractStatus",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1381,
															"src": "11109:14:13",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_ContractStatus_$1381_$",
																"typeString": "type(enum EtharisEscrow.ContractStatus)"
															}
														},
														"id": 2194,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "11124:9:13",
														"memberName": "COMPLETED",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1379,
														"src": "11109:24:13",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_ContractStatus_$1381",
															"typeString": "enum EtharisEscrow.ContractStatus"
														}
													},
													"src": "11095:38:13",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_ContractStatus_$1381",
														"typeString": "enum EtharisEscrow.ContractStatus"
													}
												},
												"id": 2196,
												"nodeType": "ExpressionStatement",
												"src": "11095:38:13"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2198,
															"name": "_dealId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2142,
															"src": "11162:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"id": 2199,
															"name": "_brandAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2144,
															"src": "11171:13:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2197,
														"name": "DealApproved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1466,
														"src": "11149:12:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_address_$returns$__$",
															"typeString": "function (string memory,address)"
														}
													},
													"id": 2200,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11149:36:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2201,
												"nodeType": "EmitStatement",
												"src": "11144:41:13"
											},
											{
												"assignments": [
													2204
												],
												"declarations": [
													{
														"constant": false,
														"id": 2204,
														"mutability": "mutable",
														"name": "token",
														"nameLocation": "11203:5:13",
														"nodeType": "VariableDeclaration",
														"scope": 2240,
														"src": "11196:12:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$720",
															"typeString": "contract IERC20"
														},
														"typeName": {
															"id": 2203,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2202,
																"name": "IERC20",
																"nameLocations": [
																	"11196:6:13"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 720,
																"src": "11196:6:13"
															},
															"referencedDeclaration": 720,
															"src": "11196:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$720",
																"typeString": "contract IERC20"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2206,
												"initialValue": {
													"id": 2205,
													"name": "_idrxToken",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1358,
													"src": "11211:10:13",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$720",
														"typeString": "contract IERC20"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11196:25:13"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													},
													"id": 2209,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2207,
														"name": "creatorAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2184,
														"src": "11235:13:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2208,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11252:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "11235:18:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2219,
												"nodeType": "IfStatement",
												"src": "11231:96:13",
												"trueBody": {
													"id": 2218,
													"nodeType": "Block",
													"src": "11255:72:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 2213,
																			"name": "deal",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2168,
																			"src": "11288:4:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Deal_$1415_storage_ptr",
																				"typeString": "struct EtharisEscrow.Deal storage pointer"
																			}
																		},
																		"id": 2214,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "11293:7:13",
																		"memberName": "creator",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1385,
																		"src": "11288:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2215,
																		"name": "creatorAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2184,
																		"src": "11302:13:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint96",
																			"typeString": "uint96"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint96",
																			"typeString": "uint96"
																		}
																	],
																	"expression": {
																		"id": 2210,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2204,
																		"src": "11269:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$720",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 2212,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "11275:12:13",
																	"memberName": "safeTransfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 801,
																	"src": "11269:18:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$720_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$720_$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 2216,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11269:47:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2217,
															"nodeType": "ExpressionStatement",
															"src": "11269:47:13"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													},
													"id": 2222,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2220,
														"name": "platformFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2174,
														"src": "11341:11:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2221,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11356:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "11341:16:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2231,
												"nodeType": "IfStatement",
												"src": "11337:93:13",
												"trueBody": {
													"id": 2230,
													"nodeType": "Block",
													"src": "11359:71:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2226,
																		"name": "_feeRecipient",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1369,
																		"src": "11392:13:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2227,
																		"name": "platformFee",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2174,
																		"src": "11407:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint96",
																			"typeString": "uint96"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint96",
																			"typeString": "uint96"
																		}
																	],
																	"expression": {
																		"id": 2223,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2204,
																		"src": "11373:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$720",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 2225,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "11379:12:13",
																	"memberName": "safeTransfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 801,
																	"src": "11373:18:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$720_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$720_$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 2228,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11373:46:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2229,
															"nodeType": "ExpressionStatement",
															"src": "11373:46:13"
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2233,
															"name": "_dealId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2142,
															"src": "11461:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"expression": {
																"id": 2234,
																"name": "deal",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2168,
																"src": "11470:4:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Deal_$1415_storage_ptr",
																	"typeString": "struct EtharisEscrow.Deal storage pointer"
																}
															},
															"id": 2235,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "11475:7:13",
															"memberName": "creator",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1385,
															"src": "11470:12:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2236,
															"name": "creatorAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2184,
															"src": "11484:13:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														},
														{
															"id": 2237,
															"name": "platformFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2174,
															"src": "11499:11:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															},
															{
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														],
														"id": 2232,
														"name": "PaymentReleased",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1476,
														"src": "11445:15:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_address_$_t_uint96_$_t_uint96_$returns$__$",
															"typeString": "function (string memory,address,uint96,uint96)"
														}
													},
													"id": 2238,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11445:66:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2239,
												"nodeType": "EmitStatement",
												"src": "11440:71:13"
											}
										]
									},
									"documentation": {
										"id": 2140,
										"nodeType": "StructuredDocumentation",
										"src": "10424:79:13",
										"text": " @notice [CUSTODIAL] Brand approve content & release payment."
									},
									"functionSelector": "24d956c8",
									"id": 2241,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2147,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2146,
												"name": "nonReentrant",
												"nameLocations": [
													"10622:12:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 607,
												"src": "10622:12:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "10622:12:13"
										},
										{
											"arguments": [
												{
													"id": 2149,
													"name": "SERVER_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1374,
													"src": "10652:11:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 2150,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2148,
												"name": "onlyRole",
												"nameLocations": [
													"10643:8:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 41,
												"src": "10643:8:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "10643:21:13"
										},
										{
											"id": 2152,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2151,
												"name": "whenNotPaused",
												"nameLocations": [
													"10673:13:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 504,
												"src": "10673:13:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "10673:13:13"
										},
										{
											"arguments": [
												{
													"id": 2154,
													"name": "_dealId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2142,
													"src": "10706:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												}
											],
											"id": 2155,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2153,
												"name": "dealExists",
												"nameLocations": [
													"10695:10:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1567,
												"src": "10695:10:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "10695:19:13"
										},
										{
											"arguments": [
												{
													"id": 2157,
													"name": "_dealId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2142,
													"src": "10737:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												{
													"id": 2158,
													"name": "_brandAddress",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2144,
													"src": "10746:13:13",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 2159,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2156,
												"name": "onlyDealBrand",
												"nameLocations": [
													"10723:13:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1534,
												"src": "10723:13:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "10723:37:13"
										},
										{
											"arguments": [
												{
													"id": 2161,
													"name": "_dealId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2142,
													"src": "10778:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												{
													"expression": {
														"id": 2162,
														"name": "ContractStatus",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1381,
														"src": "10787:14:13",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_enum$_ContractStatus_$1381_$",
															"typeString": "type(enum EtharisEscrow.ContractStatus)"
														}
													},
													"id": 2163,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberLocation": "10802:14:13",
													"memberName": "PENDING_REVIEW",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1377,
													"src": "10787:29:13",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_ContractStatus_$1381",
														"typeString": "enum EtharisEscrow.ContractStatus"
													}
												}
											],
											"id": 2164,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2160,
												"name": "inStatus",
												"nameLocations": [
													"10769:8:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1586,
												"src": "10769:8:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "10769:48:13"
										}
									],
									"name": "approveDeal",
									"nameLocation": "10517:11:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2145,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2142,
												"mutability": "mutable",
												"name": "_dealId",
												"nameLocation": "10552:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 2241,
												"src": "10538:21:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2141,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "10538:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2144,
												"mutability": "mutable",
												"name": "_brandAddress",
												"nameLocation": "10577:13:13",
												"nodeType": "VariableDeclaration",
												"scope": 2241,
												"src": "10569:21:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2143,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10569:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10528:68:13"
									},
									"returnParameters": {
										"id": 2165,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10822:0:13"
									},
									"scope": 3190,
									"src": "10508:1010:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2340,
										"nodeType": "Block",
										"src": "11840:710:13",
										"statements": [
											{
												"assignments": [
													2264
												],
												"declarations": [
													{
														"constant": false,
														"id": 2264,
														"mutability": "mutable",
														"name": "deal",
														"nameLocation": "11863:4:13",
														"nodeType": "VariableDeclaration",
														"scope": 2340,
														"src": "11850:17:13",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Deal_$1415_storage_ptr",
															"typeString": "struct EtharisEscrow.Deal"
														},
														"typeName": {
															"id": 2263,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2262,
																"name": "Deal",
																"nameLocations": [
																	"11850:4:13"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1415,
																"src": "11850:4:13"
															},
															"referencedDeclaration": 1415,
															"src": "11850:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Deal_$1415_storage_ptr",
																"typeString": "struct EtharisEscrow.Deal"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2268,
												"initialValue": {
													"baseExpression": {
														"id": 2265,
														"name": "_deals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1420,
														"src": "11870:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_Deal_$1415_storage_$",
															"typeString": "mapping(string memory => struct EtharisEscrow.Deal storage ref)"
														}
													},
													"id": 2267,
													"indexExpression": {
														"id": 2266,
														"name": "_dealId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2244,
														"src": "11877:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "11870:15:13",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Deal_$1415_storage",
														"typeString": "struct EtharisEscrow.Deal storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11850:35:13"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2273,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 2269,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "11899:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 2270,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "11905:9:13",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "11899:15:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 2271,
															"name": "deal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2264,
															"src": "11917:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Deal_$1415_storage_ptr",
																"typeString": "struct EtharisEscrow.Deal storage pointer"
															}
														},
														"id": 2272,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "11922:14:13",
														"memberName": "reviewDeadline",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1403,
														"src": "11917:19:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "11899:37:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2277,
												"nodeType": "IfStatement",
												"src": "11895:84:13",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 2274,
															"name": "ReviewPeriodNotEnded",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1337,
															"src": "11957:20:13",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 2275,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11957:22:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 2276,
													"nodeType": "RevertStatement",
													"src": "11950:29:13"
												}
											},
											{
												"assignments": [
													2279
												],
												"declarations": [
													{
														"constant": false,
														"id": 2279,
														"mutability": "mutable",
														"name": "platformFee",
														"nameLocation": "12047:11:13",
														"nodeType": "VariableDeclaration",
														"scope": 2340,
														"src": "12040:18:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														},
														"typeName": {
															"id": 2278,
															"name": "uint96",
															"nodeType": "ElementaryTypeName",
															"src": "12040:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2287,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													},
													"id": 2286,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																},
																"id": 2283,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 2280,
																		"name": "deal",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2264,
																		"src": "12062:4:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Deal_$1415_storage_ptr",
																			"typeString": "struct EtharisEscrow.Deal storage pointer"
																		}
																	},
																	"id": 2281,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "12067:6:13",
																	"memberName": "amount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1395,
																	"src": "12062:11:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint96",
																		"typeString": "uint96"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2282,
																	"name": "_platformFeeBps",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1361,
																	"src": "12076:15:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint96",
																		"typeString": "uint96"
																	}
																},
																"src": "12062:29:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															}
														],
														"id": 2284,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "12061:31:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 2285,
														"name": "BPS_DENOMINATOR",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1364,
														"src": "12095:15:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"src": "12061:49:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12040:70:13"
											},
											{
												"assignments": [
													2289
												],
												"declarations": [
													{
														"constant": false,
														"id": 2289,
														"mutability": "mutable",
														"name": "creatorAmount",
														"nameLocation": "12127:13:13",
														"nodeType": "VariableDeclaration",
														"scope": 2340,
														"src": "12120:20:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														},
														"typeName": {
															"id": 2288,
															"name": "uint96",
															"nodeType": "ElementaryTypeName",
															"src": "12120:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2294,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													},
													"id": 2293,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 2290,
															"name": "deal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2264,
															"src": "12143:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Deal_$1415_storage_ptr",
																"typeString": "struct EtharisEscrow.Deal storage pointer"
															}
														},
														"id": 2291,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "12148:6:13",
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1395,
														"src": "12143:11:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 2292,
														"name": "platformFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2279,
														"src": "12157:11:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"src": "12143:25:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12120:48:13"
											},
											{
												"expression": {
													"id": 2300,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2295,
															"name": "deal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2264,
															"src": "12179:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Deal_$1415_storage_ptr",
																"typeString": "struct EtharisEscrow.Deal storage pointer"
															}
														},
														"id": 2297,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "12184:6:13",
														"memberName": "status",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1410,
														"src": "12179:11:13",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_ContractStatus_$1381",
															"typeString": "enum EtharisEscrow.ContractStatus"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 2298,
															"name": "ContractStatus",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1381,
															"src": "12193:14:13",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_ContractStatus_$1381_$",
																"typeString": "type(enum EtharisEscrow.ContractStatus)"
															}
														},
														"id": 2299,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "12208:9:13",
														"memberName": "COMPLETED",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1379,
														"src": "12193:24:13",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_ContractStatus_$1381",
															"typeString": "enum EtharisEscrow.ContractStatus"
														}
													},
													"src": "12179:38:13",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_ContractStatus_$1381",
														"typeString": "enum EtharisEscrow.ContractStatus"
													}
												},
												"id": 2301,
												"nodeType": "ExpressionStatement",
												"src": "12179:38:13"
											},
											{
												"assignments": [
													2304
												],
												"declarations": [
													{
														"constant": false,
														"id": 2304,
														"mutability": "mutable",
														"name": "token",
														"nameLocation": "12235:5:13",
														"nodeType": "VariableDeclaration",
														"scope": 2340,
														"src": "12228:12:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$720",
															"typeString": "contract IERC20"
														},
														"typeName": {
															"id": 2303,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2302,
																"name": "IERC20",
																"nameLocations": [
																	"12228:6:13"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 720,
																"src": "12228:6:13"
															},
															"referencedDeclaration": 720,
															"src": "12228:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$720",
																"typeString": "contract IERC20"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2306,
												"initialValue": {
													"id": 2305,
													"name": "_idrxToken",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1358,
													"src": "12243:10:13",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$720",
														"typeString": "contract IERC20"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12228:25:13"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													},
													"id": 2309,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2307,
														"name": "creatorAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2289,
														"src": "12267:13:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2308,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12284:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "12267:18:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2319,
												"nodeType": "IfStatement",
												"src": "12263:96:13",
												"trueBody": {
													"id": 2318,
													"nodeType": "Block",
													"src": "12287:72:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 2313,
																			"name": "deal",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2264,
																			"src": "12320:4:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Deal_$1415_storage_ptr",
																				"typeString": "struct EtharisEscrow.Deal storage pointer"
																			}
																		},
																		"id": 2314,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "12325:7:13",
																		"memberName": "creator",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1385,
																		"src": "12320:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2315,
																		"name": "creatorAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2289,
																		"src": "12334:13:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint96",
																			"typeString": "uint96"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint96",
																			"typeString": "uint96"
																		}
																	],
																	"expression": {
																		"id": 2310,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2304,
																		"src": "12301:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$720",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 2312,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "12307:12:13",
																	"memberName": "safeTransfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 801,
																	"src": "12301:18:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$720_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$720_$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 2316,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12301:47:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2317,
															"nodeType": "ExpressionStatement",
															"src": "12301:47:13"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													},
													"id": 2322,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2320,
														"name": "platformFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2279,
														"src": "12373:11:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2321,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12388:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "12373:16:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2331,
												"nodeType": "IfStatement",
												"src": "12369:93:13",
												"trueBody": {
													"id": 2330,
													"nodeType": "Block",
													"src": "12391:71:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2326,
																		"name": "_feeRecipient",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1369,
																		"src": "12424:13:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2327,
																		"name": "platformFee",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2279,
																		"src": "12439:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint96",
																			"typeString": "uint96"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint96",
																			"typeString": "uint96"
																		}
																	],
																	"expression": {
																		"id": 2323,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2304,
																		"src": "12405:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$720",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 2325,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "12411:12:13",
																	"memberName": "safeTransfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 801,
																	"src": "12405:18:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$720_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$720_$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 2328,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12405:46:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2329,
															"nodeType": "ExpressionStatement",
															"src": "12405:46:13"
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2333,
															"name": "_dealId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2244,
															"src": "12493:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"expression": {
																"id": 2334,
																"name": "deal",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2264,
																"src": "12502:4:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Deal_$1415_storage_ptr",
																	"typeString": "struct EtharisEscrow.Deal storage pointer"
																}
															},
															"id": 2335,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "12507:7:13",
															"memberName": "creator",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1385,
															"src": "12502:12:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2336,
															"name": "creatorAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2289,
															"src": "12516:13:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														},
														{
															"id": 2337,
															"name": "platformFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2279,
															"src": "12531:11:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															},
															{
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														],
														"id": 2332,
														"name": "PaymentReleased",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1476,
														"src": "12477:15:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_address_$_t_uint96_$_t_uint96_$returns$__$",
															"typeString": "function (string memory,address,uint96,uint96)"
														}
													},
													"id": 2338,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12477:66:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2339,
												"nodeType": "EmitStatement",
												"src": "12472:71:13"
											}
										]
									},
									"documentation": {
										"id": 2242,
										"nodeType": "StructuredDocumentation",
										"src": "11524:67:13",
										"text": " @notice Auto-release payment after review period"
									},
									"functionSelector": "38a13287",
									"id": 2341,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2247,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2246,
												"name": "nonReentrant",
												"nameLocations": [
													"11686:12:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 607,
												"src": "11686:12:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "11686:12:13"
										},
										{
											"arguments": [
												{
													"id": 2249,
													"name": "SERVER_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1374,
													"src": "11716:11:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 2250,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2248,
												"name": "onlyRole",
												"nameLocations": [
													"11707:8:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 41,
												"src": "11707:8:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "11707:21:13"
										},
										{
											"id": 2252,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2251,
												"name": "whenNotPaused",
												"nameLocations": [
													"11737:13:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 504,
												"src": "11737:13:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "11737:13:13"
										},
										{
											"arguments": [
												{
													"id": 2254,
													"name": "_dealId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2244,
													"src": "11770:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												}
											],
											"id": 2255,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2253,
												"name": "dealExists",
												"nameLocations": [
													"11759:10:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1567,
												"src": "11759:10:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "11759:19:13"
										},
										{
											"arguments": [
												{
													"id": 2257,
													"name": "_dealId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2244,
													"src": "11796:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												{
													"expression": {
														"id": 2258,
														"name": "ContractStatus",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1381,
														"src": "11805:14:13",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_enum$_ContractStatus_$1381_$",
															"typeString": "type(enum EtharisEscrow.ContractStatus)"
														}
													},
													"id": 2259,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberLocation": "11820:14:13",
													"memberName": "PENDING_REVIEW",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1377,
													"src": "11805:29:13",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_ContractStatus_$1381",
														"typeString": "enum EtharisEscrow.ContractStatus"
													}
												}
											],
											"id": 2260,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2256,
												"name": "inStatus",
												"nameLocations": [
													"11787:8:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1586,
												"src": "11787:8:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "11787:48:13"
										}
									],
									"name": "autoReleasePayment",
									"nameLocation": "11605:18:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2245,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2244,
												"mutability": "mutable",
												"name": "_dealId",
												"nameLocation": "11647:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 2341,
												"src": "11633:21:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2243,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "11633:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11623:37:13"
									},
									"returnParameters": {
										"id": 2261,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11840:0:13"
									},
									"scope": 3190,
									"src": "11596:954:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2424,
										"nodeType": "Block",
										"src": "12951:399:13",
										"statements": [
											{
												"assignments": [
													2370
												],
												"declarations": [
													{
														"constant": false,
														"id": 2370,
														"mutability": "mutable",
														"name": "deal",
														"nameLocation": "12974:4:13",
														"nodeType": "VariableDeclaration",
														"scope": 2424,
														"src": "12961:17:13",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Deal_$1415_storage_ptr",
															"typeString": "struct EtharisEscrow.Deal"
														},
														"typeName": {
															"id": 2369,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2368,
																"name": "Deal",
																"nameLocations": [
																	"12961:4:13"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1415,
																"src": "12961:4:13"
															},
															"referencedDeclaration": 1415,
															"src": "12961:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Deal_$1415_storage_ptr",
																"typeString": "struct EtharisEscrow.Deal"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2374,
												"initialValue": {
													"baseExpression": {
														"id": 2371,
														"name": "_deals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1420,
														"src": "12981:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_Deal_$1415_storage_$",
															"typeString": "mapping(string memory => struct EtharisEscrow.Deal storage ref)"
														}
													},
													"id": 2373,
													"indexExpression": {
														"id": 2372,
														"name": "_dealId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2344,
														"src": "12988:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "12981:15:13",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Deal_$1415_storage",
														"typeString": "struct EtharisEscrow.Deal storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12961:35:13"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2379,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 2375,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "13010:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 2376,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "13016:9:13",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "13010:15:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"expression": {
															"id": 2377,
															"name": "deal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2370,
															"src": "13029:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Deal_$1415_storage_ptr",
																"typeString": "struct EtharisEscrow.Deal storage pointer"
															}
														},
														"id": 2378,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "13034:14:13",
														"memberName": "reviewDeadline",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1403,
														"src": "13029:19:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "13010:38:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2383,
												"nodeType": "IfStatement",
												"src": "13006:70:13",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 2380,
															"name": "ReviewPeriodEnded",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1339,
															"src": "13057:17:13",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 2381,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "13057:19:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 2382,
													"nodeType": "RevertStatement",
													"src": "13050:26:13"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2390,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2386,
																	"name": "_reason",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2348,
																	"src": "13096:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 2385,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "13090:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																	"typeString": "type(bytes storage pointer)"
																},
																"typeName": {
																	"id": 2384,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "13090:5:13",
																	"typeDescriptions": {}
																}
															},
															"id": 2387,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13090:14:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 2388,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "13105:6:13",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "13090:21:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2389,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "13115:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "13090:26:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2394,
												"nodeType": "IfStatement",
												"src": "13086:55:13",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 2391,
															"name": "ReasonRequired",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1341,
															"src": "13125:14:13",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 2392,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "13125:16:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 2393,
													"nodeType": "RevertStatement",
													"src": "13118:23:13"
												}
											},
											{
												"expression": {
													"id": 2400,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2395,
															"name": "deal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2370,
															"src": "13152:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Deal_$1415_storage_ptr",
																"typeString": "struct EtharisEscrow.Deal storage pointer"
															}
														},
														"id": 2397,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "13157:6:13",
														"memberName": "status",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1410,
														"src": "13152:11:13",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_ContractStatus_$1381",
															"typeString": "enum EtharisEscrow.ContractStatus"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 2398,
															"name": "ContractStatus",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1381,
															"src": "13166:14:13",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_ContractStatus_$1381_$",
																"typeString": "type(enum EtharisEscrow.ContractStatus)"
															}
														},
														"id": 2399,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "13181:8:13",
														"memberName": "DISPUTED",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1378,
														"src": "13166:23:13",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_ContractStatus_$1381",
															"typeString": "enum EtharisEscrow.ContractStatus"
														}
													},
													"src": "13152:37:13",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_ContractStatus_$1381",
														"typeString": "enum EtharisEscrow.ContractStatus"
													}
												},
												"id": 2401,
												"nodeType": "ExpressionStatement",
												"src": "13152:37:13"
											},
											{
												"expression": {
													"id": 2406,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2402,
															"name": "deal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2370,
															"src": "13199:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Deal_$1415_storage_ptr",
																"typeString": "struct EtharisEscrow.Deal storage pointer"
															}
														},
														"id": 2404,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "13204:13:13",
														"memberName": "disputeReason",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1393,
														"src": "13199:18:13",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2405,
														"name": "_reason",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2348,
														"src": "13220:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "13199:28:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 2407,
												"nodeType": "ExpressionStatement",
												"src": "13199:28:13"
											},
											{
												"expression": {
													"id": 2416,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2408,
															"name": "deal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2370,
															"src": "13237:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Deal_$1415_storage_ptr",
																"typeString": "struct EtharisEscrow.Deal storage pointer"
															}
														},
														"id": 2410,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "13242:10:13",
														"memberName": "disputedAt",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1405,
														"src": "13237:15:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 2413,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "13262:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 2414,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "13268:9:13",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "13262:15:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 2412,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "13255:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint64_$",
																"typeString": "type(uint64)"
															},
															"typeName": {
																"id": 2411,
																"name": "uint64",
																"nodeType": "ElementaryTypeName",
																"src": "13255:6:13",
																"typeDescriptions": {}
															}
														},
														"id": 2415,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "13255:23:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "13237:41:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 2417,
												"nodeType": "ExpressionStatement",
												"src": "13237:41:13"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2419,
															"name": "_dealId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2344,
															"src": "13311:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"id": 2420,
															"name": "_brandAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2346,
															"src": "13320:13:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2421,
															"name": "_reason",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2348,
															"src": "13335:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 2418,
														"name": "DisputeInitiated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1484,
														"src": "13294:16:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_address_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory,address,string memory)"
														}
													},
													"id": 2422,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13294:49:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2423,
												"nodeType": "EmitStatement",
												"src": "13289:54:13"
											}
										]
									},
									"documentation": {
										"id": 2342,
										"nodeType": "StructuredDocumentation",
										"src": "12556:62:13",
										"text": " @notice [CUSTODIAL] Brand initiate dispute."
									},
									"functionSelector": "0e59a395",
									"id": 2425,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 2351,
													"name": "SERVER_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1374,
													"src": "12781:11:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 2352,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2350,
												"name": "onlyRole",
												"nameLocations": [
													"12772:8:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 41,
												"src": "12772:8:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "12772:21:13"
										},
										{
											"id": 2354,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2353,
												"name": "whenNotPaused",
												"nameLocations": [
													"12802:13:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 504,
												"src": "12802:13:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "12802:13:13"
										},
										{
											"arguments": [
												{
													"id": 2356,
													"name": "_dealId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2344,
													"src": "12835:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												}
											],
											"id": 2357,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2355,
												"name": "dealExists",
												"nameLocations": [
													"12824:10:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1567,
												"src": "12824:10:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "12824:19:13"
										},
										{
											"arguments": [
												{
													"id": 2359,
													"name": "_dealId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2344,
													"src": "12866:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												{
													"id": 2360,
													"name": "_brandAddress",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2346,
													"src": "12875:13:13",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 2361,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2358,
												"name": "onlyDealBrand",
												"nameLocations": [
													"12852:13:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1534,
												"src": "12852:13:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "12852:37:13"
										},
										{
											"arguments": [
												{
													"id": 2363,
													"name": "_dealId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2344,
													"src": "12907:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												{
													"expression": {
														"id": 2364,
														"name": "ContractStatus",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1381,
														"src": "12916:14:13",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_enum$_ContractStatus_$1381_$",
															"typeString": "type(enum EtharisEscrow.ContractStatus)"
														}
													},
													"id": 2365,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberLocation": "12931:14:13",
													"memberName": "PENDING_REVIEW",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1377,
													"src": "12916:29:13",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_ContractStatus_$1381",
														"typeString": "enum EtharisEscrow.ContractStatus"
													}
												}
											],
											"id": 2366,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2362,
												"name": "inStatus",
												"nameLocations": [
													"12898:8:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1586,
												"src": "12898:8:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "12898:48:13"
										}
									],
									"name": "initiateDispute",
									"nameLocation": "12632:15:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2344,
												"mutability": "mutable",
												"name": "_dealId",
												"nameLocation": "12671:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 2425,
												"src": "12657:21:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2343,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "12657:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2346,
												"mutability": "mutable",
												"name": "_brandAddress",
												"nameLocation": "12696:13:13",
												"nodeType": "VariableDeclaration",
												"scope": 2425,
												"src": "12688:21:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2345,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12688:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2348,
												"mutability": "mutable",
												"name": "_reason",
												"nameLocation": "12733:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 2425,
												"src": "12719:21:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2347,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "12719:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12647:99:13"
									},
									"returnParameters": {
										"id": 2367,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12951:0:13"
									},
									"scope": 3190,
									"src": "12623:727:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2620,
										"nodeType": "Block",
										"src": "13770:1532:13",
										"statements": [
											{
												"assignments": [
													2456
												],
												"declarations": [
													{
														"constant": false,
														"id": 2456,
														"mutability": "mutable",
														"name": "deal",
														"nameLocation": "13793:4:13",
														"nodeType": "VariableDeclaration",
														"scope": 2620,
														"src": "13780:17:13",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Deal_$1415_storage_ptr",
															"typeString": "struct EtharisEscrow.Deal"
														},
														"typeName": {
															"id": 2455,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2454,
																"name": "Deal",
																"nameLocations": [
																	"13780:4:13"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1415,
																"src": "13780:4:13"
															},
															"referencedDeclaration": 1415,
															"src": "13780:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Deal_$1415_storage_ptr",
																"typeString": "struct EtharisEscrow.Deal"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2460,
												"initialValue": {
													"baseExpression": {
														"id": 2457,
														"name": "_deals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1420,
														"src": "13800:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_Deal_$1415_storage_$",
															"typeString": "mapping(string memory => struct EtharisEscrow.Deal storage ref)"
														}
													},
													"id": 2459,
													"indexExpression": {
														"id": 2458,
														"name": "_dealId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2428,
														"src": "13807:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "13800:15:13",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Deal_$1415_storage",
														"typeString": "struct EtharisEscrow.Deal storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13780:35:13"
											},
											{
												"assignments": [
													2462
												],
												"declarations": [
													{
														"constant": false,
														"id": 2462,
														"mutability": "mutable",
														"name": "totalEscrow",
														"nameLocation": "13868:11:13",
														"nodeType": "VariableDeclaration",
														"scope": 2620,
														"src": "13861:18:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														},
														"typeName": {
															"id": 2461,
															"name": "uint96",
															"nodeType": "ElementaryTypeName",
															"src": "13861:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2465,
												"initialValue": {
													"expression": {
														"id": 2463,
														"name": "deal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2456,
														"src": "13882:4:13",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Deal_$1415_storage_ptr",
															"typeString": "struct EtharisEscrow.Deal storage pointer"
														}
													},
													"id": 2464,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "13887:6:13",
													"memberName": "amount",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1395,
													"src": "13882:11:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13861:32:13"
											},
											{
												"assignments": [
													2467
												],
												"declarations": [
													{
														"constant": false,
														"id": 2467,
														"mutability": "mutable",
														"name": "creator",
														"nameLocation": "13911:7:13",
														"nodeType": "VariableDeclaration",
														"scope": 2620,
														"src": "13903:15:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2466,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "13903:7:13",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2470,
												"initialValue": {
													"expression": {
														"id": 2468,
														"name": "deal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2456,
														"src": "13921:4:13",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Deal_$1415_storage_ptr",
															"typeString": "struct EtharisEscrow.Deal storage pointer"
														}
													},
													"id": 2469,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "13926:7:13",
													"memberName": "creator",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1385,
													"src": "13921:12:13",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13903:30:13"
											},
											{
												"assignments": [
													2472
												],
												"declarations": [
													{
														"constant": false,
														"id": 2472,
														"mutability": "mutable",
														"name": "brand",
														"nameLocation": "13951:5:13",
														"nodeType": "VariableDeclaration",
														"scope": 2620,
														"src": "13943:13:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2471,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "13943:7:13",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2475,
												"initialValue": {
													"expression": {
														"id": 2473,
														"name": "deal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2456,
														"src": "13959:4:13",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Deal_$1415_storage_ptr",
															"typeString": "struct EtharisEscrow.Deal storage pointer"
														}
													},
													"id": 2474,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "13964:5:13",
													"memberName": "brand",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1383,
													"src": "13959:10:13",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13943:26:13"
											},
											{
												"assignments": [
													2477
												],
												"declarations": [
													{
														"constant": false,
														"id": 2477,
														"mutability": "mutable",
														"name": "feeRecip",
														"nameLocation": "13987:8:13",
														"nodeType": "VariableDeclaration",
														"scope": 2620,
														"src": "13979:16:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2476,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "13979:7:13",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2479,
												"initialValue": {
													"id": 2478,
													"name": "_feeRecipient",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1369,
													"src": "13998:13:13",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13979:32:13"
											},
											{
												"assignments": [
													2481
												],
												"declarations": [
													{
														"constant": false,
														"id": 2481,
														"mutability": "mutable",
														"name": "feeBps",
														"nameLocation": "14028:6:13",
														"nodeType": "VariableDeclaration",
														"scope": 2620,
														"src": "14021:13:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														},
														"typeName": {
															"id": 2480,
															"name": "uint96",
															"nodeType": "ElementaryTypeName",
															"src": "14021:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2483,
												"initialValue": {
													"id": 2482,
													"name": "_platformFeeBps",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1361,
													"src": "14037:15:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14021:31:13"
											},
											{
												"expression": {
													"id": 2489,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2484,
															"name": "deal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2456,
															"src": "14063:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Deal_$1415_storage_ptr",
																"typeString": "struct EtharisEscrow.Deal storage pointer"
															}
														},
														"id": 2486,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "14068:6:13",
														"memberName": "status",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1410,
														"src": "14063:11:13",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_ContractStatus_$1381",
															"typeString": "enum EtharisEscrow.ContractStatus"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 2487,
															"name": "ContractStatus",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1381,
															"src": "14077:14:13",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_ContractStatus_$1381_$",
																"typeString": "type(enum EtharisEscrow.ContractStatus)"
															}
														},
														"id": 2488,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "14092:9:13",
														"memberName": "COMPLETED",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1379,
														"src": "14077:24:13",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_ContractStatus_$1381",
															"typeString": "enum EtharisEscrow.ContractStatus"
														}
													},
													"src": "14063:38:13",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_ContractStatus_$1381",
														"typeString": "enum EtharisEscrow.ContractStatus"
													}
												},
												"id": 2490,
												"nodeType": "ExpressionStatement",
												"src": "14063:38:13"
											},
											{
												"expression": {
													"id": 2495,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2491,
															"name": "deal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2456,
															"src": "14111:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Deal_$1415_storage_ptr",
																"typeString": "struct EtharisEscrow.Deal storage pointer"
															}
														},
														"id": 2493,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "14116:15:13",
														"memberName": "acceptedDispute",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1412,
														"src": "14111:20:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2494,
														"name": "_acceptDispute",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2432,
														"src": "14134:14:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "14111:37:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2496,
												"nodeType": "ExpressionStatement",
												"src": "14111:37:13"
											},
											{
												"assignments": [
													2498
												],
												"declarations": [
													{
														"constant": false,
														"id": 2498,
														"mutability": "mutable",
														"name": "creatorAmount",
														"nameLocation": "14166:13:13",
														"nodeType": "VariableDeclaration",
														"scope": 2620,
														"src": "14159:20:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														},
														"typeName": {
															"id": 2497,
															"name": "uint96",
															"nodeType": "ElementaryTypeName",
															"src": "14159:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2499,
												"nodeType": "VariableDeclarationStatement",
												"src": "14159:20:13"
											},
											{
												"assignments": [
													2501
												],
												"declarations": [
													{
														"constant": false,
														"id": 2501,
														"mutability": "mutable",
														"name": "brandRefund",
														"nameLocation": "14196:11:13",
														"nodeType": "VariableDeclaration",
														"scope": 2620,
														"src": "14189:18:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														},
														"typeName": {
															"id": 2500,
															"name": "uint96",
															"nodeType": "ElementaryTypeName",
															"src": "14189:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2502,
												"nodeType": "VariableDeclarationStatement",
												"src": "14189:18:13"
											},
											{
												"assignments": [
													2504
												],
												"declarations": [
													{
														"constant": false,
														"id": 2504,
														"mutability": "mutable",
														"name": "platformFee",
														"nameLocation": "14224:11:13",
														"nodeType": "VariableDeclaration",
														"scope": 2620,
														"src": "14217:18:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														},
														"typeName": {
															"id": 2503,
															"name": "uint96",
															"nodeType": "ElementaryTypeName",
															"src": "14217:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2505,
												"nodeType": "VariableDeclarationStatement",
												"src": "14217:18:13"
											},
											{
												"assignments": [
													2508
												],
												"declarations": [
													{
														"constant": false,
														"id": 2508,
														"mutability": "mutable",
														"name": "token",
														"nameLocation": "14253:5:13",
														"nodeType": "VariableDeclaration",
														"scope": 2620,
														"src": "14246:12:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$720",
															"typeString": "contract IERC20"
														},
														"typeName": {
															"id": 2507,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2506,
																"name": "IERC20",
																"nameLocations": [
																	"14246:6:13"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 720,
																"src": "14246:6:13"
															},
															"referencedDeclaration": 720,
															"src": "14246:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$720",
																"typeString": "contract IERC20"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2510,
												"initialValue": {
													"id": 2509,
													"name": "_idrxToken",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1358,
													"src": "14261:10:13",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$720",
														"typeString": "contract IERC20"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14246:25:13"
											},
											{
												"condition": {
													"id": 2511,
													"name": "_acceptDispute",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2432,
													"src": "14303:14:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2603,
													"nodeType": "Block",
													"src": "14864:185:13",
													"statements": [
														{
															"expression": {
																"id": 2582,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2580,
																	"name": "creatorAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2498,
																	"src": "14878:13:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint96",
																		"typeString": "uint96"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "30",
																	"id": 2581,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14894:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "14878:17:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															"id": 2583,
															"nodeType": "ExpressionStatement",
															"src": "14878:17:13"
														},
														{
															"expression": {
																"id": 2586,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2584,
																	"name": "brandRefund",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2501,
																	"src": "14909:11:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint96",
																		"typeString": "uint96"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 2585,
																	"name": "totalEscrow",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2462,
																	"src": "14923:11:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint96",
																		"typeString": "uint96"
																	}
																},
																"src": "14909:25:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															"id": 2587,
															"nodeType": "ExpressionStatement",
															"src": "14909:25:13"
														},
														{
															"expression": {
																"id": 2590,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2588,
																	"name": "platformFee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2504,
																	"src": "14948:11:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint96",
																		"typeString": "uint96"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "30",
																	"id": 2589,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14962:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "14948:15:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															"id": 2591,
															"nodeType": "ExpressionStatement",
															"src": "14948:15:13"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																},
																"id": 2594,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2592,
																	"name": "brandRefund",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2501,
																	"src": "14982:11:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint96",
																		"typeString": "uint96"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 2593,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14997:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "14982:16:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2602,
															"nodeType": "IfStatement",
															"src": "14978:60:13",
															"trueBody": {
																"expression": {
																	"arguments": [
																		{
																			"id": 2598,
																			"name": "brand",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2472,
																			"src": "15019:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 2599,
																			"name": "brandRefund",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2501,
																			"src": "15026:11:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint96",
																				"typeString": "uint96"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint96",
																				"typeString": "uint96"
																			}
																		],
																		"expression": {
																			"id": 2595,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2508,
																			"src": "15000:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$720",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 2597,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "15006:12:13",
																		"memberName": "safeTransfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 801,
																		"src": "15000:18:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$720_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$720_$",
																			"typeString": "function (contract IERC20,address,uint256)"
																		}
																	},
																	"id": 2600,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "15000:38:13",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 2601,
																"nodeType": "ExpressionStatement",
																"src": "15000:38:13"
															}
														}
													]
												},
												"id": 2604,
												"nodeType": "IfStatement",
												"src": "14299:750:13",
												"trueBody": {
													"id": 2579,
													"nodeType": "Block",
													"src": "14319:539:13",
													"statements": [
														{
															"assignments": [
																2513
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2513,
																	"mutability": "mutable",
																	"name": "grossPayout",
																	"nameLocation": "14340:11:13",
																	"nodeType": "VariableDeclaration",
																	"scope": 2579,
																	"src": "14333:18:13",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint96",
																		"typeString": "uint96"
																	},
																	"typeName": {
																		"id": 2512,
																		"name": "uint96",
																		"nodeType": "ElementaryTypeName",
																		"src": "14333:6:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint96",
																			"typeString": "uint96"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2520,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																},
																"id": 2519,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint96",
																				"typeString": "uint96"
																			},
																			"id": 2516,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2514,
																				"name": "totalEscrow",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2462,
																				"src": "14355:11:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint96",
																					"typeString": "uint96"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"hexValue": "35303030",
																				"id": 2515,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "14369:4:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_5000_by_1",
																					"typeString": "int_const 5000"
																				},
																				"value": "5000"
																			},
																			"src": "14355:18:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint96",
																				"typeString": "uint96"
																			}
																		}
																	],
																	"id": 2517,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "14354:20:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint96",
																		"typeString": "uint96"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 2518,
																	"name": "BPS_DENOMINATOR",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1364,
																	"src": "14377:15:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint96",
																		"typeString": "uint96"
																	}
																},
																"src": "14354:38:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "14333:59:13"
														},
														{
															"expression": {
																"id": 2525,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2521,
																	"name": "brandRefund",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2501,
																	"src": "14413:11:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint96",
																		"typeString": "uint96"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint96",
																		"typeString": "uint96"
																	},
																	"id": 2524,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2522,
																		"name": "totalEscrow",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2462,
																		"src": "14427:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint96",
																			"typeString": "uint96"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 2523,
																		"name": "grossPayout",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2513,
																		"src": "14441:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint96",
																			"typeString": "uint96"
																		}
																	},
																	"src": "14427:25:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint96",
																		"typeString": "uint96"
																	}
																},
																"src": "14413:39:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															"id": 2526,
															"nodeType": "ExpressionStatement",
															"src": "14413:39:13"
														},
														{
															"expression": {
																"id": 2534,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2527,
																	"name": "platformFee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2504,
																	"src": "14467:11:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint96",
																		"typeString": "uint96"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint96",
																		"typeString": "uint96"
																	},
																	"id": 2533,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint96",
																					"typeString": "uint96"
																				},
																				"id": 2530,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2528,
																					"name": "grossPayout",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2513,
																					"src": "14482:11:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint96",
																						"typeString": "uint96"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"id": 2529,
																					"name": "feeBps",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2481,
																					"src": "14496:6:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint96",
																						"typeString": "uint96"
																					}
																				},
																				"src": "14482:20:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint96",
																					"typeString": "uint96"
																				}
																			}
																		],
																		"id": 2531,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "14481:22:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint96",
																			"typeString": "uint96"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2532,
																		"name": "BPS_DENOMINATOR",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1364,
																		"src": "14506:15:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint96",
																			"typeString": "uint96"
																		}
																	},
																	"src": "14481:40:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint96",
																		"typeString": "uint96"
																	}
																},
																"src": "14467:54:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															"id": 2535,
															"nodeType": "ExpressionStatement",
															"src": "14467:54:13"
														},
														{
															"assignments": [
																2537
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2537,
																	"mutability": "mutable",
																	"name": "creatorNet",
																	"nameLocation": "14542:10:13",
																	"nodeType": "VariableDeclaration",
																	"scope": 2579,
																	"src": "14535:17:13",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint96",
																		"typeString": "uint96"
																	},
																	"typeName": {
																		"id": 2536,
																		"name": "uint96",
																		"nodeType": "ElementaryTypeName",
																		"src": "14535:6:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint96",
																			"typeString": "uint96"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2541,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																},
																"id": 2540,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2538,
																	"name": "grossPayout",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2513,
																	"src": "14555:11:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint96",
																		"typeString": "uint96"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 2539,
																	"name": "platformFee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2504,
																	"src": "14569:11:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint96",
																		"typeString": "uint96"
																	}
																},
																"src": "14555:25:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "14535:45:13"
														},
														{
															"expression": {
																"id": 2544,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2542,
																	"name": "creatorAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2498,
																	"src": "14595:13:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint96",
																		"typeString": "uint96"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 2543,
																	"name": "creatorNet",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2537,
																	"src": "14611:10:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint96",
																		"typeString": "uint96"
																	}
																},
																"src": "14595:26:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															"id": 2545,
															"nodeType": "ExpressionStatement",
															"src": "14595:26:13"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																},
																"id": 2548,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2546,
																	"name": "creatorNet",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2537,
																	"src": "14640:10:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint96",
																		"typeString": "uint96"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 2547,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14654:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "14640:15:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2556,
															"nodeType": "IfStatement",
															"src": "14636:60:13",
															"trueBody": {
																"expression": {
																	"arguments": [
																		{
																			"id": 2552,
																			"name": "creator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2467,
																			"src": "14676:7:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 2553,
																			"name": "creatorNet",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2537,
																			"src": "14685:10:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint96",
																				"typeString": "uint96"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint96",
																				"typeString": "uint96"
																			}
																		],
																		"expression": {
																			"id": 2549,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2508,
																			"src": "14657:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$720",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 2551,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "14663:12:13",
																		"memberName": "safeTransfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 801,
																		"src": "14657:18:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$720_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$720_$",
																			"typeString": "function (contract IERC20,address,uint256)"
																		}
																	},
																	"id": 2554,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "14657:39:13",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 2555,
																"nodeType": "ExpressionStatement",
																"src": "14657:39:13"
															}
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																},
																"id": 2559,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2557,
																	"name": "brandRefund",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2501,
																	"src": "14714:11:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint96",
																		"typeString": "uint96"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 2558,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14729:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "14714:16:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2567,
															"nodeType": "IfStatement",
															"src": "14710:60:13",
															"trueBody": {
																"expression": {
																	"arguments": [
																		{
																			"id": 2563,
																			"name": "brand",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2472,
																			"src": "14751:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 2564,
																			"name": "brandRefund",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2501,
																			"src": "14758:11:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint96",
																				"typeString": "uint96"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint96",
																				"typeString": "uint96"
																			}
																		],
																		"expression": {
																			"id": 2560,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2508,
																			"src": "14732:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$720",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 2562,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "14738:12:13",
																		"memberName": "safeTransfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 801,
																		"src": "14732:18:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$720_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$720_$",
																			"typeString": "function (contract IERC20,address,uint256)"
																		}
																	},
																	"id": 2565,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "14732:38:13",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 2566,
																"nodeType": "ExpressionStatement",
																"src": "14732:38:13"
															}
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																},
																"id": 2570,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2568,
																	"name": "platformFee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2504,
																	"src": "14788:11:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint96",
																		"typeString": "uint96"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 2569,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14803:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "14788:16:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2578,
															"nodeType": "IfStatement",
															"src": "14784:63:13",
															"trueBody": {
																"expression": {
																	"arguments": [
																		{
																			"id": 2574,
																			"name": "feeRecip",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2477,
																			"src": "14825:8:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 2575,
																			"name": "platformFee",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2504,
																			"src": "14835:11:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint96",
																				"typeString": "uint96"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint96",
																				"typeString": "uint96"
																			}
																		],
																		"expression": {
																			"id": 2571,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2508,
																			"src": "14806:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$720",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 2573,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "14812:12:13",
																		"memberName": "safeTransfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 801,
																		"src": "14806:18:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$720_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$720_$",
																			"typeString": "function (contract IERC20,address,uint256)"
																		}
																	},
																	"id": 2576,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "14806:41:13",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 2577,
																"nodeType": "ExpressionStatement",
																"src": "14806:41:13"
															}
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2606,
															"name": "_dealId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2428,
															"src": "15093:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"id": 2607,
															"name": "_creatorAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2430,
															"src": "15114:15:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2608,
															"name": "_acceptDispute",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2432,
															"src": "15143:14:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 2609,
															"name": "creatorAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2498,
															"src": "15171:13:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														},
														{
															"id": 2610,
															"name": "brandRefund",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2501,
															"src": "15198:11:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															},
															{
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														],
														"id": 2605,
														"name": "DisputeResolved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1496,
														"src": "15064:15:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_address_$_t_bool_$_t_uint96_$_t_uint96_$returns$__$",
															"typeString": "function (string memory,address,bool,uint96,uint96)"
														}
													},
													"id": 2611,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15064:155:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2612,
												"nodeType": "EmitStatement",
												"src": "15059:160:13"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2614,
															"name": "_dealId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2428,
															"src": "15250:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"id": 2615,
															"name": "creator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2467,
															"src": "15259:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2616,
															"name": "creatorAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2498,
															"src": "15268:13:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														},
														{
															"id": 2617,
															"name": "platformFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2504,
															"src": "15283:11:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															},
															{
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														],
														"id": 2613,
														"name": "PaymentReleased",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1476,
														"src": "15234:15:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_address_$_t_uint96_$_t_uint96_$returns$__$",
															"typeString": "function (string memory,address,uint96,uint96)"
														}
													},
													"id": 2618,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15234:61:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2619,
												"nodeType": "EmitStatement",
												"src": "15229:66:13"
											}
										]
									},
									"documentation": {
										"id": 2426,
										"nodeType": "StructuredDocumentation",
										"src": "13356:63:13",
										"text": " @notice [CUSTODIAL] Creator resolve dispute."
									},
									"functionSelector": "ef03c10e",
									"id": 2621,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2435,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2434,
												"name": "nonReentrant",
												"nameLocations": [
													"13572:12:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 607,
												"src": "13572:12:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "13572:12:13"
										},
										{
											"arguments": [
												{
													"id": 2437,
													"name": "SERVER_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1374,
													"src": "13602:11:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 2438,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2436,
												"name": "onlyRole",
												"nameLocations": [
													"13593:8:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 41,
												"src": "13593:8:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "13593:21:13"
										},
										{
											"id": 2440,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2439,
												"name": "whenNotPaused",
												"nameLocations": [
													"13623:13:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 504,
												"src": "13623:13:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "13623:13:13"
										},
										{
											"arguments": [
												{
													"id": 2442,
													"name": "_dealId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2428,
													"src": "13656:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												}
											],
											"id": 2443,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2441,
												"name": "dealExists",
												"nameLocations": [
													"13645:10:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1567,
												"src": "13645:10:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "13645:19:13"
										},
										{
											"arguments": [
												{
													"id": 2445,
													"name": "_dealId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2428,
													"src": "13689:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												{
													"id": 2446,
													"name": "_creatorAddress",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2430,
													"src": "13698:15:13",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 2447,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2444,
												"name": "onlyDealCreator",
												"nameLocations": [
													"13673:15:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1552,
												"src": "13673:15:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "13673:41:13"
										},
										{
											"arguments": [
												{
													"id": 2449,
													"name": "_dealId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2428,
													"src": "13732:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												{
													"expression": {
														"id": 2450,
														"name": "ContractStatus",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1381,
														"src": "13741:14:13",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_enum$_ContractStatus_$1381_$",
															"typeString": "type(enum EtharisEscrow.ContractStatus)"
														}
													},
													"id": 2451,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberLocation": "13756:8:13",
													"memberName": "DISPUTED",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1378,
													"src": "13741:23:13",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_ContractStatus_$1381",
														"typeString": "enum EtharisEscrow.ContractStatus"
													}
												}
											],
											"id": 2452,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2448,
												"name": "inStatus",
												"nameLocations": [
													"13723:8:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1586,
												"src": "13723:8:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "13723:42:13"
										}
									],
									"name": "resolveDispute",
									"nameLocation": "13433:14:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2433,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2428,
												"mutability": "mutable",
												"name": "_dealId",
												"nameLocation": "13471:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 2621,
												"src": "13457:21:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2427,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "13457:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2430,
												"mutability": "mutable",
												"name": "_creatorAddress",
												"nameLocation": "13496:15:13",
												"nodeType": "VariableDeclaration",
												"scope": 2621,
												"src": "13488:23:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2429,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13488:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2432,
												"mutability": "mutable",
												"name": "_acceptDispute",
												"nameLocation": "13526:14:13",
												"nodeType": "VariableDeclaration",
												"scope": 2621,
												"src": "13521:19:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2431,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "13521:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13447:99:13"
									},
									"returnParameters": {
										"id": 2453,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13770:0:13"
									},
									"scope": 3190,
									"src": "13424:1878:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2690,
										"nodeType": "Block",
										"src": "15676:391:13",
										"statements": [
											{
												"assignments": [
													2644
												],
												"declarations": [
													{
														"constant": false,
														"id": 2644,
														"mutability": "mutable",
														"name": "deal",
														"nameLocation": "15699:4:13",
														"nodeType": "VariableDeclaration",
														"scope": 2690,
														"src": "15686:17:13",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Deal_$1415_storage_ptr",
															"typeString": "struct EtharisEscrow.Deal"
														},
														"typeName": {
															"id": 2643,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2642,
																"name": "Deal",
																"nameLocations": [
																	"15686:4:13"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1415,
																"src": "15686:4:13"
															},
															"referencedDeclaration": 1415,
															"src": "15686:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Deal_$1415_storage_ptr",
																"typeString": "struct EtharisEscrow.Deal"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2648,
												"initialValue": {
													"baseExpression": {
														"id": 2645,
														"name": "_deals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1420,
														"src": "15706:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_Deal_$1415_storage_$",
															"typeString": "mapping(string memory => struct EtharisEscrow.Deal storage ref)"
														}
													},
													"id": 2647,
													"indexExpression": {
														"id": 2646,
														"name": "_dealId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2624,
														"src": "15713:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "15706:15:13",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Deal_$1415_storage",
														"typeString": "struct EtharisEscrow.Deal storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "15686:35:13"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2653,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 2649,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "15736:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 2650,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "15742:9:13",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "15736:15:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"expression": {
															"id": 2651,
															"name": "deal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2644,
															"src": "15755:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Deal_$1415_storage_ptr",
																"typeString": "struct EtharisEscrow.Deal storage pointer"
															}
														},
														"id": 2652,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "15760:8:13",
														"memberName": "deadline",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1397,
														"src": "15755:13:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "15736:32:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2657,
												"nodeType": "IfStatement",
												"src": "15732:64:13",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 2654,
															"name": "DeadlineNotPassed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1343,
															"src": "15777:17:13",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 2655,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "15777:19:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 2656,
													"nodeType": "RevertStatement",
													"src": "15770:26:13"
												}
											},
											{
												"assignments": [
													2659
												],
												"declarations": [
													{
														"constant": false,
														"id": 2659,
														"mutability": "mutable",
														"name": "refundAmount",
														"nameLocation": "15814:12:13",
														"nodeType": "VariableDeclaration",
														"scope": 2690,
														"src": "15807:19:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														},
														"typeName": {
															"id": 2658,
															"name": "uint96",
															"nodeType": "ElementaryTypeName",
															"src": "15807:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2662,
												"initialValue": {
													"expression": {
														"id": 2660,
														"name": "deal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2644,
														"src": "15829:4:13",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Deal_$1415_storage_ptr",
															"typeString": "struct EtharisEscrow.Deal storage pointer"
														}
													},
													"id": 2661,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "15834:6:13",
													"memberName": "amount",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1395,
													"src": "15829:11:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "15807:33:13"
											},
											{
												"expression": {
													"id": 2668,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2663,
															"name": "deal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2644,
															"src": "15851:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Deal_$1415_storage_ptr",
																"typeString": "struct EtharisEscrow.Deal storage pointer"
															}
														},
														"id": 2665,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "15856:6:13",
														"memberName": "status",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1410,
														"src": "15851:11:13",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_ContractStatus_$1381",
															"typeString": "enum EtharisEscrow.ContractStatus"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 2666,
															"name": "ContractStatus",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1381,
															"src": "15865:14:13",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_ContractStatus_$1381_$",
																"typeString": "type(enum EtharisEscrow.ContractStatus)"
															}
														},
														"id": 2667,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "15880:9:13",
														"memberName": "CANCELLED",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1380,
														"src": "15865:24:13",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_ContractStatus_$1381",
															"typeString": "enum EtharisEscrow.ContractStatus"
														}
													},
													"src": "15851:38:13",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_ContractStatus_$1381",
														"typeString": "enum EtharisEscrow.ContractStatus"
													}
												},
												"id": 2669,
												"nodeType": "ExpressionStatement",
												"src": "15851:38:13"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													},
													"id": 2672,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2670,
														"name": "refundAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2659,
														"src": "15904:12:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2671,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15920:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "15904:17:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2682,
												"nodeType": "IfStatement",
												"src": "15900:97:13",
												"trueBody": {
													"id": 2681,
													"nodeType": "Block",
													"src": "15923:74:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 2676,
																			"name": "deal",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2644,
																			"src": "15961:4:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Deal_$1415_storage_ptr",
																				"typeString": "struct EtharisEscrow.Deal storage pointer"
																			}
																		},
																		"id": 2677,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "15966:5:13",
																		"memberName": "brand",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1383,
																		"src": "15961:10:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2678,
																		"name": "refundAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2659,
																		"src": "15973:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint96",
																			"typeString": "uint96"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint96",
																			"typeString": "uint96"
																		}
																	],
																	"expression": {
																		"id": 2673,
																		"name": "_idrxToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1358,
																		"src": "15937:10:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$720",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 2675,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "15948:12:13",
																	"memberName": "safeTransfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 801,
																	"src": "15937:23:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$720_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$720_$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 2679,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15937:49:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2680,
															"nodeType": "ExpressionStatement",
															"src": "15937:49:13"
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2684,
															"name": "_dealId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2624,
															"src": "16026:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"expression": {
																"id": 2685,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "16035:3:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2686,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "16039:6:13",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "16035:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2687,
															"name": "refundAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2659,
															"src": "16047:12:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														],
														"id": 2683,
														"name": "DealCancelled",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1504,
														"src": "16012:13:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_address_$_t_uint96_$returns$__$",
															"typeString": "function (string memory,address,uint96)"
														}
													},
													"id": 2688,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16012:48:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2689,
												"nodeType": "EmitStatement",
												"src": "16007:53:13"
											}
										]
									},
									"documentation": {
										"id": 2622,
										"nodeType": "StructuredDocumentation",
										"src": "15308:122:13",
										"text": " @notice Triggers a full refund to the Brand if the Creator fails to submit content before the deadline."
									},
									"functionSelector": "e39fff38",
									"id": 2691,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2627,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2626,
												"name": "nonReentrant",
												"nameLocations": [
													"15530:12:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 607,
												"src": "15530:12:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "15530:12:13"
										},
										{
											"arguments": [
												{
													"id": 2629,
													"name": "SERVER_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1374,
													"src": "15560:11:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 2630,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2628,
												"name": "onlyRole",
												"nameLocations": [
													"15551:8:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 41,
												"src": "15551:8:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "15551:21:13"
										},
										{
											"id": 2632,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2631,
												"name": "whenNotPaused",
												"nameLocations": [
													"15581:13:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 504,
												"src": "15581:13:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "15581:13:13"
										},
										{
											"arguments": [
												{
													"id": 2634,
													"name": "_dealId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2624,
													"src": "15614:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												}
											],
											"id": 2635,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2633,
												"name": "dealExists",
												"nameLocations": [
													"15603:10:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1567,
												"src": "15603:10:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "15603:19:13"
										},
										{
											"arguments": [
												{
													"id": 2637,
													"name": "_dealId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2624,
													"src": "15640:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												{
													"expression": {
														"id": 2638,
														"name": "ContractStatus",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1381,
														"src": "15649:14:13",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_enum$_ContractStatus_$1381_$",
															"typeString": "type(enum EtharisEscrow.ContractStatus)"
														}
													},
													"id": 2639,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberLocation": "15664:6:13",
													"memberName": "ACTIVE",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1376,
													"src": "15649:21:13",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_ContractStatus_$1381",
														"typeString": "enum EtharisEscrow.ContractStatus"
													}
												}
											],
											"id": 2640,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2636,
												"name": "inStatus",
												"nameLocations": [
													"15631:8:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1586,
												"src": "15631:8:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "15631:40:13"
										}
									],
									"name": "autoRefundAfterDeadline",
									"nameLocation": "15444:23:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2625,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2624,
												"mutability": "mutable",
												"name": "_dealId",
												"nameLocation": "15491:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 2691,
												"src": "15477:21:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2623,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "15477:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15467:37:13"
									},
									"returnParameters": {
										"id": 2641,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15676:0:13"
									},
									"scope": 3190,
									"src": "15435:632:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2728,
										"nodeType": "Block",
										"src": "16416:122:13",
										"statements": [
											{
												"expression": {
													"id": 2720,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 2714,
																"name": "_deals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1420,
																"src": "16426:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_Deal_$1415_storage_$",
																	"typeString": "mapping(string memory => struct EtharisEscrow.Deal storage ref)"
																}
															},
															"id": 2716,
															"indexExpression": {
																"id": 2715,
																"name": "_dealId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2694,
																"src": "16433:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "16426:15:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Deal_$1415_storage",
																"typeString": "struct EtharisEscrow.Deal storage ref"
															}
														},
														"id": 2717,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "16442:6:13",
														"memberName": "status",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1410,
														"src": "16426:22:13",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_ContractStatus_$1381",
															"typeString": "enum EtharisEscrow.ContractStatus"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 2718,
															"name": "ContractStatus",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1381,
															"src": "16451:14:13",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_ContractStatus_$1381_$",
																"typeString": "type(enum EtharisEscrow.ContractStatus)"
															}
														},
														"id": 2719,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "16466:9:13",
														"memberName": "CANCELLED",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1380,
														"src": "16451:24:13",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_ContractStatus_$1381",
															"typeString": "enum EtharisEscrow.ContractStatus"
														}
													},
													"src": "16426:49:13",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_ContractStatus_$1381",
														"typeString": "enum EtharisEscrow.ContractStatus"
													}
												},
												"id": 2721,
												"nodeType": "ExpressionStatement",
												"src": "16426:49:13"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2723,
															"name": "_dealId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2694,
															"src": "16505:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"id": 2724,
															"name": "_brandAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2696,
															"src": "16514:13:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "30",
															"id": 2725,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16529:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 2722,
														"name": "DealCancelled",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1504,
														"src": "16491:13:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_address_$_t_uint96_$returns$__$",
															"typeString": "function (string memory,address,uint96)"
														}
													},
													"id": 2726,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16491:40:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2727,
												"nodeType": "EmitStatement",
												"src": "16486:45:13"
											}
										]
									},
									"documentation": {
										"id": 2692,
										"nodeType": "StructuredDocumentation",
										"src": "16073:75:13",
										"text": " @notice [CUSTODIAL] Cancel the deal before it is funded."
									},
									"functionSelector": "03f715da",
									"id": 2729,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 2699,
													"name": "SERVER_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1374,
													"src": "16275:11:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 2700,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2698,
												"name": "onlyRole",
												"nameLocations": [
													"16266:8:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 41,
												"src": "16266:8:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "16266:21:13"
										},
										{
											"arguments": [
												{
													"id": 2702,
													"name": "_dealId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2694,
													"src": "16307:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												}
											],
											"id": 2703,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2701,
												"name": "dealExists",
												"nameLocations": [
													"16296:10:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1567,
												"src": "16296:10:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "16296:19:13"
										},
										{
											"arguments": [
												{
													"id": 2705,
													"name": "_dealId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2694,
													"src": "16338:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												{
													"id": 2706,
													"name": "_brandAddress",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2696,
													"src": "16347:13:13",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 2707,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2704,
												"name": "onlyDealBrand",
												"nameLocations": [
													"16324:13:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1534,
												"src": "16324:13:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "16324:37:13"
										},
										{
											"arguments": [
												{
													"id": 2709,
													"name": "_dealId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2694,
													"src": "16379:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												{
													"expression": {
														"id": 2710,
														"name": "ContractStatus",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1381,
														"src": "16388:14:13",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_enum$_ContractStatus_$1381_$",
															"typeString": "type(enum EtharisEscrow.ContractStatus)"
														}
													},
													"id": 2711,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberLocation": "16403:7:13",
													"memberName": "PENDING",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1375,
													"src": "16388:22:13",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_ContractStatus_$1381",
														"typeString": "enum EtharisEscrow.ContractStatus"
													}
												}
											],
											"id": 2712,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2708,
												"name": "inStatus",
												"nameLocations": [
													"16370:8:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1586,
												"src": "16370:8:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "16370:41:13"
										}
									],
									"name": "cancelDeal",
									"nameLocation": "16162:10:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2697,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2694,
												"mutability": "mutable",
												"name": "_dealId",
												"nameLocation": "16196:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 2729,
												"src": "16182:21:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2693,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "16182:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2696,
												"mutability": "mutable",
												"name": "_brandAddress",
												"nameLocation": "16221:13:13",
												"nodeType": "VariableDeclaration",
												"scope": 2729,
												"src": "16213:21:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2695,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16213:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16172:68:13"
									},
									"returnParameters": {
										"id": 2713,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16416:0:13"
									},
									"scope": 3190,
									"src": "16153:385:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2799,
										"nodeType": "Block",
										"src": "16747:572:13",
										"statements": [
											{
												"assignments": [
													2745
												],
												"declarations": [
													{
														"constant": false,
														"id": 2745,
														"mutability": "mutable",
														"name": "deal",
														"nameLocation": "16770:4:13",
														"nodeType": "VariableDeclaration",
														"scope": 2799,
														"src": "16757:17:13",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Deal_$1415_storage_ptr",
															"typeString": "struct EtharisEscrow.Deal"
														},
														"typeName": {
															"id": 2744,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2743,
																"name": "Deal",
																"nameLocations": [
																	"16757:4:13"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1415,
																"src": "16757:4:13"
															},
															"referencedDeclaration": 1415,
															"src": "16757:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Deal_$1415_storage_ptr",
																"typeString": "struct EtharisEscrow.Deal"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2749,
												"initialValue": {
													"baseExpression": {
														"id": 2746,
														"name": "_deals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1420,
														"src": "16777:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_Deal_$1415_storage_$",
															"typeString": "mapping(string memory => struct EtharisEscrow.Deal storage ref)"
														}
													},
													"id": 2748,
													"indexExpression": {
														"id": 2747,
														"name": "_dealId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2732,
														"src": "16784:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "16777:15:13",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Deal_$1415_storage",
														"typeString": "struct EtharisEscrow.Deal storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16757:35:13"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_enum$_ContractStatus_$1381",
														"typeString": "enum EtharisEscrow.ContractStatus"
													},
													"id": 2754,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 2750,
															"name": "deal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2745,
															"src": "16876:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Deal_$1415_storage_ptr",
																"typeString": "struct EtharisEscrow.Deal storage pointer"
															}
														},
														"id": 2751,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "16881:6:13",
														"memberName": "status",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1410,
														"src": "16876:11:13",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_ContractStatus_$1381",
															"typeString": "enum EtharisEscrow.ContractStatus"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"id": 2752,
															"name": "ContractStatus",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1381,
															"src": "16891:14:13",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_ContractStatus_$1381_$",
																"typeString": "type(enum EtharisEscrow.ContractStatus)"
															}
														},
														"id": 2753,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "16906:6:13",
														"memberName": "ACTIVE",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1376,
														"src": "16891:21:13",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_ContractStatus_$1381",
															"typeString": "enum EtharisEscrow.ContractStatus"
														}
													},
													"src": "16876:36:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2766,
												"nodeType": "IfStatement",
												"src": "16872:178:13",
												"trueBody": {
													"id": 2765,
													"nodeType": "Block",
													"src": "16914:136:13",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_enum$_ContractStatus_$1381",
																	"typeString": "enum EtharisEscrow.ContractStatus"
																},
																"id": 2759,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 2755,
																		"name": "deal",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2745,
																		"src": "16932:4:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Deal_$1415_storage_ptr",
																			"typeString": "struct EtharisEscrow.Deal storage pointer"
																		}
																	},
																	"id": 2756,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "16937:6:13",
																	"memberName": "status",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1410,
																	"src": "16932:11:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_ContractStatus_$1381",
																		"typeString": "enum EtharisEscrow.ContractStatus"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"expression": {
																		"id": 2757,
																		"name": "ContractStatus",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1381,
																		"src": "16947:14:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_enum$_ContractStatus_$1381_$",
																			"typeString": "type(enum EtharisEscrow.ContractStatus)"
																		}
																	},
																	"id": 2758,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "16962:14:13",
																	"memberName": "PENDING_REVIEW",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1377,
																	"src": "16947:29:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_ContractStatus_$1381",
																		"typeString": "enum EtharisEscrow.ContractStatus"
																	}
																},
																"src": "16932:44:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2764,
															"nodeType": "IfStatement",
															"src": "16928:112:13",
															"trueBody": {
																"id": 2763,
																"nodeType": "Block",
																"src": "16978:62:13",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 2760,
																				"name": "CannotCancelThisDeal",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1345,
																				"src": "17003:20:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 2761,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "17003:22:13",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2762,
																		"nodeType": "RevertStatement",
																		"src": "16996:29:13"
																	}
																]
															}
														}
													]
												}
											},
											{
												"assignments": [
													2768
												],
												"declarations": [
													{
														"constant": false,
														"id": 2768,
														"mutability": "mutable",
														"name": "refundAmount",
														"nameLocation": "17067:12:13",
														"nodeType": "VariableDeclaration",
														"scope": 2799,
														"src": "17060:19:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														},
														"typeName": {
															"id": 2767,
															"name": "uint96",
															"nodeType": "ElementaryTypeName",
															"src": "17060:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2771,
												"initialValue": {
													"expression": {
														"id": 2769,
														"name": "deal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2745,
														"src": "17082:4:13",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Deal_$1415_storage_ptr",
															"typeString": "struct EtharisEscrow.Deal storage pointer"
														}
													},
													"id": 2770,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "17087:6:13",
													"memberName": "amount",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1395,
													"src": "17082:11:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "17060:33:13"
											},
											{
												"expression": {
													"id": 2777,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2772,
															"name": "deal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2745,
															"src": "17103:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Deal_$1415_storage_ptr",
																"typeString": "struct EtharisEscrow.Deal storage pointer"
															}
														},
														"id": 2774,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "17108:6:13",
														"memberName": "status",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1410,
														"src": "17103:11:13",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_ContractStatus_$1381",
															"typeString": "enum EtharisEscrow.ContractStatus"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 2775,
															"name": "ContractStatus",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1381,
															"src": "17117:14:13",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_ContractStatus_$1381_$",
																"typeString": "type(enum EtharisEscrow.ContractStatus)"
															}
														},
														"id": 2776,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "17132:9:13",
														"memberName": "CANCELLED",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1380,
														"src": "17117:24:13",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_ContractStatus_$1381",
															"typeString": "enum EtharisEscrow.ContractStatus"
														}
													},
													"src": "17103:38:13",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_ContractStatus_$1381",
														"typeString": "enum EtharisEscrow.ContractStatus"
													}
												},
												"id": 2778,
												"nodeType": "ExpressionStatement",
												"src": "17103:38:13"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													},
													"id": 2781,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2779,
														"name": "refundAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2768,
														"src": "17156:12:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2780,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "17172:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "17156:17:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2791,
												"nodeType": "IfStatement",
												"src": "17152:97:13",
												"trueBody": {
													"id": 2790,
													"nodeType": "Block",
													"src": "17175:74:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 2785,
																			"name": "deal",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2745,
																			"src": "17213:4:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Deal_$1415_storage_ptr",
																				"typeString": "struct EtharisEscrow.Deal storage pointer"
																			}
																		},
																		"id": 2786,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "17218:5:13",
																		"memberName": "brand",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1383,
																		"src": "17213:10:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2787,
																		"name": "refundAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2768,
																		"src": "17225:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint96",
																			"typeString": "uint96"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint96",
																			"typeString": "uint96"
																		}
																	],
																	"expression": {
																		"id": 2782,
																		"name": "_idrxToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1358,
																		"src": "17189:10:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$720",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 2784,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "17200:12:13",
																	"memberName": "safeTransfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 801,
																	"src": "17189:23:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$720_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$720_$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 2788,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17189:49:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2789,
															"nodeType": "ExpressionStatement",
															"src": "17189:49:13"
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2793,
															"name": "_dealId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2732,
															"src": "17278:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"expression": {
																"id": 2794,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "17287:3:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2795,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "17291:6:13",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "17287:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2796,
															"name": "refundAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2768,
															"src": "17299:12:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														],
														"id": 2792,
														"name": "DealCancelled",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1504,
														"src": "17264:13:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_address_$_t_uint96_$returns$__$",
															"typeString": "function (string memory,address,uint96)"
														}
													},
													"id": 2797,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17264:48:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2798,
												"nodeType": "EmitStatement",
												"src": "17259:53:13"
											}
										]
									},
									"documentation": {
										"id": 2730,
										"nodeType": "StructuredDocumentation",
										"src": "16544:68:13",
										"text": " @notice Emergency cancel deal (SERVER_ROLE only)."
									},
									"functionSelector": "1a1aaeed",
									"id": 2800,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2735,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2734,
												"name": "nonReentrant",
												"nameLocations": [
													"16692:12:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 607,
												"src": "16692:12:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "16692:12:13"
										},
										{
											"arguments": [
												{
													"id": 2737,
													"name": "SERVER_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1374,
													"src": "16714:11:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 2738,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2736,
												"name": "onlyRole",
												"nameLocations": [
													"16705:8:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 41,
												"src": "16705:8:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "16705:21:13"
										},
										{
											"arguments": [
												{
													"id": 2740,
													"name": "_dealId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2732,
													"src": "16738:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												}
											],
											"id": 2741,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2739,
												"name": "dealExists",
												"nameLocations": [
													"16727:10:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1567,
												"src": "16727:10:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "16727:19:13"
										}
									],
									"name": "emergencyCancelDeal",
									"nameLocation": "16626:19:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2733,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2732,
												"mutability": "mutable",
												"name": "_dealId",
												"nameLocation": "16669:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 2800,
												"src": "16655:21:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2731,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "16655:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16645:37:13"
									},
									"returnParameters": {
										"id": 2742,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16747:0:13"
									},
									"scope": 3190,
									"src": "16617:702:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2810,
										"nodeType": "Block",
										"src": "17557:43:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2807,
															"name": "_idrxToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1358,
															"src": "17582:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$720",
																"typeString": "contract IERC20"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$720",
																"typeString": "contract IERC20"
															}
														],
														"id": 2806,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "17574:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 2805,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "17574:7:13",
															"typeDescriptions": {}
														}
													},
													"id": 2808,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17574:19:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2804,
												"id": 2809,
												"nodeType": "Return",
												"src": "17567:26:13"
											}
										]
									},
									"functionSelector": "d6bc7c63",
									"id": 2811,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "idrxToken",
									"nameLocation": "17513:9:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2801,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17522:2:13"
									},
									"returnParameters": {
										"id": 2804,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2803,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2811,
												"src": "17548:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2802,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17548:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17547:9:13"
									},
									"scope": 3190,
									"src": "17504:96:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2818,
										"nodeType": "Block",
										"src": "17663:39:13",
										"statements": [
											{
												"expression": {
													"id": 2816,
													"name": "_platformFeeBps",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1361,
													"src": "17680:15:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"functionReturnParameters": 2815,
												"id": 2817,
												"nodeType": "Return",
												"src": "17673:22:13"
											}
										]
									},
									"functionSelector": "22dcd13e",
									"id": 2819,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "platformFeeBps",
									"nameLocation": "17615:14:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2812,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17629:2:13"
									},
									"returnParameters": {
										"id": 2815,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2814,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2819,
												"src": "17655:6:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 2813,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "17655:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17654:8:13"
									},
									"scope": 3190,
									"src": "17606:96:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2826,
										"nodeType": "Block",
										"src": "17764:37:13",
										"statements": [
											{
												"expression": {
													"id": 2824,
													"name": "_feeRecipient",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1369,
													"src": "17781:13:13",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2823,
												"id": 2825,
												"nodeType": "Return",
												"src": "17774:20:13"
											}
										]
									},
									"functionSelector": "46904840",
									"id": 2827,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "feeRecipient",
									"nameLocation": "17717:12:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2820,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17729:2:13"
									},
									"returnParameters": {
										"id": 2823,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2822,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2827,
												"src": "17755:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2821,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17755:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17754:9:13"
									},
									"scope": 3190,
									"src": "17708:93:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2839,
										"nodeType": "Block",
										"src": "17881:39:13",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 2835,
														"name": "_deals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1420,
														"src": "17898:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_Deal_$1415_storage_$",
															"typeString": "mapping(string memory => struct EtharisEscrow.Deal storage ref)"
														}
													},
													"id": 2837,
													"indexExpression": {
														"id": 2836,
														"name": "_dealId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2829,
														"src": "17905:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "17898:15:13",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Deal_$1415_storage",
														"typeString": "struct EtharisEscrow.Deal storage ref"
													}
												},
												"functionReturnParameters": 2834,
												"id": 2838,
												"nodeType": "Return",
												"src": "17891:22:13"
											}
										]
									},
									"functionSelector": "a0a57dac",
									"id": 2840,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "deals",
									"nameLocation": "17816:5:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2829,
												"mutability": "mutable",
												"name": "_dealId",
												"nameLocation": "17836:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 2840,
												"src": "17822:21:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2828,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "17822:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17821:23:13"
									},
									"returnParameters": {
										"id": 2834,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2833,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2840,
												"src": "17868:11:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Deal_$1415_memory_ptr",
													"typeString": "struct EtharisEscrow.Deal"
												},
												"typeName": {
													"id": 2832,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2831,
														"name": "Deal",
														"nameLocations": [
															"17868:4:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1415,
														"src": "17868:4:13"
													},
													"referencedDeclaration": 1415,
													"src": "17868:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Deal_$1415_storage_ptr",
														"typeString": "struct EtharisEscrow.Deal"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17867:13:13"
									},
									"scope": 3190,
									"src": "17807:113:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2852,
										"nodeType": "Block",
										"src": "18016:43:13",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 2848,
														"name": "_brandDeals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1425,
														"src": "18033:11:13",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_string_storage_$dyn_storage_$",
															"typeString": "mapping(address => string storage ref[] storage ref)"
														}
													},
													"id": 2850,
													"indexExpression": {
														"id": 2849,
														"name": "_brand",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2842,
														"src": "18045:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "18033:19:13",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
														"typeString": "string storage ref[] storage ref"
													}
												},
												"functionReturnParameters": 2847,
												"id": 2851,
												"nodeType": "Return",
												"src": "18026:26:13"
											}
										]
									},
									"functionSelector": "f0c3cd20",
									"id": 2853,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "brandDeals",
									"nameLocation": "17935:10:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2842,
												"mutability": "mutable",
												"name": "_brand",
												"nameLocation": "17963:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 2853,
												"src": "17955:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2841,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17955:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17945:30:13"
									},
									"returnParameters": {
										"id": 2847,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2846,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2853,
												"src": "17999:15:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
													"typeString": "string[]"
												},
												"typeName": {
													"baseType": {
														"id": 2844,
														"name": "string",
														"nodeType": "ElementaryTypeName",
														"src": "17999:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage_ptr",
															"typeString": "string"
														}
													},
													"id": 2845,
													"nodeType": "ArrayTypeName",
													"src": "17999:8:13",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
														"typeString": "string[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17998:17:13"
									},
									"scope": 3190,
									"src": "17926:133:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2865,
										"nodeType": "Block",
										"src": "18159:47:13",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 2861,
														"name": "_creatorDeals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1430,
														"src": "18176:13:13",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_string_storage_$dyn_storage_$",
															"typeString": "mapping(address => string storage ref[] storage ref)"
														}
													},
													"id": 2863,
													"indexExpression": {
														"id": 2862,
														"name": "_creator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2855,
														"src": "18190:8:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "18176:23:13",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
														"typeString": "string storage ref[] storage ref"
													}
												},
												"functionReturnParameters": 2860,
												"id": 2864,
												"nodeType": "Return",
												"src": "18169:30:13"
											}
										]
									},
									"functionSelector": "aed1505d",
									"id": 2866,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "creatorDeals",
									"nameLocation": "18074:12:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2856,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2855,
												"mutability": "mutable",
												"name": "_creator",
												"nameLocation": "18104:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 2866,
												"src": "18096:16:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2854,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18096:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18086:32:13"
									},
									"returnParameters": {
										"id": 2860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2859,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2866,
												"src": "18142:15:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
													"typeString": "string[]"
												},
												"typeName": {
													"baseType": {
														"id": 2857,
														"name": "string",
														"nodeType": "ElementaryTypeName",
														"src": "18142:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage_ptr",
															"typeString": "string"
														}
													},
													"id": 2858,
													"nodeType": "ArrayTypeName",
													"src": "18142:8:13",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
														"typeString": "string[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18141:17:13"
									},
									"scope": 3190,
									"src": "18065:141:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2948,
										"nodeType": "Block",
										"src": "18806:542:13",
										"statements": [
											{
												"assignments": [
													2904
												],
												"declarations": [
													{
														"constant": false,
														"id": 2904,
														"mutability": "mutable",
														"name": "deal",
														"nameLocation": "18829:4:13",
														"nodeType": "VariableDeclaration",
														"scope": 2948,
														"src": "18816:17:13",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Deal_$1415_storage_ptr",
															"typeString": "struct EtharisEscrow.Deal"
														},
														"typeName": {
															"id": 2903,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2902,
																"name": "Deal",
																"nameLocations": [
																	"18816:4:13"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1415,
																"src": "18816:4:13"
															},
															"referencedDeclaration": 1415,
															"src": "18816:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Deal_$1415_storage_ptr",
																"typeString": "struct EtharisEscrow.Deal"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2908,
												"initialValue": {
													"baseExpression": {
														"id": 2905,
														"name": "_deals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1420,
														"src": "18836:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_Deal_$1415_storage_$",
															"typeString": "mapping(string memory => struct EtharisEscrow.Deal storage ref)"
														}
													},
													"id": 2907,
													"indexExpression": {
														"id": 2906,
														"name": "_dealId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2868,
														"src": "18843:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "18836:15:13",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Deal_$1415_storage",
														"typeString": "struct EtharisEscrow.Deal storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "18816:35:13"
											},
											{
												"condition": {
													"id": 2911,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "18865:12:13",
													"subExpression": {
														"expression": {
															"id": 2909,
															"name": "deal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2904,
															"src": "18866:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Deal_$1415_storage_ptr",
																"typeString": "struct EtharisEscrow.Deal storage pointer"
															}
														},
														"id": 2910,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "18871:6:13",
														"memberName": "exists",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1414,
														"src": "18866:11:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2915,
												"nodeType": "IfStatement",
												"src": "18861:39:13",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 2912,
															"name": "DealNotFound",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1319,
															"src": "18886:12:13",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 2913,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "18886:14:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 2914,
													"nodeType": "RevertStatement",
													"src": "18879:21:13"
												}
											},
											{
												"expression": {
													"components": [
														{
															"expression": {
																"id": 2916,
																"name": "deal",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2904,
																"src": "18932:4:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Deal_$1415_storage_ptr",
																	"typeString": "struct EtharisEscrow.Deal storage pointer"
																}
															},
															"id": 2917,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "18937:6:13",
															"memberName": "dealId",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1387,
															"src": "18932:11:13",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage",
																"typeString": "string storage ref"
															}
														},
														{
															"expression": {
																"id": 2918,
																"name": "deal",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2904,
																"src": "18957:4:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Deal_$1415_storage_ptr",
																	"typeString": "struct EtharisEscrow.Deal storage pointer"
																}
															},
															"id": 2919,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "18962:5:13",
															"memberName": "brand",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1383,
															"src": "18957:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 2920,
																"name": "deal",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2904,
																"src": "18981:4:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Deal_$1415_storage_ptr",
																	"typeString": "struct EtharisEscrow.Deal storage pointer"
																}
															},
															"id": 2921,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "18986:7:13",
															"memberName": "creator",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1385,
															"src": "18981:12:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 2922,
																"name": "deal",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2904,
																"src": "19007:4:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Deal_$1415_storage_ptr",
																	"typeString": "struct EtharisEscrow.Deal storage pointer"
																}
															},
															"id": 2923,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "19012:6:13",
															"memberName": "amount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1395,
															"src": "19007:11:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														},
														{
															"expression": {
																"id": 2924,
																"name": "deal",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2904,
																"src": "19032:4:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Deal_$1415_storage_ptr",
																	"typeString": "struct EtharisEscrow.Deal storage pointer"
																}
															},
															"id": 2925,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "19037:8:13",
															"memberName": "deadline",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1397,
															"src": "19032:13:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														{
															"expression": {
																"id": 2926,
																"name": "deal",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2904,
																"src": "19059:4:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Deal_$1415_storage_ptr",
																	"typeString": "struct EtharisEscrow.Deal storage pointer"
																}
															},
															"id": 2927,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "19064:6:13",
															"memberName": "status",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1410,
															"src": "19059:11:13",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_ContractStatus_$1381",
																"typeString": "enum EtharisEscrow.ContractStatus"
															}
														},
														{
															"expression": {
																"id": 2928,
																"name": "deal",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2904,
																"src": "19084:4:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Deal_$1415_storage_ptr",
																	"typeString": "struct EtharisEscrow.Deal storage pointer"
																}
															},
															"id": 2929,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "19089:9:13",
															"memberName": "briefHash",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1389,
															"src": "19084:14:13",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage",
																"typeString": "string storage ref"
															}
														},
														{
															"expression": {
																"id": 2930,
																"name": "deal",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2904,
																"src": "19112:4:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Deal_$1415_storage_ptr",
																	"typeString": "struct EtharisEscrow.Deal storage pointer"
																}
															},
															"id": 2931,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "19117:10:13",
															"memberName": "contentUrl",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1391,
															"src": "19112:15:13",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage",
																"typeString": "string storage ref"
															}
														},
														{
															"expression": {
																"id": 2932,
																"name": "deal",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2904,
																"src": "19141:4:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Deal_$1415_storage_ptr",
																	"typeString": "struct EtharisEscrow.Deal storage pointer"
																}
															},
															"id": 2933,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "19146:13:13",
															"memberName": "disputeReason",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1393,
															"src": "19141:18:13",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage",
																"typeString": "string storage ref"
															}
														},
														{
															"expression": {
																"id": 2934,
																"name": "deal",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2904,
																"src": "19173:4:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Deal_$1415_storage_ptr",
																	"typeString": "struct EtharisEscrow.Deal storage pointer"
																}
															},
															"id": 2935,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "19178:14:13",
															"memberName": "reviewDeadline",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1403,
															"src": "19173:19:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														{
															"expression": {
																"id": 2936,
																"name": "deal",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2904,
																"src": "19206:4:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Deal_$1415_storage_ptr",
																	"typeString": "struct EtharisEscrow.Deal storage pointer"
																}
															},
															"id": 2937,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "19211:8:13",
															"memberName": "fundedAt",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1399,
															"src": "19206:13:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														{
															"expression": {
																"id": 2938,
																"name": "deal",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2904,
																"src": "19233:4:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Deal_$1415_storage_ptr",
																	"typeString": "struct EtharisEscrow.Deal storage pointer"
																}
															},
															"id": 2939,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "19238:11:13",
															"memberName": "submittedAt",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1401,
															"src": "19233:16:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														{
															"expression": {
																"id": 2940,
																"name": "deal",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2904,
																"src": "19263:4:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Deal_$1415_storage_ptr",
																	"typeString": "struct EtharisEscrow.Deal storage pointer"
																}
															},
															"id": 2941,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "19268:10:13",
															"memberName": "disputedAt",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1405,
															"src": "19263:15:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														{
															"expression": {
																"id": 2942,
																"name": "deal",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2904,
																"src": "19292:4:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Deal_$1415_storage_ptr",
																	"typeString": "struct EtharisEscrow.Deal storage pointer"
																}
															},
															"id": 2943,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "19297:9:13",
															"memberName": "createdAt",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1407,
															"src": "19292:14:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														{
															"expression": {
																"id": 2944,
																"name": "deal",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2904,
																"src": "19320:4:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Deal_$1415_storage_ptr",
																	"typeString": "struct EtharisEscrow.Deal storage pointer"
																}
															},
															"id": 2945,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "19325:6:13",
															"memberName": "exists",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1414,
															"src": "19320:11:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"id": 2946,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "18918:423:13",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_string_storage_$_t_address_$_t_address_$_t_uint96_$_t_uint64_$_t_enum$_ContractStatus_$1381_$_t_string_storage_$_t_string_storage_$_t_string_storage_$_t_uint64_$_t_uint64_$_t_uint64_$_t_uint64_$_t_uint64_$_t_bool_$",
														"typeString": "tuple(string storage ref,address,address,uint96,uint64,enum EtharisEscrow.ContractStatus,string storage ref,string storage ref,string storage ref,uint64,uint64,uint64,uint64,uint64,bool)"
													}
												},
												"functionReturnParameters": 2901,
												"id": 2947,
												"nodeType": "Return",
												"src": "18911:430:13"
											}
										]
									},
									"functionSelector": "e7079180",
									"id": 2949,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getDeal",
									"nameLocation": "18221:7:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2869,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2868,
												"mutability": "mutable",
												"name": "_dealId",
												"nameLocation": "18252:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 2949,
												"src": "18238:21:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2867,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "18238:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18228:37:13"
									},
									"returnParameters": {
										"id": 2901,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2871,
												"mutability": "mutable",
												"name": "dealId",
												"nameLocation": "18340:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 2949,
												"src": "18326:20:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2870,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "18326:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2873,
												"mutability": "mutable",
												"name": "brand",
												"nameLocation": "18368:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 2949,
												"src": "18360:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2872,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18360:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2875,
												"mutability": "mutable",
												"name": "creator",
												"nameLocation": "18395:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 2949,
												"src": "18387:15:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2874,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18387:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2877,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "18423:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 2949,
												"src": "18416:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 2876,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "18416:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2879,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "18450:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 2949,
												"src": "18443:15:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 2878,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "18443:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2882,
												"mutability": "mutable",
												"name": "status",
												"nameLocation": "18487:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 2949,
												"src": "18472:21:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_ContractStatus_$1381",
													"typeString": "enum EtharisEscrow.ContractStatus"
												},
												"typeName": {
													"id": 2881,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2880,
														"name": "ContractStatus",
														"nameLocations": [
															"18472:14:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1381,
														"src": "18472:14:13"
													},
													"referencedDeclaration": 1381,
													"src": "18472:14:13",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_ContractStatus_$1381",
														"typeString": "enum EtharisEscrow.ContractStatus"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2884,
												"mutability": "mutable",
												"name": "briefHash",
												"nameLocation": "18521:9:13",
												"nodeType": "VariableDeclaration",
												"scope": 2949,
												"src": "18507:23:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2883,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "18507:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2886,
												"mutability": "mutable",
												"name": "contentUrl",
												"nameLocation": "18558:10:13",
												"nodeType": "VariableDeclaration",
												"scope": 2949,
												"src": "18544:24:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2885,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "18544:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2888,
												"mutability": "mutable",
												"name": "disputeReason",
												"nameLocation": "18596:13:13",
												"nodeType": "VariableDeclaration",
												"scope": 2949,
												"src": "18582:27:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2887,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "18582:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2890,
												"mutability": "mutable",
												"name": "reviewDeadline",
												"nameLocation": "18630:14:13",
												"nodeType": "VariableDeclaration",
												"scope": 2949,
												"src": "18623:21:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 2889,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "18623:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2892,
												"mutability": "mutable",
												"name": "fundedAt",
												"nameLocation": "18665:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 2949,
												"src": "18658:15:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 2891,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "18658:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2894,
												"mutability": "mutable",
												"name": "submittedAt",
												"nameLocation": "18694:11:13",
												"nodeType": "VariableDeclaration",
												"scope": 2949,
												"src": "18687:18:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 2893,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "18687:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2896,
												"mutability": "mutable",
												"name": "disputedAt",
												"nameLocation": "18726:10:13",
												"nodeType": "VariableDeclaration",
												"scope": 2949,
												"src": "18719:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 2895,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "18719:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2898,
												"mutability": "mutable",
												"name": "createdAt",
												"nameLocation": "18757:9:13",
												"nodeType": "VariableDeclaration",
												"scope": 2949,
												"src": "18750:16:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 2897,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "18750:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2900,
												"mutability": "mutable",
												"name": "exists",
												"nameLocation": "18785:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 2949,
												"src": "18780:11:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2899,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "18780:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18312:489:13"
									},
									"scope": 3190,
									"src": "18212:1136:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2968,
										"nodeType": "Block",
										"src": "19471:102:13",
										"statements": [
											{
												"expression": {
													"condition": {
														"id": 2959,
														"name": "_isBrand",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2953,
														"src": "19500:8:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"baseExpression": {
															"id": 2963,
															"name": "_creatorDeals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1430,
															"src": "19539:13:13",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_string_storage_$dyn_storage_$",
																"typeString": "mapping(address => string storage ref[] storage ref)"
															}
														},
														"id": 2965,
														"indexExpression": {
															"id": 2964,
															"name": "_userAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2951,
															"src": "19553:12:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "19539:27:13",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
															"typeString": "string storage ref[] storage ref"
														}
													},
													"id": 2966,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "19500:66:13",
													"trueExpression": {
														"baseExpression": {
															"id": 2960,
															"name": "_brandDeals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1425,
															"src": "19511:11:13",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_string_storage_$dyn_storage_$",
																"typeString": "mapping(address => string storage ref[] storage ref)"
															}
														},
														"id": 2962,
														"indexExpression": {
															"id": 2961,
															"name": "_userAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2951,
															"src": "19523:12:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "19511:25:13",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
															"typeString": "string storage ref[] storage ref"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
														"typeString": "string storage ref[] storage pointer"
													}
												},
												"functionReturnParameters": 2958,
												"id": 2967,
												"nodeType": "Return",
												"src": "19481:85:13"
											}
										]
									},
									"functionSelector": "9fad59b4",
									"id": 2969,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getDeals",
									"nameLocation": "19363:8:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2954,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2951,
												"mutability": "mutable",
												"name": "_userAddress",
												"nameLocation": "19389:12:13",
												"nodeType": "VariableDeclaration",
												"scope": 2969,
												"src": "19381:20:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2950,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19381:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2953,
												"mutability": "mutable",
												"name": "_isBrand",
												"nameLocation": "19416:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 2969,
												"src": "19411:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2952,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "19411:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19371:59:13"
									},
									"returnParameters": {
										"id": 2958,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2957,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2969,
												"src": "19454:15:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
													"typeString": "string[]"
												},
												"typeName": {
													"baseType": {
														"id": 2955,
														"name": "string",
														"nodeType": "ElementaryTypeName",
														"src": "19454:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage_ptr",
															"typeString": "string"
														}
													},
													"id": 2956,
													"nodeType": "ArrayTypeName",
													"src": "19454:8:13",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
														"typeString": "string[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19453:17:13"
									},
									"scope": 3190,
									"src": "19354:219:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2998,
										"nodeType": "Block",
										"src": "19669:206:13",
										"statements": [
											{
												"assignments": [
													2978
												],
												"declarations": [
													{
														"constant": false,
														"id": 2978,
														"mutability": "mutable",
														"name": "deal",
														"nameLocation": "19692:4:13",
														"nodeType": "VariableDeclaration",
														"scope": 2998,
														"src": "19679:17:13",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Deal_$1415_storage_ptr",
															"typeString": "struct EtharisEscrow.Deal"
														},
														"typeName": {
															"id": 2977,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2976,
																"name": "Deal",
																"nameLocations": [
																	"19679:4:13"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1415,
																"src": "19679:4:13"
															},
															"referencedDeclaration": 1415,
															"src": "19679:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Deal_$1415_storage_ptr",
																"typeString": "struct EtharisEscrow.Deal"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2982,
												"initialValue": {
													"baseExpression": {
														"id": 2979,
														"name": "_deals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1420,
														"src": "19699:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_Deal_$1415_storage_$",
															"typeString": "mapping(string memory => struct EtharisEscrow.Deal storage ref)"
														}
													},
													"id": 2981,
													"indexExpression": {
														"id": 2980,
														"name": "_dealId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2971,
														"src": "19706:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "19699:15:13",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Deal_$1415_storage",
														"typeString": "struct EtharisEscrow.Deal storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "19679:35:13"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2996,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 2990,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 2983,
																"name": "deal",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2978,
																"src": "19743:4:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Deal_$1415_storage_ptr",
																	"typeString": "struct EtharisEscrow.Deal storage pointer"
																}
															},
															"id": 2984,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "19748:6:13",
															"memberName": "exists",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1414,
															"src": "19743:11:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_enum$_ContractStatus_$1381",
																"typeString": "enum EtharisEscrow.ContractStatus"
															},
															"id": 2989,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 2985,
																	"name": "deal",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2978,
																	"src": "19770:4:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Deal_$1415_storage_ptr",
																		"typeString": "struct EtharisEscrow.Deal storage pointer"
																	}
																},
																"id": 2986,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "19775:6:13",
																"memberName": "status",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1410,
																"src": "19770:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_ContractStatus_$1381",
																	"typeString": "enum EtharisEscrow.ContractStatus"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 2987,
																	"name": "ContractStatus",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1381,
																	"src": "19785:14:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_ContractStatus_$1381_$",
																		"typeString": "type(enum EtharisEscrow.ContractStatus)"
																	}
																},
																"id": 2988,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "19800:14:13",
																"memberName": "PENDING_REVIEW",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1377,
																"src": "19785:29:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_ContractStatus_$1381",
																	"typeString": "enum EtharisEscrow.ContractStatus"
																}
															},
															"src": "19770:44:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "19743:71:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2995,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 2991,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "19830:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 2992,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "19836:9:13",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "19830:15:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"expression": {
																"id": 2993,
																"name": "deal",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2978,
																"src": "19849:4:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Deal_$1415_storage_ptr",
																	"typeString": "struct EtharisEscrow.Deal storage pointer"
																}
															},
															"id": 2994,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "19854:14:13",
															"memberName": "reviewDeadline",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1403,
															"src": "19849:19:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"src": "19830:38:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "19743:125:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2975,
												"id": 2997,
												"nodeType": "Return",
												"src": "19724:144:13"
											}
										]
									},
									"functionSelector": "76492d3f",
									"id": 2999,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "canAutoRelease",
									"nameLocation": "19588:14:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2972,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2971,
												"mutability": "mutable",
												"name": "_dealId",
												"nameLocation": "19626:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 2999,
												"src": "19612:21:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2970,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "19612:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19602:37:13"
									},
									"returnParameters": {
										"id": 2975,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2974,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2999,
												"src": "19663:4:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2973,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "19663:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19662:6:13"
									},
									"scope": 3190,
									"src": "19579:296:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3032,
										"nodeType": "Block",
										"src": "20142:236:13",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													},
													"id": 3009,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3007,
														"name": "_newFeeBps",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3001,
														"src": "20156:10:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31303030",
														"id": 3008,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "20169:4:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000_by_1",
															"typeString": "int_const 1000"
														},
														"value": "1000"
													},
													"src": "20156:17:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3013,
												"nodeType": "IfStatement",
												"src": "20152:42:13",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 3010,
															"name": "FeeTooHigh",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1347,
															"src": "20182:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 3011,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "20182:12:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 3012,
													"nodeType": "RevertStatement",
													"src": "20175:19:13"
												}
											},
											{
												"assignments": [
													3015
												],
												"declarations": [
													{
														"constant": false,
														"id": 3015,
														"mutability": "mutable",
														"name": "oldFee",
														"nameLocation": "20212:6:13",
														"nodeType": "VariableDeclaration",
														"scope": 3032,
														"src": "20205:13:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														},
														"typeName": {
															"id": 3014,
															"name": "uint96",
															"nodeType": "ElementaryTypeName",
															"src": "20205:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3017,
												"initialValue": {
													"id": 3016,
													"name": "_platformFeeBps",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1361,
													"src": "20221:15:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "20205:31:13"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													},
													"id": 3020,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3018,
														"name": "oldFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3015,
														"src": "20250:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 3019,
														"name": "_newFeeBps",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3001,
														"src": "20260:10:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"src": "20250:20:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3022,
												"nodeType": "IfStatement",
												"src": "20246:33:13",
												"trueBody": {
													"functionReturnParameters": 3006,
													"id": 3021,
													"nodeType": "Return",
													"src": "20272:7:13"
												}
											},
											{
												"expression": {
													"id": 3025,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3023,
														"name": "_platformFeeBps",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1361,
														"src": "20289:15:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3024,
														"name": "_newFeeBps",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3001,
														"src": "20307:10:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"src": "20289:28:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"id": 3026,
												"nodeType": "ExpressionStatement",
												"src": "20289:28:13"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 3028,
															"name": "oldFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3015,
															"src": "20352:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														},
														{
															"id": 3029,
															"name": "_newFeeBps",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3001,
															"src": "20360:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															},
															{
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														],
														"id": 3027,
														"name": "PlatformFeeUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1510,
														"src": "20333:18:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint96_$_t_uint96_$returns$__$",
															"typeString": "function (uint96,uint96)"
														}
													},
													"id": 3030,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20333:38:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3031,
												"nodeType": "EmitStatement",
												"src": "20328:43:13"
											}
										]
									},
									"functionSelector": "317b8c5b",
									"id": 3033,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 3004,
													"name": "SERVER_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1374,
													"src": "20129:11:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 3005,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3003,
												"name": "onlyRole",
												"nameLocations": [
													"20120:8:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 41,
												"src": "20120:8:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "20120:21:13"
										}
									],
									"name": "updatePlatformFee",
									"nameLocation": "20060:17:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3002,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3001,
												"mutability": "mutable",
												"name": "_newFeeBps",
												"nameLocation": "20094:10:13",
												"nodeType": "VariableDeclaration",
												"scope": 3033,
												"src": "20087:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 3000,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "20087:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20077:33:13"
									},
									"returnParameters": {
										"id": 3006,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20142:0:13"
									},
									"scope": 3190,
									"src": "20051:327:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3069,
										"nodeType": "Block",
										"src": "20480:275:13",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 3046,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3041,
														"name": "_newRecipient",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3035,
														"src": "20494:13:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 3044,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "20519:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 3043,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "20511:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 3042,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "20511:7:13",
																"typeDescriptions": {}
															}
														},
														"id": 3045,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "20511:10:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "20494:27:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3050,
												"nodeType": "IfStatement",
												"src": "20490:56:13",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 3047,
															"name": "InvalidAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1309,
															"src": "20530:14:13",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 3048,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "20530:16:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 3049,
													"nodeType": "RevertStatement",
													"src": "20523:23:13"
												}
											},
											{
												"assignments": [
													3052
												],
												"declarations": [
													{
														"constant": false,
														"id": 3052,
														"mutability": "mutable",
														"name": "oldRecipient",
														"nameLocation": "20565:12:13",
														"nodeType": "VariableDeclaration",
														"scope": 3069,
														"src": "20557:20:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 3051,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "20557:7:13",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3054,
												"initialValue": {
													"id": 3053,
													"name": "_feeRecipient",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1369,
													"src": "20580:13:13",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "20557:36:13"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 3057,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3055,
														"name": "oldRecipient",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3052,
														"src": "20607:12:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 3056,
														"name": "_newRecipient",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3035,
														"src": "20623:13:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "20607:29:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3059,
												"nodeType": "IfStatement",
												"src": "20603:42:13",
												"trueBody": {
													"functionReturnParameters": 3040,
													"id": 3058,
													"nodeType": "Return",
													"src": "20638:7:13"
												}
											},
											{
												"expression": {
													"id": 3062,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3060,
														"name": "_feeRecipient",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1369,
														"src": "20655:13:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3061,
														"name": "_newRecipient",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3035,
														"src": "20671:13:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "20655:29:13",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 3063,
												"nodeType": "ExpressionStatement",
												"src": "20655:29:13"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 3065,
															"name": "oldRecipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3052,
															"src": "20720:12:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3066,
															"name": "_newRecipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3035,
															"src": "20734:13:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 3064,
														"name": "FeeRecipientUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1516,
														"src": "20700:19:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 3067,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20700:48:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3068,
												"nodeType": "EmitStatement",
												"src": "20695:53:13"
											}
										]
									},
									"functionSelector": "f160d369",
									"id": 3070,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 3038,
													"name": "SERVER_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1374,
													"src": "20467:11:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 3039,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3037,
												"name": "onlyRole",
												"nameLocations": [
													"20458:8:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 41,
												"src": "20458:8:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "20458:21:13"
										}
									],
									"name": "updateFeeRecipient",
									"nameLocation": "20393:18:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3036,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3035,
												"mutability": "mutable",
												"name": "_newRecipient",
												"nameLocation": "20429:13:13",
												"nodeType": "VariableDeclaration",
												"scope": 3070,
												"src": "20421:21:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3034,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20421:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20411:37:13"
									},
									"returnParameters": {
										"id": 3040,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20480:0:13"
									},
									"scope": 3190,
									"src": "20384:371:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3079,
										"nodeType": "Block",
										"src": "20809:25:13",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 3076,
														"name": "_pause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 560,
														"src": "20819:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 3077,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20819:8:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3078,
												"nodeType": "ExpressionStatement",
												"src": "20819:8:13"
											}
										]
									},
									"functionSelector": "8456cb59",
									"id": 3080,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 3073,
													"name": "SERVER_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1374,
													"src": "20796:11:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 3074,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3072,
												"name": "onlyRole",
												"nameLocations": [
													"20787:8:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 41,
												"src": "20787:8:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "20787:21:13"
										}
									],
									"name": "pause",
									"nameLocation": "20770:5:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3071,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20775:2:13"
									},
									"returnParameters": {
										"id": 3075,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20809:0:13"
									},
									"scope": 3190,
									"src": "20761:73:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3089,
										"nodeType": "Block",
										"src": "20890:27:13",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 3086,
														"name": "_unpause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 576,
														"src": "20900:8:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 3087,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20900:10:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3088,
												"nodeType": "ExpressionStatement",
												"src": "20900:10:13"
											}
										]
									},
									"functionSelector": "3f4ba83a",
									"id": 3090,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 3083,
													"name": "SERVER_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1374,
													"src": "20877:11:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 3084,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3082,
												"name": "onlyRole",
												"nameLocations": [
													"20868:8:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 41,
												"src": "20868:8:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "20868:21:13"
										}
									],
									"name": "unpause",
									"nameLocation": "20849:7:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3081,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20856:2:13"
									},
									"returnParameters": {
										"id": 3085,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20890:0:13"
									},
									"scope": 3190,
									"src": "20840:77:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3126,
										"nodeType": "Block",
										"src": "21036:187:13",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 3105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3100,
														"name": "_token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3092,
														"src": "21050:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"id": 3103,
																"name": "_idrxToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1358,
																"src": "21068:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$720",
																	"typeString": "contract IERC20"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$720",
																	"typeString": "contract IERC20"
																}
															],
															"id": 3102,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "21060:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 3101,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "21060:7:13",
																"typeDescriptions": {}
															}
														},
														"id": 3104,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "21060:19:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "21050:29:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3109,
												"nodeType": "IfStatement",
												"src": "21046:62:13",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 3106,
															"name": "CannotWithdrawIDRX",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1349,
															"src": "21088:18:13",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 3107,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "21088:20:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 3108,
													"nodeType": "RevertStatement",
													"src": "21081:27:13"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3112,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3110,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3094,
														"src": "21122:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 3111,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "21133:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "21122:12:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3116,
												"nodeType": "IfStatement",
												"src": "21118:40:13",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 3113,
															"name": "InvalidAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1353,
															"src": "21143:13:13",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 3114,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "21143:15:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 3115,
													"nodeType": "RevertStatement",
													"src": "21136:22:13"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 3121,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "21196:3:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 3122,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "21200:6:13",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "21196:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3123,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3094,
															"src": "21208:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 3118,
																	"name": "_token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3092,
																	"src": "21175:6:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 3117,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 720,
																"src": "21168:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$720_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 3119,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "21168:14:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$720",
																"typeString": "contract IERC20"
															}
														},
														"id": 3120,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "21183:12:13",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 801,
														"src": "21168:27:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$720_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$720_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 3124,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21168:48:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3125,
												"nodeType": "ExpressionStatement",
												"src": "21168:48:13"
											}
										]
									},
									"functionSelector": "95ccea67",
									"id": 3127,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 3097,
													"name": "SERVER_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1374,
													"src": "21023:11:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 3098,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3096,
												"name": "onlyRole",
												"nameLocations": [
													"21014:8:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 41,
												"src": "21014:8:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "21014:21:13"
										}
									],
									"name": "emergencyWithdraw",
									"nameLocation": "20932:17:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3095,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3092,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "20967:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 3127,
												"src": "20959:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3091,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20959:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3094,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "20991:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 3127,
												"src": "20983:15:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3093,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20983:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20949:55:13"
									},
									"returnParameters": {
										"id": 3099,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21036:0:13"
									},
									"scope": 3190,
									"src": "20923:300:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3188,
										"nodeType": "Block",
										"src": "21572:394:13",
										"statements": [
											{
												"assignments": [
													3147
												],
												"declarations": [
													{
														"constant": false,
														"id": 3147,
														"mutability": "mutable",
														"name": "token",
														"nameLocation": "21595:5:13",
														"nodeType": "VariableDeclaration",
														"scope": 3188,
														"src": "21582:18:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20Permit_$756",
															"typeString": "contract IERC20Permit"
														},
														"typeName": {
															"id": 3146,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 3145,
																"name": "IERC20Permit",
																"nameLocations": [
																	"21582:12:13"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 756,
																"src": "21582:12:13"
															},
															"referencedDeclaration": 756,
															"src": "21582:12:13",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Permit_$756",
																"typeString": "contract IERC20Permit"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3154,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 3151,
																	"name": "_idrxToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1358,
																	"src": "21624:10:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$720",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$720",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 3150,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "21616:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 3149,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "21616:7:13",
																	"typeDescriptions": {}
																}
															},
															"id": 3152,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "21616:19:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 3148,
														"name": "IERC20Permit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 756,
														"src": "21603:12:13",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_IERC20Permit_$756_$",
															"typeString": "type(contract IERC20Permit)"
														}
													},
													"id": 3153,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21603:33:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Permit_$756",
														"typeString": "contract IERC20Permit"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "21582:54:13"
											},
											{
												"clauses": [
													{
														"block": {
															"id": 3180,
															"nodeType": "Block",
															"src": "21706:201:13",
															"statements": [
																{
																	"assignments": [
																		3166
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 3166,
																			"mutability": "mutable",
																			"name": "allowance",
																			"nameLocation": "21781:9:13",
																			"nodeType": "VariableDeclaration",
																			"scope": 3180,
																			"src": "21773:17:13",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"typeName": {
																				"id": 3165,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "21773:7:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"visibility": "internal"
																		}
																	],
																	"id": 3172,
																	"initialValue": {
																		"arguments": [
																			{
																				"id": 3169,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3130,
																				"src": "21814:5:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 3170,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3132,
																				"src": "21821:7:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"expression": {
																				"id": 3167,
																				"name": "_idrxToken",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1358,
																				"src": "21793:10:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$720",
																					"typeString": "contract IERC20"
																				}
																			},
																			"id": 3168,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "21804:9:13",
																			"memberName": "allowance",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 697,
																			"src": "21793:20:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																				"typeString": "function (address,address) view external returns (uint256)"
																			}
																		},
																		"id": 3171,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "21793:36:13",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "VariableDeclarationStatement",
																	"src": "21773:56:13"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 3175,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 3173,
																			"name": "allowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3166,
																			"src": "21847:9:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<",
																		"rightExpression": {
																			"id": 3174,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3134,
																			"src": "21859:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "21847:17:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 3179,
																	"nodeType": "IfStatement",
																	"src": "21843:53:13",
																	"trueBody": {
																		"errorCall": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 3176,
																				"name": "InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1329,
																				"src": "21873:21:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 3177,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "21873:23:13",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 3178,
																		"nodeType": "RevertStatement",
																		"src": "21866:30:13"
																	}
																}
															]
														},
														"errorName": "",
														"id": 3181,
														"nodeType": "TryCatchClause",
														"src": "21706:201:13"
													},
													{
														"block": {
															"id": 3185,
															"nodeType": "Block",
															"src": "21914:46:13",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 3182,
																			"name": "PermitFailed",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1355,
																			"src": "21935:12:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 3183,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "21935:14:13",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 3184,
																	"nodeType": "RevertStatement",
																	"src": "21928:21:13"
																}
															]
														},
														"errorName": "",
														"id": 3186,
														"nodeType": "TryCatchClause",
														"src": "21908:52:13"
													}
												],
												"externalCall": {
													"arguments": [
														{
															"id": 3157,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3130,
															"src": "21664:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3158,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3132,
															"src": "21671:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3159,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3134,
															"src": "21680:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 3160,
															"name": "deadline",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3136,
															"src": "21687:8:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 3161,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3138,
															"src": "21697:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 3162,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3140,
															"src": "21700:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 3163,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3142,
															"src": "21703:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"id": 3155,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3147,
															"src": "21651:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Permit_$756",
																"typeString": "contract IERC20Permit"
															}
														},
														"id": 3156,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "21657:6:13",
														"memberName": "permit",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 741,
														"src": "21651:12:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (address,address,uint256,uint256,uint8,bytes32,bytes32) external"
														}
													},
													"id": 3164,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21651:54:13",
													"tryCall": true,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3187,
												"nodeType": "TryStatement",
												"src": "21647:313:13"
											}
										]
									},
									"documentation": {
										"id": 3128,
										"nodeType": "StructuredDocumentation",
										"src": "21282:94:13",
										"text": " @dev Internal function to perform a safe permit with proper error handling."
									},
									"id": 3189,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_executePermit",
									"nameLocation": "21390:14:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3130,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "21422:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 3189,
												"src": "21414:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3129,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21414:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3132,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "21445:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 3189,
												"src": "21437:15:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3131,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21437:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3134,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "21470:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 3189,
												"src": "21462:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3133,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21462:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3136,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "21493:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 3189,
												"src": "21485:16:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3135,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21485:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3138,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "21517:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 3189,
												"src": "21511:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 3137,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "21511:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3140,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "21536:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 3189,
												"src": "21528:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 3139,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "21528:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3142,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "21555:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 3189,
												"src": "21547:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 3141,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "21547:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21404:158:13"
									},
									"returnParameters": {
										"id": 3144,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21572:0:13"
									},
									"scope": 3190,
									"src": "21381:585:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3191,
							"src": "680:21288:13",
							"usedErrors": [
								306,
								309,
								768,
								1307,
								1309,
								1311,
								1313,
								1315,
								1317,
								1319,
								1321,
								1323,
								1325,
								1327,
								1329,
								1331,
								1333,
								1335,
								1337,
								1339,
								1341,
								1343,
								1345,
								1347,
								1349,
								1351,
								1353,
								1355
							],
							"usedEvents": [
								318,
								327,
								336,
								480,
								485,
								1442,
								1450,
								1460,
								1466,
								1476,
								1484,
								1496,
								1504,
								1510,
								1516
							]
						}
					],
					"src": "32:21937:13"
				},
				"id": 13
			}
		}
	}
}