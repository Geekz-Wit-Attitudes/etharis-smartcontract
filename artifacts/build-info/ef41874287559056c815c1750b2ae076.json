{
	"id": "ef41874287559056c815c1750b2ae076",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.20",
	"solcLongVersion": "0.8.20+commit.a1b79de6",
	"input": {
		"language": "Solidity",
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"viaIR": true,
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		},
		"sources": {
			"contracts/EtharisEscrow.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.20;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\nimport \"@openzeppelin/contracts/security/Pausable.sol\";\nimport \"@openzeppelin/contracts/access/AccessControl.sol\";\n\n/**\n * @title EtharisEscrow\n * @author Etharis Team\n * @dev Escrow contract for sponsorship deals. All action functions can only be called by the Server Wallet (Owner).\n * @notice Uses IDRX as the payment token (Indonesian Rupiah stablecoin).\n */\ncontract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {\n    using SafeERC20 for IERC20;\n\n    // ============ CUSTOM ERRORS (Gas Optimization) ============\n    error DealAlreadyExists();\n    error InvalidAddress();\n    error CreatorCannotBeBrand();\n    error AmountMustBeGreaterThanZero();\n    error DeadlineMustBeInFuture();\n    error BriefHashRequired();\n    error DealNotFound();\n    error InvalidDealStatus();\n    error NotAuthorized();\n    error DealAlreadyFunded();\n    error InsufficientBalance();\n    error InsufficientAllowance();\n    error DealNotFunded();\n    error SubmissionDeadlinePassed();\n    error ContentUrlRequired();\n    error ReviewPeriodNotEnded();\n    error ReviewPeriodEnded();\n    error ReasonRequired();\n    error DeadlineNotPassed();\n    error CannotCancelThisDeal();\n    error FeeTooHigh();\n    error CannotWithdrawIDRX();\n    error InvalidDealID();\n    error InvalidAmount();\n    error PermitFailed();\n\n    // ============ STATE VARIABLES ============\n    IERC20 private immutable _idrxToken;\n    uint96 private _platformFeeBps = 250; // 2.5%\n    uint96 private constant BPS_DENOMINATOR = 10000;\n    uint64 private constant REVIEW_PERIOD = 72 hours;\n    address private _feeRecipient;\n\n    bytes32 public constant SERVER_ROLE = keccak256(\"SERVER_ROLE\");\n\n    enum ContractStatus {\n        PENDING,\n        ACTIVE,\n        PENDING_REVIEW,\n        DISPUTED,\n        COMPLETED,\n        CANCELLED\n    }\n\n    struct Deal {\n        address brand;\n        address creator;\n        string dealId;\n        string briefHash;\n        string contentUrl;\n        uint96 amount;\n        uint64 deadline;\n        uint64 fundedAt;\n        uint64 submittedAt;\n        uint64 reviewDeadline;\n        uint64 createdAt;\n        ContractStatus status;\n        bool exists;\n    }\n\n    mapping(string dealId => Deal dealData) private _deals;\n    mapping(address user => string[] dealIds) private _brandDeals;\n    mapping(address user => string[] dealIds) private _creatorDeals;\n\n    // ============ EVENTS ============\n    event DealCreated(\n        string indexed dealId,\n        address indexed brand,\n        address indexed creator,\n        uint96 amount,\n        uint64 deadline\n    );\n    event DealFunded(\n        string indexed dealId,\n        address indexed brand,\n        uint96 amount\n    );\n    event ContentSubmitted(\n        string indexed dealId,\n        address indexed creator,\n        string contentUrl,\n        uint64 reviewDeadline\n    );\n    event DealApproved(string indexed dealId, address indexed brand);\n    event PaymentReleased(\n        string indexed dealId,\n        address indexed creator,\n        uint96 amount,\n        uint96 platformFee\n    );\n    event DisputeInitiated(\n        string indexed dealId,\n        address indexed brand,\n        string reason\n    );\n    event DisputeResolved(\n        string indexed dealId,\n        address indexed creator,\n        bool accepted5050,\n        uint96 creatorAmount,\n        uint96 brandRefund\n    );\n    event DealCancelled(\n        string indexed dealId,\n        address indexed initiator,\n        uint96 refundAmount\n    );\n    event PlatformFeeUpdated(uint96 oldFee, uint96 newFee);\n    event FeeRecipientUpdated(address oldRecipient, address newRecipient);\n\n    // ============ MODIFIERS ============\n    modifier onlyDealBrand(string memory _dealId, address _brand) {\n        if (_deals[_dealId].brand != _brand) revert NotAuthorized();\n        _;\n    }\n\n    modifier onlyDealCreator(string memory _dealId, address _creator) {\n        if (_deals[_dealId].creator != _creator) revert NotAuthorized();\n        _;\n    }\n\n    modifier dealExists(string memory _dealId) {\n        if (!_deals[_dealId].exists) revert DealNotFound();\n        _;\n    }\n\n    modifier inStatus(string memory _dealId, ContractStatus _status) {\n        if (_deals[_dealId].status != _status) revert InvalidDealStatus();\n        _;\n    }\n\n    // ============ CONSTRUCTOR ============\n    constructor(\n        address idrxToken_,\n        address feeRecipient_,\n        address initialOwner_\n    ) payable {\n        if (idrxToken_ == address(0)) revert InvalidAddress();\n        if (feeRecipient_ == address(0)) revert InvalidAddress();\n        if (initialOwner_ == address(0)) revert InvalidAddress();\n\n        _idrxToken = IERC20(idrxToken_);\n        _feeRecipient = feeRecipient_;\n\n        _grantRole(SERVER_ROLE, initialOwner_);\n        _setRoleAdmin(SERVER_ROLE, SERVER_ROLE);\n    }\n\n    // =================================================================\n    // CUSTODIAL USER ACTIONS (Called by the Server Wallet)\n    // =================================================================\n\n    /**\n     * @notice [CUSTODIAL] Brand creates a new deal.\n     * @dev Only SERVER_ROLE can call this function\n     */\n    function createDeal(\n        string memory _dealId,\n        address _brandAddress,\n        address _creatorAddress,\n        uint96 _amount,\n        uint64 _deadline,\n        string memory _briefHash\n    ) external onlyRole(SERVER_ROLE) whenNotPaused {\n        if (_deals[_dealId].exists) revert DealAlreadyExists();\n        if (_creatorAddress == address(0)) revert InvalidAddress();\n        if (_brandAddress == address(0)) revert InvalidAddress();\n        if (_brandAddress == _creatorAddress) revert CreatorCannotBeBrand();\n        if (_amount == 0) revert AmountMustBeGreaterThanZero();\n        if (_deadline <= block.timestamp) revert DeadlineMustBeInFuture();\n        if (bytes(_briefHash).length == 0) revert BriefHashRequired();\n\n        // Assign struct fields individually for better gas efficiency\n        Deal storage deal = _deals[_dealId];\n        deal.dealId = _dealId;\n        deal.brand = _brandAddress;\n        deal.creator = _creatorAddress;\n        deal.amount = _amount;\n        deal.deadline = _deadline;\n        deal.briefHash = _briefHash;\n        deal.status = ContractStatus.PENDING;\n        deal.createdAt = uint64(block.timestamp);\n        deal.contentUrl = \"\";\n        deal.exists = true;\n        // fundedAt, submittedAt, reviewDeadline default to 0\n\n        _brandDeals[_brandAddress].push(_dealId);\n        _creatorDeals[_creatorAddress].push(_dealId);\n\n        emit DealCreated(\n            _dealId,\n            _brandAddress,\n            _creatorAddress,\n            _amount,\n            _deadline\n        );\n    }\n\n    /**\n     * @notice [CUSTODIAL] Brand fund deal with gasless permit support\n     * @dev Brands sign permit off-chain, server executes with signature for gasless transaction\n     */\n    function fundDeal(\n        string memory _dealId,\n        address _brandAddress,\n        uint96 _amount,\n        uint256 _deadline,\n        uint8 _v,\n        bytes32 _r,\n        bytes32 _s\n    )\n        external\n        nonReentrant\n        onlyRole(SERVER_ROLE)\n        whenNotPaused\n        dealExists(_dealId)\n        onlyDealBrand(_dealId, _brandAddress)\n        inStatus(_dealId, ContractStatus.PENDING)\n    {\n        if (bytes(_dealId).length == 0) revert InvalidDealID();\n        if (_amount == 0) revert InvalidAmount();\n\n        Deal storage deal = _deals[_dealId];\n\n        if (deal.fundedAt != 0) revert DealAlreadyFunded();\n\n        // Cache address(this) to save gas\n        address cachedThis = address(this);\n        IERC20 token = _idrxToken;\n\n        uint256 brandBalance = token.balanceOf(_brandAddress);\n        if (brandBalance < _amount) revert InsufficientBalance();\n\n        // Safe Permit: Only execute if signature is provided\n        if (_v != 0 || _r != bytes32(0) || _s != bytes32(0)) {\n            _executePermit(\n                _brandAddress,\n                cachedThis,\n                _amount,\n                _deadline,\n                _v,\n                _r,\n                _s\n            );\n        }\n\n        uint256 allowance = token.allowance(_brandAddress, cachedThis);\n        if (allowance < _amount) revert InsufficientAllowance();\n\n        token.safeTransferFrom(_brandAddress, cachedThis, _amount);\n\n        deal.fundedAt = uint64(block.timestamp);\n\n        emit DealFunded(_dealId, _brandAddress, _amount);\n    }\n\n    /**\n     * @notice [CUSTODIAL] Creator accepts the funded deal\n     */\n    function acceptDeal(\n        string memory _dealId,\n        address _creatorAddress\n    )\n        external\n        onlyRole(SERVER_ROLE)\n        whenNotPaused\n        dealExists(_dealId)\n        onlyDealCreator(_dealId, _creatorAddress)\n        inStatus(_dealId, ContractStatus.PENDING)\n    {\n        Deal storage deal = _deals[_dealId];\n\n        if (deal.fundedAt == 0) revert DealNotFunded();\n\n        deal.status = ContractStatus.ACTIVE;\n\n        emit DealApproved(_dealId, _creatorAddress);\n    }\n\n    /**\n     * @notice [CUSTODIAL] Creator submits the content.\n     */\n    function submitContent(\n        string memory _dealId,\n        address _creatorAddress,\n        string memory _contentUrl\n    )\n        external\n        onlyRole(SERVER_ROLE)\n        whenNotPaused\n        dealExists(_dealId)\n        onlyDealCreator(_dealId, _creatorAddress)\n        inStatus(_dealId, ContractStatus.ACTIVE)\n    {\n        Deal storage deal = _deals[_dealId];\n\n        if (block.timestamp > deal.deadline) revert SubmissionDeadlinePassed();\n        if (bytes(_contentUrl).length == 0) revert ContentUrlRequired();\n\n        deal.status = ContractStatus.PENDING_REVIEW;\n        deal.submittedAt = uint64(block.timestamp);\n        deal.reviewDeadline = uint64(block.timestamp + REVIEW_PERIOD);\n        deal.contentUrl = _contentUrl;\n\n        emit ContentSubmitted(\n            _dealId,\n            _creatorAddress,\n            _contentUrl,\n            deal.reviewDeadline\n        );\n    }\n\n    /**\n     * @notice [CUSTODIAL] Brand approve content & release payment.\n     */\n    function approveDeal(\n        string memory _dealId,\n        address _brandAddress\n    )\n        external\n        nonReentrant\n        onlyRole(SERVER_ROLE)\n        whenNotPaused\n        dealExists(_dealId)\n        onlyDealBrand(_dealId, _brandAddress)\n        inStatus(_dealId, ContractStatus.PENDING_REVIEW)\n    {\n        Deal storage deal = _deals[_dealId];\n\n        // Inline _releasePayment for gas savings (avoid extra function call)\n        uint96 platformFee = (deal.amount * _platformFeeBps) / BPS_DENOMINATOR;\n        uint96 creatorAmount = deal.amount - platformFee;\n\n        deal.status = ContractStatus.COMPLETED;\n\n        emit DealApproved(_dealId, _brandAddress);\n\n        IERC20 token = _idrxToken;\n        if (creatorAmount != 0) {\n            token.safeTransfer(deal.creator, creatorAmount);\n        }\n\n        if (platformFee != 0) {\n            token.safeTransfer(_feeRecipient, platformFee);\n        }\n\n        emit PaymentReleased(_dealId, deal.creator, creatorAmount, platformFee);\n    }\n\n    /**\n     * @notice Auto-release payment after review period\n     */\n    function autoReleasePayment(\n        string memory _dealId\n    )\n        external\n        nonReentrant\n        onlyRole(SERVER_ROLE)\n        whenNotPaused\n        dealExists(_dealId)\n        inStatus(_dealId, ContractStatus.PENDING_REVIEW)\n    {\n        Deal storage deal = _deals[_dealId];\n        if (block.timestamp < deal.reviewDeadline)\n            revert ReviewPeriodNotEnded();\n\n        // Inline _releasePayment for gas savings\n        uint96 platformFee = (deal.amount * _platformFeeBps) / BPS_DENOMINATOR;\n        uint96 creatorAmount = deal.amount - platformFee;\n\n        deal.status = ContractStatus.COMPLETED;\n\n        IERC20 token = _idrxToken;\n        if (creatorAmount != 0) {\n            token.safeTransfer(deal.creator, creatorAmount);\n        }\n\n        if (platformFee != 0) {\n            token.safeTransfer(_feeRecipient, platformFee);\n        }\n\n        emit PaymentReleased(_dealId, deal.creator, creatorAmount, platformFee);\n    }\n\n    /**\n     * @notice [CUSTODIAL] Brand initiate dispute.\n     */\n    function initiateDispute(\n        string memory _dealId,\n        address _brandAddress,\n        string memory _reason\n    )\n        external\n        onlyRole(SERVER_ROLE)\n        whenNotPaused\n        dealExists(_dealId)\n        onlyDealBrand(_dealId, _brandAddress)\n        inStatus(_dealId, ContractStatus.PENDING_REVIEW)\n    {\n        Deal storage deal = _deals[_dealId];\n        if (block.timestamp >= deal.reviewDeadline) revert ReviewPeriodEnded();\n        if (bytes(_reason).length == 0) revert ReasonRequired();\n\n        deal.status = ContractStatus.DISPUTED;\n\n        emit DisputeInitiated(_dealId, _brandAddress, _reason);\n    }\n\n    /**\n     * @notice [CUSTODIAL] Creator resolve dispute.\n     */\n    function resolveDispute(\n        string memory _dealId,\n        address _creatorAddress,\n        bool _accept5050\n    )\n        external\n        nonReentrant\n        onlyRole(SERVER_ROLE)\n        whenNotPaused\n        dealExists(_dealId)\n        onlyDealCreator(_dealId, _creatorAddress)\n        inStatus(_dealId, ContractStatus.DISPUTED)\n    {\n        Deal storage deal = _deals[_dealId];\n\n        // Cache storage variables\n        uint96 totalEscrow = deal.amount;\n        address creator = deal.creator;\n        address brand = deal.brand;\n        address feeRecip = _feeRecipient;\n        uint96 feeBps = _platformFeeBps;\n\n        deal.status = ContractStatus.COMPLETED;\n\n        uint96 creatorAmount;\n        uint96 brandRefund;\n        uint96 platformFee;\n\n        IERC20 token = _idrxToken;\n\n        if (_accept5050) {\n            uint96 grossPayout = (totalEscrow * 5000) / BPS_DENOMINATOR;\n            brandRefund = totalEscrow - grossPayout;\n\n            platformFee = (grossPayout * feeBps) / BPS_DENOMINATOR;\n            uint96 creatorNet = grossPayout - platformFee;\n\n            creatorAmount = creatorNet;\n\n            if (creatorNet != 0) token.safeTransfer(creator, creatorNet);\n            if (brandRefund != 0) token.safeTransfer(brand, brandRefund);\n            if (platformFee != 0) token.safeTransfer(feeRecip, platformFee);\n        } else {\n            creatorAmount = 0;\n            brandRefund = totalEscrow;\n            platformFee = 0;\n\n            if (brandRefund != 0) token.safeTransfer(brand, brandRefund);\n        }\n\n        emit DisputeResolved(\n            _dealId,\n            _creatorAddress,\n            _accept5050,\n            creatorAmount,\n            brandRefund\n        );\n        emit PaymentReleased(_dealId, creator, creatorAmount, platformFee);\n    }\n\n    /**\n     * @notice Triggers a full refund to the Brand if the Creator fails to submit content before the deadline.\n     */\n    function autoRefundAfterDeadline(\n        string memory _dealId\n    )\n        external\n        nonReentrant\n        onlyRole(SERVER_ROLE)\n        whenNotPaused\n        dealExists(_dealId)\n        inStatus(_dealId, ContractStatus.ACTIVE)\n    {\n        Deal storage deal = _deals[_dealId];\n\n        if (block.timestamp <= deal.deadline) revert DeadlineNotPassed();\n\n        uint96 refundAmount = deal.amount;\n\n        deal.status = ContractStatus.CANCELLED;\n\n        if (refundAmount != 0) {\n            _idrxToken.safeTransfer(deal.brand, refundAmount);\n        }\n\n        emit DealCancelled(_dealId, msg.sender, refundAmount);\n    }\n\n    /**\n     * @notice [CUSTODIAL] Cancel the deal before it is funded.\n     */\n    function cancelDeal(\n        string memory _dealId,\n        address _brandAddress\n    )\n        external\n        onlyRole(SERVER_ROLE)\n        dealExists(_dealId)\n        onlyDealBrand(_dealId, _brandAddress)\n        inStatus(_dealId, ContractStatus.PENDING)\n    {\n        _deals[_dealId].status = ContractStatus.CANCELLED;\n\n        emit DealCancelled(_dealId, _brandAddress, 0);\n    }\n\n    /**\n     * @notice Emergency cancel deal (SERVER_ROLE only).\n     */\n    function emergencyCancelDeal(\n        string memory _dealId\n    ) external nonReentrant onlyRole(SERVER_ROLE) dealExists(_dealId) {\n        Deal storage deal = _deals[_dealId];\n\n        // Nested if for gas optimization (short-circuit evaluation)\n        if (deal.status != ContractStatus.ACTIVE) {\n            if (deal.status != ContractStatus.PENDING_REVIEW) {\n                revert CannotCancelThisDeal();\n            }\n        }\n\n        uint96 refundAmount = deal.amount;\n        deal.status = ContractStatus.CANCELLED;\n\n        if (refundAmount != 0) {\n            _idrxToken.safeTransfer(deal.brand, refundAmount);\n        }\n\n        emit DealCancelled(_dealId, msg.sender, refundAmount);\n    }\n\n    // =================================================================\n    // VIEW FUNCTIONS (GETTERS)\n    // =================================================================\n\n    function idrxToken() external view returns (address) {\n        return address(_idrxToken);\n    }\n\n    function platformFeeBps() external view returns (uint96) {\n        return _platformFeeBps;\n    }\n\n    function feeRecipient() external view returns (address) {\n        return _feeRecipient;\n    }\n\n    function deals(string memory _dealId) external view returns (Deal memory) {\n        return _deals[_dealId];\n    }\n\n    function brandDeals(\n        address _brand\n    ) external view returns (string[] memory) {\n        return _brandDeals[_brand];\n    }\n\n    function creatorDeals(\n        address _creator\n    ) external view returns (string[] memory) {\n        return _creatorDeals[_creator];\n    }\n\n    function getDeal(\n        string memory _dealId\n    )\n        external\n        view\n        returns (\n            string memory dealId,\n            address brand,\n            address creator,\n            uint96 amount,\n            uint64 deadline,\n            ContractStatus status,\n            string memory briefHash,\n            string memory contentUrl,\n            uint64 reviewDeadline,\n            uint64 fundedAt,\n            uint64 submittedAt,\n            uint64 createdAt,\n            bool exists\n        )\n    {\n        Deal storage deal = _deals[_dealId];\n        if (!deal.exists) revert DealNotFound();\n\n        return (\n            deal.dealId,\n            deal.brand,\n            deal.creator,\n            deal.amount,\n            deal.deadline,\n            deal.status,\n            deal.briefHash,\n            deal.contentUrl,\n            deal.reviewDeadline,\n            deal.fundedAt,\n            deal.submittedAt,\n            deal.createdAt,\n            deal.exists\n        );\n    }\n\n    function getDeals(\n        address _userAddress,\n        bool _isBrand\n    ) external view returns (string[] memory) {\n        return\n            _isBrand ? _brandDeals[_userAddress] : _creatorDeals[_userAddress];\n    }\n\n    function canAutoRelease(\n        string memory _dealId\n    ) external view returns (bool) {\n        Deal storage deal = _deals[_dealId];\n        return\n            deal.exists &&\n            deal.status == ContractStatus.PENDING_REVIEW &&\n            block.timestamp >= deal.reviewDeadline;\n    }\n\n    // =================================================================\n    // ADMIN FUNCTIONS\n    // =================================================================\n\n    function updatePlatformFee(\n        uint96 _newFeeBps\n    ) external onlyRole(SERVER_ROLE) {\n        if (_newFeeBps > 1000) revert FeeTooHigh();\n\n        uint96 oldFee = _platformFeeBps;\n        if (oldFee == _newFeeBps) return;\n\n        _platformFeeBps = _newFeeBps;\n\n        emit PlatformFeeUpdated(oldFee, _newFeeBps);\n    }\n\n    function updateFeeRecipient(\n        address _newRecipient\n    ) external onlyRole(SERVER_ROLE) {\n        if (_newRecipient == address(0)) revert InvalidAddress();\n\n        address oldRecipient = _feeRecipient;\n        if (oldRecipient == _newRecipient) return;\n\n        _feeRecipient = _newRecipient;\n\n        emit FeeRecipientUpdated(oldRecipient, _newRecipient);\n    }\n\n    function pause() external onlyRole(SERVER_ROLE) {\n        _pause();\n    }\n\n    function unpause() external onlyRole(SERVER_ROLE) {\n        _unpause();\n    }\n\n    function emergencyWithdraw(\n        address _token,\n        uint256 _amount\n    ) external onlyRole(SERVER_ROLE) {\n        if (_token == address(_idrxToken)) revert CannotWithdrawIDRX();\n        if (_amount == 0) revert InvalidAmount();\n        IERC20(_token).safeTransfer(msg.sender, _amount);\n    }\n\n    // ============ INTERNAL FUNCTIONS ============\n\n    /**\n     * @dev Internal function to perform a safe permit with proper error handling.\n     */\n    function _executePermit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal {\n        IERC20Permit token = IERC20Permit(address(_idrxToken));\n\n        try token.permit(owner, spender, value, deadline, v, r, s) {\n            // Verify allowance was actually granted\n            uint256 allowance = _idrxToken.allowance(owner, spender);\n            if (allowance < value) revert InsufficientAllowance();\n        } catch {\n            revert PermitFailed();\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.20;\n\nimport {IAccessControl} from \"./IAccessControl.sol\";\nimport {Context} from \"../utils/Context.sol\";\nimport {IERC165, ERC165} from \"../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```solidity\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```solidity\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n * to enforce additional security measures for this role.\n */\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\n    struct RoleData {\n        mapping(address account => bool) hasRole;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 role => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with an {AccessControlUnauthorizedAccount} error including the required role.\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    /// @inheritdoc IERC165\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual returns (bool) {\n        return _roles[role].hasRole[account];\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n     * is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier.\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n     * is missing `role`.\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert AccessControlUnauthorizedAccount(account, role);\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) public virtual {\n        if (callerConfirmation != _msgSender()) {\n            revert AccessControlBadConfirmation();\n        }\n\n        _revokeRole(role, callerConfirmation);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (!hasRole(role, account)) {\n            _roles[role].hasRole[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Attempts to revoke `role` from `account` and returns a boolean indicating if `role` was revoked.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (hasRole(role, account)) {\n            _roles[role].hasRole[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/security/Pausable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (security/Pausable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract Pausable is Context {\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    bool private _paused;\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    constructor() {\n        _paused = false;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        require(!paused(), \"Pausable: paused\");\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        require(paused(), \"Pausable: not paused\");\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC1363} from \"../../../interfaces/IERC1363.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC-20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    /**\n     * @dev An operation with an ERC-20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Variant of {safeTransfer} that returns a bool instead of reverting if the operation is not successful.\n     */\n    function trySafeTransfer(IERC20 token, address to, uint256 value) internal returns (bool) {\n        return _callOptionalReturnBool(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Variant of {safeTransferFrom} that returns a bool instead of reverting if the operation is not successful.\n     */\n    function trySafeTransferFrom(IERC20 token, address from, address to, uint256 value) internal returns (bool) {\n        return _callOptionalReturnBool(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     *\n     * NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n     * only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n     * set here.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            safeTransfer(token, to, value);\n        } else if (!token.transferAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n     * has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferFromAndCallRelaxed(\n        IERC1363 token,\n        address from,\n        address to,\n        uint256 value,\n        bytes memory data\n    ) internal {\n        if (to.code.length == 0) {\n            safeTransferFrom(token, from, to, value);\n        } else if (!token.transferFromAndCall(from, to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n     * Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n     * once without retrying, and relies on the returned value to be true.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function approveAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            forceApprove(token, to, value);\n        } else if (!token.approveAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements.\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            let success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            // bubble errors\n            if iszero(success) {\n                let ptr := mload(0x40)\n                returndatacopy(ptr, 0, returndatasize())\n                revert(ptr, returndatasize())\n            }\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n\n        if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        bool success;\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n        return success && (returnSize == 0 ? address(token).code.length > 0 : returnValue == 1);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/extensions/IERC20Permit.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[ERC-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC-20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n *\n * ==== Security Considerations\n *\n * There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n * expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n * considered as an intention to spend the allowance in any specific way. The second is that because permits have\n * built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n * take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n * generally recommended is:\n *\n * ```solidity\n * function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n *     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n *     doThing(..., value);\n * }\n *\n * function doThing(..., uint256 value) public {\n *     token.safeTransferFrom(msg.sender, address(this), value);\n *     ...\n * }\n * ```\n *\n * Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n * `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n * {SafeERC20-safeTransferFrom}).\n *\n * Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n * contracts should have entry points that don't rely on permit.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     *\n     * CAUTION: See Security Considerations above.\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/IERC20.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC1363.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @title IERC1363\n * @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n *\n * Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n * after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\n */\ninterface IERC1363 is IERC20, IERC165 {\n    /*\n     * Note: the ERC-165 identifier for this interface is 0xb0202a11.\n     * 0xb0202a11 ===\n     *   bytes4(keccak256('transferAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('transferAndCall(address,uint256,bytes)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256,bytes)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256,bytes)'))\n     */\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @param data Additional data with no specified format, sent in call to `spender`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value, bytes calldata data) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /// @inheritdoc IERC165\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (access/IAccessControl.sol)\n\npragma solidity >=0.8.4;\n\n/**\n * @dev External interface of AccessControl declared to support ERC-165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev The `account` is missing a role.\n     */\n    error AccessControlUnauthorizedAccount(address account, bytes32 neededRole);\n\n    /**\n     * @dev The caller of a function is not the expected one.\n     *\n     * NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\n     */\n    error AccessControlBadConfirmation();\n\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted to signal this.\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n     * Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) external;\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/IERC165.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC165.sol)\n\npragma solidity >=0.4.16;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n"
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC20.sol)\n\npragma solidity >=0.4.16;\n\nimport {IERC20} from \"../token/ERC20/IERC20.sol\";\n"
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"AccessControl": {
					"abi": [
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							]
						},
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/AccessControl.sol\":\"AccessControl\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x1a6b4f6b7798ab80929d491b89d5427a9b3338c0fd1acd0ba325f69c6f1646af\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7bb7f346c12a14dc622bc105ce3c47202fbc89f4b153a28a63bb68193297330c\",\"dweb:/ipfs/QmagwF8P3bUBXwdo159ueEnY9dLSvEWwK24kk2op58egwG\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xbff9f59c84e5337689161ce7641c0ef8e872d6a7536fbc1f5133f128887aba3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b308f882e796f7b79c9502deacb0a62983035c6f6f4e962b319ba6a1f4a77d3d\",\"dweb:/ipfs/QmaWCW7ahEQqFjwhSUhV7Ae7WhfNvzSpE7DQ58hvEooqPL\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x2d9dc2fe26180f74c11c13663647d38e259e45f95eb88f57b61d2160b0109d3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81233d1f98060113d9922180bb0f14f8335856fe9f339134b09335e9f678c377\",\"dweb:/ipfs/QmWh6R35SarhAn4z2wH8SU456jJSYL2FgucfTFgbHJJN4E\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 27,
								"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)22_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)22_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)22_storage"
							},
							"t_struct(RoleData)22_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 19,
										"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
										"label": "hasRole",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 21,
										"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"IAccessControl": {
					"abi": [
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "External interface of AccessControl declared to support ERC-165 detection.",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							]
						},
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC-165 detection.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xbff9f59c84e5337689161ce7641c0ef8e872d6a7536fbc1f5133f128887aba3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b308f882e796f7b79c9502deacb0a62983035c6f6f4e962b319ba6a1f4a77d3d\",\"dweb:/ipfs/QmaWCW7ahEQqFjwhSUhV7Ae7WhfNvzSpE7DQ58hvEooqPL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"IERC1363": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"approveAndCall(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"approveAndCall(address,uint256,bytes)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `spender`.",
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferAndCall(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferAndCall(address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFromAndCall(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFromAndCall(address,address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							}
						},
						"title": "IERC1363",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"approveAndCall(address,uint256)": "3177029f",
							"approveAndCall(address,uint256,bytes)": "cae9ca51",
							"balanceOf(address)": "70a08231",
							"supportsInterface(bytes4)": "01ffc9a7",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferAndCall(address,uint256)": "1296ee62",
							"transferAndCall(address,uint256,bytes)": "4000aea0",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferFromAndCall(address,address,uint256)": "d8fbe994",
							"transferFromAndCall(address,address,uint256,bytes)": "c1d34b89"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"approveAndCall(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"approveAndCall(address,uint256,bytes)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `spender`.\",\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferAndCall(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferAndCall(address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFromAndCall(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFromAndCall(address,address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}}},\"title\":\"IERC1363\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":\"IERC1363\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100\",\"dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d\",\"dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/Pausable.sol": {
				"Pausable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.",
						"events": {
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract in unpaused state."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"paused()": "5c975abb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract in unpaused state.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 487,
								"contract": "@openzeppelin/contracts/security/Pausable.sol:Pausable",
								"label": "_paused",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 588,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"IERC20Permit": {
					"abi": [
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[ERC-2612]. Adds the {permit} method, which can be used to change an account's ERC-20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.",
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"details": "Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
							},
							"nonces(address)": {
								"details": "Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[ERC-2612]. Adds the {permit} method, which can be used to change an account's ERC-20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x2fa0657dd7b8bc75475a47f64bc04a9adb42236b15d65e6781594ea69a46c3e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7496f42681aed94bf0142a077324e50b86046610c1724e7c12e96cf1c365914a\",\"dweb:/ipfs/QmZvhNdSAAbN4PKPdheAqwpXukUiXp3Q3TdQccDMg2NDTV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentAllowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "requestedDecrease",
									"type": "uint256"
								}
							],
							"name": "SafeERC20FailedDecreaseAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"errors": {
							"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failed `decreaseAllowance` request."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":698:10074  library SafeERC20 {... */\n  0x80\n  dup1\n  0x40\n  mstore\n  jumpi(tag_1, callvalue)\n  dataSize(sub_0)\n  swap1\n  dup2\n  dataOffset(sub_0)\n  dup3\n  codecopy\n  address\n  dup2\n  assignImmutable(\"0xcd5a02d485074f67d63783a7acdae578618045c23ccf47fa4e3f1a01c11714ad\")\n  return\ntag_1:\n  0x00\n  dup1\n  revert\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":698:10074  library SafeERC20 {... */\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122072acac201ffa6272577b5dd8151e0ca06746b6312a95d244e674676d6585a3d864736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080806040523460175760399081601c823930815050f35b5f80fdfe5f80fdfea264697066735822122072acac201ffa6272577b5dd8151e0ca06746b6312a95d244e674676d6585a3d864736f6c63430008140033",
							"opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x39 SWAP1 DUP2 PUSH1 0x1C DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH0 DUP1 REVERT INVALID PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH19 0xACAC201FFA6272577B5DD8151E0CA06746B631 0x2A SWAP6 0xD2 PREVRANDAO 0xE6 PUSH21 0x676D6585A3D864736F6C6343000814003300000000 ",
							"sourceMap": "698:9376:9:-:0;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "5f80fdfea264697066735822122072acac201ffa6272577b5dd8151e0ca06746b6312a95d244e674676d6585a3d864736f6c63430008140033",
							"opcodes": "PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH19 0xACAC201FFA6272577B5DD8151E0CA06746B631 0x2A SWAP6 0xD2 PREVRANDAO 0xE6 PUSH21 0x676D6585A3D864736F6C6343000814003300000000 ",
							"sourceMap": "698:9376:9:-:0;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "11400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"_callOptionalReturnBool(contract IERC20,bytes memory)": "infinite",
								"approveAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"forceApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite",
								"transferAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"transferFromAndCallRelaxed(contract IERC1363,address,address,uint256,bytes memory)": "infinite",
								"trySafeTransfer(contract IERC20,address,uint256)": "infinite",
								"trySafeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "CALLVALUE",
									"source": 9
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "ADDRESS",
									"source": 9
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "ASSIGNIMMUTABLE",
									"source": 9,
									"value": "library_deploy_address"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "RETURN",
									"source": 9
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "REVERT",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122072acac201ffa6272577b5dd8151e0ca06746b6312a95d244e674676d6585a3d864736f6c63430008140033",
									".code": [
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "REVERT",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/AccessControl.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/security/Pausable.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/EtharisEscrow.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100\",\"dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d\",\"dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x2d9dc2fe26180f74c11c13663647d38e259e45f95eb88f57b61d2160b0109d3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81233d1f98060113d9922180bb0f14f8335856fe9f339134b09335e9f678c377\",\"dweb:/ipfs/QmWh6R35SarhAn4z2wH8SU456jJSYL2FgucfTFgbHJJN4E\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/EtharisEscrow.sol": {
				"EtharisEscrow": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "idrxToken_",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "feeRecipient_",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "initialOwner_",
									"type": "address"
								}
							],
							"stateMutability": "payable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "AmountMustBeGreaterThanZero",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "BriefHashRequired",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "CannotCancelThisDeal",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "CannotWithdrawIDRX",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ContentUrlRequired",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "CreatorCannotBeBrand",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "DeadlineMustBeInFuture",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "DeadlineNotPassed",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "DealAlreadyExists",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "DealAlreadyFunded",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "DealNotFound",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "DealNotFunded",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FeeTooHigh",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidAmount",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidDealID",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidDealStatus",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotAuthorized",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "PermitFailed",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ReasonRequired",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ReviewPeriodEnded",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ReviewPeriodNotEnded",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "SubmissionDeadlinePassed",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "string",
									"name": "dealId",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "creator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "contentUrl",
									"type": "string"
								},
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "reviewDeadline",
									"type": "uint64"
								}
							],
							"name": "ContentSubmitted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "string",
									"name": "dealId",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "brand",
									"type": "address"
								}
							],
							"name": "DealApproved",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "string",
									"name": "dealId",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "initiator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint96",
									"name": "refundAmount",
									"type": "uint96"
								}
							],
							"name": "DealCancelled",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "string",
									"name": "dealId",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "brand",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "creator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint96",
									"name": "amount",
									"type": "uint96"
								},
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "deadline",
									"type": "uint64"
								}
							],
							"name": "DealCreated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "string",
									"name": "dealId",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "brand",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint96",
									"name": "amount",
									"type": "uint96"
								}
							],
							"name": "DealFunded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "string",
									"name": "dealId",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "brand",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "reason",
									"type": "string"
								}
							],
							"name": "DisputeInitiated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "string",
									"name": "dealId",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "creator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "accepted5050",
									"type": "bool"
								},
								{
									"indexed": false,
									"internalType": "uint96",
									"name": "creatorAmount",
									"type": "uint96"
								},
								{
									"indexed": false,
									"internalType": "uint96",
									"name": "brandRefund",
									"type": "uint96"
								}
							],
							"name": "DisputeResolved",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "oldRecipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "newRecipient",
									"type": "address"
								}
							],
							"name": "FeeRecipientUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "string",
									"name": "dealId",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "creator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint96",
									"name": "amount",
									"type": "uint96"
								},
								{
									"indexed": false,
									"internalType": "uint96",
									"name": "platformFee",
									"type": "uint96"
								}
							],
							"name": "PaymentReleased",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint96",
									"name": "oldFee",
									"type": "uint96"
								},
								{
									"indexed": false,
									"internalType": "uint96",
									"name": "newFee",
									"type": "uint96"
								}
							],
							"name": "PlatformFeeUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "SERVER_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_dealId",
									"type": "string"
								},
								{
									"internalType": "address",
									"name": "_creatorAddress",
									"type": "address"
								}
							],
							"name": "acceptDeal",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_dealId",
									"type": "string"
								},
								{
									"internalType": "address",
									"name": "_brandAddress",
									"type": "address"
								}
							],
							"name": "approveDeal",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_dealId",
									"type": "string"
								}
							],
							"name": "autoRefundAfterDeadline",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_dealId",
									"type": "string"
								}
							],
							"name": "autoReleasePayment",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_brand",
									"type": "address"
								}
							],
							"name": "brandDeals",
							"outputs": [
								{
									"internalType": "string[]",
									"name": "",
									"type": "string[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_dealId",
									"type": "string"
								}
							],
							"name": "canAutoRelease",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_dealId",
									"type": "string"
								},
								{
									"internalType": "address",
									"name": "_brandAddress",
									"type": "address"
								}
							],
							"name": "cancelDeal",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_dealId",
									"type": "string"
								},
								{
									"internalType": "address",
									"name": "_brandAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_creatorAddress",
									"type": "address"
								},
								{
									"internalType": "uint96",
									"name": "_amount",
									"type": "uint96"
								},
								{
									"internalType": "uint64",
									"name": "_deadline",
									"type": "uint64"
								},
								{
									"internalType": "string",
									"name": "_briefHash",
									"type": "string"
								}
							],
							"name": "createDeal",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_creator",
									"type": "address"
								}
							],
							"name": "creatorDeals",
							"outputs": [
								{
									"internalType": "string[]",
									"name": "",
									"type": "string[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_dealId",
									"type": "string"
								}
							],
							"name": "deals",
							"outputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "brand",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "creator",
											"type": "address"
										},
										{
											"internalType": "string",
											"name": "dealId",
											"type": "string"
										},
										{
											"internalType": "string",
											"name": "briefHash",
											"type": "string"
										},
										{
											"internalType": "string",
											"name": "contentUrl",
											"type": "string"
										},
										{
											"internalType": "uint96",
											"name": "amount",
											"type": "uint96"
										},
										{
											"internalType": "uint64",
											"name": "deadline",
											"type": "uint64"
										},
										{
											"internalType": "uint64",
											"name": "fundedAt",
											"type": "uint64"
										},
										{
											"internalType": "uint64",
											"name": "submittedAt",
											"type": "uint64"
										},
										{
											"internalType": "uint64",
											"name": "reviewDeadline",
											"type": "uint64"
										},
										{
											"internalType": "uint64",
											"name": "createdAt",
											"type": "uint64"
										},
										{
											"internalType": "enum EtharisEscrow.ContractStatus",
											"name": "status",
											"type": "uint8"
										},
										{
											"internalType": "bool",
											"name": "exists",
											"type": "bool"
										}
									],
									"internalType": "struct EtharisEscrow.Deal",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_dealId",
									"type": "string"
								}
							],
							"name": "emergencyCancelDeal",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "emergencyWithdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeRecipient",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_dealId",
									"type": "string"
								},
								{
									"internalType": "address",
									"name": "_brandAddress",
									"type": "address"
								},
								{
									"internalType": "uint96",
									"name": "_amount",
									"type": "uint96"
								},
								{
									"internalType": "uint256",
									"name": "_deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "_v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "_r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "_s",
									"type": "bytes32"
								}
							],
							"name": "fundDeal",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_dealId",
									"type": "string"
								}
							],
							"name": "getDeal",
							"outputs": [
								{
									"internalType": "string",
									"name": "dealId",
									"type": "string"
								},
								{
									"internalType": "address",
									"name": "brand",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "creator",
									"type": "address"
								},
								{
									"internalType": "uint96",
									"name": "amount",
									"type": "uint96"
								},
								{
									"internalType": "uint64",
									"name": "deadline",
									"type": "uint64"
								},
								{
									"internalType": "enum EtharisEscrow.ContractStatus",
									"name": "status",
									"type": "uint8"
								},
								{
									"internalType": "string",
									"name": "briefHash",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "contentUrl",
									"type": "string"
								},
								{
									"internalType": "uint64",
									"name": "reviewDeadline",
									"type": "uint64"
								},
								{
									"internalType": "uint64",
									"name": "fundedAt",
									"type": "uint64"
								},
								{
									"internalType": "uint64",
									"name": "submittedAt",
									"type": "uint64"
								},
								{
									"internalType": "uint64",
									"name": "createdAt",
									"type": "uint64"
								},
								{
									"internalType": "bool",
									"name": "exists",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_userAddress",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_isBrand",
									"type": "bool"
								}
							],
							"name": "getDeals",
							"outputs": [
								{
									"internalType": "string[]",
									"name": "",
									"type": "string[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "idrxToken",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_dealId",
									"type": "string"
								},
								{
									"internalType": "address",
									"name": "_brandAddress",
									"type": "address"
								},
								{
									"internalType": "string",
									"name": "_reason",
									"type": "string"
								}
							],
							"name": "initiateDispute",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "platformFeeBps",
							"outputs": [
								{
									"internalType": "uint96",
									"name": "",
									"type": "uint96"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_dealId",
									"type": "string"
								},
								{
									"internalType": "address",
									"name": "_creatorAddress",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_accept5050",
									"type": "bool"
								}
							],
							"name": "resolveDispute",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_dealId",
									"type": "string"
								},
								{
									"internalType": "address",
									"name": "_creatorAddress",
									"type": "address"
								},
								{
									"internalType": "string",
									"name": "_contentUrl",
									"type": "string"
								}
							],
							"name": "submitContent",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unpause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_newRecipient",
									"type": "address"
								}
							],
							"name": "updateFeeRecipient",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint96",
									"name": "_newFeeBps",
									"type": "uint96"
								}
							],
							"name": "updatePlatformFee",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "Etharis Team",
						"details": "Escrow contract for sponsorship deals. All action functions can only be called by the Server Wallet (Owner).",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"events": {
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"createDeal(string,address,address,uint96,uint64,string)": {
								"details": "Only SERVER_ROLE can call this function"
							},
							"fundDeal(string,address,uint96,uint256,uint8,bytes32,bytes32)": {
								"details": "Brands sign permit off-chain, server executes with signature for gasless transaction"
							},
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"title": "EtharisEscrow",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n  0xa0\n  0x1f\n  bytecodeSize\n  codesize\n  dup2\n  swap1\n  sub\n  swap2\n  dup3\n  add\n  not(0x1f)\n  and\n  dup4\n  add\n  swap2\n  swap1\n  sub(shl(0x40, 0x01), 0x01)\n  dup4\n  gt\n  dup5\n  dup5\n  lt\n  or\n  tag_3\n  jumpi\n  dup2\n  0x60\n  swap3\n  dup6\n  swap3\n  0x40\n  swap6\n  dup7\n  mstore\n  dup4\n  codecopy\n  dup2\n  add\n  sub\n  slt\n  tag_5\n  jumpi\n  tag_7\n  dup3\n  tag_1\n  jump\t// in\ntag_7:\n  swap2\n  tag_8\n  dup3\n  tag_9\n  0x20\n  dup5\n  add\n  tag_1\n  jump\t// in\ntag_9:\n  swap3\n  add\n  tag_1\n  jump\t// in\ntag_8:\n  0x01\n  0x00\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  dup2\n  swap1\n  sstore\n    /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n  dup1\n  sload\n  not(0xff)\n  and\n  swap1\n  sstore\n  sub(shl(0xa0, 0x01), 0x01)\n  swap4\n  dup5\n  and\n  swap4\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  swap1\n  swap2\n  swap1\n    /* \"contracts/EtharisEscrow.sol\":4770:4794  idrxToken_ == address(0) */\n  dup5\n  iszero\n    /* \"contracts/EtharisEscrow.sol\":4766:4819  if (idrxToken_ == address(0)) revert InvalidAddress() */\n  tag_12\n  jumpi\n    /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n  dup1\n  dup3\n  and\n    /* \"contracts/EtharisEscrow.sol\":4833:4860  feeRecipient_ == address(0) */\n  iszero\n    /* \"contracts/EtharisEscrow.sol\":4829:4885  if (feeRecipient_ == address(0)) revert InvalidAddress() */\n  tag_12\n  jumpi\n    /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n  dup3\n  and\n    /* \"contracts/EtharisEscrow.sol\":4899:4926  initialOwner_ == address(0) */\n  iszero\n    /* \"contracts/EtharisEscrow.sol\":4895:4951  if (initialOwner_ == address(0)) revert InvalidAddress() */\n  tag_14\n  jumpi\n    /* \"contracts/EtharisEscrow.sol\":5043:5081  _grantRole(SERVER_ROLE, initialOwner_) */\n  tag_16\n    /* \"contracts/EtharisEscrow.sol\":4962:4993  _idrxToken = IERC20(idrxToken_) */\n  swap3\n  swap4\n  0x80\n  mstore\n    /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n  0x01\n  dup1\n  0x60\n  shl\n  sub\n  not\n  swap1\n  0x60\n  shl\n  and\n    /* \"contracts/EtharisEscrow.sol\":1751:1754  250 */\n  0xfa\n    /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n  or\n    /* \"contracts/EtharisEscrow.sol\":1751:1754  250 */\n  0x03\n    /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n  sstore\n    /* \"contracts/EtharisEscrow.sol\":5043:5081  _grantRole(SERVER_ROLE, initialOwner_) */\n  tag_2\n  jump\t// in\ntag_16:\n  pop\n  0x00\n  dup1\n  mload\n  0x20\n  data_2b911a32a95f59603f7637b420e0d131a993f16f7410883b87320add8a183555\n  dup4\n  codecopy\n  dup2\n  mload\n  swap2\n  mstore\n    /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n  dup1\n  0x00\n  mstore\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3877:3883  _roles */\n  0x02\n    /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n  0x20\n  mstore\n  0x01\n  dup3\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3877:3899  _roles[role].adminRole */\n  add\n    /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n  swap2\n  dup2\n  dup4\n  sload\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  swap4\n  sstore\n    /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n  mload\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":5862:5914  RoleAdminChanged(role, previousAdminRole, adminRole) */\n  swap2\n  dup2\n  0xbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff\n  0x00\n  dup1\n  log4\n    /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n  dataSize(sub_0)\n  swap1\n  dup2\n  dataOffset(sub_0)\n  dup3\n  codecopy\n    /* \"contracts/EtharisEscrow.sol\":4962:4993  _idrxToken = IERC20(idrxToken_) */\n  0x80\n    /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n  mload\n  dup2\n  assignImmutable(\"0x92a99c2e1e73cfa8af214a27ee636aa00abb49bffb5065f213fd4435430466da\")\n  return\n    /* \"contracts/EtharisEscrow.sol\":4895:4951  if (initialOwner_ == address(0)) revert InvalidAddress() */\ntag_14:\n    /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n  dup3\n  mload\n  shl(0xe0, 0xe6c4247b)\n    /* \"contracts/EtharisEscrow.sol\":4935:4951  InvalidAddress() */\n  dup2\n  mstore\n  0x04\n  swap1\n  revert\n    /* \"contracts/EtharisEscrow.sol\":4829:4885  if (feeRecipient_ == address(0)) revert InvalidAddress() */\ntag_12:\n    /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n  dup4\n  mload\n  shl(0xe0, 0xe6c4247b)\n    /* \"contracts/EtharisEscrow.sol\":4869:4885  InvalidAddress() */\n  dup2\n  mstore\n  0x04\n  swap1\n  revert\n    /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\ntag_5:\n  0x00\n  dup1\n  revert\ntag_3:\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x41)\n  revert(0x00, 0x24)\ntag_1:\n  mload\n  swap1\n  sub(shl(0xa0, 0x01), 0x01)\n  dup3\n  and\n  dup3\n  sub\n  tag_5\n  jumpi\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6155:6471  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\ntag_2:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n  and\n  0x00\n  dup2\n  dup2\n  mstore\n  mstore(0x20, 0xef73bf2ac44f84561b5498839ab1c8c5a4dd99305d838aea0d76c5961778535c)\n  0x40\n  dup2\n  keccak256\n  sload\n  swap1\n  swap2\n  swap1\n  0x00\n  dup1\n  mload\n  0x20\n  data_2b911a32a95f59603f7637b420e0d131a993f16f7410883b87320add8a183555\n  dup4\n  codecopy\n  dup2\n  mload\n  swap2\n  mstore\n    /* \"contracts/EtharisEscrow.sol\":1949:1973  keccak256(\"SERVER_ROLE\") */\n  swap1\n    /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n  0xff\n  and\n  tag_19\n  jumpi\n  dup1\n  dup4\n  mstore\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2936  _roles */\n  0x02\n    /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n  0x20\n  mstore\n  0x40\n  dup4\n  keccak256\n  dup3\n  dup5\n  mstore\n  0x20\n  mstore\n  0x40\n  dup4\n  keccak256\n  0x01\n  not(0xff)\n  dup3\n  sload\n  and\n  or\n  swap1\n  sstore\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6346:6386  RoleGranted(role, account, _msgSender()) */\n  0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n    /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6346:6386  RoleGranted(role, account, _msgSender()) */\n  swap4\n  dup1\n  log4\n    /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n  0x01\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6400:6411  return true */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6248:6465  if (!hasRole(role, account)) {... */\ntag_19:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6442:6454  return false */\n  pop\n  pop\n  swap1\n  jump\t// out\nstop\ndata_2b911a32a95f59603f7637b420e0d131a993f16f7410883b87320add8a183555 a8a7bc421f721cb936ea99efdad79237e6ee0b871a2a08cf648691f9584cdc77\n\nsub_0: assembly {\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0x80\n      dup1\n      0x40\n      mstore\n      jumpi(tag_33, iszero(lt(calldatasize, 0x04)))\n      0x00\n      dup1\n      revert\n    tag_33:\n      0x00\n      swap1\n      dup2\n      calldataload\n      0xe0\n      shr\n      swap1\n      dup2\n      0x01ffc9a7\n      eq\n      tag_35\n      jumpi\n      pop\n      dup1\n      0x03f715da\n      eq\n      tag_37\n      jumpi\n      dup1\n      0x0e59a395\n      eq\n      tag_39\n      jumpi\n      dup1\n      0x18cf2834\n      eq\n      tag_41\n      jumpi\n      dup1\n      0x1a1aaeed\n      eq\n      tag_43\n      jumpi\n      dup1\n      0x22dcd13e\n      eq\n      tag_45\n      jumpi\n      dup1\n      0x248a9ca3\n      eq\n      tag_47\n      jumpi\n      dup1\n      0x24d956c8\n      eq\n      tag_49\n      jumpi\n      dup1\n      0x2f2ff15d\n      eq\n      tag_51\n      jumpi\n      dup1\n      0x317b8c5b\n      eq\n      tag_53\n      jumpi\n      dup1\n      0x36568abe\n      eq\n      tag_55\n      jumpi\n      dup1\n      0x38a13287\n      eq\n      tag_57\n      jumpi\n      dup1\n      0x3f4ba83a\n      eq\n      tag_59\n      jumpi\n      dup1\n      0x46904840\n      eq\n      tag_61\n      jumpi\n      dup1\n      0x4971716f\n      eq\n      tag_63\n      jumpi\n      dup1\n      0x5c975abb\n      eq\n      tag_65\n      jumpi\n      dup1\n      0x76492d3f\n      eq\n      tag_67\n      jumpi\n      dup1\n      0x8456cb59\n      eq\n      tag_69\n      jumpi\n      dup1\n      0x91d14854\n      eq\n      tag_71\n      jumpi\n      dup1\n      0x95ccea67\n      eq\n      tag_73\n      jumpi\n      dup1\n      0x9b1221ab\n      eq\n      tag_75\n      jumpi\n      dup1\n      0x9f1cf42d\n      eq\n      tag_77\n      jumpi\n      dup1\n      0x9fad59b4\n      eq\n      tag_79\n      jumpi\n      dup1\n      0xa0a57dac\n      eq\n      tag_81\n      jumpi\n      dup1\n      0xa217fddf\n      eq\n      tag_83\n      jumpi\n      dup1\n      0xaed1505d\n      eq\n      tag_85\n      jumpi\n      dup1\n      0xd547741f\n      eq\n      tag_87\n      jumpi\n      dup1\n      0xd6bc7c63\n      eq\n      tag_89\n      jumpi\n      dup1\n      0xe39fff38\n      eq\n      tag_91\n      jumpi\n      dup1\n      0xe4abd4cb\n      eq\n      tag_93\n      jumpi\n      dup1\n      0xe7079180\n      eq\n      tag_95\n      jumpi\n      dup1\n      0xef03c10e\n      eq\n      tag_97\n      jumpi\n      dup1\n      0xf0c3cd20\n      eq\n      tag_99\n      jumpi\n      0xf160d369\n      eq\n      tag_101\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_101:\n      jumpi(tag_105, callvalue)\n      jumpi(tag_105, slt(add(not(0x03), calldatasize), 0x20))\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2499:2500  _ */\n      tag_107\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      tag_108\n      tag_5\n      jump\t// in\n    tag_108:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2484:2488  role */\n      tag_109\n      tag_12\n      jump\t// in\n    tag_109:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2499:2500  _ */\n      tag_32\n      jump\t// in\n    tag_107:\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      dup1\n      return\n    tag_105:\n      dup1\n      revert\n    tag_99:\n      pop\n      jumpi(tag_105, callvalue)\n      0x20\n      dup1\n      add(calldatasize, not(0x03))\n      slt\n      tag_112\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n      tag_114\n      tag_5\n      jump\t// in\n    tag_114:\n      and\n      dup3\n      mstore\n        /* \"contracts/EtharisEscrow.sol\":17773:17784  _brandDeals */\n      0x05\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      dup2\n      mstore\n      0x40\n      dup3\n      keccak256\n      dup1\n      sload\n      swap1\n      tag_115\n      dup3\n      tag_30\n      jump\t// in\n    tag_115:\n      swap3\n      dup1\n      dup5\n      add\n      swap2\n      dup6\n      mstore\n      dup1\n      dup6\n      keccak256\n      swap5\n      swap2\n    tag_116:\n      dup4\n      dup4\n      lt\n      tag_117\n      jumpi\n      mload(0x40)\n      dup1\n      tag_119\n      dup8\n      dup3\n      tag_10\n      jump\t// in\n    tag_119:\n      sub\n      swap1\n      return\n    tag_117:\n      0x01\n      dup3\n      dup2\n      swap3\n      tag_120\n      dup10\n      tag_29\n      jump\t// in\n    tag_120:\n      dup2\n      mstore\n      add\n      swap7\n      add\n      swap3\n      add\n      swap2\n      swap5\n      jump(tag_116)\n    tag_112:\n      pop\n      dup1\n      revert\n    tag_97:\n      pop\n      jumpi(tag_105, callvalue)\n      jumpi(tag_105, slt(add(not(0x03), calldatasize), 0x60))\n      calldataload(0x04)\n      sub(shl(0x40, 0x01), 0x01)\n      dup2\n      gt\n      tag_112\n      jumpi\n      tag_127\n      swap1\n      calldatasize\n      swap1\n      0x04\n      add\n      tag_3\n      jump\t// in\n    tag_127:\n      tag_128\n      tag_4\n      jump\t// in\n    tag_128:\n      calldataload(0x44)\n      swap2\n      dup3\n      iszero\n      iszero\n      dup4\n      sub\n      tag_129\n      jumpi\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2227:2330  modifier nonReentrant() {... */\n      tag_131\n      tag_23\n      jump\t// in\n    tag_131:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2484:2488  role */\n      tag_132\n      tag_12\n      jump\t// in\n    tag_132:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1204:1276  modifier whenNotPaused() {... */\n      tag_133\n      tag_21\n      jump\t// in\n    tag_133:\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      mload(0x40)\n      swap1\n      0xff\n        /* \"contracts/EtharisEscrow.sol\":4362:4384  _deals[_dealId].exists */\n      0x06\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      dup3\n      mload\n      swap4\n      0x20\n      dup2\n      dup2\n      dup7\n      add\n      swap7\n      tag_134\n      dup2\n      dup4\n      dup11\n      tag_8\n      jump\t// in\n    tag_134:\n      dup2\n      add\n      0x04\n      dup2\n      mstore\n      sub\n      add\n      swap1\n      keccak256\n        /* \"contracts/EtharisEscrow.sol\":4362:4384  _deals[_dealId].exists */\n      add\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      sload\n      0xc8\n      shr\n      and\n        /* \"contracts/EtharisEscrow.sol\":4361:4384  !_deals[_dealId].exists */\n      iszero\n        /* \"contracts/EtharisEscrow.sol\":4357:4407  if (!_deals[_dealId].exists) revert DealNotFound() */\n      tag_135\n      jumpi\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      mload(0x40)\n      swap2\n      dup2\n      mload\n      tag_137\n      dup2\n      dup6\n      dup5\n      tag_8\n      jump\t// in\n    tag_137:\n      dup4\n      add\n      0x04\n      dup2\n      mstore\n      0x01\n      dup5\n      0x20\n      dup3\n      dup1\n      0xa0\n      shl\n      sub\n      swap7\n      dup8\n      swap5\n      sub\n      add\n      swap1\n      keccak256\n        /* \"contracts/EtharisEscrow.sol\":4221:4244  _deals[_dealId].creator */\n      add\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      sload\n      and\n      dup4\n      dup6\n      and\n        /* \"contracts/EtharisEscrow.sol\":4221:4256  _deals[_dealId].creator != _creator */\n      sub\n        /* \"contracts/EtharisEscrow.sol\":4217:4280  if (_deals[_dealId].creator != _creator) revert NotAuthorized() */\n      tag_138\n      jumpi\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0xff\n        /* \"contracts/EtharisEscrow.sol\":4362:4384  _deals[_dealId].exists */\n      0x06\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      mload(0x40)\n      0x20\n      dup2\n      dup7\n      mload\n      tag_140\n      dup2\n      dup4\n      dup10\n      tag_8\n      jump\t// in\n    tag_140:\n      dup2\n      add\n      0x04\n      dup2\n      mstore\n      sub\n      add\n      swap1\n      keccak256\n        /* \"contracts/EtharisEscrow.sol\":4510:4532  _deals[_dealId].status */\n      add\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      sload\n      0xc0\n      shr\n      and\n        /* \"contracts/EtharisEscrow.sol\":4362:4384  _deals[_dealId].exists */\n      0x06\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      dup2\n      lt\n      iszero\n      tag_141\n      jumpi\n      0x03\n        /* \"contracts/EtharisEscrow.sol\":4510:4543  _deals[_dealId].status != _status */\n      sub\n        /* \"contracts/EtharisEscrow.sol\":4506:4571  if (_deals[_dealId].status != _status) revert InvalidDealStatus() */\n      tag_143\n      jumpi\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0x20\n      tag_145\n      swap2\n      mload(0x40)\n      dup1\n      swap4\n      dup2\n      swap3\n      dup7\n      mload\n      swap3\n      dup4\n      swap2\n      tag_8\n      jump\t// in\n    tag_145:\n      dup2\n      add\n      0x04\n      dup2\n      mstore\n      sub\n      add\n      swap1\n      keccak256\n      sub(shl(0x60, 0x01), 0x01)\n        /* \"contracts/EtharisEscrow.sol\":13699:13710  deal.amount */\n      0x05\n      dup3\n      add\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      sload\n      and\n        /* \"contracts/EtharisEscrow.sol\":13738:13750  deal.creator */\n      swap2\n      dup4\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0x01\n        /* \"contracts/EtharisEscrow.sol\":13738:13750  deal.creator */\n      dup4\n      add\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      sload\n      and\n      swap6\n      dup5\n      dup4\n      sload\n      and\n        /* \"contracts/EtharisEscrow.sol\":1810:1815  10000 */\n      swap3\n        /* \"contracts/EtharisEscrow.sol\":4362:4384  _deals[_dealId].exists */\n      0x06\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0x03\n        /* \"contracts/EtharisEscrow.sol\":1810:1815  10000 */\n      sload\n        /* \"contracts/EtharisEscrow.sol\":13880:13891  deal.status */\n      swap2\n      add\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      shl(0xc2, 0x01)\n      not(shl(0xc0, 0xff))\n      dup3\n      sload\n      and\n      or\n      swap1\n      sstore\n        /* \"contracts/EtharisEscrow.sol\":14031:14041  _idrxToken */\n      immutable(\"0x92a99c2e1e73cfa8af214a27ee636aa00abb49bffb5065f213fd4435430466da\")\n        /* \"contracts/EtharisEscrow.sol\":14052:14792  if (_accept5050) {... */\n      swap6\n      dup10\n      dup4\n      0x00\n      eq\n      tag_146\n      jumpi\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      pop\n      0x1388\n      dup7\n      mul\n      swap2\n      sub(shl(0x60, 0x01), 0x01)\n      dup4\n      and\n      swap3\n      dup4\n      sub\n      tag_148\n      jumpi\n      dup10\n      swap2\n      0x2710\n        /* \"contracts/EtharisEscrow.sol\":1810:1815  10000 */\n      dup1\n      swap5\n      div\n        /* \"contracts/EtharisEscrow.sol\":14170:14195  totalEscrow - grossPayout */\n      swap8\n      dup9\n      tag_150\n      swap2\n      tag_26\n      jump\t// in\n    tag_150:\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      swap4\n        /* \"contracts/EtharisEscrow.sol\":14225:14245  grossPayout * feeBps */\n      tag_151\n      sub(shl(0x60, 0x01), 0x01)\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      dup5\n      and\n        /* \"contracts/EtharisEscrow.sol\":14225:14245  grossPayout * feeBps */\n      dup11\n      tag_25\n      jump\t// in\n    tag_151:\n      sub(shl(0x60, 0x01), 0x01)\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      and\n        /* \"contracts/EtharisEscrow.sol\":1810:1815  10000 */\n      div\n        /* \"contracts/EtharisEscrow.sol\":14298:14323  grossPayout - platformFee */\n      swap8\n      dup9\n      tag_152\n      swap2\n      tag_26\n      jump\t// in\n    tag_152:\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      swap10\n      sub(shl(0x60, 0x01), 0x01)\n      dup12\n      and\n        /* \"contracts/EtharisEscrow.sol\":14383:14398  creatorNet != 0 */\n      swap3\n      dup4\n      iszero\n      iszero\n        /* \"contracts/EtharisEscrow.sol\":14379:14439  if (creatorNet != 0) token.safeTransfer(creator, creatorNet) */\n      swap11\n        /* \"contracts/EtharisEscrow.sol\":14974:15035  PaymentReleased(_dealId, creator, creatorAmount, platformFee) */\n      tag_153\n        /* \"contracts/EtharisEscrow.sol\":14379:14439  if (creatorNet != 0) token.safeTransfer(creator, creatorNet) */\n      swap10\n        /* \"contracts/EtharisEscrow.sol\":14807:14959  DisputeResolved(... */\n      0xea4ea4b4229888eeba3eb2772df89c52af23c7fe3d530b0c1f2ca146f32c12ba\n        /* \"contracts/EtharisEscrow.sol\":14379:14439  if (creatorNet != 0) token.safeTransfer(creator, creatorNet) */\n      swap7\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0x60\n        /* \"contracts/EtharisEscrow.sol\":14379:14439  if (creatorNet != 0) token.safeTransfer(creator, creatorNet) */\n      swap7\n      0x00\n      dup1\n      mload\n      0x20\n      data_a8eda418a66b2f5395d4a15b2f03de75b34fff39bb2e2a8b57f6be974d56e7b0\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      swap15\n      tag_154\n      jumpi\n        /* \"contracts/EtharisEscrow.sol\":14052:14792  if (_accept5050) {... */\n    tag_155:\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      pop\n      pop\n      sub(shl(0x60, 0x01), 0x01)\n      dup9\n      and\n        /* \"contracts/EtharisEscrow.sol\":14457:14473  brandRefund != 0 */\n      dup1\n        /* \"contracts/EtharisEscrow.sol\":14453:14513  if (brandRefund != 0) token.safeTransfer(brand, brandRefund) */\n      tag_156\n      jumpi\n        /* \"contracts/EtharisEscrow.sol\":14052:14792  if (_accept5050) {... */\n    tag_157:\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      pop\n      pop\n      sub(shl(0x60, 0x01), 0x01)\n      dup12\n      and\n        /* \"contracts/EtharisEscrow.sol\":14531:14547  platformFee != 0 */\n      swap1\n      dup2\n        /* \"contracts/EtharisEscrow.sol\":14527:14590  if (platformFee != 0) token.safeTransfer(feeRecip, platformFee) */\n      tag_158\n      jumpi\n        /* \"contracts/EtharisEscrow.sol\":14052:14792  if (_accept5050) {... */\n    tag_159:\n      pop\n      pop\n      pop\n    tag_160:\n      sub(shl(0x60, 0x01), 0x01)\n        /* \"contracts/EtharisEscrow.sol\":14807:14959  DisputeResolved(... */\n      tag_161\n      dup9\n      tag_20\n      jump\t// in\n    tag_161:\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      swap6\n      mload(0x40)\n      swap8\n      iszero\n      iszero\n      dup9\n      mstore\n      dup2\n      dup14\n      and\n      0x20\n      dup10\n      add\n      mstore\n      and\n      0x40\n      dup8\n      add\n      mstore\n      and\n        /* \"contracts/EtharisEscrow.sol\":14807:14959  DisputeResolved(... */\n      swap4\n      log3\n        /* \"contracts/EtharisEscrow.sol\":14974:15035  PaymentReleased(_dealId, creator, creatorAmount, platformFee) */\n      tag_20\n      jump\t// in\n    tag_153:\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0x40\n      dup1\n      mload\n      sub(shl(0x60, 0x01), 0x01)\n      swap6\n      dup7\n      and\n      dup2\n      mstore\n      swap3\n      swap1\n      swap5\n      and\n        /* \"contracts/EtharisEscrow.sol\":1810:1815  10000 */\n      0x20\n      dup4\n      add\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      mstore\n      swap3\n      swap1\n        /* \"contracts/EtharisEscrow.sol\":14974:15035  PaymentReleased(_dealId, creator, creatorAmount, platformFee) */\n      log3\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      dup2\n      sstore\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      dup1\n      return\n        /* \"contracts/EtharisEscrow.sol\":14527:14590  if (platformFee != 0) token.safeTransfer(feeRecip, platformFee) */\n    tag_158:\n        /* \"contracts/EtharisEscrow.sol\":14549:14590  token.safeTransfer(feeRecip, platformFee) */\n      tag_163\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      swap3\n      dup7\n      shr\n        /* \"contracts/EtharisEscrow.sol\":14549:14590  token.safeTransfer(feeRecip, platformFee) */\n      swap1\n      tag_28\n      jump\t// in\n    tag_163:\n        /* \"contracts/EtharisEscrow.sol\":14527:14590  if (platformFee != 0) token.safeTransfer(feeRecip, platformFee) */\n      0x00\n      dup1\n      dup1\n      jump(tag_159)\n        /* \"contracts/EtharisEscrow.sol\":14453:14513  if (brandRefund != 0) token.safeTransfer(brand, brandRefund) */\n    tag_156:\n        /* \"contracts/EtharisEscrow.sol\":14475:14513  token.safeTransfer(brand, brandRefund) */\n      tag_164\n      swap2\n      dup4\n      tag_28\n      jump\t// in\n    tag_164:\n        /* \"contracts/EtharisEscrow.sol\":14453:14513  if (brandRefund != 0) token.safeTransfer(brand, brandRefund) */\n      0x00\n      dup1\n      jump(tag_157)\n        /* \"contracts/EtharisEscrow.sol\":14379:14439  if (creatorNet != 0) token.safeTransfer(creator, creatorNet) */\n    tag_154:\n        /* \"contracts/EtharisEscrow.sol\":14400:14439  token.safeTransfer(creator, creatorNet) */\n      tag_165\n      swap2\n      dup5\n      tag_28\n      jump\t// in\n    tag_165:\n        /* \"contracts/EtharisEscrow.sol\":14379:14439  if (creatorNet != 0) token.safeTransfer(creator, creatorNet) */\n      dup15\n      0x00\n      jump(tag_155)\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n    tag_148:\n      shl(0xe0, 0x4e487b71)\n      0x00\n        /* \"contracts/EtharisEscrow.sol\":1861:1869  72 hours */\n      mstore\n      0x11\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0x04\n        /* \"contracts/EtharisEscrow.sol\":1861:1869  72 hours */\n      mstore\n      0x24\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0x00\n        /* \"contracts/EtharisEscrow.sol\":1861:1869  72 hours */\n      revert\n        /* \"contracts/EtharisEscrow.sol\":14052:14792  if (_accept5050) {... */\n    tag_146:\n        /* \"contracts/EtharisEscrow.sol\":14621:14638  creatorAmount = 0 */\n      swap2\n      pop\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0x60\n        /* \"contracts/EtharisEscrow.sol\":14807:14959  DisputeResolved(... */\n      0xea4ea4b4229888eeba3eb2772df89c52af23c7fe3d530b0c1f2ca146f32c12ba\n        /* \"contracts/EtharisEscrow.sol\":14621:14638  creatorAmount = 0 */\n      swap2\n        /* \"contracts/EtharisEscrow.sol\":14974:15035  PaymentReleased(_dealId, creator, creatorAmount, platformFee) */\n      tag_153\n        /* \"contracts/EtharisEscrow.sol\":14621:14638  creatorAmount = 0 */\n      swap7\n      swap8\n      swap10\n      0x00\n      dup1\n      mload\n      0x20\n      data_a8eda418a66b2f5395d4a15b2f03de75b34fff39bb2e2a8b57f6be974d56e7b0\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      swap10\n      dup6\n        /* \"contracts/EtharisEscrow.sol\":14652:14677  brandRefund = totalEscrow */\n      swap12\n      dup1\n        /* \"contracts/EtharisEscrow.sol\":14691:14706  platformFee = 0 */\n      swap7\n        /* \"contracts/EtharisEscrow.sol\":14725:14741  brandRefund != 0 */\n      swap11\n      dup2\n        /* \"contracts/EtharisEscrow.sol\":14721:14781  if (brandRefund != 0) token.safeTransfer(brand, brandRefund) */\n      tag_166\n      jumpi\n        /* \"contracts/EtharisEscrow.sol\":14052:14792  if (_accept5050) {... */\n    tag_167:\n      pop\n      pop\n      pop\n      jump(tag_160)\n        /* \"contracts/EtharisEscrow.sol\":14721:14781  if (brandRefund != 0) token.safeTransfer(brand, brandRefund) */\n    tag_166:\n        /* \"contracts/EtharisEscrow.sol\":14743:14781  token.safeTransfer(brand, brandRefund) */\n      tag_168\n      swap3\n      tag_28\n      jump\t// in\n    tag_168:\n        /* \"contracts/EtharisEscrow.sol\":14721:14781  if (brandRefund != 0) token.safeTransfer(brand, brandRefund) */\n      0x00\n      dup1\n      dup1\n      jump(tag_167)\n        /* \"contracts/EtharisEscrow.sol\":4506:4571  if (_deals[_dealId].status != _status) revert InvalidDealStatus() */\n    tag_143:\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      mload(0x40)\n      shl(0xe0, 0x5e40b94f)\n        /* \"contracts/EtharisEscrow.sol\":4552:4571  InvalidDealStatus() */\n      dup2\n      mstore\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0x04\n      swap1\n        /* \"contracts/EtharisEscrow.sol\":4552:4571  InvalidDealStatus() */\n      revert\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n    tag_141:\n      shl(0xe0, 0x4e487b71)\n      dup8\n      mstore\n      mstore(0x04, 0x21)\n      0x24\n      dup8\n      revert\n        /* \"contracts/EtharisEscrow.sol\":4217:4280  if (_deals[_dealId].creator != _creator) revert NotAuthorized() */\n    tag_138:\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      mload(0x40)\n      shl(0xe0, 0xea8e4eb5)\n        /* \"contracts/EtharisEscrow.sol\":4265:4280  NotAuthorized() */\n      dup2\n      mstore\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0x04\n      swap1\n        /* \"contracts/EtharisEscrow.sol\":4265:4280  NotAuthorized() */\n      revert\n        /* \"contracts/EtharisEscrow.sol\":4357:4407  if (!_deals[_dealId].exists) revert DealNotFound() */\n    tag_135:\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      mload(0x40)\n      shl(0xe2, 0x223da473)\n        /* \"contracts/EtharisEscrow.sol\":4393:4407  DealNotFound() */\n      dup2\n      mstore\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0x04\n      swap1\n        /* \"contracts/EtharisEscrow.sol\":4393:4407  DealNotFound() */\n      revert\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n    tag_129:\n      0x00\n      dup1\n      revert\n    tag_95:\n      pop\n      jumpi(tag_105, callvalue)\n      jumpi(tag_105, slt(add(not(0x03), calldatasize), 0x20))\n      calldataload(0x04)\n      sub(shl(0x40, 0x01), 0x01)\n      swap2\n      dup3\n      dup3\n      gt\n      tag_105\n      jumpi\n      pop\n      0x20\n      tag_175\n      tag_176\n      swap3\n      calldatasize\n      swap1\n      0x04\n      add\n      tag_3\n      jump\t// in\n    tag_175:\n      dup2\n      mload(0x40)\n      swap4\n      dup3\n      dup6\n      dup1\n      swap5\n      mload\n      swap4\n      dup5\n      swap3\n      add\n      tag_8\n      jump\t// in\n    tag_176:\n      dup2\n      add\n      0x04\n      dup2\n      mstore\n      sub\n      add\n      swap1\n      keccak256\n        /* \"contracts/EtharisEscrow.sol\":18534:18545  deal.exists */\n      0x06\n      dup2\n      add\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      sload\n      0xff\n      dup2\n      0xc8\n      shr\n      and\n        /* \"contracts/EtharisEscrow.sol\":18533:18545  !deal.exists */\n      iszero\n        /* \"contracts/EtharisEscrow.sol\":18529:18568  if (!deal.exists) revert DealNotFound() */\n      tag_135\n      jumpi\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      tag_179\n      swap3\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      swap2\n      dup2\n      tag_180\n      dup5\n      dup7\n      sload\n      and\n        /* \"contracts/EtharisEscrow.sol\":18649:18661  deal.creator */\n      swap5\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0x01\n        /* \"contracts/EtharisEscrow.sol\":18649:18661  deal.creator */\n      dup8\n      add\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      sload\n      and\n      tag_181\n        /* \"contracts/EtharisEscrow.sol\":18675:18686  deal.amount */\n      0x05\n      dup9\n      add\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      sload\n        /* \"contracts/EtharisEscrow.sol\":18600:18611  deal.dealId */\n      swap7\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      tag_182\n        /* \"contracts/EtharisEscrow.sol\":18600:18611  deal.dealId */\n      0x02\n      dup11\n      add\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      tag_29\n      jump\t// in\n    tag_182:\n        /* \"contracts/EtharisEscrow.sol\":18752:18766  deal.briefHash */\n      swap9\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      tag_183\n      0x04\n      tag_184\n      0x03\n        /* \"contracts/EtharisEscrow.sol\":18752:18766  deal.briefHash */\n      dup5\n      add\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      tag_29\n      jump\t// in\n    tag_184:\n        /* \"contracts/EtharisEscrow.sol\":18780:18795  deal.contentUrl */\n      swap3\n      add\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      tag_29\n      jump\t// in\n    tag_183:\n      swap4\n      mload(0x40)\n      swap12\n      dup13\n      swap12\n      dup13\n      0x01a0\n      dup1\n      swap2\n      mstore\n      dup14\n      add\n      swap1\n      tag_9\n      jump\t// in\n    tag_179:\n      swap3\n      0x20\n      dup13\n      add\n      mstore\n      0x40\n      dup12\n      add\n      mstore\n      sub(shl(0x60, 0x01), 0x01)\n      dup10\n      and\n      0x60\n      dup12\n      add\n      mstore\n      dup6\n      dup10\n      0x60\n      shr\n      and\n      0x80\n      dup12\n      add\n      mstore\n      tag_185\n      0xa0\n      dup12\n      add\n      0xff\n      dup10\n      0xc0\n      shr\n      and\n      tag_11\n      jump\t// in\n    tag_185:\n      dup10\n      dup3\n      sub\n      0xc0\n      dup12\n      add\n      mstore\n      tag_9\n      jump\t// in\n    tag_181:\n      swap1\n      dup8\n      dup3\n      sub\n      0xe0\n      dup10\n      add\n      mstore\n      tag_9\n      jump\t// in\n    tag_180:\n        /* \"contracts/EtharisEscrow.sol\":1861:1869  72 hours */\n      swap4\n      dup2\n      dup4\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0x40\n        /* \"contracts/EtharisEscrow.sol\":1861:1869  72 hours */\n      shr\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      and\n      0x0100\n      dup8\n      add\n      mstore\n      0xa0\n      shr\n      and\n      0x0120\n      dup6\n      add\n      mstore\n      dup2\n      dup2\n      and\n      0x0140\n      dup6\n      add\n      mstore\n      0x80\n      shr\n      and\n      0x0160\n      dup4\n      add\n      mstore\n      0x01\n      0x0180\n      dup4\n      add\n      mstore\n      sub\n      swap1\n      return\n    tag_93:\n      pop\n      jumpi(tag_105, callvalue)\n      jumpi(tag_105, slt(add(not(0x03), calldatasize), 0xc0))\n      sub(shl(0x40, 0x01), 0x01)\n      calldataload(0x04)\n      dup2\n      dup2\n      gt\n      tag_190\n      jumpi\n      tag_192\n      swap1\n      calldatasize\n      swap1\n      0x04\n      add\n      tag_3\n      jump\t// in\n    tag_192:\n      tag_193\n      tag_4\n      jump\t// in\n    tag_193:\n      calldataload(0x44)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      and\n      swap4\n      swap2\n      swap1\n      dup5\n      swap1\n      sub\n      tag_129\n      jumpi\n      calldataload(0x64)\n      swap3\n      sub(shl(0x60, 0x01), 0x01)\n      dup5\n      and\n      dup5\n      sub\n      tag_129\n      jumpi\n      dup3\n      calldataload(0x84)\n      and\n      calldataload(0x84)\n      sub\n      tag_198\n      jumpi\n      calldataload(0xa4)\n      dup4\n      dup2\n      gt\n      tag_200\n      jumpi\n      tag_202\n      swap1\n      calldatasize\n      swap1\n      0x04\n      add\n      tag_3\n      jump\t// in\n    tag_202:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2484:2488  role */\n      swap2\n      tag_203\n      tag_12\n      jump\t// in\n    tag_203:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1204:1276  modifier whenNotPaused() {... */\n      tag_204\n      tag_21\n      jump\t// in\n    tag_204:\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0xff\n        /* \"contracts/EtharisEscrow.sol\":5735:5757  _deals[_dealId].exists */\n      0x06\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      mload(0x40)\n      0x20\n      dup2\n      dup7\n      mload\n      tag_205\n      dup2\n      dup4\n      dup6\n      dup12\n      add\n      tag_8\n      jump\t// in\n    tag_205:\n      dup2\n      add\n      0x04\n      dup2\n      mstore\n      sub\n      add\n      swap1\n      keccak256\n        /* \"contracts/EtharisEscrow.sol\":5735:5757  _deals[_dealId].exists */\n      add\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      sload\n      0xc8\n      shr\n      and\n        /* \"contracts/EtharisEscrow.sol\":5731:5785  if (_deals[_dealId].exists) revert DealAlreadyExists() */\n      tag_206\n      jumpi\n        /* \"contracts/EtharisEscrow.sol\":5799:5828  _creatorAddress == address(0) */\n      dup6\n      iszero\n        /* \"contracts/EtharisEscrow.sol\":5795:5853  if (_creatorAddress == address(0)) revert InvalidAddress() */\n      tag_210\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      and\n      swap4\n        /* \"contracts/EtharisEscrow.sol\":5867:5894  _brandAddress == address(0) */\n      dup5\n      iszero\n        /* \"contracts/EtharisEscrow.sol\":5863:5919  if (_brandAddress == address(0)) revert InvalidAddress() */\n      tag_210\n      jumpi\n        /* \"contracts/EtharisEscrow.sol\":5933:5965  _brandAddress == _creatorAddress */\n      dup6\n      dup6\n      eq\n        /* \"contracts/EtharisEscrow.sol\":5929:5996  if (_brandAddress == _creatorAddress) revert CreatorCannotBeBrand() */\n      tag_212\n      jumpi\n      sub(shl(0x60, 0x01), 0x01)\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      dup2\n      and\n        /* \"contracts/EtharisEscrow.sol\":6010:6022  _amount == 0 */\n      iszero\n        /* \"contracts/EtharisEscrow.sol\":6006:6060  if (_amount == 0) revert AmountMustBeGreaterThanZero() */\n      tag_214\n      jumpi\n        /* \"contracts/EtharisEscrow.sol\":6087:6102  block.timestamp */\n      timestamp\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      dup5\n      calldataload(0x84)\n      and\n        /* \"contracts/EtharisEscrow.sol\":6074:6102  _deadline <= block.timestamp */\n      gt\n      iszero\n        /* \"contracts/EtharisEscrow.sol\":6070:6135  if (_deadline <= block.timestamp) revert DeadlineMustBeInFuture() */\n      tag_216\n      jumpi\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      dup3\n      mload\n        /* \"contracts/EtharisEscrow.sol\":6149:6178  bytes(_briefHash).length == 0 */\n      iszero\n        /* \"contracts/EtharisEscrow.sol\":6145:6206  if (bytes(_briefHash).length == 0) revert BriefHashRequired() */\n      tag_218\n      jumpi\n        /* \"contracts/EtharisEscrow.sol\":6870:7012  DealCreated(... */\n      tag_220\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0x40\n      swap3\n        /* \"contracts/EtharisEscrow.sol\":6870:7012  DealCreated(... */\n      0xceb1a488be98b2739817f21e7d3b0a343434519cd0fe4db3ef5fc27a96e8d295\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      swap5\n      tag_221\n      dup6\n      mload\n      0x20\n      dup2\n      dup6\n      mload\n      tag_222\n      dup2\n      dup4\n      dup6\n      dup11\n      add\n      tag_8\n      jump\t// in\n    tag_222:\n      dup2\n      add\n      0x04\n      dup2\n      mstore\n      sub\n      add\n      swap1\n      keccak256\n        /* \"contracts/EtharisEscrow.sol\":6333:6344  deal.dealId */\n      swap2\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      tag_223\n        /* \"contracts/EtharisEscrow.sol\":6333:6344  deal.dealId */\n      dup5\n      0x02\n      dup6\n      add\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      tag_18\n      jump\t// in\n    tag_223:\n      dup3\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      swap1\n      dup2\n      and\n      dup12\n      or\n      dup5\n      sstore\n      0x01\n        /* \"contracts/EtharisEscrow.sol\":6400:6412  deal.creator */\n      dup5\n      add\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      dup1\n      sload\n      dup3\n      and\n      dup14\n      or\n      swap1\n      sstore\n        /* \"contracts/EtharisEscrow.sol\":6440:6451  deal.amount */\n      0x05\n      dup5\n      add\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      dup1\n      sload\n      swap1\n      swap2\n      and\n      sub(shl(0x60, 0x01), 0x01)\n      dup9\n      and\n      or\n      and(shl(0x60, 0xffffffffffffffff), shl(0x60, calldataload(0x84)))\n      or\n      swap1\n      sstore\n      0x03\n        /* \"contracts/EtharisEscrow.sol\":6506:6520  deal.briefHash */\n      dup4\n      add\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      tag_18\n      jump\t// in\n    tag_221:\n        /* \"contracts/EtharisEscrow.sol\":5735:5757  _deals[_dealId].exists */\n      0x06\n        /* \"contracts/EtharisEscrow.sol\":6543:6554  deal.status */\n      dup2\n      add\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      dup1\n      sload\n      not(shl(0x80, 0xffffffffffffffffff))\n      and\n        /* \"contracts/EtharisEscrow.sol\":6087:6102  block.timestamp */\n      timestamp\n        /* \"contracts/EtharisEscrow.sol\":1861:1869  72 hours */\n      0x80\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      shl\n      shl(0x80, 0xffffffffffffffff)\n      and\n      or\n      dup2\n      sstore\n      0x04\n        /* \"contracts/EtharisEscrow.sol\":6639:6654  deal.contentUrl */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      dup1\n      sload\n      0x00\n      swap2\n        /* \"contracts/EtharisEscrow.sol\":6639:6654  deal.contentUrl */\n      swap1\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      tag_224\n      swap1\n      tag_16\n      jump\t// in\n    tag_224:\n      0x1f\n      dup2\n      gt\n      tag_225\n      jumpi\n    tag_226:\n      pop\n      sstore\n      dup1\n      sload\n      not(shl(0xc8, 0xff))\n      and\n      shl(0xc8, 0x01)\n      or\n      swap1\n      sstore\n      dup7\n      dup10\n      mstore\n        /* \"contracts/EtharisEscrow.sol\":6440:6451  deal.amount */\n      0x05\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0x20\n      mstore\n      dup4\n      dup10\n      keccak256\n        /* \"contracts/EtharisEscrow.sol\":6760:6800  _brandDeals[_brandAddress].push(_dealId) */\n      tag_227\n      swap1\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      dup3\n      swap1\n        /* \"contracts/EtharisEscrow.sol\":6760:6800  _brandDeals[_brandAddress].push(_dealId) */\n      tag_19\n      jump\t// in\n    tag_227:\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      dup8\n      dup10\n      mstore\n        /* \"contracts/EtharisEscrow.sol\":5735:5757  _deals[_dealId].exists */\n      0x06\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0x20\n      mstore\n        /* \"contracts/EtharisEscrow.sol\":6810:6854  _creatorDeals[_creatorAddress].push(_dealId) */\n      tag_228\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      dup2\n      dup6\n      dup12\n      keccak256\n        /* \"contracts/EtharisEscrow.sol\":6810:6854  _creatorDeals[_creatorAddress].push(_dealId) */\n      tag_19\n      jump\t// in\n    tag_228:\n        /* \"contracts/EtharisEscrow.sol\":6870:7012  DealCreated(... */\n      tag_20\n      jump\t// in\n    tag_220:\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      swap4\n      sub(shl(0x60, 0x01), 0x01)\n      dup4\n      mload\n      swap3\n      and\n      dup3\n      mstore\n      calldataload(0x84)\n      and\n      0x20\n      dup3\n      add\n      mstore\n        /* \"contracts/EtharisEscrow.sol\":6870:7012  DealCreated(... */\n      log4\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      dup1\n      return\n    tag_225:\n      dup2\n      dup4\n      mstore\n      0x20\n      dup4\n      keccak256\n      tag_229\n      swap2\n      0x1f\n      add\n        /* \"contracts/EtharisEscrow.sol\":6440:6451  deal.amount */\n      0x05\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      shr\n      dup2\n      add\n      swap1\n      tag_17\n      jump\t// in\n    tag_229:\n      0x00\n      jump(tag_226)\n        /* \"contracts/EtharisEscrow.sol\":6145:6206  if (bytes(_briefHash).length == 0) revert BriefHashRequired() */\n    tag_218:\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      mload(0x40)\n      shl(0xe3, 0x07e4dd01)\n        /* \"contracts/EtharisEscrow.sol\":6187:6206  BriefHashRequired() */\n      dup2\n      mstore\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0x04\n      swap1\n        /* \"contracts/EtharisEscrow.sol\":6187:6206  BriefHashRequired() */\n      revert\n        /* \"contracts/EtharisEscrow.sol\":6070:6135  if (_deadline <= block.timestamp) revert DeadlineMustBeInFuture() */\n    tag_216:\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      mload(0x40)\n      shl(0xe0, 0x0642ce77)\n        /* \"contracts/EtharisEscrow.sol\":6111:6135  DeadlineMustBeInFuture() */\n      dup2\n      mstore\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0x04\n      swap1\n        /* \"contracts/EtharisEscrow.sol\":6111:6135  DeadlineMustBeInFuture() */\n      revert\n        /* \"contracts/EtharisEscrow.sol\":6006:6060  if (_amount == 0) revert AmountMustBeGreaterThanZero() */\n    tag_214:\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      mload(0x40)\n      shl(0xe0, 0x5e85ae73)\n        /* \"contracts/EtharisEscrow.sol\":6031:6060  AmountMustBeGreaterThanZero() */\n      dup2\n      mstore\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0x04\n      swap1\n        /* \"contracts/EtharisEscrow.sol\":6031:6060  AmountMustBeGreaterThanZero() */\n      revert\n        /* \"contracts/EtharisEscrow.sol\":5929:5996  if (_brandAddress == _creatorAddress) revert CreatorCannotBeBrand() */\n    tag_212:\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      mload(0x40)\n      shl(0xe2, 0x24da0345)\n        /* \"contracts/EtharisEscrow.sol\":5974:5996  CreatorCannotBeBrand() */\n      dup2\n      mstore\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0x04\n      swap1\n        /* \"contracts/EtharisEscrow.sol\":5974:5996  CreatorCannotBeBrand() */\n      revert\n        /* \"contracts/EtharisEscrow.sol\":5863:5919  if (_brandAddress == address(0)) revert InvalidAddress() */\n    tag_210:\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      mload(0x40)\n      shl(0xe0, 0xe6c4247b)\n        /* \"contracts/EtharisEscrow.sol\":5903:5919  InvalidAddress() */\n      dup2\n      mstore\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0x04\n      swap1\n        /* \"contracts/EtharisEscrow.sol\":5903:5919  InvalidAddress() */\n      revert\n        /* \"contracts/EtharisEscrow.sol\":5731:5785  if (_deals[_dealId].exists) revert DealAlreadyExists() */\n    tag_206:\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      mload(0x40)\n      shl(0xe1, 0x38a6a807)\n        /* \"contracts/EtharisEscrow.sol\":5766:5785  DealAlreadyExists() */\n      dup2\n      mstore\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0x04\n      swap1\n        /* \"contracts/EtharisEscrow.sol\":5766:5785  DealAlreadyExists() */\n      revert\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n    tag_200:\n      dup7\n      dup1\n      revert\n    tag_198:\n      dup6\n      dup1\n      revert\n    tag_190:\n      dup3\n      dup1\n      revert\n    tag_91:\n      pop\n      jumpi(tag_105, callvalue)\n      0x20\n      dup1\n      add(calldatasize, not(0x03))\n      slt\n      tag_112\n      jumpi\n      sub(shl(0x40, 0x01), 0x01)\n      swap1\n      calldataload(0x04)\n      dup3\n      dup2\n      gt\n      tag_234\n      jumpi\n      tag_236\n      swap1\n      calldatasize\n      swap1\n      0x04\n      add\n      tag_3\n      jump\t// in\n    tag_236:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2227:2330  modifier nonReentrant() {... */\n      tag_237\n      tag_23\n      jump\t// in\n    tag_237:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2484:2488  role */\n      tag_238\n      tag_12\n      jump\t// in\n    tag_238:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1204:1276  modifier whenNotPaused() {... */\n      tag_239\n      tag_21\n      jump\t// in\n    tag_239:\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      mload(0x40)\n      0xff\n        /* \"contracts/EtharisEscrow.sol\":4362:4384  _deals[_dealId].exists */\n      0x06\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      dup4\n      mload\n      swap3\n      dup6\n      dup2\n      dup2\n      dup8\n      add\n      swap6\n      tag_240\n      dup2\n      dup4\n      dup10\n      tag_8\n      jump\t// in\n    tag_240:\n      dup2\n      add\n      0x04\n      dup2\n      mstore\n      sub\n      add\n      swap1\n      keccak256\n        /* \"contracts/EtharisEscrow.sol\":4362:4384  _deals[_dealId].exists */\n      add\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      sload\n      0xc8\n      shr\n      and\n        /* \"contracts/EtharisEscrow.sol\":4361:4384  !_deals[_dealId].exists */\n      iszero\n        /* \"contracts/EtharisEscrow.sol\":4357:4407  if (!_deals[_dealId].exists) revert DealNotFound() */\n      tag_135\n      jumpi\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0xff\n        /* \"contracts/EtharisEscrow.sol\":4362:4384  _deals[_dealId].exists */\n      0x06\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      mload(0x40)\n      dup6\n      dup2\n      dup7\n      mload\n      tag_243\n      dup2\n      dup4\n      dup10\n      tag_8\n      jump\t// in\n    tag_243:\n      dup2\n      add\n      0x04\n      dup2\n      mstore\n      sub\n      add\n      swap1\n      keccak256\n        /* \"contracts/EtharisEscrow.sol\":4510:4532  _deals[_dealId].status */\n      add\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      sload\n      0xc0\n      shr\n      and\n        /* \"contracts/EtharisEscrow.sol\":4362:4384  _deals[_dealId].exists */\n      0x06\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      dup2\n      lt\n      iszero\n      tag_244\n      jumpi\n        /* \"contracts/EtharisEscrow.sol\":15389:15410  ContractStatus.ACTIVE */\n      0x01\n        /* \"contracts/EtharisEscrow.sol\":4510:4543  _deals[_dealId].status != _status */\n      sub\n        /* \"contracts/EtharisEscrow.sol\":4506:4571  if (_deals[_dealId].status != _status) revert InvalidDealStatus() */\n      tag_143\n      jumpi\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      dup3\n      tag_248\n      swap2\n      mload(0x40)\n      dup1\n      swap4\n      dup2\n      swap3\n      dup7\n      mload\n      swap3\n      dup4\n      swap2\n      tag_8\n      jump\t// in\n    tag_248:\n      dup2\n      add\n      0x04\n      dup2\n      mstore\n      sub\n      add\n      swap1\n      keccak256\n        /* \"contracts/EtharisEscrow.sol\":15495:15508  deal.deadline */\n      swap3\n      0x05\n      dup5\n      add\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      sload\n      swap1\n      dup2\n      0x60\n      shr\n      and\n        /* \"contracts/EtharisEscrow.sol\":15476:15491  block.timestamp */\n      timestamp\n        /* \"contracts/EtharisEscrow.sol\":15476:15508  block.timestamp <= deal.deadline */\n      gt\n      iszero\n        /* \"contracts/EtharisEscrow.sol\":15472:15536  if (block.timestamp <= deal.deadline) revert DeadlineNotPassed() */\n      tag_249\n      jumpi\n        /* \"contracts/EtharisEscrow.sol\":4362:4384  _deals[_dealId].exists */\n      0x06\n        /* \"contracts/EtharisEscrow.sol\":15591:15602  deal.status */\n      dup5\n      add\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      dup1\n      sload\n      not(shl(0xc0, 0xff))\n      and\n      shl(0xc0, 0x05)\n      or\n      swap1\n      sstore\n      sub(shl(0x60, 0x01), 0x01)\n      and\n      swap3\n        /* \"contracts/EtharisEscrow.sol\":15752:15800  DealCancelled(_dealId, msg.sender, refundAmount) */\n      0xb559d285c87e4fa0f561388264310703ff0c6c454a39ae52d0ae94032ff0db70\n      swap2\n      tag_251\n      swap2\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      dup6\n      dup1\n        /* \"contracts/EtharisEscrow.sol\":15640:15737  if (refundAmount != 0) {... */\n      tag_252\n      jumpi\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n    tag_253:\n        /* \"contracts/EtharisEscrow.sol\":15752:15800  DealCancelled(_dealId, msg.sender, refundAmount) */\n      pop\n      pop\n      tag_20\n      jump\t// in\n    tag_251:\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      swap2\n      mload(0x40)\n      swap4\n      dup5\n      mstore\n        /* \"contracts/EtharisEscrow.sol\":15775:15785  msg.sender */\n      caller\n        /* \"contracts/EtharisEscrow.sol\":15752:15800  DealCancelled(_dealId, msg.sender, refundAmount) */\n      swap4\n      log3\n        /* \"contracts/EtharisEscrow.sol\":15389:15410  ContractStatus.ACTIVE */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      dup2\n      sstore\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      dup1\n      return\n        /* \"contracts/EtharisEscrow.sol\":15640:15737  if (refundAmount != 0) {... */\n    tag_252:\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      swap1\n      sload\n        /* \"contracts/EtharisEscrow.sol\":15677:15726  _idrxToken.safeTransfer(deal.brand, refundAmount) */\n      tag_254\n      swap2\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      and\n        /* \"contracts/EtharisEscrow.sol\":15677:15687  _idrxToken */\n      immutable(\"0x92a99c2e1e73cfa8af214a27ee636aa00abb49bffb5065f213fd4435430466da\")\n        /* \"contracts/EtharisEscrow.sol\":15677:15726  _idrxToken.safeTransfer(deal.brand, refundAmount) */\n      tag_28\n      jump\t// in\n    tag_254:\n        /* \"contracts/EtharisEscrow.sol\":15640:15737  if (refundAmount != 0) {... */\n      0x00\n      dup6\n      jump(tag_253)\n        /* \"contracts/EtharisEscrow.sol\":15472:15536  if (block.timestamp <= deal.deadline) revert DeadlineNotPassed() */\n    tag_249:\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      mload(0x40)\n      shl(0xe4, 0x02eb3543)\n        /* \"contracts/EtharisEscrow.sol\":15517:15536  DeadlineNotPassed() */\n      dup2\n      mstore\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0x04\n      swap1\n        /* \"contracts/EtharisEscrow.sol\":15517:15536  DeadlineNotPassed() */\n      revert\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n    tag_244:\n      shl(0xe0, 0x4e487b71)\n      dup7\n      mstore\n      mstore(0x04, 0x21)\n      0x24\n      dup7\n      revert\n    tag_234:\n      dup4\n      dup1\n      revert\n    tag_89:\n      pop\n      jumpi(tag_105, callvalue)\n      dup1\n      add(calldatasize, not(0x03))\n      slt\n      tag_105\n      jumpi\n      mload(0x40)\n        /* \"contracts/EtharisEscrow.sol\":17322:17332  _idrxToken */\n      immutable(\"0x92a99c2e1e73cfa8af214a27ee636aa00abb49bffb5065f213fd4435430466da\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      and\n      dup2\n      mstore\n      0x20\n      swap1\n      return\n    tag_87:\n      pop\n      jumpi(tag_105, callvalue)\n      jumpi(tag_105, slt(add(not(0x03), calldatasize), 0x40))\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4723:4749  _revokeRole(role, account) */\n      tag_263\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      calldataload(0x04)\n      tag_264\n      tag_4\n      jump\t// in\n    tag_264:\n      swap1\n      dup1\n      dup5\n      mstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3877:3883  _roles */\n      0x02\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0x20\n      mstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2484:2488  role */\n      tag_265\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0x01\n      0x40\n      dup7\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3877:3899  _roles[role].adminRole */\n      add\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      sload\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2484:2488  role */\n      tag_13\n      jump\t// in\n    tag_265:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4723:4749  _revokeRole(role, account) */\n      tag_15\n      jump\t// in\n    tag_263:\n      pop\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      dup1\n      return\n    tag_85:\n      pop\n      jumpi(tag_105, callvalue)\n      0x20\n      dup1\n      add(calldatasize, not(0x03))\n      slt\n      tag_112\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n      tag_270\n      tag_5\n      jump\t// in\n    tag_270:\n      and\n      dup3\n      mstore\n        /* \"contracts/EtharisEscrow.sol\":17916:17929  _creatorDeals */\n      0x06\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      dup2\n      mstore\n      0x40\n      dup3\n      keccak256\n      dup1\n      sload\n      swap1\n      tag_271\n      dup3\n      tag_30\n      jump\t// in\n    tag_271:\n      swap3\n      dup1\n      dup5\n      add\n      swap2\n      dup6\n      mstore\n      dup1\n      dup6\n      keccak256\n      swap5\n      swap2\n    tag_272:\n      dup4\n      dup4\n      lt\n      tag_273\n      jumpi\n      mload(0x40)\n      dup1\n      tag_119\n      dup8\n      dup3\n      tag_10\n      jump\t// in\n    tag_273:\n      0x01\n      dup3\n      dup2\n      swap3\n      tag_276\n      dup10\n      tag_29\n      jump\t// in\n    tag_276:\n      dup2\n      mstore\n      add\n      swap7\n      add\n      swap3\n      add\n      swap2\n      swap5\n      jump(tag_272)\n    tag_83:\n      pop\n      jumpi(tag_105, callvalue)\n      dup1\n      add(calldatasize, not(0x03))\n      slt\n      tag_105\n      jumpi\n      0x20\n      swap1\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_81:\n      pop\n      jumpi(tag_105, callvalue)\n      jumpi(tag_105, slt(add(not(0x03), calldatasize), 0x20))\n      calldataload(0x04)\n      sub(shl(0x40, 0x01), 0x01)\n      dup2\n      gt\n      tag_112\n      jumpi\n      0x20\n      tag_287\n      tag_288\n      swap3\n      calldatasize\n      swap1\n      0x04\n      add\n      tag_3\n      jump\t// in\n    tag_287:\n      dup4\n      0x0180\n      mload(0x40)\n      tag_289\n      dup2\n      tag_1\n      jump\t// in\n    tag_289:\n      dup3\n      dup2\n      mstore\n      dup3\n      dup6\n      dup3\n      add\n      mstore\n      0x60\n      0x40\n      dup3\n      add\n      mstore\n      0x60\n      dup1\n      dup3\n      add\n      mstore\n      0x60\n      0x80\n      dup3\n      add\n      mstore\n      dup3\n      0xa0\n      dup3\n      add\n      mstore\n      dup3\n      0xc0\n      dup3\n      add\n      mstore\n      dup3\n      0xe0\n      dup3\n      add\n      mstore\n      dup3\n      0x0100\n      dup3\n      add\n      mstore\n      dup3\n      0x0120\n      dup3\n      add\n      mstore\n      dup3\n      0x0140\n      dup3\n      add\n      mstore\n      dup3\n      0x0160\n      dup3\n      add\n      mstore\n      add\n      mstore\n      dup2\n      mload(0x40)\n      swap4\n      dup3\n      dup6\n      dup1\n      swap5\n      mload\n      swap4\n      dup5\n      swap3\n      add\n      tag_8\n      jump\t// in\n    tag_288:\n      dup2\n      add\n      0x04\n      dup2\n      mstore\n      sub\n      add\n      swap1\n      keccak256\n      swap1\n      0x06\n      mload(0x40)\n      swap3\n      tag_290\n      dup5\n      tag_1\n      jump\t// in\n    tag_290:\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n      dup6\n      mstore\n      0x01\n      dup3\n      add\n      sload\n      and\n      0x20\n      dup6\n      add\n      mstore\n      tag_291\n      0x02\n      dup3\n      add\n      tag_29\n      jump\t// in\n    tag_291:\n      0x40\n      dup6\n      add\n      mstore\n      tag_292\n      0x03\n      dup3\n      add\n      tag_29\n      jump\t// in\n    tag_292:\n      0x60\n      dup6\n      add\n      mstore\n      tag_293\n      0x04\n      dup3\n      add\n      tag_29\n      jump\t// in\n    tag_293:\n      0x80\n      dup6\n      add\n      mstore\n      sub(shl(0x40, 0x01), 0x01)\n      0x05\n      dup3\n      add\n      sload\n      sub(shl(0x60, 0x01), 0x01)\n      dup2\n      and\n      0xa0\n      dup8\n      add\n      mstore\n      dup2\n      dup2\n      0x60\n      shr\n      and\n      0xc0\n      dup8\n      add\n      mstore\n      0xa0\n      shr\n      and\n      0xe0\n      dup6\n      add\n      mstore\n      add\n      sload\n      swap1\n      sub(shl(0x40, 0x01), 0x01)\n      dup3\n      and\n      0x0100\n      dup5\n      add\n      mstore\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"contracts/EtharisEscrow.sol\":1861:1869  72 hours */\n      dup3\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0x40\n        /* \"contracts/EtharisEscrow.sol\":1861:1869  72 hours */\n      shr\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      and\n      0x0120\n      dup5\n      add\n      mstore\n      sub(shl(0x40, 0x01), 0x01)\n      dup3\n      0x80\n      shr\n      and\n      0x0140\n      dup5\n      add\n      mstore\n      0x06\n      0xff\n      dup4\n      0xc0\n      shr\n      and\n      lt\n      iszero\n      tag_294\n      jumpi\n      pop\n      dup1\n      0xff\n      dup1\n      swap3\n      0xc0\n      shr\n      and\n      0x0160\n      dup5\n      add\n      mstore\n      0xc8\n      shr\n      and\n      iszero\n      iszero\n      0x0180\n      dup3\n      add\n      mstore\n      mload(0x40)\n      dup1\n      swap2\n      0x20\n      dup3\n      mstore\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      dup2\n      mload\n      and\n      0x20\n      dup4\n      add\n      mstore\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      0x20\n      dup3\n      add\n      mload\n      and\n      0x40\n      dup4\n      add\n      mstore\n      0x0180\n      tag_296\n      tag_297\n      0x40\n      dup5\n      add\n      mload\n      0x01a0\n      0x60\n      dup8\n      add\n      mstore\n      0x01c0\n      dup7\n      add\n      swap1\n      tag_9\n      jump\t// in\n    tag_297:\n      tag_298\n      0x60\n      dup6\n      add\n      mload\n      swap2\n      not(0x1f)\n      swap3\n      dup4\n      dup9\n      dup4\n      sub\n      add\n      0x80\n      dup10\n      add\n      mstore\n      tag_9\n      jump\t// in\n    tag_298:\n      swap1\n      0x80\n      dup6\n      add\n      mload\n      swap1\n      dup7\n      dup4\n      sub\n      add\n      0xa0\n      dup8\n      add\n      mstore\n      tag_9\n      jump\t// in\n    tag_296:\n      swap2\n      sub(shl(0x60, 0x01), 0x01)\n      0xa0\n      dup3\n      add\n      mload\n      and\n      0xc0\n      dup6\n      add\n      mstore\n      sub(shl(0x40, 0x01), 0x01)\n      0xc0\n      dup3\n      add\n      mload\n      and\n      0xe0\n      dup6\n      add\n      mstore\n      sub(shl(0x40, 0x01), 0x01)\n      0xe0\n      dup3\n      add\n      mload\n      and\n      0x0100\n      dup6\n      add\n      mstore\n      sub(shl(0x40, 0x01), 0x01)\n      0x0100\n      dup3\n      add\n      mload\n      and\n      0x0120\n      dup6\n      add\n      mstore\n      sub(shl(0x40, 0x01), 0x01)\n      0x0120\n      dup3\n      add\n      mload\n      and\n      0x0140\n      dup6\n      add\n      mstore\n      sub(shl(0x40, 0x01), 0x01)\n      0x0140\n      dup3\n      add\n      mload\n      and\n      0x0160\n      dup6\n      add\n      mstore\n      tag_299\n      0x0160\n      dup3\n      add\n      mload\n      dup4\n      dup7\n      add\n      swap1\n      tag_11\n      jump\t// in\n    tag_299:\n      add\n      mload\n      iszero\n      iszero\n      0x01a0\n      dup4\n      add\n      mstore\n      sub\n      swap1\n      return\n    tag_294:\n      shl(0xe0, 0x4e487b71)\n      dup2\n      mstore\n      mstore(0x04, 0x21)\n      0x24\n      swap1\n      revert\n    tag_79:\n      pop\n      jumpi(tag_105, callvalue)\n      jumpi(tag_105, slt(add(not(0x03), calldatasize), 0x40))\n      tag_304\n      tag_5\n      jump\t// in\n    tag_304:\n      calldataload(0x24)\n      dup1\n      iszero\n      iszero\n      dup2\n      sub\n      tag_129\n      jumpi\n        /* \"contracts/EtharisEscrow.sol\":19107:19173  _isBrand ? _brandDeals[_userAddress] : _creatorDeals[_userAddress] */\n      iszero\n      tag_307\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      and\n      dup2\n      mstore\n        /* \"contracts/EtharisEscrow.sol\":19118:19129  _brandDeals */\n      0x05\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/EtharisEscrow.sol\":19107:19173  _isBrand ? _brandDeals[_userAddress] : _creatorDeals[_userAddress] */\n    tag_309:\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      dup1\n      sload\n      tag_310\n      dup2\n      tag_30\n      jump\t// in\n    tag_310:\n      swap2\n      dup4\n      mstore\n      0x20\n      dup1\n      dup5\n      keccak256\n      swap4\n      swap1\n      dup1\n      dup5\n      add\n    tag_311:\n      dup4\n      dup4\n      lt\n      tag_312\n      jumpi\n      mload(0x40)\n      dup1\n      tag_119\n      dup8\n      dup3\n      tag_10\n      jump\t// in\n    tag_312:\n      0x01\n      dup3\n      dup2\n      swap3\n      tag_315\n      dup10\n      tag_29\n      jump\t// in\n    tag_315:\n      dup2\n      mstore\n      add\n      swap7\n      add\n      swap3\n      add\n      swap2\n      swap5\n      jump(tag_311)\n        /* \"contracts/EtharisEscrow.sol\":19107:19173  _isBrand ? _brandDeals[_userAddress] : _creatorDeals[_userAddress] */\n    tag_307:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      and\n      dup2\n      mstore\n        /* \"contracts/EtharisEscrow.sol\":19146:19159  _creatorDeals */\n      0x06\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/EtharisEscrow.sol\":19107:19173  _isBrand ? _brandDeals[_userAddress] : _creatorDeals[_userAddress] */\n      jump(tag_309)\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n    tag_77:\n      pop\n      jumpi(tag_105, callvalue)\n      jumpi(tag_105, slt(add(not(0x03), calldatasize), 0xe0))\n      sub(shl(0x40, 0x01), 0x01)\n      calldataload(0x04)\n      dup2\n      dup2\n      gt\n      tag_190\n      jumpi\n      tag_322\n      swap1\n      calldatasize\n      swap1\n      0x04\n      add\n      tag_3\n      jump\t// in\n    tag_322:\n      swap1\n      tag_323\n      tag_4\n      jump\t// in\n    tag_323:\n      swap1\n      calldataload(0x44)\n      swap2\n      sub(shl(0x60, 0x01), 0x01)\n      dup4\n      and\n      dup1\n      swap4\n      sub\n      tag_324\n      jumpi\n      calldataload(0x84)\n      0xff\n      dup2\n      and\n      dup1\n      swap2\n      sub\n      tag_198\n      jumpi\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2227:2330  modifier nonReentrant() {... */\n      tag_328\n      tag_23\n      jump\t// in\n    tag_328:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2484:2488  role */\n      tag_329\n      tag_12\n      jump\t// in\n    tag_329:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1204:1276  modifier whenNotPaused() {... */\n      tag_330\n      tag_21\n      jump\t// in\n    tag_330:\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      mload(0x40)\n      swap5\n      dup6\n      swap3\n      0xff\n        /* \"contracts/EtharisEscrow.sol\":4362:4384  _deals[_dealId].exists */\n      0x06\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      dup6\n      dup5\n      mload\n      0x20\n      swap8\n      dup2\n      tag_331\n      dup11\n      swap4\n      dup5\n      dup11\n      add\n      swap15\n      dup16\n      tag_8\n      jump\t// in\n    tag_331:\n      dup2\n      add\n      0x04\n      dup2\n      mstore\n      sub\n      add\n      swap1\n      keccak256\n        /* \"contracts/EtharisEscrow.sol\":4362:4384  _deals[_dealId].exists */\n      add\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      sload\n      0xc8\n      shr\n      and\n        /* \"contracts/EtharisEscrow.sol\":4361:4384  !_deals[_dealId].exists */\n      iszero\n        /* \"contracts/EtharisEscrow.sol\":4357:4407  if (!_deals[_dealId].exists) revert DealNotFound() */\n      tag_135\n      jumpi\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      mload(0x40)\n      swap3\n      dup3\n      mload\n      tag_334\n      dup2\n      dup7\n      dup12\n      tag_8\n      jump\t// in\n    tag_334:\n      dup5\n      add\n      0x04\n      dup2\n      mstore\n      dup5\n      dup7\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      swap7\n      dup8\n      swap4\n      sub\n      add\n      swap1\n      keccak256\n      sload\n      and\n      swap8\n      dup5\n      dup4\n      and\n        /* \"contracts/EtharisEscrow.sol\":4062:4093  _deals[_dealId].brand != _brand */\n      dup1\n      swap10\n      sub\n        /* \"contracts/EtharisEscrow.sol\":4058:4117  if (_deals[_dealId].brand != _brand) revert NotAuthorized() */\n      tag_138\n      jumpi\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0xff\n        /* \"contracts/EtharisEscrow.sol\":4362:4384  _deals[_dealId].exists */\n      0x06\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      mload(0x40)\n      dup9\n      dup2\n      dup9\n      mload\n      tag_337\n      dup2\n      dup4\n      dup10\n      tag_8\n      jump\t// in\n    tag_337:\n      dup2\n      add\n      0x04\n      dup2\n      mstore\n      sub\n      add\n      swap1\n      keccak256\n        /* \"contracts/EtharisEscrow.sol\":4510:4532  _deals[_dealId].status */\n      add\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      sload\n      0xc0\n      shr\n      and\n        /* \"contracts/EtharisEscrow.sol\":4362:4384  _deals[_dealId].exists */\n      0x06\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      dup2\n      lt\n      iszero\n      tag_338\n      jumpi\n        /* \"contracts/EtharisEscrow.sol\":4506:4571  if (_deals[_dealId].status != _status) revert InvalidDealStatus() */\n      tag_143\n      jumpi\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      dup4\n      mload\n        /* \"contracts/EtharisEscrow.sol\":7636:7662  bytes(_dealId).length == 0 */\n      iszero\n        /* \"contracts/EtharisEscrow.sol\":7632:7686  if (bytes(_dealId).length == 0) revert InvalidDealID() */\n      tag_342\n      jumpi\n        /* \"contracts/EtharisEscrow.sol\":7700:7712  _amount == 0 */\n      dup8\n      iszero\n        /* \"contracts/EtharisEscrow.sol\":7696:7736  if (_amount == 0) revert InvalidAmount() */\n      tag_344\n      jumpi\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      tag_346\n      dup7\n        /* \"contracts/EtharisEscrow.sol\":7797:7810  deal.fundedAt */\n      0x05\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      swap3\n      mload(0x40)\n      dup1\n      swap4\n      dup2\n      swap3\n      dup10\n      mload\n      swap3\n      dup4\n      swap2\n      tag_8\n      jump\t// in\n    tag_346:\n      dup2\n      add\n      0x04\n      dup2\n      mstore\n      sub\n      add\n      swap1\n      keccak256\n        /* \"contracts/EtharisEscrow.sol\":7797:7810  deal.fundedAt */\n      add\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      swap2\n      dup7\n      dup4\n      sload\n      0xa0\n      shr\n      and\n        /* \"contracts/EtharisEscrow.sol\":7793:7843  if (deal.fundedAt != 0) revert DealAlreadyFunded() */\n      tag_347\n      jumpi\n        /* \"contracts/EtharisEscrow.sol\":7956:7966  _idrxToken */\n      immutable(\"0x92a99c2e1e73cfa8af214a27ee636aa00abb49bffb5065f213fd4435430466da\")\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      swap5\n      dup6\n      and\n      swap1\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n        /* \"contracts/EtharisEscrow.sol\":8000:8030  token.balanceOf(_brandAddress) */\n      dup2\n      mstore\n      dup11\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0x04\n        /* \"contracts/EtharisEscrow.sol\":8000:8030  token.balanceOf(_brandAddress) */\n      dup3\n      add\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      mstore\n        /* \"contracts/EtharisEscrow.sol\":8000:8030  token.balanceOf(_brandAddress) */\n      dup8\n      dup2\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0x24\n        /* \"contracts/EtharisEscrow.sol\":8000:8030  token.balanceOf(_brandAddress) */\n      dup2\n      dup7\n      gas\n      staticcall\n      dup1\n      iszero\n      tag_349\n      jumpi\n      dup11\n      swap2\n      dup14\n      swap2\n      tag_351\n      jumpi\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n    tag_352:\n        /* \"contracts/EtharisEscrow.sol\":8044:8066  brandBalance < _amount */\n      pop\n      lt\n        /* \"contracts/EtharisEscrow.sol\":8040:8096  if (brandBalance < _amount) revert InsufficientBalance() */\n      tag_353\n      jumpi\n        /* \"contracts/EtharisEscrow.sol\":8173:8180  _v != 0 */\n      dup7\n      swap2\n      dup4\n      iszero\n      dup1\n      iszero\n        /* \"contracts/EtharisEscrow.sol\":8173:8200  _v != 0 || _r != bytes32(0) */\n      swap1\n      tag_355\n      jumpi\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n    tag_356:\n        /* \"contracts/EtharisEscrow.sol\":8173:8220  _v != 0 || _r != bytes32(0) || _s != bytes32(0) */\n      dup1\n      iszero\n      tag_357\n      jumpi\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n    tag_358:\n        /* \"contracts/EtharisEscrow.sol\":8169:8446  if (_v != 0 || _r != bytes32(0) || _s != bytes32(0)) {... */\n      tag_359\n      jumpi\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n    tag_360:\n      mload(0x40)\n      shl(0xe1, 0x6eb1769f)\n        /* \"contracts/EtharisEscrow.sol\":8476:8518  token.allowance(_brandAddress, cachedThis) */\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      swap1\n      swap3\n      and\n      0x04\n        /* \"contracts/EtharisEscrow.sol\":8476:8518  token.allowance(_brandAddress, cachedThis) */\n      dup4\n      add\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      mstore\n        /* \"contracts/EtharisEscrow.sol\":7926:7930  this */\n      address\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0x24\n      dup4\n      add\n      mstore\n      swap1\n      swap3\n      pop\n      dup3\n      swap1\n      dup2\n      dup1\n      0x44\n      dup2\n      add\n        /* \"contracts/EtharisEscrow.sol\":8476:8518  token.allowance(_brandAddress, cachedThis) */\n    tag_361:\n      sub\n      swap2\n      gas\n      staticcall\n      dup1\n      iszero\n      tag_362\n      jumpi\n      dup8\n      swap2\n      dup11\n      swap2\n      tag_364\n      jumpi\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n    tag_365:\n        /* \"contracts/EtharisEscrow.sol\":8532:8551  allowance < _amount */\n      pop\n      lt\n        /* \"contracts/EtharisEscrow.sol\":8528:8583  if (allowance < _amount) revert InsufficientAllowance() */\n      tag_366\n      jumpi\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      mload(0x40)\n      shl(0xe0, 0x23b872dd)\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1745:1798  abi.encodeCall(token.transferFrom, (from, to, value)) */\n      dup6\n      dup3\n      add\n      mstore\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0x24\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1745:1798  abi.encodeCall(token.transferFrom, (from, to, value)) */\n      dup2\n      add\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      dup9\n      swap1\n      mstore\n        /* \"contracts/EtharisEscrow.sol\":7926:7930  this */\n      address\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      dup1\n      dup3\n      add\n      dup9\n      swap1\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1745:1798  abi.encodeCall(token.transferFrom, (from, to, value)) */\n      dup2\n      mstore\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      swap5\n      0xa0\n      dup7\n      add\n      swap1\n      dup2\n      gt\n      dup7\n      dup3\n      lt\n      or\n      tag_368\n      jumpi\n        /* \"contracts/EtharisEscrow.sol\":8718:8761  DealFunded(_dealId, _brandAddress, _amount) */\n      0x2c138f65913cd3b9ca6f36e4b59e26830a033a978ca69f935781972e6df1f61d\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      swap6\n        /* \"contracts/EtharisEscrow.sol\":8718:8761  DealFunded(_dealId, _brandAddress, _amount) */\n      tag_370\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      swap5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1745:1798  abi.encodeCall(token.transferFrom, (from, to, value)) */\n      tag_371\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      swap3\n      0x40\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1745:1798  abi.encodeCall(token.transferFrom, (from, to, value)) */\n      tag_24\n      jump\t// in\n    tag_371:\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      dup1\n      sload\n      not(shl(0xa0, 0xffffffffffffffff))\n      and\n        /* \"contracts/EtharisEscrow.sol\":8686:8701  block.timestamp */\n      timestamp\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0xa0\n      shl\n      shl(0xa0, 0xffffffffffffffff)\n      and\n      or\n      swap1\n      sstore\n        /* \"contracts/EtharisEscrow.sol\":8718:8761  DealFunded(_dealId, _brandAddress, _amount) */\n      tag_20\n      jump\t// in\n    tag_370:\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      swap3\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n        /* \"contracts/EtharisEscrow.sol\":8718:8761  DealFunded(_dealId, _brandAddress, _amount) */\n      log3\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      dup2\n      sstore\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      dup1\n      return\n    tag_368:\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x41)\n      revert(0x00, 0x24)\n        /* \"contracts/EtharisEscrow.sol\":8528:8583  if (allowance < _amount) revert InsufficientAllowance() */\n    tag_366:\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      mload(0x40)\n      shl(0xe0, 0x13be252b)\n        /* \"contracts/EtharisEscrow.sol\":8560:8583  InsufficientAllowance() */\n      dup2\n      mstore\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0x04\n      swap1\n        /* \"contracts/EtharisEscrow.sol\":8560:8583  InsufficientAllowance() */\n      revert\n        /* \"contracts/EtharisEscrow.sol\":8476:8518  token.allowance(_brandAddress, cachedThis) */\n    tag_364:\n      dup1\n      swap3\n      pop\n      dup7\n      dup1\n      swap3\n      pop\n      returndatasize\n      dup4\n      gt\n      tag_372\n      jumpi\n    tag_373:\n      tag_374\n      dup2\n      dup4\n      tag_2\n      jump\t// in\n    tag_374:\n      dup2\n      add\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      sub\n      slt\n      tag_129\n      jumpi\n      dup7\n      swap1\n      mload\n        /* \"contracts/EtharisEscrow.sol\":8476:8518  token.allowance(_brandAddress, cachedThis) */\n      0x00\n      jump(tag_365)\n    tag_372:\n      pop\n      returndatasize\n      jump(tag_373)\n    tag_362:\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      mload(0x40)\n      returndatasize\n      dup12\n      dup3\n      returndatacopy\n      returndatasize\n      swap1\n      revert\n        /* \"contracts/EtharisEscrow.sol\":8169:8446  if (_v != 0 || _r != bytes32(0) || _s != bytes32(0)) {... */\n    tag_359:\n        /* \"contracts/EtharisEscrow.sol\":21258:21312  token.permit(owner, spender, value, deadline, v, r, s) */\n      dup1\n      swap3\n      pop\n      swap3\n      swap1\n      swap3\n      extcodesize\n      iszero\n      tag_377\n      jumpi\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      mload(0x40)\n      swap1\n      shl(0xe0, 0xd505accf)\n        /* \"contracts/EtharisEscrow.sol\":21258:21312  token.permit(owner, spender, value, deadline, v, r, s) */\n      dup3\n      mstore\n      dup11\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0x04\n        /* \"contracts/EtharisEscrow.sol\":21258:21312  token.permit(owner, spender, value, deadline, v, r, s) */\n      dup4\n      add\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      mstore\n        /* \"contracts/EtharisEscrow.sol\":7926:7930  this */\n      address\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0x24\n      dup4\n      add\n      mstore\n      dup10\n      0x44\n      dup4\n      add\n      mstore\n      calldataload(0x64)\n      0x64\n      dup4\n      add\n      mstore\n      0x84\n      dup3\n      add\n      mstore\n      calldataload(0xa4)\n      0xa4\n      dup3\n      add\n      mstore\n      calldataload(0xc4)\n      0xc4\n      dup3\n      add\n      mstore\n        /* \"contracts/EtharisEscrow.sol\":21258:21312  token.permit(owner, spender, value, deadline, v, r, s) */\n      dup11\n      dup2\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0xe4\n        /* \"contracts/EtharisEscrow.sol\":21258:21312  token.permit(owner, spender, value, deadline, v, r, s) */\n      dup2\n      dup4\n      dup7\n      gas\n      call\n      swap1\n      dup2\n      tag_379\n      jumpi\n        /* \"contracts/EtharisEscrow.sol\":8169:8446  if (_v != 0 || _r != bytes32(0) || _s != bytes32(0)) {... */\n    tag_380:\n      pop\n        /* \"contracts/EtharisEscrow.sol\":21254:21567  try token.permit(owner, spender, value, deadline, v, r, s) {... */\n      tag_381\n      jumpi\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      mload(0x40)\n      shl(0xe0, 0xb78cb0dd)\n        /* \"contracts/EtharisEscrow.sol\":21542:21556  PermitFailed() */\n      dup2\n      mstore\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0x04\n      swap1\n        /* \"contracts/EtharisEscrow.sol\":21542:21556  PermitFailed() */\n      revert\n        /* \"contracts/EtharisEscrow.sol\":21254:21567  try token.permit(owner, spender, value, deadline, v, r, s) {... */\n    tag_381:\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      mload(0x40)\n      shl(0xe1, 0x6eb1769f)\n        /* \"contracts/EtharisEscrow.sol\":21400:21436  _idrxToken.allowance(owner, spender) */\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      dup4\n      and\n      0x04\n        /* \"contracts/EtharisEscrow.sol\":21400:21436  _idrxToken.allowance(owner, spender) */\n      dup3\n      add\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      mstore\n        /* \"contracts/EtharisEscrow.sol\":7926:7930  this */\n      address\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0x24\n      dup3\n      add\n      mstore\n        /* \"contracts/EtharisEscrow.sol\":7926:7930  this */\n      dup7\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      dup2\n      0x44\n      dup2\n        /* \"contracts/EtharisEscrow.sol\":21400:21436  _idrxToken.allowance(owner, spender) */\n      dup6\n      gas\n      staticcall\n      dup1\n      iszero\n      tag_384\n      jumpi\n      dup10\n      swap2\n      dup13\n      swap2\n      tag_386\n      jumpi\n        /* \"contracts/EtharisEscrow.sol\":21254:21567  try token.permit(owner, spender, value, deadline, v, r, s) {... */\n    tag_387:\n        /* \"contracts/EtharisEscrow.sol\":21454:21471  allowance < value */\n      pop\n      lt\n        /* \"contracts/EtharisEscrow.sol\":21450:21503  if (allowance < value) revert InsufficientAllowance() */\n      tag_366\n      jumpi\n        /* \"contracts/EtharisEscrow.sol\":8476:8518  token.allowance(_brandAddress, cachedThis) */\n      tag_361\n        /* \"contracts/EtharisEscrow.sol\":21254:21567  try token.permit(owner, spender, value, deadline, v, r, s) {... */\n      swap2\n      dup7\n      swap2\n        /* \"contracts/EtharisEscrow.sol\":8169:8446  if (_v != 0 || _r != bytes32(0) || _s != bytes32(0)) {... */\n      jump(tag_360)\n        /* \"contracts/EtharisEscrow.sol\":21400:21436  _idrxToken.allowance(owner, spender) */\n    tag_386:\n      dup1\n      swap3\n      pop\n      dup9\n      dup1\n      swap3\n      pop\n      returndatasize\n      dup4\n      gt\n      tag_390\n      jumpi\n    tag_391:\n      tag_392\n      dup2\n      dup4\n      tag_2\n      jump\t// in\n    tag_392:\n      dup2\n      add\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      sub\n      slt\n      tag_129\n      jumpi\n      dup9\n      swap1\n      mload\n        /* \"contracts/EtharisEscrow.sol\":21400:21436  _idrxToken.allowance(owner, spender) */\n      0x00\n      jump(tag_387)\n    tag_390:\n      pop\n      returndatasize\n      jump(tag_391)\n    tag_384:\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      mload(0x40)\n      returndatasize\n      dup14\n      dup3\n      returndatacopy\n      returndatasize\n      swap1\n      revert\n        /* \"contracts/EtharisEscrow.sol\":21258:21312  token.permit(owner, spender, value, deadline, v, r, s) */\n    tag_379:\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      dup9\n      dup2\n      swap13\n      swap3\n      swap13\n      gt\n      tag_395\n      jumpi\n      0x40\n      mstore\n        /* \"contracts/EtharisEscrow.sol\":21258:21312  token.permit(owner, spender, value, deadline, v, r, s) */\n      swap10\n      0x00\n      jump(tag_380)\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n    tag_395:\n      shl(0xe0, 0x4e487b71)\n      dup3\n      mstore\n      mstore(0x04, 0x41)\n      0x24\n      dup3\n      revert\n        /* \"contracts/EtharisEscrow.sol\":21258:21312  token.permit(owner, spender, value, deadline, v, r, s) */\n    tag_377:\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      dup11\n      dup1\n      revert\n        /* \"contracts/EtharisEscrow.sol\":8173:8220  _v != 0 || _r != bytes32(0) || _s != bytes32(0) */\n    tag_357:\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      pop\n      calldataload(0xc4)\n        /* \"contracts/EtharisEscrow.sol\":8204:8220  _s != bytes32(0) */\n      iszero\n      iszero\n        /* \"contracts/EtharisEscrow.sol\":8173:8220  _v != 0 || _r != bytes32(0) || _s != bytes32(0) */\n      jump(tag_358)\n        /* \"contracts/EtharisEscrow.sol\":8173:8200  _v != 0 || _r != bytes32(0) */\n    tag_355:\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      pop\n      calldataload(0xa4)\n        /* \"contracts/EtharisEscrow.sol\":8184:8200  _r != bytes32(0) */\n      iszero\n      iszero\n        /* \"contracts/EtharisEscrow.sol\":8173:8200  _v != 0 || _r != bytes32(0) */\n      jump(tag_356)\n        /* \"contracts/EtharisEscrow.sol\":8040:8096  if (brandBalance < _amount) revert InsufficientBalance() */\n    tag_353:\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      mload(0x40)\n      shl(0xe3, 0x1e9acf17)\n        /* \"contracts/EtharisEscrow.sol\":8075:8096  InsufficientBalance() */\n      dup2\n      mstore\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0x04\n      swap1\n        /* \"contracts/EtharisEscrow.sol\":8075:8096  InsufficientBalance() */\n      revert\n        /* \"contracts/EtharisEscrow.sol\":8000:8030  token.balanceOf(_brandAddress) */\n    tag_351:\n      dup1\n      swap3\n      pop\n      dup10\n      dup1\n      swap3\n      pop\n      returndatasize\n      dup4\n      gt\n      tag_397\n      jumpi\n    tag_398:\n      tag_399\n      dup2\n      dup4\n      tag_2\n      jump\t// in\n    tag_399:\n      dup2\n      add\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      sub\n      slt\n      tag_400\n      jumpi\n      dup10\n      swap1\n      mload\n        /* \"contracts/EtharisEscrow.sol\":8000:8030  token.balanceOf(_brandAddress) */\n      0x00\n      jump(tag_352)\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n    tag_400:\n      dup12\n      dup1\n      revert\n        /* \"contracts/EtharisEscrow.sol\":8000:8030  token.balanceOf(_brandAddress) */\n    tag_397:\n      pop\n      returndatasize\n      jump(tag_398)\n    tag_349:\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      mload(0x40)\n      returndatasize\n      dup15\n      dup3\n      returndatacopy\n      returndatasize\n      swap1\n      revert\n        /* \"contracts/EtharisEscrow.sol\":7793:7843  if (deal.fundedAt != 0) revert DealAlreadyFunded() */\n    tag_347:\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      mload(0x40)\n      shl(0xe3, 0x1924fceb)\n        /* \"contracts/EtharisEscrow.sol\":7824:7843  DealAlreadyFunded() */\n      dup2\n      mstore\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0x04\n      swap1\n        /* \"contracts/EtharisEscrow.sol\":7824:7843  DealAlreadyFunded() */\n      revert\n        /* \"contracts/EtharisEscrow.sol\":7696:7736  if (_amount == 0) revert InvalidAmount() */\n    tag_344:\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      mload(0x40)\n      shl(0xe1, 0x162908e3)\n        /* \"contracts/EtharisEscrow.sol\":7721:7736  InvalidAmount() */\n      dup2\n      mstore\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0x04\n      swap1\n        /* \"contracts/EtharisEscrow.sol\":7721:7736  InvalidAmount() */\n      revert\n        /* \"contracts/EtharisEscrow.sol\":7632:7686  if (bytes(_dealId).length == 0) revert InvalidDealID() */\n    tag_342:\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      mload(0x40)\n      shl(0xe0, 0x5f0be7af)\n        /* \"contracts/EtharisEscrow.sol\":7671:7686  InvalidDealID() */\n      dup2\n      mstore\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0x04\n      swap1\n        /* \"contracts/EtharisEscrow.sol\":7671:7686  InvalidDealID() */\n      revert\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n    tag_338:\n      shl(0xe0, 0x4e487b71)\n      dup12\n      mstore\n      mstore(0x04, 0x21)\n      0x24\n      dup12\n      revert\n    tag_324:\n      dup5\n      dup1\n      revert\n    tag_75:\n      pop\n      jumpi(tag_105, callvalue)\n      tag_404\n      calldatasize\n      tag_6\n      jump\t// in\n    tag_404:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2484:2488  role */\n      swap1\n      tag_405\n      tag_12\n      jump\t// in\n    tag_405:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1204:1276  modifier whenNotPaused() {... */\n      tag_406\n      tag_21\n      jump\t// in\n    tag_406:\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      mload(0x40)\n      0xff\n        /* \"contracts/EtharisEscrow.sol\":4362:4384  _deals[_dealId].exists */\n      0x06\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      dup4\n      mload\n      swap3\n      0x20\n      dup2\n      dup2\n      dup8\n      add\n      swap6\n      tag_407\n      dup2\n      dup4\n      dup10\n      tag_8\n      jump\t// in\n    tag_407:\n      dup2\n      add\n      0x04\n      dup2\n      mstore\n      sub\n      add\n      swap1\n      keccak256\n        /* \"contracts/EtharisEscrow.sol\":4362:4384  _deals[_dealId].exists */\n      add\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      sload\n      0xc8\n      shr\n      and\n        /* \"contracts/EtharisEscrow.sol\":4361:4384  !_deals[_dealId].exists */\n      iszero\n        /* \"contracts/EtharisEscrow.sol\":4357:4407  if (!_deals[_dealId].exists) revert DealNotFound() */\n      tag_135\n      jumpi\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      mload(0x40)\n      dup3\n      mload\n      tag_410\n      dup2\n      dup4\n      dup6\n      tag_8\n      jump\t// in\n    tag_410:\n      0x04\n      swap1\n      dup3\n      add\n      swap1\n      dup2\n      mstore\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      keccak256\n      0x01\n        /* \"contracts/EtharisEscrow.sol\":4221:4244  _deals[_dealId].creator */\n      add\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap4\n      dup5\n      and\n      swap4\n      and\n        /* \"contracts/EtharisEscrow.sol\":4221:4256  _deals[_dealId].creator != _creator */\n      dup4\n      swap1\n      sub\n        /* \"contracts/EtharisEscrow.sol\":4217:4280  if (_deals[_dealId].creator != _creator) revert NotAuthorized() */\n      tag_138\n      jumpi\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0xff\n        /* \"contracts/EtharisEscrow.sol\":4362:4384  _deals[_dealId].exists */\n      0x06\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      mload(0x40)\n      0x20\n      dup2\n      dup7\n      mload\n      tag_413\n      dup2\n      dup4\n      dup10\n      tag_8\n      jump\t// in\n    tag_413:\n      dup2\n      add\n      0x04\n      dup2\n      mstore\n      sub\n      add\n      swap1\n      keccak256\n        /* \"contracts/EtharisEscrow.sol\":4510:4532  _deals[_dealId].status */\n      add\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      sload\n      0xc0\n      shr\n      and\n        /* \"contracts/EtharisEscrow.sol\":4362:4384  _deals[_dealId].exists */\n      0x06\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      dup2\n      lt\n      iszero\n      tag_414\n      jumpi\n        /* \"contracts/EtharisEscrow.sol\":4506:4571  if (_deals[_dealId].status != _status) revert InvalidDealStatus() */\n      tag_143\n      jumpi\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0x20\n      tag_418\n      swap2\n      mload(0x40)\n      dup1\n      swap4\n      dup2\n      swap3\n      dup7\n      mload\n      swap3\n      dup4\n      swap2\n      tag_8\n      jump\t// in\n    tag_418:\n      dup2\n      add\n      0x04\n      dup2\n      mstore\n      sub\n      add\n      swap1\n      keccak256\n        /* \"contracts/EtharisEscrow.sol\":9200:9213  deal.fundedAt */\n      swap1\n      sub(shl(0x40, 0x01), 0x01)\n      0x05\n      dup4\n      add\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      sload\n      0xa0\n      shr\n      and\n        /* \"contracts/EtharisEscrow.sol\":9200:9218  deal.fundedAt == 0 */\n      iszero\n        /* \"contracts/EtharisEscrow.sol\":9196:9242  if (deal.fundedAt == 0) revert DealNotFunded() */\n      tag_419\n      jumpi\n        /* \"contracts/EtharisEscrow.sol\":4362:4384  _deals[_dealId].exists */\n      0x06\n        /* \"contracts/EtharisEscrow.sol\":9253:9264  deal.status */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      dup1\n      sload\n      not(shl(0xc0, 0xff))\n      and\n      shl(0xc0, 0x01)\n      or\n      swap1\n      sstore\n        /* \"contracts/EtharisEscrow.sol\":9304:9342  DealApproved(_dealId, _creatorAddress) */\n      tag_421\n      swap1\n      tag_20\n      jump\t// in\n    tag_421:\n      0xcaec7345d2eb04a42197ac2a2cd7cd74a00b2991b69bb53e23465d4092fdfb\n      dup4\n      dup1\n      log3\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      dup1\n      return\n        /* \"contracts/EtharisEscrow.sol\":9196:9242  if (deal.fundedAt == 0) revert DealNotFunded() */\n    tag_419:\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      mload(0x40)\n      shl(0xe1, 0x47510bbd)\n        /* \"contracts/EtharisEscrow.sol\":9227:9242  DealNotFunded() */\n      dup2\n      mstore\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0x04\n      swap1\n        /* \"contracts/EtharisEscrow.sol\":9227:9242  DealNotFunded() */\n      revert\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n    tag_414:\n      shl(0xe0, 0x4e487b71)\n      dup6\n      mstore\n      mstore(0x04, 0x21)\n      0x24\n      dup6\n      revert\n    tag_73:\n      pop\n      jumpi(tag_105, callvalue)\n      jumpi(tag_105, slt(add(not(0x03), calldatasize), 0x40))\n      tag_426\n      tag_5\n      jump\t// in\n    tag_426:\n      calldataload(0x24)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2484:2488  role */\n      tag_427\n      tag_12\n      jump\t// in\n    tag_427:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      swap2\n      dup3\n      and\n      swap2\n        /* \"contracts/EtharisEscrow.sol\":20675:20685  _idrxToken */\n      immutable(\"0x92a99c2e1e73cfa8af214a27ee636aa00abb49bffb5065f213fd4435430466da\")\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      and\n        /* \"contracts/EtharisEscrow.sol\":20657:20686  _token == address(_idrxToken) */\n      dup3\n      eq\n        /* \"contracts/EtharisEscrow.sol\":20653:20715  if (_token == address(_idrxToken)) revert CannotWithdrawIDRX() */\n      tag_428\n      jumpi\n        /* \"contracts/EtharisEscrow.sol\":20729:20741  _amount == 0 */\n      dup1\n      iszero\n        /* \"contracts/EtharisEscrow.sol\":20725:20765  if (_amount == 0) revert InvalidAmount() */\n      tag_344\n      jumpi\n        /* \"contracts/EtharisEscrow.sol\":20815:20822  _amount */\n      tag_107\n        /* \"contracts/EtharisEscrow.sol\":20803:20813  msg.sender */\n      swap2\n      caller\n        /* \"contracts/EtharisEscrow.sol\":20815:20822  _amount */\n      swap1\n      tag_28\n      jump\t// in\n        /* \"contracts/EtharisEscrow.sol\":20653:20715  if (_token == address(_idrxToken)) revert CannotWithdrawIDRX() */\n    tag_428:\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      mload(0x40)\n      shl(0xe3, 0x18ba2fc1)\n        /* \"contracts/EtharisEscrow.sol\":20695:20715  CannotWithdrawIDRX() */\n      dup2\n      mstore\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0x04\n      swap1\n        /* \"contracts/EtharisEscrow.sol\":20695:20715  CannotWithdrawIDRX() */\n      revert\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n    tag_71:\n      pop\n      jumpi(tag_105, callvalue)\n      jumpi(tag_105, slt(add(not(0x03), calldatasize), 0x40))\n      0xff\n      0x40\n      0x20\n      swap3\n      tag_437\n      tag_4\n      jump\t// in\n    tag_437:\n      calldataload(0x04)\n      dup3\n      mstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2936  _roles */\n      0x02\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      dup6\n      mstore\n      dup3\n      dup3\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap2\n      and\n      dup3\n      mstore\n      dup5\n      mstore\n      keccak256\n      sload\n      mload(0x40)\n      swap2\n      and\n      iszero\n      iszero\n      dup2\n      mstore\n      return\n    tag_69:\n      pop\n      jumpi(tag_105, callvalue)\n      dup1\n      add(calldatasize, not(0x03))\n      slt\n      tag_105\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2484:2488  role */\n      tag_442\n      tag_12\n      jump\t// in\n    tag_442:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1204:1276  modifier whenNotPaused() {... */\n      tag_443\n      tag_21\n      jump\t// in\n    tag_443:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2255:2259  true */\n      0x01\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      not(0xff)\n      dup2\n      sload\n      and\n      or\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2255:2259  true */\n      0x01\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      sstore\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2274:2294  Paused(_msgSender()) */\n      0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0x20\n      mload(0x40)\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2274:2294  Paused(_msgSender()) */\n      log1\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      dup1\n      return\n    tag_67:\n      pop\n      jumpi(tag_105, callvalue)\n      jumpi(tag_105, slt(add(not(0x03), calldatasize), 0x20))\n      sub(shl(0x40, 0x01), 0x01)\n      calldataload(0x04)\n      dup2\n      dup2\n      gt\n      tag_190\n      jumpi\n      tag_450\n      0x20\n      tag_175\n        /* \"contracts/EtharisEscrow.sol\":19350:19361  deal.exists */\n      0x06\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      swap4\n      calldatasize\n      swap1\n      0x04\n      add\n      tag_3\n      jump\t// in\n    tag_450:\n      dup2\n      add\n      0x04\n      dup2\n      mstore\n      sub\n      add\n      swap1\n      keccak256\n        /* \"contracts/EtharisEscrow.sol\":19350:19361  deal.exists */\n      add\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      sload\n      swap1\n      0xff\n      dup3\n      0xc8\n      shr\n      and\n        /* \"contracts/EtharisEscrow.sol\":19350:19421  deal.exists &&... */\n      swap2\n      dup3\n      tag_452\n      jumpi\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n    tag_453:\n      0x20\n        /* \"contracts/EtharisEscrow.sol\":19350:19475  deal.exists &&... */\n      swap4\n      pop\n      dup3\n      tag_454\n      jumpi\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n    tag_455:\n      pop\n      pop\n      mload(0x40)\n      swap1\n      iszero\n      iszero\n      dup2\n      mstore\n      return\n        /* \"contracts/EtharisEscrow.sol\":19350:19475  deal.exists &&... */\n    tag_454:\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0x40\n        /* \"contracts/EtharisEscrow.sol\":1861:1869  72 hours */\n      shr\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      and\n        /* \"contracts/EtharisEscrow.sol\":19437:19452  block.timestamp */\n      timestamp\n        /* \"contracts/EtharisEscrow.sol\":19437:19475  block.timestamp >= deal.reviewDeadline */\n      lt\n      iszero\n      swap1\n      pop\n        /* \"contracts/EtharisEscrow.sol\":19350:19475  deal.exists &&... */\n      0x00\n      dup1\n      jump(tag_455)\n        /* \"contracts/EtharisEscrow.sol\":19350:19421  deal.exists &&... */\n    tag_452:\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      swap2\n      pop\n      0xff\n      dup3\n      0xc0\n      shr\n      and\n      swap3\n        /* \"contracts/EtharisEscrow.sol\":19350:19361  deal.exists */\n      0x06\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      dup5\n      lt\n      iszero\n      tag_294\n      jumpi\n        /* \"contracts/EtharisEscrow.sol\":19377:19421  deal.status == ContractStatus.PENDING_REVIEW */\n      pop\n        /* \"contracts/EtharisEscrow.sol\":19392:19421  ContractStatus.PENDING_REVIEW */\n      0x02\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0x20\n        /* \"contracts/EtharisEscrow.sol\":19377:19421  deal.status == ContractStatus.PENDING_REVIEW */\n      swap4\n      eq\n        /* \"contracts/EtharisEscrow.sol\":19350:19421  deal.exists &&... */\n      swap2\n      jump(tag_453)\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n    tag_65:\n      pop\n      jumpi(tag_105, callvalue)\n      dup1\n      add(calldatasize, not(0x03))\n      slt\n      tag_105\n      jumpi\n      0x20\n      0xff\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1685:1692  _paused */\n      0x01\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      sload\n      and\n      mload(0x40)\n      swap1\n      iszero\n      iszero\n      dup2\n      mstore\n      return\n    tag_63:\n      pop\n      jumpi(tag_105, callvalue)\n      tag_464\n      calldatasize\n      tag_7\n      jump\t// in\n    tag_464:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2484:2488  role */\n      tag_465\n      swap3\n      swap2\n      swap3\n      tag_12\n      jump\t// in\n    tag_465:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1204:1276  modifier whenNotPaused() {... */\n      tag_466\n      tag_21\n      jump\t// in\n    tag_466:\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      mload(0x40)\n      dup3\n      mload\n      0xff\n        /* \"contracts/EtharisEscrow.sol\":4362:4384  _deals[_dealId].exists */\n      0x06\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0x20\n      swap4\n      dup5\n      dup2\n      dup2\n      dup10\n      add\n      swap6\n      tag_467\n      dup2\n      dup4\n      dup10\n      tag_8\n      jump\t// in\n    tag_467:\n      dup2\n      add\n      0x04\n      dup2\n      mstore\n      sub\n      add\n      swap1\n      keccak256\n        /* \"contracts/EtharisEscrow.sol\":4362:4384  _deals[_dealId].exists */\n      add\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      sload\n      0xc8\n      shr\n      and\n        /* \"contracts/EtharisEscrow.sol\":4361:4384  !_deals[_dealId].exists */\n      iszero\n        /* \"contracts/EtharisEscrow.sol\":4357:4407  if (!_deals[_dealId].exists) revert DealNotFound() */\n      tag_135\n      jumpi\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      mload(0x40)\n      dup5\n      mload\n      tag_470\n      dup2\n      dup4\n      dup6\n      tag_8\n      jump\t// in\n    tag_470:\n      0x04\n      swap1\n      dup3\n      add\n      swap1\n      dup2\n      mstore\n      dup2\n      swap1\n      sub\n      dup4\n      add\n      swap1\n      keccak256\n      0x01\n        /* \"contracts/EtharisEscrow.sol\":4221:4244  _deals[_dealId].creator */\n      add\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap6\n      dup7\n      and\n      swap6\n      and\n        /* \"contracts/EtharisEscrow.sol\":4221:4256  _deals[_dealId].creator != _creator */\n      dup6\n      swap1\n      sub\n        /* \"contracts/EtharisEscrow.sol\":4217:4280  if (_deals[_dealId].creator != _creator) revert NotAuthorized() */\n      tag_138\n      jumpi\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0xff\n        /* \"contracts/EtharisEscrow.sol\":4362:4384  _deals[_dealId].exists */\n      0x06\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      mload(0x40)\n      dup5\n      dup2\n      dup9\n      mload\n      tag_473\n      dup2\n      dup4\n      dup10\n      tag_8\n      jump\t// in\n    tag_473:\n      dup2\n      add\n      0x04\n      dup2\n      mstore\n      sub\n      add\n      swap1\n      keccak256\n        /* \"contracts/EtharisEscrow.sol\":4510:4532  _deals[_dealId].status */\n      add\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      sload\n      0xc0\n      shr\n      and\n        /* \"contracts/EtharisEscrow.sol\":4362:4384  _deals[_dealId].exists */\n      0x06\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      dup2\n      lt\n      iszero\n      tag_141\n      jumpi\n      0x01\n        /* \"contracts/EtharisEscrow.sol\":4510:4543  _deals[_dealId].status != _status */\n      sub\n        /* \"contracts/EtharisEscrow.sol\":4506:4571  if (_deals[_dealId].status != _status) revert InvalidDealStatus() */\n      tag_143\n      jumpi\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      dup2\n      tag_478\n      swap2\n      mload(0x40)\n      dup1\n      swap4\n      dup2\n      swap3\n      dup9\n      mload\n      swap3\n      dup4\n      swap2\n      tag_8\n      jump\t// in\n    tag_478:\n      dup2\n      add\n      0x04\n      dup2\n      mstore\n      sub\n      add\n      swap1\n      keccak256\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"contracts/EtharisEscrow.sol\":9833:9846  deal.deadline */\n      swap1\n      dup2\n      0x05\n      dup3\n      add\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      sload\n      0x60\n      shr\n      and\n        /* \"contracts/EtharisEscrow.sol\":9815:9830  block.timestamp */\n      timestamp\n        /* \"contracts/EtharisEscrow.sol\":9815:9846  block.timestamp > deal.deadline */\n      gt\n        /* \"contracts/EtharisEscrow.sol\":9811:9881  if (block.timestamp > deal.deadline) revert SubmissionDeadlinePassed() */\n      tag_479\n      jumpi\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      dup4\n      mload\n        /* \"contracts/EtharisEscrow.sol\":9895:9925  bytes(_contentUrl).length == 0 */\n      iszero\n        /* \"contracts/EtharisEscrow.sol\":9891:9954  if (bytes(_contentUrl).length == 0) revert ContentUrlRequired() */\n      tag_481\n      jumpi\n        /* \"contracts/EtharisEscrow.sol\":4362:4384  _deals[_dealId].exists */\n      0x06\n        /* \"contracts/EtharisEscrow.sol\":9965:9976  deal.status */\n      dup2\n      add\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      swap1\n      dup2\n      sload\n        /* \"contracts/EtharisEscrow.sol\":1861:1869  72 hours */\n      0x03f480\n        /* \"contracts/EtharisEscrow.sol\":9815:9830  block.timestamp */\n      timestamp\n        /* \"contracts/EtharisEscrow.sol\":1861:1869  72 hours */\n      add\n        /* \"contracts/EtharisEscrow.sol\":9815:9830  block.timestamp */\n      swap1\n      dup2\n      timestamp\n        /* \"contracts/EtharisEscrow.sol\":1861:1869  72 hours */\n      gt\n      tag_483\n      jumpi\n      not(0xff0000000000000000ffffffffffffffffffffffffffffffff)\n      and\n        /* \"contracts/EtharisEscrow.sol\":9815:9830  block.timestamp */\n      timestamp\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      dup6\n      and\n        /* \"contracts/EtharisEscrow.sol\":1861:1869  72 hours */\n      or\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0x40\n        /* \"contracts/EtharisEscrow.sol\":1861:1869  72 hours */\n      swap2\n      swap1\n      swap2\n      shl\n      0xffffffffffffffff0000000000000000\n      and\n      or\n      shl(0xc1, 0x01)\n      or\n      dup3\n      sstore\n        /* \"contracts/EtharisEscrow.sol\":10186:10320  ContentSubmitted(... */\n      0x934109f661b65dbccffcae4f7ee04261eb7b36e5136e1ca86dde1b00598cb031\n      swap5\n        /* \"contracts/EtharisEscrow.sol\":1861:1869  72 hours */\n      tag_487\n      swap5\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      swap1\n      swap4\n      swap1\n      swap3\n        /* \"contracts/EtharisEscrow.sol\":10186:10320  ContentSubmitted(... */\n      tag_486\n      swap3\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      tag_485\n      swap1\n      dup7\n      swap1\n      0x04\n        /* \"contracts/EtharisEscrow.sol\":10141:10156  deal.contentUrl */\n      add\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      tag_18\n      jump\t// in\n    tag_485:\n        /* \"contracts/EtharisEscrow.sol\":1861:1869  72 hours */\n      sload\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0x40\n        /* \"contracts/EtharisEscrow.sol\":1861:1869  72 hours */\n      shr\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      and\n        /* \"contracts/EtharisEscrow.sol\":10186:10320  ContentSubmitted(... */\n      swap6\n      tag_20\n      jump\t// in\n    tag_486:\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      swap5\n      mload(0x40)\n        /* \"contracts/EtharisEscrow.sol\":1861:1869  72 hours */\n      swap4\n      dup5\n      swap4\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0x40\n        /* \"contracts/EtharisEscrow.sol\":1861:1869  72 hours */\n      dup6\n      mstore\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0x40\n        /* \"contracts/EtharisEscrow.sol\":1861:1869  72 hours */\n      dup6\n      add\n      swap1\n      tag_9\n      jump\t// in\n    tag_487:\n      swap2\n      dup4\n      add\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      mstore\n        /* \"contracts/EtharisEscrow.sol\":10186:10320  ContentSubmitted(... */\n      sub\n      swap1\n      log3\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      dup1\n      return\n        /* \"contracts/EtharisEscrow.sol\":1861:1869  72 hours */\n    tag_483:\n      shl(0xe0, 0x4e487b71)\n      dup11\n      mstore\n      0x11\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0x04\n        /* \"contracts/EtharisEscrow.sol\":1861:1869  72 hours */\n      mstore\n      0x24\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      dup11\n        /* \"contracts/EtharisEscrow.sol\":1861:1869  72 hours */\n      revert\n        /* \"contracts/EtharisEscrow.sol\":9891:9954  if (bytes(_contentUrl).length == 0) revert ContentUrlRequired() */\n    tag_481:\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      mload(0x40)\n      shl(0xe0, 0x361178c7)\n        /* \"contracts/EtharisEscrow.sol\":9934:9954  ContentUrlRequired() */\n      dup2\n      mstore\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0x04\n      swap1\n        /* \"contracts/EtharisEscrow.sol\":9934:9954  ContentUrlRequired() */\n      revert\n        /* \"contracts/EtharisEscrow.sol\":9811:9881  if (block.timestamp > deal.deadline) revert SubmissionDeadlinePassed() */\n    tag_479:\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      mload(0x40)\n      shl(0xe1, 0x764b8e33)\n        /* \"contracts/EtharisEscrow.sol\":9855:9881  SubmissionDeadlinePassed() */\n      dup2\n      mstore\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0x04\n      swap1\n        /* \"contracts/EtharisEscrow.sol\":9855:9881  SubmissionDeadlinePassed() */\n      revert\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n    tag_61:\n      pop\n      jumpi(tag_105, callvalue)\n      dup1\n      add(calldatasize, not(0x03))\n      slt\n      tag_105\n      jumpi\n      0x20\n      0x03\n        /* \"contracts/EtharisEscrow.sol\":1810:1815  10000 */\n      sload\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0x60\n      shr\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_59:\n      pop\n      jumpi(tag_105, callvalue)\n      dup1\n      add(calldatasize, not(0x03))\n      slt\n      tag_105\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2484:2488  role */\n      tag_496\n      tag_12\n      jump\t// in\n    tag_496:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1685:1692  _paused */\n      0x01\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      sload\n      0xff\n      dup2\n      and\n      iszero\n      tag_497\n      jumpi\n      not(0xff)\n      and\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1685:1692  _paused */\n      0x01\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      sstore\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2521:2543  Unpaused(_msgSender()) */\n      0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0x20\n      mload(0x40)\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2521:2543  Unpaused(_msgSender()) */\n      log1\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      dup1\n      return\n    tag_497:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x14\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x62, 0x14185d5cd8589b194e881b9bdd081c185d5cd959)\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n    tag_57:\n      pop\n      jumpi(tag_105, callvalue)\n      jumpi(tag_105, slt(add(not(0x03), calldatasize), 0x20))\n      sub(shl(0x40, 0x01), 0x01)\n      calldataload(0x04)\n      dup2\n      dup2\n      gt\n      tag_190\n      jumpi\n      tag_505\n      swap1\n      calldatasize\n      swap1\n      0x04\n      add\n      tag_3\n      jump\t// in\n    tag_505:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2227:2330  modifier nonReentrant() {... */\n      swap1\n      tag_506\n      tag_23\n      jump\t// in\n    tag_506:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2484:2488  role */\n      tag_507\n      tag_12\n      jump\t// in\n    tag_507:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1204:1276  modifier whenNotPaused() {... */\n      tag_508\n      tag_21\n      jump\t// in\n    tag_508:\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      mload(0x40)\n      0xff\n        /* \"contracts/EtharisEscrow.sol\":4362:4384  _deals[_dealId].exists */\n      0x06\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      dup5\n      mload\n      swap3\n      0x20\n      dup2\n      dup2\n      dup9\n      add\n      swap6\n      tag_509\n      dup2\n      dup4\n      dup10\n      tag_8\n      jump\t// in\n    tag_509:\n      dup2\n      add\n      0x04\n      dup2\n      mstore\n      sub\n      add\n      swap1\n      keccak256\n        /* \"contracts/EtharisEscrow.sol\":4362:4384  _deals[_dealId].exists */\n      add\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      sload\n      0xc8\n      shr\n      and\n        /* \"contracts/EtharisEscrow.sol\":4361:4384  !_deals[_dealId].exists */\n      iszero\n        /* \"contracts/EtharisEscrow.sol\":4357:4407  if (!_deals[_dealId].exists) revert DealNotFound() */\n      tag_135\n      jumpi\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0xff\n        /* \"contracts/EtharisEscrow.sol\":4362:4384  _deals[_dealId].exists */\n      0x06\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      mload(0x40)\n      0x20\n      dup2\n      dup8\n      mload\n      tag_512\n      dup2\n      dup4\n      dup10\n      tag_8\n      jump\t// in\n    tag_512:\n      dup2\n      add\n      0x04\n      dup2\n      mstore\n      sub\n      add\n      swap1\n      keccak256\n        /* \"contracts/EtharisEscrow.sol\":4510:4532  _deals[_dealId].status */\n      add\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      sload\n      0xc0\n      shr\n      and\n        /* \"contracts/EtharisEscrow.sol\":4362:4384  _deals[_dealId].exists */\n      0x06\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      dup2\n      lt\n      iszero\n      tag_414\n      jumpi\n        /* \"contracts/EtharisEscrow.sol\":11714:11743  ContractStatus.PENDING_REVIEW */\n      0x02\n        /* \"contracts/EtharisEscrow.sol\":4510:4543  _deals[_dealId].status != _status */\n      sub\n        /* \"contracts/EtharisEscrow.sol\":4506:4571  if (_deals[_dealId].status != _status) revert InvalidDealStatus() */\n      tag_143\n      jumpi\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0x20\n      tag_517\n      swap2\n      mload(0x40)\n      dup1\n      swap4\n      dup2\n      swap3\n      dup8\n      mload\n      swap3\n      dup4\n      swap2\n      tag_8\n      jump\t// in\n    tag_517:\n      dup2\n      add\n      0x04\n      dup2\n      mstore\n      sub\n      add\n      swap1\n      keccak256\n        /* \"contracts/EtharisEscrow.sol\":4362:4384  _deals[_dealId].exists */\n      0x06\n        /* \"contracts/EtharisEscrow.sol\":11826:11845  deal.reviewDeadline */\n      dup2\n      add\n        /* \"contracts/EtharisEscrow.sol\":1861:1869  72 hours */\n      dup1\n      sload\n      swap3\n      dup4\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0x40\n        /* \"contracts/EtharisEscrow.sol\":1861:1869  72 hours */\n      shr\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      and\n        /* \"contracts/EtharisEscrow.sol\":11808:11823  block.timestamp */\n      timestamp\n        /* \"contracts/EtharisEscrow.sol\":11808:11845  block.timestamp < deal.reviewDeadline */\n      lt\n        /* \"contracts/EtharisEscrow.sol\":11804:11888  if (block.timestamp < deal.reviewDeadline)... */\n      tag_518\n      jumpi\n        /* \"contracts/EtharisEscrow.sol\":12386:12452  PaymentReleased(_dealId, deal.creator, creatorAmount, platformFee) */\n      tag_153\n      0x00\n      dup1\n      mload\n      0x20\n      data_a8eda418a66b2f5395d4a15b2f03de75b34fff39bb2e2a8b57f6be974d56e7b0\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      swap3\n      sub(shl(0x60, 0x01), 0x01)\n        /* \"contracts/EtharisEscrow.sol\":11971:11982  deal.amount */\n      dup1\n      0x05\n      dup4\n      add\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      sload\n      and\n      swap4\n        /* \"contracts/EtharisEscrow.sol\":12052:12077  deal.amount - platformFee */\n      tag_521\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0x2710\n      dup4\n        /* \"contracts/EtharisEscrow.sol\":11971:12000  deal.amount * _platformFeeBps */\n      tag_522\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      dup2\n      sload(0x03)\n      and\n        /* \"contracts/EtharisEscrow.sol\":11971:12000  deal.amount * _platformFeeBps */\n      dup10\n      tag_25\n      jump\t// in\n    tag_522:\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      and\n        /* \"contracts/EtharisEscrow.sol\":1810:1815  10000 */\n      div\n        /* \"contracts/EtharisEscrow.sol\":12052:12077  deal.amount - platformFee */\n      dup1\n      swap7\n      tag_26\n      jump\t// in\n    tag_521:\n      not(shl(0xc0, 0xff))\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      swap1\n      swap8\n      and\n      shl(0xc2, 0x01)\n      or\n      swap1\n      sstore\n        /* \"contracts/EtharisEscrow.sol\":12152:12162  _idrxToken */\n      immutable(\"0x92a99c2e1e73cfa8af214a27ee636aa00abb49bffb5065f213fd4435430466da\")\n      swap1\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      dup1\n      dup8\n      and\n      dup1\n        /* \"contracts/EtharisEscrow.sol\":12172:12268  if (creatorAmount != 0) {... */\n      tag_523\n      jumpi\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n    tag_524:\n      pop\n      dup5\n      and\n        /* \"contracts/EtharisEscrow.sol\":12282:12298  platformFee != 0 */\n      dup1\n        /* \"contracts/EtharisEscrow.sol\":12278:12371  if (platformFee != 0) {... */\n      tag_525\n      jumpi\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n    tag_526:\n      pop\n      pop\n      0x01\n        /* \"contracts/EtharisEscrow.sol\":12411:12423  deal.creator */\n      add\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap5\n        /* \"contracts/EtharisEscrow.sol\":12386:12452  PaymentReleased(_dealId, deal.creator, creatorAmount, platformFee) */\n      tag_20\n      jump\t// in\n        /* \"contracts/EtharisEscrow.sol\":12278:12371  if (platformFee != 0) {... */\n    tag_525:\n        /* \"contracts/EtharisEscrow.sol\":12314:12360  token.safeTransfer(_feeRecipient, platformFee) */\n      tag_528\n        /* \"contracts/EtharisEscrow.sol\":1810:1815  10000 */\n      swap2\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0x03\n        /* \"contracts/EtharisEscrow.sol\":1810:1815  10000 */\n      sload\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0x60\n      shr\n        /* \"contracts/EtharisEscrow.sol\":12314:12360  token.safeTransfer(_feeRecipient, platformFee) */\n      swap1\n      tag_28\n      jump\t// in\n    tag_528:\n        /* \"contracts/EtharisEscrow.sol\":12278:12371  if (platformFee != 0) {... */\n      0x00\n      dup1\n      jump(tag_526)\n        /* \"contracts/EtharisEscrow.sol\":12172:12268  if (creatorAmount != 0) {... */\n    tag_523:\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0x01\n        /* \"contracts/EtharisEscrow.sol\":12229:12241  deal.creator */\n      dup5\n      add\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      sload\n        /* \"contracts/EtharisEscrow.sol\":12210:12257  token.safeTransfer(deal.creator, creatorAmount) */\n      tag_529\n      swap2\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/EtharisEscrow.sol\":12210:12257  token.safeTransfer(deal.creator, creatorAmount) */\n      dup5\n      tag_28\n      jump\t// in\n    tag_529:\n        /* \"contracts/EtharisEscrow.sol\":12172:12268  if (creatorAmount != 0) {... */\n      0x00\n      jump(tag_524)\n        /* \"contracts/EtharisEscrow.sol\":11804:11888  if (block.timestamp < deal.reviewDeadline)... */\n    tag_518:\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      mload(0x40)\n      shl(0xe0, 0x2d6bf645)\n        /* \"contracts/EtharisEscrow.sol\":11866:11888  ReviewPeriodNotEnded() */\n      dup2\n      mstore\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0x04\n      swap1\n        /* \"contracts/EtharisEscrow.sol\":11866:11888  ReviewPeriodNotEnded() */\n      revert\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n    tag_55:\n      pop\n      jumpi(tag_105, callvalue)\n      jumpi(tag_105, slt(add(not(0x03), calldatasize), 0x40))\n      tag_534\n      tag_4\n      jump\t// in\n    tag_534:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5397:5431  callerConfirmation != _msgSender() */\n      sub\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5393:5495  if (callerConfirmation != _msgSender()) {... */\n      tag_535\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5505:5542  _revokeRole(role, callerConfirmation) */\n      tag_263\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      swap1\n      calldataload(0x04)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5505:5542  _revokeRole(role, callerConfirmation) */\n      tag_15\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5393:5495  if (callerConfirmation != _msgSender()) {... */\n    tag_535:\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      mload(0x40)\n      shl(0xe1, 0x334bd919)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5454:5484  AccessControlBadConfirmation() */\n      dup2\n      mstore\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0x04\n      swap1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5454:5484  AccessControlBadConfirmation() */\n      revert\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n    tag_53:\n      pop\n      jumpi(tag_105, callvalue)\n      jumpi(tag_105, slt(add(not(0x03), calldatasize), 0x20))\n      calldataload(0x04)\n      sub(shl(0x60, 0x01), 0x01)\n      dup2\n      and\n      dup2\n      sub\n      tag_112\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2499:2500  _ */\n      tag_107\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2484:2488  role */\n      swap1\n      tag_545\n      tag_12\n      jump\t// in\n    tag_545:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2499:2500  _ */\n      tag_31\n      jump\t// in\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n    tag_51:\n      pop\n      jumpi(tag_105, callvalue)\n      jumpi(tag_105, slt(add(not(0x03), calldatasize), 0x40))\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4306:4331  _grantRole(role, account) */\n      tag_263\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      calldataload(0x04)\n      tag_551\n      tag_4\n      jump\t// in\n    tag_551:\n      swap1\n      dup1\n      dup5\n      mstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3877:3883  _roles */\n      0x02\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0x20\n      mstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2484:2488  role */\n      tag_552\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0x01\n      0x40\n      dup7\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3877:3899  _roles[role].adminRole */\n      add\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      sload\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2484:2488  role */\n      tag_13\n      jump\t// in\n    tag_552:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4306:4331  _grantRole(role, account) */\n      tag_14\n      jump\t// in\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n    tag_49:\n      pop\n      jumpi(tag_105, callvalue)\n      tag_555\n      calldatasize\n      tag_6\n      jump\t// in\n    tag_555:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2227:2330  modifier nonReentrant() {... */\n      tag_556\n      tag_23\n      jump\t// in\n    tag_556:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2484:2488  role */\n      tag_557\n      tag_12\n      jump\t// in\n    tag_557:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1204:1276  modifier whenNotPaused() {... */\n      tag_558\n      tag_21\n      jump\t// in\n    tag_558:\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      mload(0x40)\n      0xff\n        /* \"contracts/EtharisEscrow.sol\":4362:4384  _deals[_dealId].exists */\n      0x06\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      dup5\n      mload\n      swap3\n      0x20\n      dup2\n      dup2\n      dup9\n      add\n      swap6\n      tag_559\n      dup2\n      dup4\n      dup10\n      tag_8\n      jump\t// in\n    tag_559:\n      dup2\n      add\n      0x04\n      dup2\n      mstore\n      sub\n      add\n      swap1\n      keccak256\n        /* \"contracts/EtharisEscrow.sol\":4362:4384  _deals[_dealId].exists */\n      add\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      sload\n      0xc8\n      shr\n      and\n        /* \"contracts/EtharisEscrow.sol\":4361:4384  !_deals[_dealId].exists */\n      iszero\n        /* \"contracts/EtharisEscrow.sol\":4357:4407  if (!_deals[_dealId].exists) revert DealNotFound() */\n      tag_135\n      jumpi\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0x20\n      mload(0x40)\n      dup5\n      mload\n      tag_562\n      dup2\n      dup4\n      dup7\n      tag_8\n      jump\t// in\n    tag_562:\n      dup2\n      add\n      0x04\n      dup2\n      mstore\n      dup2\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      swap4\n      dup5\n      swap4\n      dup5\n      swap4\n      sub\n      add\n      swap1\n      keccak256\n      sload\n      and\n      swap4\n      and\n        /* \"contracts/EtharisEscrow.sol\":4062:4093  _deals[_dealId].brand != _brand */\n      dup1\n      swap4\n      sub\n        /* \"contracts/EtharisEscrow.sol\":4058:4117  if (_deals[_dealId].brand != _brand) revert NotAuthorized() */\n      tag_138\n      jumpi\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0xff\n        /* \"contracts/EtharisEscrow.sol\":4362:4384  _deals[_dealId].exists */\n      0x06\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      mload(0x40)\n      0x20\n      dup2\n      dup9\n      mload\n      tag_565\n      dup2\n      dup4\n      dup11\n      tag_8\n      jump\t// in\n    tag_565:\n      dup2\n      add\n      0x04\n      dup2\n      mstore\n      sub\n      add\n      swap1\n      keccak256\n        /* \"contracts/EtharisEscrow.sol\":4510:4532  _deals[_dealId].status */\n      add\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      sload\n      0xc0\n      shr\n      and\n        /* \"contracts/EtharisEscrow.sol\":4362:4384  _deals[_dealId].exists */\n      0x06\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      dup2\n      lt\n      iszero\n      tag_244\n      jumpi\n        /* \"contracts/EtharisEscrow.sol\":10696:10725  ContractStatus.PENDING_REVIEW */\n      0x02\n        /* \"contracts/EtharisEscrow.sol\":4510:4543  _deals[_dealId].status != _status */\n      sub\n        /* \"contracts/EtharisEscrow.sol\":4506:4571  if (_deals[_dealId].status != _status) revert InvalidDealStatus() */\n      tag_143\n      jumpi\n        /* \"contracts/EtharisEscrow.sol\":11354:11420  PaymentReleased(_dealId, deal.creator, creatorAmount, platformFee) */\n      tag_153\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      tag_571\n      0x20\n      0x00\n      dup1\n      mload\n      0x20\n      data_a8eda418a66b2f5395d4a15b2f03de75b34fff39bb2e2a8b57f6be974d56e7b0\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      swap5\n      mload(0x40)\n      dup1\n      swap4\n      dup2\n      swap3\n      dup11\n      mload\n      swap3\n      dup4\n      swap2\n      tag_8\n      jump\t// in\n    tag_571:\n      dup2\n      add\n      0x04\n      dup2\n      mstore\n      sub\n      add\n      swap1\n      keccak256\n      swap2\n      0x01\n      sub(shl(0x60, 0x01), 0x01)\n        /* \"contracts/EtharisEscrow.sol\":10887:10898  deal.amount */\n      swap4\n      dup5\n      0x05\n      dup3\n      add\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      sload\n      and\n      swap5\n        /* \"contracts/EtharisEscrow.sol\":10968:10993  deal.amount - platformFee */\n      tag_572\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0x2710\n      dup3\n        /* \"contracts/EtharisEscrow.sol\":10887:10916  deal.amount * _platformFeeBps */\n      tag_573\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      dup2\n        /* \"contracts/EtharisEscrow.sol\":10901:10916  _platformFeeBps */\n      0x03\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      sload\n      and\n        /* \"contracts/EtharisEscrow.sol\":10887:10916  deal.amount * _platformFeeBps */\n      dup11\n      tag_25\n      jump\t// in\n    tag_573:\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      and\n        /* \"contracts/EtharisEscrow.sol\":1810:1815  10000 */\n      div\n        /* \"contracts/EtharisEscrow.sol\":10968:10993  deal.amount - platformFee */\n      dup1\n      swap8\n      tag_26\n      jump\t// in\n    tag_572:\n        /* \"contracts/EtharisEscrow.sol\":4362:4384  _deals[_dealId].exists */\n      0x06\n        /* \"contracts/EtharisEscrow.sol\":11004:11015  deal.status */\n      dup4\n      add\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      dup1\n      sload\n      not(shl(0xc0, 0xff))\n      and\n      0xc2\n      dup7\n      swap1\n      shl\n      or\n      swap1\n      sstore\n        /* \"contracts/EtharisEscrow.sol\":11004:11015  deal.status */\n      swap8\n        /* \"contracts/EtharisEscrow.sol\":11058:11094  DealApproved(_dealId, _brandAddress) */\n      tag_574\n      dup11\n      tag_20\n      jump\t// in\n    tag_574:\n      0xcaec7345d2eb04a42197ac2a2cd7cd74a00b2991b69bb53e23465d4092fdfb\n      dup13\n      dup1\n      log3\n        /* \"contracts/EtharisEscrow.sol\":11120:11130  _idrxToken */\n      immutable(\"0x92a99c2e1e73cfa8af214a27ee636aa00abb49bffb5065f213fd4435430466da\")\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      swap1\n      dup1\n      dup10\n      and\n        /* \"contracts/EtharisEscrow.sol\":11144:11162  creatorAmount != 0 */\n      dup1\n        /* \"contracts/EtharisEscrow.sol\":11140:11236  if (creatorAmount != 0) {... */\n      tag_575\n      jumpi\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n    tag_576:\n      pop\n      dup7\n      and\n        /* \"contracts/EtharisEscrow.sol\":11250:11266  platformFee != 0 */\n      dup1\n        /* \"contracts/EtharisEscrow.sol\":11246:11339  if (platformFee != 0) {... */\n      tag_577\n      jumpi\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n    tag_578:\n        /* \"contracts/EtharisEscrow.sol\":11379:11391  deal.creator */\n      pop\n      pop\n      add\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      sload\n      and\n        /* \"contracts/EtharisEscrow.sol\":11354:11420  PaymentReleased(_dealId, deal.creator, creatorAmount, platformFee) */\n      swap5\n      tag_20\n      jump\t// in\n        /* \"contracts/EtharisEscrow.sol\":11246:11339  if (platformFee != 0) {... */\n    tag_577:\n        /* \"contracts/EtharisEscrow.sol\":11282:11328  token.safeTransfer(_feeRecipient, platformFee) */\n      tag_580\n        /* \"contracts/EtharisEscrow.sol\":1810:1815  10000 */\n      swap2\n        /* \"contracts/EtharisEscrow.sol\":10901:10916  _platformFeeBps */\n      0x03\n        /* \"contracts/EtharisEscrow.sol\":1810:1815  10000 */\n      sload\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0x60\n      shr\n        /* \"contracts/EtharisEscrow.sol\":11282:11328  token.safeTransfer(_feeRecipient, platformFee) */\n      swap1\n      tag_28\n      jump\t// in\n    tag_580:\n        /* \"contracts/EtharisEscrow.sol\":11246:11339  if (platformFee != 0) {... */\n      0x00\n      dup1\n      jump(tag_578)\n        /* \"contracts/EtharisEscrow.sol\":11140:11236  if (creatorAmount != 0) {... */\n    tag_575:\n        /* \"contracts/EtharisEscrow.sol\":11178:11225  token.safeTransfer(deal.creator, creatorAmount) */\n      tag_581\n        /* \"contracts/EtharisEscrow.sol\":11197:11209  deal.creator */\n      swap1\n      dup7\n      dup7\n      dup7\n      add\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      sload\n      and\n        /* \"contracts/EtharisEscrow.sol\":11178:11225  token.safeTransfer(deal.creator, creatorAmount) */\n      dup5\n      tag_28\n      jump\t// in\n    tag_581:\n        /* \"contracts/EtharisEscrow.sol\":11140:11236  if (creatorAmount != 0) {... */\n      0x00\n      jump(tag_576)\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n    tag_47:\n      pop\n      jumpi(tag_105, callvalue)\n      jumpi(tag_105, slt(add(not(0x03), calldatasize), 0x20))\n      0x01\n      0x40\n      0x20\n      swap3\n      calldataload(0x04)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3877:3883  _roles */\n      0x02\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      dup5\n      mstore\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3877:3899  _roles[role].adminRole */\n      add\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      sload\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_45:\n      pop\n      jumpi(tag_105, callvalue)\n      dup1\n      add(calldatasize, not(0x03))\n      slt\n      tag_105\n      jumpi\n      0x20\n      and(sload(0x03), sub(shl(0x60, 0x01), 0x01))\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_43:\n      pop\n      jumpi(tag_105, callvalue)\n      jumpi(tag_105, slt(add(not(0x03), calldatasize), 0x20))\n      calldataload(0x04)\n      sub(shl(0x40, 0x01), 0x01)\n      dup2\n      gt\n      tag_112\n      jumpi\n      tag_596\n      swap1\n      calldatasize\n      swap1\n      0x04\n      add\n      tag_3\n      jump\t// in\n    tag_596:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2227:2330  modifier nonReentrant() {... */\n      tag_597\n      tag_23\n      jump\t// in\n    tag_597:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2484:2488  role */\n      tag_598\n      tag_12\n      jump\t// in\n    tag_598:\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      mload(0x40)\n      0xff\n        /* \"contracts/EtharisEscrow.sol\":4362:4384  _deals[_dealId].exists */\n      0x06\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      dup4\n      mload\n      swap3\n      0x20\n      dup2\n      dup2\n      dup8\n      add\n      swap6\n      tag_599\n      dup2\n      dup4\n      dup10\n      tag_8\n      jump\t// in\n    tag_599:\n      dup2\n      add\n      0x04\n      dup2\n      mstore\n      sub\n      add\n      swap1\n      keccak256\n        /* \"contracts/EtharisEscrow.sol\":4362:4384  _deals[_dealId].exists */\n      add\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      sload\n      0xc8\n      shr\n      and\n        /* \"contracts/EtharisEscrow.sol\":4361:4384  !_deals[_dealId].exists */\n      iszero\n        /* \"contracts/EtharisEscrow.sol\":4357:4407  if (!_deals[_dealId].exists) revert DealNotFound() */\n      tag_135\n      jumpi\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0x20\n      tag_602\n      swap2\n      mload(0x40)\n      dup1\n      swap4\n      dup2\n      swap3\n      dup7\n      mload\n      swap3\n      dup4\n      swap2\n      tag_8\n      jump\t// in\n    tag_602:\n      dup2\n      add\n      0x04\n      dup2\n      mstore\n      sub\n      add\n      swap1\n      keccak256\n        /* \"contracts/EtharisEscrow.sol\":16616:16627  deal.status */\n      swap1\n        /* \"contracts/EtharisEscrow.sol\":4362:4384  _deals[_dealId].exists */\n      0x06\n        /* \"contracts/EtharisEscrow.sol\":16616:16627  deal.status */\n      dup3\n      add\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      swap1\n      dup2\n      sload\n      swap3\n      0xff\n      dup5\n      0xc0\n      shr\n      and\n        /* \"contracts/EtharisEscrow.sol\":4362:4384  _deals[_dealId].exists */\n      0x06\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      dup2\n      lt\n      iszero\n      tag_244\n      jumpi\n        /* \"contracts/EtharisEscrow.sol\":16631:16652  ContractStatus.ACTIVE */\n      0x01\n        /* \"contracts/EtharisEscrow.sol\":16616:16652  deal.status != ContractStatus.ACTIVE */\n      dup2\n      sub\n        /* \"contracts/EtharisEscrow.sol\":16612:16790  if (deal.status != ContractStatus.ACTIVE) {... */\n      tag_605\n      jumpi\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n    tag_606:\n        /* \"contracts/EtharisEscrow.sol\":16822:16833  deal.amount */\n      pop\n        /* \"contracts/EtharisEscrow.sol\":17004:17052  DealCancelled(_dealId, msg.sender, refundAmount) */\n      tag_607\n        /* \"contracts/EtharisEscrow.sol\":16822:16833  deal.amount */\n      swap3\n      sub(shl(0x60, 0x01), 0x01)\n      0x05\n      dup4\n      add\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      sload\n      and\n      swap5\n      shl(0xc0, 0x05)\n      swap1\n      not(shl(0xc0, 0xff))\n      and\n      or\n      swap1\n      sstore\n        /* \"contracts/EtharisEscrow.sol\":16896:16913  refundAmount != 0 */\n      dup4\n      dup1\n        /* \"contracts/EtharisEscrow.sol\":16892:16989  if (refundAmount != 0) {... */\n      tag_608\n      jumpi\n        /* \"contracts/EtharisEscrow.sol\":17004:17052  DealCancelled(_dealId, msg.sender, refundAmount) */\n      pop\n      pop\n      tag_20\n      jump\t// in\n    tag_607:\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      mload(0x40)\n      swap2\n      dup3\n      mstore\n        /* \"contracts/EtharisEscrow.sol\":17004:17052  DealCancelled(_dealId, msg.sender, refundAmount) */\n      0xb559d285c87e4fa0f561388264310703ff0c6c454a39ae52d0ae94032ff0db70\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0x20\n        /* \"contracts/EtharisEscrow.sol\":17027:17037  msg.sender */\n      caller\n        /* \"contracts/EtharisEscrow.sol\":17004:17052  DealCancelled(_dealId, msg.sender, refundAmount) */\n      swap4\n      log3\n        /* \"contracts/EtharisEscrow.sol\":16631:16652  ContractStatus.ACTIVE */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      dup2\n      sstore\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      dup1\n      return\n        /* \"contracts/EtharisEscrow.sol\":16892:16989  if (refundAmount != 0) {... */\n    tag_608:\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      swap1\n      sload\n        /* \"contracts/EtharisEscrow.sol\":16929:16978  _idrxToken.safeTransfer(deal.brand, refundAmount) */\n      tag_610\n      swap2\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      and\n        /* \"contracts/EtharisEscrow.sol\":16929:16939  _idrxToken */\n      immutable(\"0x92a99c2e1e73cfa8af214a27ee636aa00abb49bffb5065f213fd4435430466da\")\n        /* \"contracts/EtharisEscrow.sol\":16929:16978  _idrxToken.safeTransfer(deal.brand, refundAmount) */\n      tag_28\n      jump\t// in\n    tag_610:\n        /* \"contracts/EtharisEscrow.sol\":16892:16989  if (refundAmount != 0) {... */\n      0x00\n      dup4\n      jump(tag_253)\n        /* \"contracts/EtharisEscrow.sol\":16612:16790  if (deal.status != ContractStatus.ACTIVE) {... */\n    tag_605:\n        /* \"contracts/EtharisEscrow.sol\":16687:16716  ContractStatus.PENDING_REVIEW */\n      0x02\n        /* \"contracts/EtharisEscrow.sol\":16672:16716  deal.status != ContractStatus.PENDING_REVIEW */\n      sub\n        /* \"contracts/EtharisEscrow.sol\":16668:16780  if (deal.status != ContractStatus.PENDING_REVIEW) {... */\n      tag_611\n      jumpi\n        /* \"contracts/EtharisEscrow.sol\":16612:16790  if (deal.status != ContractStatus.ACTIVE) {... */\n      0x00\n      jump(tag_606)\n        /* \"contracts/EtharisEscrow.sol\":16668:16780  if (deal.status != ContractStatus.PENDING_REVIEW) {... */\n    tag_611:\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      mload(0x40)\n      shl(0xe3, 0x04df0cad)\n        /* \"contracts/EtharisEscrow.sol\":16743:16765  CannotCancelThisDeal() */\n      dup2\n      mstore\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0x04\n      swap1\n        /* \"contracts/EtharisEscrow.sol\":16743:16765  CannotCancelThisDeal() */\n      revert\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n    tag_41:\n      pop\n      jumpi(tag_105, callvalue)\n      dup1\n      add(calldatasize, not(0x03))\n      slt\n      tag_105\n      jumpi\n      0x20\n      mload(0x40)\n        /* \"contracts/EtharisEscrow.sol\":1949:1973  keccak256(\"SERVER_ROLE\") */\n      0xa8a7bc421f721cb936ea99efdad79237e6ee0b871a2a08cf648691f9584cdc77\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      dup2\n      mstore\n      return\n    tag_39:\n      pop\n      jumpi(tag_105, callvalue)\n      tag_619\n      calldatasize\n      tag_7\n      jump\t// in\n    tag_619:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2484:2488  role */\n      swap1\n      swap2\n      tag_620\n      tag_12\n      jump\t// in\n    tag_620:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1204:1276  modifier whenNotPaused() {... */\n      tag_621\n      tag_21\n      jump\t// in\n    tag_621:\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      mload(0x40)\n      swap2\n      dup2\n      mload\n      0xff\n        /* \"contracts/EtharisEscrow.sol\":4362:4384  _deals[_dealId].exists */\n      0x06\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0x20\n      swap6\n      dup7\n      dup2\n      dup2\n      dup9\n      add\n      swap6\n      tag_622\n      dup2\n      dup4\n      dup10\n      tag_8\n      jump\t// in\n    tag_622:\n      dup2\n      add\n      0x04\n      dup2\n      mstore\n      sub\n      add\n      swap1\n      keccak256\n        /* \"contracts/EtharisEscrow.sol\":4362:4384  _deals[_dealId].exists */\n      add\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      sload\n      0xc8\n      shr\n      and\n        /* \"contracts/EtharisEscrow.sol\":4361:4384  !_deals[_dealId].exists */\n      iszero\n        /* \"contracts/EtharisEscrow.sol\":4357:4407  if (!_deals[_dealId].exists) revert DealNotFound() */\n      tag_135\n      jumpi\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      mload(0x40)\n      dup4\n      mload\n      tag_625\n      dup2\n      dup4\n      dup6\n      tag_8\n      jump\t// in\n    tag_625:\n      0x04\n      swap1\n      dup3\n      add\n      swap1\n      dup2\n      mstore\n      dup2\n      swap1\n      sub\n      dup6\n      add\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap6\n      dup7\n      and\n      swap6\n      and\n        /* \"contracts/EtharisEscrow.sol\":4062:4093  _deals[_dealId].brand != _brand */\n      dup6\n      swap1\n      sub\n        /* \"contracts/EtharisEscrow.sol\":4058:4117  if (_deals[_dealId].brand != _brand) revert NotAuthorized() */\n      tag_138\n      jumpi\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0xff\n        /* \"contracts/EtharisEscrow.sol\":4362:4384  _deals[_dealId].exists */\n      0x06\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      mload(0x40)\n      dup7\n      dup2\n      dup8\n      mload\n      tag_628\n      dup2\n      dup4\n      dup10\n      tag_8\n      jump\t// in\n    tag_628:\n      dup2\n      add\n      0x04\n      dup2\n      mstore\n      sub\n      add\n      swap1\n      keccak256\n        /* \"contracts/EtharisEscrow.sol\":4510:4532  _deals[_dealId].status */\n      add\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      sload\n      0xc0\n      shr\n      and\n        /* \"contracts/EtharisEscrow.sol\":4362:4384  _deals[_dealId].exists */\n      0x06\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      dup2\n      lt\n      iszero\n      tag_141\n      jumpi\n        /* \"contracts/EtharisEscrow.sol\":12825:12854  ContractStatus.PENDING_REVIEW */\n      0x02\n        /* \"contracts/EtharisEscrow.sol\":4510:4543  _deals[_dealId].status != _status */\n      sub\n        /* \"contracts/EtharisEscrow.sol\":4506:4571  if (_deals[_dealId].status != _status) revert InvalidDealStatus() */\n      tag_143\n      jumpi\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      tag_633\n      dup5\n        /* \"contracts/EtharisEscrow.sol\":4362:4384  _deals[_dealId].exists */\n      0x06\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      swap3\n      mload(0x40)\n      dup1\n      swap4\n      dup2\n      swap3\n      dup9\n      mload\n      swap3\n      dup4\n      swap2\n      tag_8\n      jump\t// in\n    tag_633:\n      dup2\n      add\n      0x04\n      dup2\n      mstore\n      sub\n      add\n      swap1\n      keccak256\n        /* \"contracts/EtharisEscrow.sol\":12938:12957  deal.reviewDeadline */\n      add\n        /* \"contracts/EtharisEscrow.sol\":1861:1869  72 hours */\n      swap2\n      dup3\n      sload\n      swap1\n      sub(shl(0x40, 0x01), 0x01)\n      dup3\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0x40\n        /* \"contracts/EtharisEscrow.sol\":1861:1869  72 hours */\n      shr\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      and\n        /* \"contracts/EtharisEscrow.sol\":12919:12934  block.timestamp */\n      timestamp\n        /* \"contracts/EtharisEscrow.sol\":12919:12957  block.timestamp >= deal.reviewDeadline */\n      lt\n      iszero\n        /* \"contracts/EtharisEscrow.sol\":12915:12985  if (block.timestamp >= deal.reviewDeadline) revert ReviewPeriodEnded() */\n      tag_634\n      jumpi\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      dup3\n      mload\n        /* \"contracts/EtharisEscrow.sol\":12999:13025  bytes(_reason).length == 0 */\n      iszero\n        /* \"contracts/EtharisEscrow.sol\":12995:13050  if (bytes(_reason).length == 0) revert ReasonRequired() */\n      tag_636\n      jumpi\n      not(shl(0xc0, 0xff))\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      swap1\n      swap2\n      and\n      shl(0xc0, 0x03)\n      or\n      swap1\n      swap3\n      sstore\n        /* \"contracts/EtharisEscrow.sol\":13114:13163  DisputeInitiated(_dealId, _brandAddress, _reason) */\n      0xde7b01bef0884582ce204f7f920e57f99dd569f93867450872f436be5a03c755\n      swap2\n      tag_638\n      swap1\n      tag_20\n      jump\t// in\n    tag_638:\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      swap3\n      tag_639\n      mload(0x40)\n      swap3\n      dup3\n      dup5\n      swap4\n      dup5\n      mstore\n      dup4\n      add\n      swap1\n      tag_9\n      jump\t// in\n    tag_639:\n        /* \"contracts/EtharisEscrow.sol\":13114:13163  DisputeInitiated(_dealId, _brandAddress, _reason) */\n      sub\n      swap1\n      log3\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      dup1\n      return\n        /* \"contracts/EtharisEscrow.sol\":12995:13050  if (bytes(_reason).length == 0) revert ReasonRequired() */\n    tag_636:\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      mload(0x40)\n      shl(0xe0, 0xbc7fd331)\n        /* \"contracts/EtharisEscrow.sol\":13034:13050  ReasonRequired() */\n      dup2\n      mstore\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0x04\n      swap1\n        /* \"contracts/EtharisEscrow.sol\":13034:13050  ReasonRequired() */\n      revert\n        /* \"contracts/EtharisEscrow.sol\":12915:12985  if (block.timestamp >= deal.reviewDeadline) revert ReviewPeriodEnded() */\n    tag_634:\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      mload(0x40)\n      shl(0xe1, 0x2d0f572d)\n        /* \"contracts/EtharisEscrow.sol\":12966:12985  ReviewPeriodEnded() */\n      dup2\n      mstore\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0x04\n      swap1\n        /* \"contracts/EtharisEscrow.sol\":12966:12985  ReviewPeriodEnded() */\n      revert\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n    tag_37:\n      pop\n      jumpi(tag_105, callvalue)\n      tag_642\n      calldatasize\n      tag_6\n      jump\t// in\n    tag_642:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2484:2488  role */\n      swap1\n      tag_643\n      tag_12\n      jump\t// in\n    tag_643:\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      mload(0x40)\n      swap1\n      dup1\n      mload\n      0xff\n        /* \"contracts/EtharisEscrow.sol\":4362:4384  _deals[_dealId].exists */\n      0x06\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0x20\n      swap5\n      dup6\n      dup2\n      dup2\n      dup8\n      add\n      swap6\n      tag_644\n      dup2\n      dup4\n      dup10\n      tag_8\n      jump\t// in\n    tag_644:\n      dup2\n      add\n      0x04\n      dup2\n      mstore\n      sub\n      add\n      swap1\n      keccak256\n        /* \"contracts/EtharisEscrow.sol\":4362:4384  _deals[_dealId].exists */\n      add\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      sload\n      0xc8\n      shr\n      and\n        /* \"contracts/EtharisEscrow.sol\":4361:4384  !_deals[_dealId].exists */\n      iszero\n        /* \"contracts/EtharisEscrow.sol\":4357:4407  if (!_deals[_dealId].exists) revert DealNotFound() */\n      tag_135\n      jumpi\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      mload(0x40)\n      dup3\n      mload\n      tag_647\n      dup2\n      dup4\n      dup6\n      tag_8\n      jump\t// in\n    tag_647:\n      0x04\n      swap1\n      dup3\n      add\n      swap1\n      dup2\n      mstore\n      dup2\n      swap1\n      sub\n      dup5\n      add\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap5\n      dup6\n      and\n      swap5\n      and\n        /* \"contracts/EtharisEscrow.sol\":4062:4093  _deals[_dealId].brand != _brand */\n      dup5\n      swap1\n      sub\n        /* \"contracts/EtharisEscrow.sol\":4058:4117  if (_deals[_dealId].brand != _brand) revert NotAuthorized() */\n      tag_138\n      jumpi\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0xff\n        /* \"contracts/EtharisEscrow.sol\":4362:4384  _deals[_dealId].exists */\n      0x06\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      mload(0x40)\n      dup6\n      dup2\n      dup7\n      mload\n      tag_650\n      dup2\n      dup4\n      dup10\n      tag_8\n      jump\t// in\n    tag_650:\n      dup2\n      add\n      0x04\n      dup2\n      mstore\n      sub\n      add\n      swap1\n      keccak256\n        /* \"contracts/EtharisEscrow.sol\":4510:4532  _deals[_dealId].status */\n      add\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      sload\n      0xc0\n      shr\n      and\n        /* \"contracts/EtharisEscrow.sol\":4362:4384  _deals[_dealId].exists */\n      0x06\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      dup2\n      lt\n      iszero\n      tag_244\n      jumpi\n        /* \"contracts/EtharisEscrow.sol\":4506:4571  if (_deals[_dealId].status != _status) revert InvalidDealStatus() */\n      tag_143\n      jumpi\n        /* \"contracts/EtharisEscrow.sol\":16231:16271  DealCancelled(_dealId, _brandAddress, 0) */\n      0xb559d285c87e4fa0f561388264310703ff0c6c454a39ae52d0ae94032ff0db70\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      swap2\n        /* \"contracts/EtharisEscrow.sol\":4362:4384  _deals[_dealId].exists */\n      0x06\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      tag_655\n      dup6\n        /* \"contracts/EtharisEscrow.sol\":16231:16271  DealCancelled(_dealId, _brandAddress, 0) */\n      tag_656\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      swap5\n      mload(0x40)\n      dup1\n      swap4\n      dup2\n      swap3\n      dup8\n      mload\n      swap3\n      dup4\n      swap2\n      tag_8\n      jump\t// in\n    tag_655:\n      0x04\n      swap1\n      dup3\n      add\n      swap1\n      dup2\n      mstore\n      sub\n      add\n      swap1\n      keccak256\n        /* \"contracts/EtharisEscrow.sol\":16166:16188  _deals[_dealId].status */\n      add\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      dup1\n      sload\n      not(shl(0xc0, 0xff))\n      and\n      shl(0xc0, 0x05)\n      or\n      swap1\n      sstore\n        /* \"contracts/EtharisEscrow.sol\":16231:16271  DealCancelled(_dealId, _brandAddress, 0) */\n      tag_20\n      jump\t// in\n    tag_656:\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      swap2\n      mload(0x40)\n      dup6\n      dup2\n      mstore\n        /* \"contracts/EtharisEscrow.sol\":16231:16271  DealCancelled(_dealId, _brandAddress, 0) */\n      log3\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      dup1\n      return\n    tag_35:\n      swap1\n      pop\n      jumpi(tag_112, callvalue)\n      jumpi(tag_112, slt(add(not(0x03), calldatasize), 0x20))\n      calldataload(0x04)\n      shl(0xe0, 0xffffffff)\n      dup2\n      and\n      dup1\n      swap2\n      sub\n      tag_190\n      jumpi\n      0x20\n      swap3\n      pop\n      shl(0xe0, 0x7965db0b)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2649:2696  interfaceId == type(IAccessControl).interfaceId */\n      dup2\n      eq\n      swap1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2649:2736  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      dup2\n      iszero\n      tag_663\n      jumpi\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n    tag_664:\n      pop\n      iszero\n      iszero\n      dup2\n      mstore\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2649:2736  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n    tag_663:\n      shl(0xe0, 0x01ffc9a7)\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":829:869  interfaceId == type(IERC165).interfaceId */\n      eq\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2649:2736  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      0x00\n      jump(tag_664)\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n    tag_1:\n      0x01a0\n      dup2\n      add\n      swap1\n      dup2\n      lt\n      sub(shl(0x40, 0x01), 0x01)\n      dup3\n      gt\n      or\n      tag_368\n      jumpi\n      0x40\n      mstore\n      jump\t// out\n    tag_2:\n      swap1\n      0x1f\n      dup1\n      not\n      swap2\n      add\n      and\n      dup2\n      add\n      swap1\n      dup2\n      lt\n      sub(shl(0x40, 0x01), 0x01)\n      dup3\n      gt\n      or\n      tag_368\n      jumpi\n      0x40\n      mstore\n      jump\t// out\n    tag_3:\n      dup2\n      0x1f\n      dup3\n      add\n      slt\n      iszero\n      tag_129\n      jumpi\n      dup1\n      calldataload\n      swap1\n      sub(shl(0x40, 0x01), 0x01)\n      dup3\n      gt\n      tag_368\n      jumpi\n      mload(0x40)\n      swap3\n      tag_673\n      0x1f\n      dup5\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup6\n      tag_2\n      jump\t// in\n    tag_673:\n      dup3\n      dup5\n      mstore\n      0x20\n      dup4\n      dup4\n      add\n      add\n      gt\n      tag_129\n      jumpi\n      dup2\n      0x00\n      swap3\n      0x20\n      dup1\n      swap4\n      add\n      dup4\n      dup7\n      add\n      calldatacopy\n      dup4\n      add\n      add\n      mstore\n      swap1\n      jump\t// out\n    tag_4:\n      calldataload(0x24)\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      dup3\n      and\n      dup3\n      sub\n      tag_129\n      jumpi\n      jump\t// out\n    tag_5:\n      calldataload(0x04)\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      dup3\n      and\n      dup3\n      sub\n      tag_129\n      jumpi\n      jump\t// out\n    tag_6:\n      0x40\n      not(0x03)\n      dup3\n      add\n      slt\n      tag_129\n      jumpi\n      calldataload(0x04)\n      swap1\n      sub(shl(0x40, 0x01), 0x01)\n      dup3\n      gt\n      tag_129\n      jumpi\n      tag_684\n      swap2\n      0x04\n      add\n      tag_3\n      jump\t// in\n    tag_684:\n      swap1\n      calldataload(0x24)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      and\n      dup2\n      sub\n      tag_129\n      jumpi\n      swap1\n      jump\t// out\n    tag_7:\n      0x60\n      not(0x03)\n      dup3\n      add\n      slt\n      tag_129\n      jumpi\n      sub(shl(0x40, 0x01), 0x01)\n      swap2\n      calldataload(0x04)\n      dup4\n      dup2\n      gt\n      tag_129\n      jumpi\n      dup3\n      tag_691\n      swap2\n      0x04\n      add\n      tag_3\n      jump\t// in\n    tag_691:\n      swap3\n      calldataload(0x24)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      and\n      dup2\n      sub\n      tag_129\n      jumpi\n      swap3\n      calldataload(0x44)\n      swap2\n      dup3\n      gt\n      tag_129\n      jumpi\n      tag_696\n      swap2\n      0x04\n      add\n      tag_3\n      jump\t// in\n    tag_696:\n      swap1\n      jump\t// out\n    tag_8:\n      0x00\n    tag_697:\n      dup4\n      dup2\n      lt\n      tag_698\n      jumpi\n      pop\n      pop\n      0x00\n      swap2\n      add\n      mstore\n      jump\t// out\n    tag_698:\n      dup2\n      dup2\n      add\n      mload\n      dup4\n      dup3\n      add\n      mstore\n      0x20\n      add\n      jump(tag_697)\n    tag_9:\n      swap1\n      0x20\n      swap2\n      tag_700\n      dup2\n      mload\n      dup1\n      swap3\n      dup2\n      dup6\n      mstore\n      dup6\n      dup1\n      dup7\n      add\n      swap2\n      add\n      tag_8\n      jump\t// in\n    tag_700:\n      0x1f\n      add\n      not(0x1f)\n      and\n      add\n      add\n      swap1\n      jump\t// out\n    tag_10:\n      0x20\n      dup1\n      dup3\n      add\n      swap1\n      dup1\n      dup4\n      mstore\n      dup4\n      mload\n      dup1\n      swap3\n      mstore\n      0x40\n      dup4\n      add\n      swap3\n      dup2\n      0x40\n      dup5\n      0x05\n      shl\n      dup4\n      add\n      add\n      swap6\n      add\n      swap4\n      0x00\n      swap2\n    tag_701:\n      dup5\n      dup4\n      lt\n      tag_702\n      jumpi\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      jump\t// out\n    tag_702:\n      swap1\n      swap2\n      swap3\n      swap4\n      swap5\n      swap6\n      dup5\n      dup1\n      tag_704\n      0x01\n      swap4\n      not(0x3f)\n      dup7\n      dup3\n      sub\n      add\n      dup8\n      mstore\n      dup11\n      mload\n      tag_9\n      jump\t// in\n    tag_704:\n      swap9\n      add\n      swap4\n      add\n      swap4\n      add\n      swap2\n      swap5\n      swap4\n      swap3\n      swap1\n      jump(tag_701)\n    tag_11:\n      swap1\n      0x06\n      dup3\n      lt\n      iszero\n      tag_705\n      jumpi\n      mstore\n      jump\t// out\n    tag_705:\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x21)\n      revert(0x00, 0x24)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3175:3278  function _checkRole(bytes32 role) internal view virtual {... */\n    tag_12:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n      0x00\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      swap1\n      dup2\n      mstore\n      mstore(0x20, 0xef73bf2ac44f84561b5498839ab1c8c5a4dd99305d838aea0d76c5961778535c)\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/EtharisEscrow.sol\":1949:1973  keccak256(\"SERVER_ROLE\") */\n      0xa8a7bc421f721cb936ea99efdad79237e6ee0b871a2a08cf648691f9584cdc77\n      swap1\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0xff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3495:3518  !hasRole(role, account) */\n      iszero\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3491:3599  if (!hasRole(role, account)) {... */\n      tag_707\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3175:3278  function _checkRole(bytes32 role) internal view virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3491:3599  if (!hasRole(role, account)) {... */\n    tag_707:\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0x44\n      swap1\n      mload(0x40)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3541:3588  AccessControlUnauthorizedAccount(account, role) */\n      swap1\n      shl(0xe0, 0xe2517d3f)\n      dup3\n      mstore\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3541:3588  AccessControlUnauthorizedAccount(account, role) */\n      0x04\n      dup4\n      add\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3541:3588  AccessControlUnauthorizedAccount(account, role) */\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3175:3278  function _checkRole(bytes32 role) internal view virtual {... */\n    tag_13:\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      dup1\n      0x00\n      mstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2936  _roles */\n      0x02\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n      0x00\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      mstore\n      0x20\n      mstore\n      and(sload(keccak256(0x00, 0x40)), 0xff)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3495:3518  !hasRole(role, account) */\n      iszero\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3491:3599  if (!hasRole(role, account)) {... */\n      tag_707\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3175:3278  function _checkRole(bytes32 role) internal view virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6155:6471  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_14:\n      swap1\n      0x00\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      swap2\n      dup1\n      dup4\n      mstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2936  _roles */\n      0x02\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0x20\n      mstore\n      0x40\n      dup4\n      keccak256\n      swap2\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      and\n      swap2\n      dup3\n      dup5\n      mstore\n      0x20\n      mstore\n      0xff\n      0x40\n      dup5\n      keccak256\n      sload\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6252:6275  !hasRole(role, account) */\n      iszero\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6248:6465  if (!hasRole(role, account)) {... */\n      0x00\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      eq\n      tag_711\n      jumpi\n      dup1\n      dup4\n      mstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2936  _roles */\n      0x02\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0x20\n      mstore\n      0x40\n      dup4\n      keccak256\n      dup3\n      dup5\n      mstore\n      0x20\n      mstore\n      0x40\n      dup4\n      keccak256\n      0x01\n      not(0xff)\n      dup3\n      sload\n      and\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6346:6386  RoleGranted(role, account, _msgSender()) */\n      0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6346:6386  RoleGranted(role, account, _msgSender()) */\n      swap4\n      dup1\n      log4\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6400:6411  return true */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6248:6465  if (!hasRole(role, account)) {... */\n    tag_711:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6442:6454  return false */\n      pop\n      pop\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6708:7025  function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_15:\n      swap1\n      0x00\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      swap2\n      dup1\n      dup4\n      mstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2936  _roles */\n      0x02\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0x20\n      mstore\n      0x40\n      dup4\n      keccak256\n      swap2\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      and\n      swap2\n      dup3\n      dup5\n      mstore\n      0x20\n      mstore\n      0xff\n      0x40\n      dup5\n      keccak256\n      sload\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6802:7019  if (hasRole(role, account)) {... */\n      0x00\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      eq\n      tag_711\n      jumpi\n      dup1\n      dup4\n      mstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2936  _roles */\n      0x02\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0x20\n      mstore\n      0x40\n      dup4\n      keccak256\n      dup3\n      dup5\n      mstore\n      0x20\n      mstore\n      0x40\n      dup4\n      keccak256\n      not(0xff)\n      dup2\n      sload\n      and\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6900:6940  RoleRevoked(role, account, _msgSender()) */\n      0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6900:6940  RoleRevoked(role, account, _msgSender()) */\n      swap4\n      dup1\n      log4\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6954:6965  return true */\n      swap1\n      jump\t// out\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n    tag_16:\n      swap1\n      0x01\n      dup3\n      dup2\n      shr\n      swap3\n      and\n      dup1\n      iszero\n      tag_715\n      jumpi\n    tag_716:\n      0x20\n      dup4\n      lt\n      eq\n      tag_717\n      jumpi\n      jump\t// out\n    tag_717:\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x22)\n      revert(0x00, 0x24)\n    tag_715:\n      swap2\n      0x7f\n      and\n      swap2\n      jump(tag_716)\n    tag_17:\n      dup2\n      dup2\n      lt\n      tag_720\n      jumpi\n      pop\n      pop\n      jump\t// out\n    tag_720:\n      0x00\n      dup2\n      sstore\n      0x01\n      add\n      jump(tag_17)\n    tag_18:\n      swap2\n      swap1\n      swap2\n      dup3\n      mload\n      sub(shl(0x40, 0x01), 0x01)\n      dup2\n      gt\n      tag_368\n      jumpi\n      tag_724\n      dup3\n      sload\n      tag_16\n      jump\t// in\n    tag_724:\n      0x1f\n      dup2\n      gt\n      tag_725\n      jumpi\n    tag_726:\n      pop\n      0x20\n      dup1\n      0x1f\n      dup4\n      gt\n      0x01\n      eq\n      tag_727\n      jumpi\n      pop\n      dup2\n      swap3\n      swap4\n      swap5\n      0x00\n      swap3\n      tag_729\n      jumpi\n    tag_730:\n      pop\n      pop\n      dup2\n      0x01\n      shl\n      swap2\n      not(0x00)\n      swap1\n      0x03\n      shl\n      shr\n      not\n      and\n      or\n      swap1\n      sstore\n      jump\t// out\n    tag_729:\n      add\n      mload\n      swap1\n      pop\n      0x00\n      dup1\n      jump(tag_730)\n    tag_727:\n      swap1\n      not(0x1f)\n      dup4\n      and\n      swap6\n      dup5\n      0x00\n      mstore\n      dup3\n      0x00\n      keccak256\n      swap3\n      0x00\n      swap1\n    tag_732:\n      dup9\n      dup3\n      lt\n      tag_733\n      jumpi\n      pop\n      pop\n      dup4\n      0x01\n      swap6\n      swap7\n      swap8\n      lt\n      tag_735\n      jumpi\n    tag_736:\n      pop\n      pop\n      pop\n      dup2\n      shl\n      add\n      swap1\n      sstore\n      jump\t// out\n    tag_735:\n      add\n      mload\n      not(0x00)\n      0xf8\n      dup5\n      0x03\n      shl\n      and\n      shr\n      not\n      and\n      swap1\n      sstore\n      0x00\n      dup1\n      dup1\n      jump(tag_736)\n    tag_733:\n      dup1\n      0x01\n      dup6\n      swap7\n      dup3\n      swap5\n      swap7\n      dup7\n      add\n      mload\n      dup2\n      sstore\n      add\n      swap6\n      add\n      swap4\n      add\n      swap1\n      jump(tag_732)\n    tag_725:\n      tag_737\n      swap1\n      dup4\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      0x1f\n      dup5\n      add\n      0x05\n      shr\n      dup2\n      add\n      swap2\n      0x20\n      dup6\n      lt\n      tag_738\n      jumpi\n    tag_739:\n      0x1f\n      add\n      0x05\n      shr\n      add\n      swap1\n      tag_17\n      jump\t// in\n    tag_737:\n      0x00\n      jump(tag_726)\n    tag_738:\n      swap1\n      swap2\n      pop\n      dup2\n      swap1\n      jump(tag_739)\n    tag_19:\n      swap1\n      dup2\n      sload\n      0x010000000000000000\n      dup2\n      lt\n      iszero\n      tag_368\n      jumpi\n      0x01\n      dup2\n      add\n      dup1\n      dup5\n      sstore\n      dup2\n      lt\n      iszero\n      tag_742\n      jumpi\n      tag_744\n      swap3\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      tag_18\n      jump\t// in\n    tag_744:\n      jump\t// out\n    tag_742:\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_20:\n      tag_745\n      swap1\n      0x20\n      mload(0x40)\n      swap3\n      dup3\n      dup5\n      dup1\n      swap5\n      mload\n      swap4\n      dup5\n      swap3\n      add\n      tag_8\n      jump\t// in\n    tag_745:\n      dup2\n      add\n      sub\n      swap1\n      keccak256\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1767:1873  function _requireNotPaused() internal view virtual {... */\n    tag_21:\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0xff\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1685:1692  _paused */\n      0x01\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      sload\n      and\n      tag_746\n      jumpi\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1767:1873  function _requireNotPaused() internal view virtual {... */\n      jump\t// out\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n    tag_746:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x10\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x82, 0x14185d5cd8589b194e881c185d5cd959)\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n    tag_23:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2475  _status */\n      0x00\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      sload\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2487  _status != _ENTERED */\n      eq\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      tag_748\n      jumpi\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2475  _status */\n      0x00\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      sstore\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n    tag_748:\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1f\n      0x24\n      dup3\n      add\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      mstore\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0x44\n      dup3\n      add\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      mstore\n      0x64\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8370:9090  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_24:\n      swap1\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8507:8928  assembly (\"memory-safe\") {... */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8370:9090  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n      swap2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8507:8928  assembly (\"memory-safe\") {... */\n      dup3\n      dup2\n      mload\n      swap2\n      add\n      dup3\n      dup6\n      gas\n      call\n      iszero\n      tag_750\n      jumpi\n      mload(0x00)\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:8957  returnSize == 0 */\n      tag_752\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8960:8986  address(token).code.length */\n      extcodesize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8960:8991  address(token).code.length == 0 */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:9010  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n    tag_754:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8938:9084  if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {... */\n      tag_755\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8370:9090  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8938:9084  if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {... */\n    tag_755:\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      mload(0x40)\n      shl(0xe0, 0x5274afe7)\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9033:9073  SafeERC20FailedOperation(address(token)) */\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      swap1\n      swap2\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9033:9073  SafeERC20FailedOperation(address(token)) */\n      0x04\n      dup3\n      add\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      mstore\n      0x24\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9033:9073  SafeERC20FailedOperation(address(token)) */\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:9010  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n    tag_752:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9009:9010  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8994:9010  returnValue != 1 */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:9010  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n      jump(tag_754)\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8507:8928  assembly (\"memory-safe\") {... */\n    tag_750:\n      mload(0x40)\n      returndatasize\n      0x00\n      dup3\n      returndatacopy\n      returndatasize\n      swap1\n      revert\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n    tag_25:\n      swap2\n      swap1\n      swap2\n      sub(shl(0x60, 0x01), 0x01)\n      dup1\n      dup1\n      swap5\n      and\n      swap2\n      and\n      mul\n      swap2\n      dup3\n      and\n      swap2\n      dup3\n      sub\n      tag_148\n      jumpi\n      jump\t// out\n        /* \"contracts/EtharisEscrow.sol\":1810:1815  10000 */\n    tag_26:\n      sub(shl(0x60, 0x01), 0x01)\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      swap2\n      dup3\n      and\n      swap1\n      dup3\n      and\n        /* \"contracts/EtharisEscrow.sol\":1810:1815  10000 */\n      sub\n      swap2\n      swap1\n      dup3\n      gt\n      tag_148\n      jumpi\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1219:1379  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n    tag_28:\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1328:1371  abi.encodeCall(token.transfer, (to, value)) */\n      0x20\n      dup3\n      add\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      swap1\n      swap3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1328:1371  abi.encodeCall(token.transfer, (to, value)) */\n      0x24\n      dup4\n      add\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      mstore\n      0x44\n      dup1\n      dup4\n      add\n      swap4\n      swap1\n      swap4\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1328:1371  abi.encodeCall(token.transfer, (to, value)) */\n      swap2\n      dup2\n      mstore\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      0x80\n      dup2\n      add\n      swap2\n      sub(shl(0x40, 0x01), 0x01)\n      dup4\n      gt\n      dup3\n      dup5\n      lt\n      or\n      tag_368\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1328:1371  abi.encodeCall(token.transfer, (to, value)) */\n      tag_744\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      swap3\n      0x40\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1328:1371  abi.encodeCall(token.transfer, (to, value)) */\n      tag_24\n      jump\t// in\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n    tag_29:\n      swap1\n      mload(0x40)\n      swap2\n      dup3\n      0x00\n      dup3\n      sload\n      swap3\n      tag_764\n      dup5\n      tag_16\n      jump\t// in\n    tag_764:\n      swap1\n      dup2\n      dup5\n      mstore\n      0x01\n      swap5\n      dup6\n      dup2\n      and\n      swap1\n      dup2\n      0x00\n      eq\n      tag_765\n      jumpi\n      pop\n      0x01\n      eq\n      tag_767\n      jumpi\n    tag_768:\n      pop\n      pop\n      tag_744\n      swap3\n      pop\n      sub\n      dup4\n      tag_2\n      jump\t// in\n    tag_767:\n      swap1\n      swap4\n      swap2\n      pop\n      0x00\n      mstore\n      0x20\n      swap1\n      dup2\n      0x00\n      keccak256\n      swap4\n      0x00\n      swap2\n    tag_770:\n      dup2\n      dup4\n      lt\n      tag_771\n      jumpi\n      pop\n      pop\n      tag_744\n      swap4\n      pop\n      dup3\n      add\n      add\n      0x00\n      dup1\n      jump(tag_768)\n    tag_771:\n      dup6\n      sload\n      dup9\n      dup5\n      add\n      dup6\n      add\n      mstore\n      swap5\n      dup6\n      add\n      swap5\n      dup8\n      swap5\n      pop\n      swap2\n      dup4\n      add\n      swap2\n      jump(tag_770)\n    tag_765:\n      swap2\n      pop\n      pop\n      tag_744\n      swap5\n      pop\n      0x20\n      swap3\n      pop\n      not(0xff)\n      and\n      dup3\n      dup5\n      add\n      mstore\n      iszero\n      iszero\n      0x05\n      shl\n      dup3\n      add\n      add\n      0x00\n      dup1\n      jump(tag_768)\n    tag_30:\n      swap1\n      sub(shl(0x40, 0x01), 0x01)\n      dup3\n      gt\n      tag_368\n      jumpi\n      mload(0x40)\n      swap2\n      tag_775\n      0x20\n      dup3\n      0x05\n      shl\n      add\n      dup5\n      tag_2\n      jump\t// in\n    tag_775:\n      dup3\n      mstore\n      jump\t// out\n        /* \"contracts/EtharisEscrow.sol\":19658:19985  function updatePlatformFee(... */\n    tag_31:\n      sub(shl(0x60, 0x01), 0x01)\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      swap1\n      dup2\n      dup2\n      and\n        /* \"contracts/EtharisEscrow.sol\":19776:19780  1000 */\n      0x03e8\n        /* \"contracts/EtharisEscrow.sol\":19763:19780  _newFeeBps > 1000 */\n      dup2\n      gt\n        /* \"contracts/EtharisEscrow.sol\":19759:19801  if (_newFeeBps > 1000) revert FeeTooHigh() */\n      tag_776\n      jumpi\n        /* \"contracts/EtharisEscrow.sol\":19828:19843  _platformFeeBps */\n      0x03\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      sload\n      swap3\n      dup4\n      and\n        /* \"contracts/EtharisEscrow.sol\":19857:19877  oldFee == _newFeeBps */\n      swap1\n      dup1\n      dup3\n      eq\n        /* \"contracts/EtharisEscrow.sol\":19853:19886  if (oldFee == _newFeeBps) return; */\n      tag_778\n      jumpi\n      not(0xffffffffffffffffffffffff)\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      swap1\n      swap4\n      and\n      swap3\n      swap1\n      swap3\n      or\n        /* \"contracts/EtharisEscrow.sol\":19828:19843  _platformFeeBps */\n      0x03\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      sstore\n      0x40\n      dup1\n      mload\n      sub(shl(0x60, 0x01), 0x01)\n      swap4\n      dup5\n      and\n      dup2\n      mstore\n      swap2\n      swap1\n      swap3\n      and\n        /* \"contracts/EtharisEscrow.sol\":1810:1815  10000 */\n      0x20\n      dup3\n      add\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      mstore\n        /* \"contracts/EtharisEscrow.sol\":19940:19978  PlatformFeeUpdated(oldFee, _newFeeBps) */\n      0xfeeddf72b7ee4210b769104cb8b071e5706232ac7f671fb292af429ffd58b587\n      swap2\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      dup2\n      swap1\n        /* \"contracts/EtharisEscrow.sol\":1810:1815  10000 */\n      dup2\n      add\n        /* \"contracts/EtharisEscrow.sol\":19940:19978  PlatformFeeUpdated(oldFee, _newFeeBps) */\n    tag_780:\n      sub\n      swap1\n      log1\n        /* \"contracts/EtharisEscrow.sol\":19658:19985  function updatePlatformFee(... */\n      jump\t// out\n        /* \"contracts/EtharisEscrow.sol\":19853:19886  if (oldFee == _newFeeBps) return; */\n    tag_778:\n        /* \"contracts/EtharisEscrow.sol\":19879:19886  return; */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/EtharisEscrow.sol\":19759:19801  if (_newFeeBps > 1000) revert FeeTooHigh() */\n    tag_776:\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      mload(0x40)\n      shl(0xe0, 0xcd4e6167)\n        /* \"contracts/EtharisEscrow.sol\":19789:19801  FeeTooHigh() */\n      dup2\n      mstore\n      0x04\n      swap1\n      revert\n        /* \"contracts/EtharisEscrow.sol\":19991:20362  function updateFeeRecipient(... */\n    tag_32:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      dup2\n      and\n      swap1\n        /* \"contracts/EtharisEscrow.sol\":20101:20128  _newRecipient == address(0) */\n      dup2\n      iszero\n        /* \"contracts/EtharisEscrow.sol\":20097:20153  if (_newRecipient == address(0)) revert InvalidAddress() */\n      tag_210\n      jumpi\n        /* \"contracts/EtharisEscrow.sol\":20187:20200  _feeRecipient */\n      0x03\n        /* \"contracts/EtharisEscrow.sol\":1810:1815  10000 */\n      sload\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      swap2\n      dup3\n      0x60\n      shr\n        /* \"contracts/EtharisEscrow.sol\":20214:20243  oldRecipient == _newRecipient */\n      swap1\n      dup2\n      eq\n        /* \"contracts/EtharisEscrow.sol\":20210:20252  if (oldRecipient == _newRecipient) return; */\n      tag_783\n      jumpi\n      sub(shl(0x60, 0x01), 0x01)\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      swap1\n      swap3\n      and\n      0x60\n      dup3\n      swap1\n      shl\n      not(0xffffffffffffffffffffffff)\n      and\n      or\n        /* \"contracts/EtharisEscrow.sol\":20187:20200  _feeRecipient */\n      0x03\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      sstore\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap4\n      dup5\n      and\n      dup2\n      mstore\n      swap3\n      swap1\n      swap2\n      and\n      0x20\n      dup4\n      add\n      mstore\n        /* \"contracts/EtharisEscrow.sol\":20307:20355  FeeRecipientUpdated(oldRecipient, _newRecipient) */\n      0xaaebcf1bfa00580e41d966056b48521fa9f202645c86d4ddf28113e617c1b1d3\n      swap2\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      swap1\n      dup2\n      swap1\n      dup2\n      add\n        /* \"contracts/EtharisEscrow.sol\":20307:20355  FeeRecipientUpdated(oldRecipient, _newRecipient) */\n      tag_780\n        /* \"contracts/EtharisEscrow.sol\":680:21575  contract EtharisEscrow is ReentrancyGuard, Pausable, AccessControl {... */\n      jump\n        /* \"contracts/EtharisEscrow.sol\":20210:20252  if (oldRecipient == _newRecipient) return; */\n    tag_783:\n        /* \"contracts/EtharisEscrow.sol\":20245:20252  return; */\n      pop\n      pop\n      pop\n      jump\t// out\n    stop\n    data_a8eda418a66b2f5395d4a15b2f03de75b34fff39bb2e2a8b57f6be974d56e7b0 8531198e5d946af9a770d2eeba00258645e163142d835fe1b04e45f4db720f8b\n\n    auxdata: 0xa2646970667358221220aee6a9a9faa7802ae1c0b46c20752fb372e8dbb1b84175ecbbb135a8f956725064736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"abi_decode_address_fromMemory": {
									"entryPoint": 393,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"fun_grantRole": {
									"entryPoint": 414,
									"id": 257,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60a0601f62002fdb38819003918201601f1916830191906001600160401b038311848410176200017557816060928592604095865283398101031262000171576200004a8262000189565b9162000066826200005e6020840162000189565b920162000189565b60015f819055805460ff191690556001600160a01b0393841693909190841562000160578082161562000160578216156200014f57620000bd929360805260018060601b03199060601b1660fa176003556200019e565b505f8051602062002fbb833981519152805f5260026020526001825f20019181835493555191817fbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff5f80a4612d7b908162000240823960805181818161039501528181610b6601528181610bd101528181611194015281816116b501528181611c4201528181611ef801526120e10152f35b825163e6c4247b60e01b8152600490fd5b835163e6c4247b60e01b8152600490fd5b5f80fd5b634e487b7160e01b5f52604160045260245ffd5b51906001600160a01b03821682036200017157565b6001600160a01b03165f8181527fef73bf2ac44f84561b5498839ab1c8c5a4dd99305d838aea0d76c5961778535c60205260408120549091905f8051602062002fbb8339815191529060ff166200023a5780835260026020526040832082845260205260408320600160ff198254161790557f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d339380a4600190565b50509056fe6080806040526004361015610012575f80fd5b5f90813560e01c90816301ffc9a7146123ff5750806303f715da146122e25780630e59a3951461216657806318cf28341461212b5780631a1aaeed14611fb657806322dcd13e14611f8f578063248a9ca314611f6257806324d956c814611d8d5780632f2ff15d14611d4f578063317b8c5b14611d1957806336568abe14611cd157806338a1328714611b095780633f4ba83a14611a745780634690484014611a535780634971716f1461185e5780635c975abb1461183b57806376492d3f146117a15780638456cb591461174757806391d14854146116fe57806395ccea67146116825780639b1221ab146115215780639f1cf42d146110435780639fad59b414610fa0578063a0a57dac14610cd6578063a217fddf14610cba578063aed1505d14610c42578063d547741f14610c00578063d6bc7c6314610bbb578063e39fff3814610a0b578063e4abd4cb14610721578063e7079180146105d2578063ef03c10e14610243578063f0c3cd20146101c35763f160d36914610194575f80fd5b346101c05760203660031901126101c0576101bd6101b06124fc565b6101b8612675565b612c97565b80f35b80fd5b50346101c05760208060031936011261023f576001600160a01b036101e66124fc565b16825260058152604082208054906101fd82612bd7565b9280840191855280852094915b838310610223576040518061021f87826125f3565b0390f35b600182819261023189612b38565b81520196019201919461020a565b5080fd5b50346101c05760603660031901126101c0576004356001600160401b03811161023f57610274903690600401612491565b61027c6124e6565b6044359182151583036105ce576102916129f9565b610299612675565b6102a16129b5565b6040519060ff6006825193602081818601966102be81838a6125ad565b81016004815203019020015460c81c16156105bc576040519181516102e48185846125ad565b8301600481526001846020828060a01b0396879403019020015416838516036105aa5760ff6006604051602081865161031e8183896125ad565b81016004815203019020015460c01c16600681101561059657600303610584576020610355916040518093819286519283916125ad565b810160048152030190206001600160601b03600582015416918360018301541695848354169260066003549101600160c21b60ff60c01b198254161790557f00000000000000000000000000000000000000000000000000000000000000009589835f1461052557506113888602916001600160601b03831692830361051157899161271080940497886103e891612ad0565b936103fc6001600160601b0384168a612ab2565b6001600160601b031604978861041191612ad0565b996001600160601b038b16928315159a6104b7997fea4ea4b4229888eeba3eb2772df89c52af23c7fe3d530b0c1f2ca146f32c12ba966060965f80516020612d268339815191529e610500575b50506001600160601b038816806104ef575b50506001600160601b038b1690816104db575b5050505b6001600160601b0361049888612995565b956040519715158852818d1660208901521660408701521693a3612995565b604080516001600160601b0395861681529290941660208301529290a36001815580f35b6104e792861c90612ae9565b5f8080610483565b6104f99183612ae9565b5f80610470565b61050a9184612ae9565b8e5f61045e565b634e487b7160e01b5f52601160045260245ffd5b915060607fea4ea4b4229888eeba3eb2772df89c52af23c7fe3d530b0c1f2ca146f32c12ba916104b79697995f80516020612d2683398151915299859b80969a81610573575b505050610487565b61057c92612ae9565b5f808061056b565b604051635e40b94f60e01b8152600490fd5b634e487b7160e01b87526021600452602487fd5b60405163ea8e4eb560e01b8152600490fd5b60405163223da47360e21b8152600490fd5b5f80fd5b50346101c05760203660031901126101c0576004356001600160401b03918282116101c05750602061060b61061e923690600401612491565b81604051938285809451938492016125ad565b81016004815203019020600681015460ff8160c81c16156105bc576106989260018060a01b0391816106eb84865416946001870154166106dd60058801549661066960028a01612b38565b98610682600461067b60038401612b38565b9201612b38565b936040519b8c9b8c6101a08091528d01906125ce565b9260208c015260408b01526001600160601b03891660608b0152858960601c1660808b01526106d060a08b0160ff8960c01c16612654565b89820360c08b01526125ce565b9087820360e08901526125ce565b93818360401c1661010087015260a01c1661012085015281811661014085015260801c1661016083015260016101808301520390f35b50346101c05760c03660031901126101c0576001600160401b03600435818111610a0757610753903690600401612491565b61075b6124e6565b6044356001600160a01b0381169391908490036105ce57606435926001600160601b03841684036105ce57826084351660843503610a035760a4358381116109ff576107ab903690600401612491565b916107b4612675565b6107bc6129b5565b60ff600660405160208186516107d58183858b016125ad565b81016004815203019020015460c81c166109ed5785156109db576001600160a01b03169384156109db578585146109c9576001600160601b038116156109b75742846084351611156109a557825115610993576109586040927fceb1a488be98b2739817f21e7d3b0a343434519cd0fe4db3ef5fc27a96e8d295946108d0855160208185516108678183858a016125ad565b810160048152030190209161087f8460028501612851565b82546001600160a01b03199081168b17845560018401805482168d1790556005840180549091166001600160601b0388161760843560601b67ffffffffffffffff60601b1617905560038301612851565b60068101805468ffffffffffffffffff60801b19164260801b67ffffffffffffffff60801b1617815560049190910180545f919061090d90612803565b601f8111610974575b5055805460ff60c81b1916600160c81b179055868952600560205283892061093f90829061294d565b878952600660205261095381858b2061294d565b612995565b936001600160601b03835192168252608435166020820152a480f35b8183526020832061098d91601f0160051c81019061283b565b5f610916565b6040516307e4dd0160e31b8152600490fd5b604051630642ce7760e01b8152600490fd5b604051635e85ae7360e01b8152600490fd5b6040516324da034560e21b8152600490fd5b60405163e6c4247b60e01b8152600490fd5b6040516338a6a80760e11b8152600490fd5b8680fd5b8580fd5b8280fd5b50346101c05760208060031936011261023f576001600160401b0390600435828111610bb757610a3f903690600401612491565b610a476129f9565b610a4f612675565b610a576129b5565b60405160ff6006835192858181870195610a728183896125ad565b81016004815203019020015460c81c16156105bc5760ff600660405185818651610a9d8183896125ad565b81016004815203019020015460c01c166006811015610ba3576001036105845782610ad3916040518093819286519283916125ad565b81016004815203019020926005840154908160601c16421115610b915760068401805460ff60c01b1916600560c01b1790556001600160601b0316927fb559d285c87e4fa0f561388264310703ff0c6c454a39ae52d0ae94032ff0db7091610b43918580610b54575b5050612995565b916040519384523393a36001815580f35b9054610b8a91906001600160a01b03167f0000000000000000000000000000000000000000000000000000000000000000612ae9565b5f85610b3c565b6040516302eb354360e41b8152600490fd5b634e487b7160e01b86526021600452602486fd5b8380fd5b50346101c057806003193601126101c0576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b50346101c05760403660031901126101c057610c3e600435610c206124e6565b908084526002602052610c3960016040862001546126ee565b61278e565b5080f35b50346101c05760208060031936011261023f576001600160a01b03610c656124fc565b1682526006815260408220805490610c7c82612bd7565b9280840191855280852094915b838310610c9e576040518061021f87826125f3565b6001828192610cac89612b38565b815201960192019194610c89565b50346101c057806003193601126101c057602090604051908152f35b50346101c05760203660031901126101c0576004356001600160401b03811161023f576020610d0c610d7b923690600401612491565b83610180604051610d1c81612454565b828152828582015260606040820152606080820152606060808201528260a08201528260c08201528260e082015282610100820152826101208201528261014082015282610160820152015281604051938285809451938492016125ad565b8101600481520301902090600660405192610d9584612454565b80546001600160a01b0390811685526001820154166020850152610dbb60028201612b38565b6040850152610dcc60038201612b38565b6060850152610ddd60048201612b38565b60808501526001600160401b0360058201546001600160601b03811660a0870152818160601c1660c087015260a01c1660e08501520154906001600160401b0382166101008401526001600160401b038260401c166101208401526001600160401b038260801c16610140840152600660ff8360c01c161015610f8c57508060ff809260c01c1661016084015260c81c16151561018082015260405180916020825260018060a01b03815116602083015260018060a01b036020820151166040830152610180610ef2610ec160408401516101a060608701526101c08601906125ce565b610edd606085015191601f1992838883030160808901526125ce565b906080850151908683030160a08701526125ce565b916001600160601b0360a08201511660c08501526001600160401b0360c08201511660e08501526001600160401b0360e0820151166101008501526001600160401b03610100820151166101208501526001600160401b03610120820151166101408501526001600160401b0361014082015116610160850152610f7e61016082015183860190612654565b015115156101a08301520390f35b634e487b7160e01b81526021600452602490fd5b50346101c05760403660031901126101c057610fba6124fc565b60243580151581036105ce571561102a576001600160a01b031681526005602052604081205b8054610feb81612bd7565b918352602080842093908084015b83831061100e576040518061021f87826125f3565b600182819261101c89612b38565b815201960192019194610ff9565b6001600160a01b03168152600660205260408120610fe0565b50346101c05760e03660031901126101c0576001600160401b03600435818111610a0757611075903690600401612491565b9061107e6124e6565b90604435916001600160601b03831680930361151d5760843560ff8116809103610a03576110aa6129f9565b6110b2612675565b6110ba6129b5565b60405194859260ff6006858451602097816110da8a93848a019e8f6125ad565b81016004815203019020015460c81c16156105bc5760405192825161110081868b6125ad565b840160048152848660018060a01b03968793030190205416978483168099036105aa5760ff6006604051888188516111398183896125ad565b81016004815203019020015460c01c16600681101561150957610584578351156114f75787156114e55761117b866005926040518093819289519283916125ad565b81016004815203019020019186835460a01c166114d3577f0000000000000000000000000000000000000000000000000000000000000000948516906040516370a0823160e01b81528a60048201528781602481865afa80156114c8578a918d91611493575b50106114815786918315801590611476575b801561146b575b611349575b604051636eb1769f60e11b81526001600160a01b03909216600483015230602483015290925082908180604481015b03915afa801561133e5787918a9161130d575b50106112fb576040516323b872dd60e01b8582015260248101889052306044820152606480820188905281529460a08601908111868210176112e7577f2c138f65913cd3b9ca6f36e4b59e26830a033a978ca69f935781972e6df1f61d956112d8946112af92604052612a4d565b805467ffffffffffffffff60a01b19164260a01b67ffffffffffffffff60a01b16179055612995565b92604051908152a36001815580f35b634e487b7160e01b5f52604160045260245ffd5b6040516313be252b60e01b8152600490fd5b809250868092503d8311611337575b6113268183612470565b810103126105ce578690515f611241565b503d61131c565b6040513d8b823e3d90fd5b8092509290923b15611467576040519063d505accf60e01b82528a60048301523060248301528960448301526064356064830152608482015260a43560a482015260c43560c48201528a8160e48183865af1908161143f575b506113b95760405163b78cb0dd60e01b8152600490fd5b604051636eb1769f60e11b81526001600160a01b03831660048201523060248201528681604481855afa80156114345789918c91611403575b50106112fb5761122e9186916111ff565b809250888092503d831161142d575b61141c8183612470565b810103126105ce578890515f6113f2565b503d611412565b6040513d8d823e3d90fd5b88819c929c1161145357604052995f6113a2565b634e487b7160e01b82526041600452602482fd5b8a80fd5b5060c43515156111fa565b5060a43515156111f3565b604051631e9acf1760e31b8152600490fd5b809250898092503d83116114c1575b6114ac8183612470565b810103126114bd578990515f6111e1565b8b80fd5b503d6114a2565b6040513d8e823e3d90fd5b604051631924fceb60e31b8152600490fd5b60405163162908e360e11b8152600490fd5b604051635f0be7af60e01b8152600490fd5b634e487b7160e01b8b52602160045260248bfd5b8480fd5b50346101c05761153036612512565b90611539612675565b6115416129b5565b60405160ff60068351926020818187019561155d8183896125ad565b81016004815203019020015460c81c16156105bc5760405182516115828183856125ad565b60049082019081528190036020019020600101546001600160a01b0393841693168390036105aa5760ff600660405160208186516115c18183896125ad565b81016004815203019020015460c01c16600681101561166e576105845760206115f5916040518093819286519283916125ad565b81016004815203019020906001600160401b03600583015460a01c161561165c57600691909101805460ff60c01b1916600160c01b17905561163690612995565b7ecaec7345d2eb04a42197ac2a2cd7cd74a00b2991b69bb53e23465d4092fdfb8380a380f35b6040516347510bbd60e11b8152600490fd5b634e487b7160e01b85526021600452602485fd5b50346101c05760403660031901126101c05761169c6124fc565b6024356116a7612675565b6001600160a01b03918216917f00000000000000000000000000000000000000000000000000000000000000001682146116ec5780156114e5576101bd913390612ae9565b6040516318ba2fc160e31b8152600490fd5b50346101c05760403660031901126101c05760ff604060209261171f6124e6565b6004358252600285528282206001600160a01b03909116825284522054604051911615158152f35b50346101c057806003193601126101c057611760612675565b6117686129b5565b600160ff19815416176001557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586020604051338152a180f35b50346101c05760203660031901126101c0576001600160401b03600435818111610a07576117da602061060b6006933690600401612491565b8101600481520301902001549060ff8260c81c16918261181b575b602093508261180b575b50506040519015158152f35b60401c1642101590505f806117ff565b915060ff8260c01c16926006841015610f8c5750600260209314916117f5565b50346101c057806003193601126101c057602060ff600154166040519015158152f35b50346101c05761186d36612553565b611878929192612675565b6118806129b5565b604051825160ff600660209384818189019561189d8183896125ad565b81016004815203019020015460c81c16156105bc5760405184516118c28183856125ad565b600490820190815281900383019020600101546001600160a01b0395861695168590036105aa5760ff6006604051848188516118ff8183896125ad565b81016004815203019020015460c01c166006811015610596576001036105845781611935916040518093819288519283916125ad565b810160048152030190206001600160401b039081600582015460601c164211611a4157835115611a2f57600681019081546203f480420190814211611a1b5778ff0000000000000000ffffffffffffffffffffffffffffffff19164285161760409190911b6fffffffffffffffff00000000000000001617600160c11b1782557f934109f661b65dbccffcae4f7ee04261eb7b36e5136e1ca86dde1b00598cb03194611a1194909390926119fc926119f1908690600401612851565b5460401c1695612995565b946040519384936040855260408501906125ce565b918301520390a380f35b634e487b7160e01b8a52601160045260248afd5b60405163361178c760e01b8152600490fd5b60405163764b8e3360e11b8152600490fd5b50346101c057806003193601126101c057602060035460601c604051908152f35b50346101c057806003193601126101c057611a8d612675565b60015460ff811615611acd5760ff19166001557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6020604051338152a180f35b60405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606490fd5b50346101c05760203660031901126101c0576001600160401b03600435818111610a0757611b3b903690600401612491565b90611b446129f9565b611b4c612675565b611b546129b5565b60405160ff600684519260208181880195611b708183896125ad565b81016004815203019020015460c81c16156105bc5760ff60066040516020818751611b9c8183896125ad565b81016004815203019020015460c01c16600681101561166e57600203610584576020611bd3916040518093819287519283916125ad565b81016004815203019020600681018054928360401c164210611cbf576104b75f80516020612d26833981519152926001600160601b038060058301541693611c2f61271083611c26816003541689612ab2565b16048096612ad0565b60ff60c01b19909716600160c21b1790557f00000000000000000000000000000000000000000000000000000000000000009080871680611ca0575b50841680611c89575b5050600101546001600160a01b031694612995565b611c999160035460601c90612ae9565b5f80611c74565b6001840154611cb991906001600160a01b031684612ae9565b5f611c6b565b604051632d6bf64560e01b8152600490fd5b50346101c05760403660031901126101c057611ceb6124e6565b336001600160a01b03821603611d0757610c3e9060043561278e565b60405163334bd91960e11b8152600490fd5b50346101c05760203660031901126101c0576004356001600160601b038116810361023f576101bd90611d4a612675565b612bfe565b50346101c05760403660031901126101c057610c3e600435611d6f6124e6565b908084526002602052611d8860016040862001546126ee565b612710565b50346101c057611d9c36612512565b611da46129f9565b611dac612675565b611db46129b5565b60405160ff600684519260208181880195611dd08183896125ad565b81016004815203019020015460c81c16156105bc5760206040518451611df78183866125ad565b8101600481528160018060a01b03938493849303019020541693168093036105aa5760ff60066040516020818851611e3081838a6125ad565b81016004815203019020015460c01c166006811015610ba357600203610584576104b7611e7860205f80516020612d2683398151915294604051809381928a519283916125ad565b810160048152030190209160016001600160601b03938460058201541694611eb461271082611eab81600354168a612ab2565b16048097612ad0565b60068301805460ff60c01b191660c286901b17905597611ed38a612995565b7ecaec7345d2eb04a42197ac2a2cd7cd74a00b2991b69bb53e23465d4092fdfb8c80a37f00000000000000000000000000000000000000000000000000000000000000009080891680611f4c575b50861680611f35575b505001541694612995565b611f459160035460601c90612ae9565b5f80611f2a565b611f5c9086868601541684612ae9565b5f611f21565b50346101c05760203660031901126101c05760016040602092600435815260028452200154604051908152f35b50346101c057806003193601126101c05760206001600160601b0360035416604051908152f35b50346101c05760203660031901126101c0576004356001600160401b03811161023f57611fe7903690600401612491565b611fef6129f9565b611ff7612675565b60405160ff6006835192602081818701956120138183896125ad565b81016004815203019020015460c81c16156105bc57602061203f916040518093819286519283916125ad565b8101600481520301902090600682019081549260ff8460c01c166006811015610ba3576001810361210c575b5061209c926001600160601b0360058301541694600560c01b9060ff60c01b191617905583806120cf575050612995565b6040519182527fb559d285c87e4fa0f561388264310703ff0c6c454a39ae52d0ae94032ff0db7060203393a36001815580f35b905461210591906001600160a01b03167f0000000000000000000000000000000000000000000000000000000000000000612ae9565b5f83610b3c565b600203612119575f61206b565b6040516304df0cad60e31b8152600490fd5b50346101c057806003193601126101c05760206040517fa8a7bc421f721cb936ea99efdad79237e6ee0b871a2a08cf648691f9584cdc778152f35b50346101c05761217536612553565b909161217f612675565b6121876129b5565b60405191815160ff60066020958681818801956121a58183896125ad565b81016004815203019020015460c81c16156105bc5760405183516121ca8183856125ad565b600490820190815281900385019020546001600160a01b0395861695168590036105aa5760ff6006604051868187516122048183896125ad565b81016004815203019020015460c01c166006811015610596576002036105845761223c846006926040518093819288519283916125ad565b8101600481520301902001918254906001600160401b038260401c164210156122d0578251156122be5760ff60c01b19909116600360c01b179092557fde7b01bef0884582ce204f7f920e57f99dd569f93867450872f436be5a03c755916122a390612995565b926122b86040519282849384528301906125ce565b0390a380f35b60405163bc7fd33160e01b8152600490fd5b604051632d0f572d60e11b8152600490fd5b50346101c0576122f136612512565b906122fa612675565b60405190805160ff60066020948581818701956123188183896125ad565b81016004815203019020015460c81c16156105bc57604051825161233d8183856125ad565b600490820190815281900384019020546001600160a01b0394851694168490036105aa5760ff6006604051858186516123778183896125ad565b81016004815203019020015460c01c166006811015610ba357610584577fb559d285c87e4fa0f561388264310703ff0c6c454a39ae52d0ae94032ff0db709160066123d1856123f4946040518093819287519283916125ad565b60049082019081520301902001805460ff60c01b1916600560c01b179055612995565b91604051858152a380f35b90503461023f57602036600319011261023f5760043563ffffffff60e01b8116809103610a075760209250637965db0b60e01b8114908115612443575b5015158152f35b6301ffc9a760e01b1490505f61243c565b6101a081019081106001600160401b038211176112e757604052565b90601f801991011681019081106001600160401b038211176112e757604052565b81601f820112156105ce578035906001600160401b0382116112e757604051926124c5601f8401601f191660200185612470565b828452602083830101116105ce57815f926020809301838601378301015290565b602435906001600160a01b03821682036105ce57565b600435906001600160a01b03821682036105ce57565b60406003198201126105ce57600435906001600160401b0382116105ce5761253c91600401612491565b906024356001600160a01b03811681036105ce5790565b60606003198201126105ce576001600160401b03916004358381116105ce578261257f91600401612491565b926024356001600160a01b03811681036105ce57926044359182116105ce576125aa91600401612491565b90565b5f5b8381106125be5750505f910152565b81810151838201526020016125af565b906020916125e7815180928185528580860191016125ad565b601f01601f1916010190565b602080820190808352835180925260408301928160408460051b8301019501935f915b8483106126265750505050505090565b9091929394958480612644600193603f198682030187528a516125ce565b9801930193019194939290612616565b9060068210156126615752565b634e487b7160e01b5f52602160045260245ffd5b335f9081527fef73bf2ac44f84561b5498839ab1c8c5a4dd99305d838aea0d76c5961778535c60205260409020547fa8a7bc421f721cb936ea99efdad79237e6ee0b871a2a08cf648691f9584cdc779060ff16156126d05750565b6044906040519063e2517d3f60e01b82523360048301526024820152fd5b805f52600260205260405f20335f5260205260ff60405f205416156126d05750565b905f918083526002602052604083209160018060a01b03169182845260205260ff604084205416155f146127895780835260026020526040832082845260205260408320600160ff198254161790557f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d339380a4600190565b505090565b905f918083526002602052604083209160018060a01b03169182845260205260ff6040842054165f14612789578083526002602052604083208284526020526040832060ff1981541690557ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b339380a4600190565b90600182811c92168015612831575b602083101461281d57565b634e487b7160e01b5f52602260045260245ffd5b91607f1691612812565b818110612846575050565b5f815560010161283b565b91909182516001600160401b0381116112e75761286e8254612803565b601f8111612912575b50602080601f83116001146128b25750819293945f926128a7575b50508160011b915f199060031b1c1916179055565b015190505f80612892565b90601f19831695845f52825f20925f905b8882106128fa575050836001959697106128e2575b505050811b019055565b01515f1960f88460031b161c191690555f80806128d8565b806001859682949686015181550195019301906128c3565b61293d90835f5260205f20601f840160051c81019160208510612943575b601f0160051c019061283b565b5f612877565b9091508190612930565b908154680100000000000000008110156112e757600181018084558110156129815761297f925f5260205f2001612851565b565b634e487b7160e01b5f52603260045260245ffd5b6129ad906020604051928284809451938492016125ad565b810103902090565b60ff600154166129c157565b60405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606490fd5b60025f5414612a085760025f55565b60405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606490fd5b905f602091828151910182855af115612aa7575f513d612a9e57506001600160a01b0381163b155b612a7c5750565b604051635274afe760e01b81526001600160a01b039091166004820152602490fd5b60011415612a75565b6040513d5f823e3d90fd5b9190916001600160601b038080941691160291821691820361051157565b6001600160601b03918216908216039190821161051157565b60405163a9059cbb60e01b60208201526001600160a01b03909216602483015260448083019390935291815260808101916001600160401b038311828410176112e75761297f92604052612a4d565b9060405191825f825492612b4b84612803565b9081845260019485811690815f14612bb45750600114612b74575b505061297f92500383612470565b909391505f52602090815f20935f915b818310612b9c57505061297f93508201015f80612b66565b85548884018501529485019487945091830191612b84565b91505061297f94506020925060ff191682840152151560051b8201015f80612b66565b906001600160401b0382116112e75760405191612bfa60208260051b0184612470565b8252565b6001600160601b03908181166103e88111612c855760035492831690808214612c7f576bffffffffffffffffffffffff1990931692909217600355604080516001600160601b0393841681529190921660208201527ffeeddf72b7ee4210b769104cb8b071e5706232ac7f671fb292af429ffd58b58791819081015b0390a1565b50505050565b60405163cd4e616760e01b8152600490fd5b6001600160a01b0381169081156109db57600354918260601c908114612d20576001600160601b03909216606082901b6bffffffffffffffffffffffff191617600355604080516001600160a01b0393841681529290911660208301527faaebcf1bfa00580e41d966056b48521fa9f202645c86d4ddf28113e617c1b1d3919081908101612c7a565b50505056fe8531198e5d946af9a770d2eeba00258645e163142d835fe1b04e45f4db720f8ba2646970667358221220aee6a9a9faa7802ae1c0b46c20752fb372e8dbb1b84175ecbbb135a8f956725064736f6c63430008140033a8a7bc421f721cb936ea99efdad79237e6ee0b871a2a08cf648691f9584cdc77",
							"opcodes": "PUSH1 0xA0 PUSH1 0x1F PUSH3 0x2FDB CODESIZE DUP2 SWAP1 SUB SWAP2 DUP3 ADD PUSH1 0x1F NOT AND DUP4 ADD SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT DUP5 DUP5 LT OR PUSH3 0x175 JUMPI DUP2 PUSH1 0x60 SWAP3 DUP6 SWAP3 PUSH1 0x40 SWAP6 DUP7 MSTORE DUP4 CODECOPY DUP2 ADD SUB SLT PUSH3 0x171 JUMPI PUSH3 0x4A DUP3 PUSH3 0x189 JUMP JUMPDEST SWAP2 PUSH3 0x66 DUP3 PUSH3 0x5E PUSH1 0x20 DUP5 ADD PUSH3 0x189 JUMP JUMPDEST SWAP3 ADD PUSH3 0x189 JUMP JUMPDEST PUSH1 0x1 PUSH0 DUP2 SWAP1 SSTORE DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND SWAP4 SWAP1 SWAP2 SWAP1 DUP5 ISZERO PUSH3 0x160 JUMPI DUP1 DUP3 AND ISZERO PUSH3 0x160 JUMPI DUP3 AND ISZERO PUSH3 0x14F JUMPI PUSH3 0xBD SWAP3 SWAP4 PUSH1 0x80 MSTORE PUSH1 0x1 DUP1 PUSH1 0x60 SHL SUB NOT SWAP1 PUSH1 0x60 SHL AND PUSH1 0xFA OR PUSH1 0x3 SSTORE PUSH3 0x19E JUMP JUMPDEST POP PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x2FBB DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x1 DUP3 PUSH0 KECCAK256 ADD SWAP2 DUP2 DUP4 SLOAD SWAP4 SSTORE MLOAD SWAP2 DUP2 PUSH32 0xBD79B86FFE0AB8E8776151514217CD7CACD52C909F66475C3AF44E129F0B00FF PUSH0 DUP1 LOG4 PUSH2 0x2D7B SWAP1 DUP2 PUSH3 0x240 DUP3 CODECOPY PUSH1 0x80 MLOAD DUP2 DUP2 DUP2 PUSH2 0x395 ADD MSTORE DUP2 DUP2 PUSH2 0xB66 ADD MSTORE DUP2 DUP2 PUSH2 0xBD1 ADD MSTORE DUP2 DUP2 PUSH2 0x1194 ADD MSTORE DUP2 DUP2 PUSH2 0x16B5 ADD MSTORE DUP2 DUP2 PUSH2 0x1C42 ADD MSTORE DUP2 DUP2 PUSH2 0x1EF8 ADD MSTORE PUSH2 0x20E1 ADD MSTORE RETURN JUMPDEST DUP3 MLOAD PUSH4 0xE6C4247B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST DUP4 MLOAD PUSH4 0xE6C4247B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH3 0x171 JUMPI JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 DUP2 DUP2 MSTORE PUSH32 0xEF73BF2AC44F84561B5498839AB1C8C5A4DD99305D838AEA0D76C5961778535C PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x2FBB DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0xFF AND PUSH3 0x23A JUMPI DUP1 DUP4 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D CALLER SWAP4 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST POP POP SWAP1 JUMP INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 SWAP1 DUP2 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x1FFC9A7 EQ PUSH2 0x23FF JUMPI POP DUP1 PUSH4 0x3F715DA EQ PUSH2 0x22E2 JUMPI DUP1 PUSH4 0xE59A395 EQ PUSH2 0x2166 JUMPI DUP1 PUSH4 0x18CF2834 EQ PUSH2 0x212B JUMPI DUP1 PUSH4 0x1A1AAEED EQ PUSH2 0x1FB6 JUMPI DUP1 PUSH4 0x22DCD13E EQ PUSH2 0x1F8F JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x1F62 JUMPI DUP1 PUSH4 0x24D956C8 EQ PUSH2 0x1D8D JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x1D4F JUMPI DUP1 PUSH4 0x317B8C5B EQ PUSH2 0x1D19 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x1CD1 JUMPI DUP1 PUSH4 0x38A13287 EQ PUSH2 0x1B09 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x1A74 JUMPI DUP1 PUSH4 0x46904840 EQ PUSH2 0x1A53 JUMPI DUP1 PUSH4 0x4971716F EQ PUSH2 0x185E JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x183B JUMPI DUP1 PUSH4 0x76492D3F EQ PUSH2 0x17A1 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x1747 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x16FE JUMPI DUP1 PUSH4 0x95CCEA67 EQ PUSH2 0x1682 JUMPI DUP1 PUSH4 0x9B1221AB EQ PUSH2 0x1521 JUMPI DUP1 PUSH4 0x9F1CF42D EQ PUSH2 0x1043 JUMPI DUP1 PUSH4 0x9FAD59B4 EQ PUSH2 0xFA0 JUMPI DUP1 PUSH4 0xA0A57DAC EQ PUSH2 0xCD6 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0xCBA JUMPI DUP1 PUSH4 0xAED1505D EQ PUSH2 0xC42 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0xC00 JUMPI DUP1 PUSH4 0xD6BC7C63 EQ PUSH2 0xBBB JUMPI DUP1 PUSH4 0xE39FFF38 EQ PUSH2 0xA0B JUMPI DUP1 PUSH4 0xE4ABD4CB EQ PUSH2 0x721 JUMPI DUP1 PUSH4 0xE7079180 EQ PUSH2 0x5D2 JUMPI DUP1 PUSH4 0xEF03C10E EQ PUSH2 0x243 JUMPI DUP1 PUSH4 0xF0C3CD20 EQ PUSH2 0x1C3 JUMPI PUSH4 0xF160D369 EQ PUSH2 0x194 JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1C0 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C0 JUMPI PUSH2 0x1BD PUSH2 0x1B0 PUSH2 0x24FC JUMP JUMPDEST PUSH2 0x1B8 PUSH2 0x2675 JUMP JUMPDEST PUSH2 0x2C97 JUMP JUMPDEST DUP1 RETURN JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1C0 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x23F JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x1E6 PUSH2 0x24FC JUMP JUMPDEST AND DUP3 MSTORE PUSH1 0x5 DUP2 MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP1 SLOAD SWAP1 PUSH2 0x1FD DUP3 PUSH2 0x2BD7 JUMP JUMPDEST SWAP3 DUP1 DUP5 ADD SWAP2 DUP6 MSTORE DUP1 DUP6 KECCAK256 SWAP5 SWAP2 JUMPDEST DUP4 DUP4 LT PUSH2 0x223 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH2 0x21F DUP8 DUP3 PUSH2 0x25F3 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 DUP3 DUP2 SWAP3 PUSH2 0x231 DUP10 PUSH2 0x2B38 JUMP JUMPDEST DUP2 MSTORE ADD SWAP7 ADD SWAP3 ADD SWAP2 SWAP5 PUSH2 0x20A JUMP JUMPDEST POP DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1C0 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C0 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x23F JUMPI PUSH2 0x274 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x2491 JUMP JUMPDEST PUSH2 0x27C PUSH2 0x24E6 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP2 DUP3 ISZERO ISZERO DUP4 SUB PUSH2 0x5CE JUMPI PUSH2 0x291 PUSH2 0x29F9 JUMP JUMPDEST PUSH2 0x299 PUSH2 0x2675 JUMP JUMPDEST PUSH2 0x2A1 PUSH2 0x29B5 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH1 0xFF PUSH1 0x6 DUP3 MLOAD SWAP4 PUSH1 0x20 DUP2 DUP2 DUP7 ADD SWAP7 PUSH2 0x2BE DUP2 DUP4 DUP11 PUSH2 0x25AD JUMP JUMPDEST DUP2 ADD PUSH1 0x4 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 ADD SLOAD PUSH1 0xC8 SHR AND ISZERO PUSH2 0x5BC JUMPI PUSH1 0x40 MLOAD SWAP2 DUP2 MLOAD PUSH2 0x2E4 DUP2 DUP6 DUP5 PUSH2 0x25AD JUMP JUMPDEST DUP4 ADD PUSH1 0x4 DUP2 MSTORE PUSH1 0x1 DUP5 PUSH1 0x20 DUP3 DUP1 PUSH1 0xA0 SHL SUB SWAP7 DUP8 SWAP5 SUB ADD SWAP1 KECCAK256 ADD SLOAD AND DUP4 DUP6 AND SUB PUSH2 0x5AA JUMPI PUSH1 0xFF PUSH1 0x6 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP7 MLOAD PUSH2 0x31E DUP2 DUP4 DUP10 PUSH2 0x25AD JUMP JUMPDEST DUP2 ADD PUSH1 0x4 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 ADD SLOAD PUSH1 0xC0 SHR AND PUSH1 0x6 DUP2 LT ISZERO PUSH2 0x596 JUMPI PUSH1 0x3 SUB PUSH2 0x584 JUMPI PUSH1 0x20 PUSH2 0x355 SWAP2 PUSH1 0x40 MLOAD DUP1 SWAP4 DUP2 SWAP3 DUP7 MLOAD SWAP3 DUP4 SWAP2 PUSH2 0x25AD JUMP JUMPDEST DUP2 ADD PUSH1 0x4 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0x5 DUP3 ADD SLOAD AND SWAP2 DUP4 PUSH1 0x1 DUP4 ADD SLOAD AND SWAP6 DUP5 DUP4 SLOAD AND SWAP3 PUSH1 0x6 PUSH1 0x3 SLOAD SWAP2 ADD PUSH1 0x1 PUSH1 0xC2 SHL PUSH1 0xFF PUSH1 0xC0 SHL NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH32 0x0 SWAP6 DUP10 DUP4 PUSH0 EQ PUSH2 0x525 JUMPI POP PUSH2 0x1388 DUP7 MUL SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP4 AND SWAP3 DUP4 SUB PUSH2 0x511 JUMPI DUP10 SWAP2 PUSH2 0x2710 DUP1 SWAP5 DIV SWAP8 DUP9 PUSH2 0x3E8 SWAP2 PUSH2 0x2AD0 JUMP JUMPDEST SWAP4 PUSH2 0x3FC PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP5 AND DUP11 PUSH2 0x2AB2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND DIV SWAP8 DUP9 PUSH2 0x411 SWAP2 PUSH2 0x2AD0 JUMP JUMPDEST SWAP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP12 AND SWAP3 DUP4 ISZERO ISZERO SWAP11 PUSH2 0x4B7 SWAP10 PUSH32 0xEA4EA4B4229888EEBA3EB2772DF89C52AF23C7FE3D530B0C1F2CA146F32C12BA SWAP7 PUSH1 0x60 SWAP7 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2D26 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP15 PUSH2 0x500 JUMPI JUMPDEST POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP9 AND DUP1 PUSH2 0x4EF JUMPI JUMPDEST POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP12 AND SWAP1 DUP2 PUSH2 0x4DB JUMPI JUMPDEST POP POP POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH2 0x498 DUP9 PUSH2 0x2995 JUMP JUMPDEST SWAP6 PUSH1 0x40 MLOAD SWAP8 ISZERO ISZERO DUP9 MSTORE DUP2 DUP14 AND PUSH1 0x20 DUP10 ADD MSTORE AND PUSH1 0x40 DUP8 ADD MSTORE AND SWAP4 LOG3 PUSH2 0x2995 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB SWAP6 DUP7 AND DUP2 MSTORE SWAP3 SWAP1 SWAP5 AND PUSH1 0x20 DUP4 ADD MSTORE SWAP3 SWAP1 LOG3 PUSH1 0x1 DUP2 SSTORE DUP1 RETURN JUMPDEST PUSH2 0x4E7 SWAP3 DUP7 SHR SWAP1 PUSH2 0x2AE9 JUMP JUMPDEST PUSH0 DUP1 DUP1 PUSH2 0x483 JUMP JUMPDEST PUSH2 0x4F9 SWAP2 DUP4 PUSH2 0x2AE9 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x470 JUMP JUMPDEST PUSH2 0x50A SWAP2 DUP5 PUSH2 0x2AE9 JUMP JUMPDEST DUP15 PUSH0 PUSH2 0x45E JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP2 POP PUSH1 0x60 PUSH32 0xEA4EA4B4229888EEBA3EB2772DF89C52AF23C7FE3D530B0C1F2CA146F32C12BA SWAP2 PUSH2 0x4B7 SWAP7 SWAP8 SWAP10 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2D26 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP10 DUP6 SWAP12 DUP1 SWAP7 SWAP11 DUP2 PUSH2 0x573 JUMPI JUMPDEST POP POP POP PUSH2 0x487 JUMP JUMPDEST PUSH2 0x57C SWAP3 PUSH2 0x2AE9 JUMP JUMPDEST PUSH0 DUP1 DUP1 PUSH2 0x56B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x5E40B94F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP8 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 DUP8 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xEA8E4EB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x223DA473 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1C0 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C0 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP2 DUP3 DUP3 GT PUSH2 0x1C0 JUMPI POP PUSH1 0x20 PUSH2 0x60B PUSH2 0x61E SWAP3 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x2491 JUMP JUMPDEST DUP2 PUSH1 0x40 MLOAD SWAP4 DUP3 DUP6 DUP1 SWAP5 MLOAD SWAP4 DUP5 SWAP3 ADD PUSH2 0x25AD JUMP JUMPDEST DUP2 ADD PUSH1 0x4 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 PUSH1 0x6 DUP2 ADD SLOAD PUSH1 0xFF DUP2 PUSH1 0xC8 SHR AND ISZERO PUSH2 0x5BC JUMPI PUSH2 0x698 SWAP3 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP2 DUP2 PUSH2 0x6EB DUP5 DUP7 SLOAD AND SWAP5 PUSH1 0x1 DUP8 ADD SLOAD AND PUSH2 0x6DD PUSH1 0x5 DUP9 ADD SLOAD SWAP7 PUSH2 0x669 PUSH1 0x2 DUP11 ADD PUSH2 0x2B38 JUMP JUMPDEST SWAP9 PUSH2 0x682 PUSH1 0x4 PUSH2 0x67B PUSH1 0x3 DUP5 ADD PUSH2 0x2B38 JUMP JUMPDEST SWAP3 ADD PUSH2 0x2B38 JUMP JUMPDEST SWAP4 PUSH1 0x40 MLOAD SWAP12 DUP13 SWAP12 DUP13 PUSH2 0x1A0 DUP1 SWAP2 MSTORE DUP14 ADD SWAP1 PUSH2 0x25CE JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP13 ADD MSTORE PUSH1 0x40 DUP12 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP10 AND PUSH1 0x60 DUP12 ADD MSTORE DUP6 DUP10 PUSH1 0x60 SHR AND PUSH1 0x80 DUP12 ADD MSTORE PUSH2 0x6D0 PUSH1 0xA0 DUP12 ADD PUSH1 0xFF DUP10 PUSH1 0xC0 SHR AND PUSH2 0x2654 JUMP JUMPDEST DUP10 DUP3 SUB PUSH1 0xC0 DUP12 ADD MSTORE PUSH2 0x25CE JUMP JUMPDEST SWAP1 DUP8 DUP3 SUB PUSH1 0xE0 DUP10 ADD MSTORE PUSH2 0x25CE JUMP JUMPDEST SWAP4 DUP2 DUP4 PUSH1 0x40 SHR AND PUSH2 0x100 DUP8 ADD MSTORE PUSH1 0xA0 SHR AND PUSH2 0x120 DUP6 ADD MSTORE DUP2 DUP2 AND PUSH2 0x140 DUP6 ADD MSTORE PUSH1 0x80 SHR AND PUSH2 0x160 DUP4 ADD MSTORE PUSH1 0x1 PUSH2 0x180 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x1C0 JUMPI PUSH1 0xC0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C0 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x4 CALLDATALOAD DUP2 DUP2 GT PUSH2 0xA07 JUMPI PUSH2 0x753 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x2491 JUMP JUMPDEST PUSH2 0x75B PUSH2 0x24E6 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP4 SWAP2 SWAP1 DUP5 SWAP1 SUB PUSH2 0x5CE JUMPI PUSH1 0x64 CALLDATALOAD SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP5 AND DUP5 SUB PUSH2 0x5CE JUMPI DUP3 PUSH1 0x84 CALLDATALOAD AND PUSH1 0x84 CALLDATALOAD SUB PUSH2 0xA03 JUMPI PUSH1 0xA4 CALLDATALOAD DUP4 DUP2 GT PUSH2 0x9FF JUMPI PUSH2 0x7AB SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x2491 JUMP JUMPDEST SWAP2 PUSH2 0x7B4 PUSH2 0x2675 JUMP JUMPDEST PUSH2 0x7BC PUSH2 0x29B5 JUMP JUMPDEST PUSH1 0xFF PUSH1 0x6 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP7 MLOAD PUSH2 0x7D5 DUP2 DUP4 DUP6 DUP12 ADD PUSH2 0x25AD JUMP JUMPDEST DUP2 ADD PUSH1 0x4 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 ADD SLOAD PUSH1 0xC8 SHR AND PUSH2 0x9ED JUMPI DUP6 ISZERO PUSH2 0x9DB JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP4 DUP5 ISZERO PUSH2 0x9DB JUMPI DUP6 DUP6 EQ PUSH2 0x9C9 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP2 AND ISZERO PUSH2 0x9B7 JUMPI TIMESTAMP DUP5 PUSH1 0x84 CALLDATALOAD AND GT ISZERO PUSH2 0x9A5 JUMPI DUP3 MLOAD ISZERO PUSH2 0x993 JUMPI PUSH2 0x958 PUSH1 0x40 SWAP3 PUSH32 0xCEB1A488BE98B2739817F21E7D3B0A343434519CD0FE4DB3EF5FC27A96E8D295 SWAP5 PUSH2 0x8D0 DUP6 MLOAD PUSH1 0x20 DUP2 DUP6 MLOAD PUSH2 0x867 DUP2 DUP4 DUP6 DUP11 ADD PUSH2 0x25AD JUMP JUMPDEST DUP2 ADD PUSH1 0x4 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 SWAP2 PUSH2 0x87F DUP5 PUSH1 0x2 DUP6 ADD PUSH2 0x2851 JUMP JUMPDEST DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND DUP12 OR DUP5 SSTORE PUSH1 0x1 DUP5 ADD DUP1 SLOAD DUP3 AND DUP14 OR SWAP1 SSTORE PUSH1 0x5 DUP5 ADD DUP1 SLOAD SWAP1 SWAP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP9 AND OR PUSH1 0x84 CALLDATALOAD PUSH1 0x60 SHL PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x60 SHL AND OR SWAP1 SSTORE PUSH1 0x3 DUP4 ADD PUSH2 0x2851 JUMP JUMPDEST PUSH1 0x6 DUP2 ADD DUP1 SLOAD PUSH9 0xFFFFFFFFFFFFFFFFFF PUSH1 0x80 SHL NOT AND TIMESTAMP PUSH1 0x80 SHL PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x80 SHL AND OR DUP2 SSTORE PUSH1 0x4 SWAP2 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH0 SWAP2 SWAP1 PUSH2 0x90D SWAP1 PUSH2 0x2803 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x974 JUMPI JUMPDEST POP SSTORE DUP1 SLOAD PUSH1 0xFF PUSH1 0xC8 SHL NOT AND PUSH1 0x1 PUSH1 0xC8 SHL OR SWAP1 SSTORE DUP7 DUP10 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE DUP4 DUP10 KECCAK256 PUSH2 0x93F SWAP1 DUP3 SWAP1 PUSH2 0x294D JUMP JUMPDEST DUP8 DUP10 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH2 0x953 DUP2 DUP6 DUP12 KECCAK256 PUSH2 0x294D JUMP JUMPDEST PUSH2 0x2995 JUMP JUMPDEST SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP4 MLOAD SWAP3 AND DUP3 MSTORE PUSH1 0x84 CALLDATALOAD AND PUSH1 0x20 DUP3 ADD MSTORE LOG4 DUP1 RETURN JUMPDEST DUP2 DUP4 MSTORE PUSH1 0x20 DUP4 KECCAK256 PUSH2 0x98D SWAP2 PUSH1 0x1F ADD PUSH1 0x5 SHR DUP2 ADD SWAP1 PUSH2 0x283B JUMP JUMPDEST PUSH0 PUSH2 0x916 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x7E4DD01 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x642CE77 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x5E85AE73 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x24DA0345 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xE6C4247B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x38A6A807 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST DUP7 DUP1 REVERT JUMPDEST DUP6 DUP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1C0 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x23F JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 PUSH1 0x4 CALLDATALOAD DUP3 DUP2 GT PUSH2 0xBB7 JUMPI PUSH2 0xA3F SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x2491 JUMP JUMPDEST PUSH2 0xA47 PUSH2 0x29F9 JUMP JUMPDEST PUSH2 0xA4F PUSH2 0x2675 JUMP JUMPDEST PUSH2 0xA57 PUSH2 0x29B5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF PUSH1 0x6 DUP4 MLOAD SWAP3 DUP6 DUP2 DUP2 DUP8 ADD SWAP6 PUSH2 0xA72 DUP2 DUP4 DUP10 PUSH2 0x25AD JUMP JUMPDEST DUP2 ADD PUSH1 0x4 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 ADD SLOAD PUSH1 0xC8 SHR AND ISZERO PUSH2 0x5BC JUMPI PUSH1 0xFF PUSH1 0x6 PUSH1 0x40 MLOAD DUP6 DUP2 DUP7 MLOAD PUSH2 0xA9D DUP2 DUP4 DUP10 PUSH2 0x25AD JUMP JUMPDEST DUP2 ADD PUSH1 0x4 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 ADD SLOAD PUSH1 0xC0 SHR AND PUSH1 0x6 DUP2 LT ISZERO PUSH2 0xBA3 JUMPI PUSH1 0x1 SUB PUSH2 0x584 JUMPI DUP3 PUSH2 0xAD3 SWAP2 PUSH1 0x40 MLOAD DUP1 SWAP4 DUP2 SWAP3 DUP7 MLOAD SWAP3 DUP4 SWAP2 PUSH2 0x25AD JUMP JUMPDEST DUP2 ADD PUSH1 0x4 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 SWAP3 PUSH1 0x5 DUP5 ADD SLOAD SWAP1 DUP2 PUSH1 0x60 SHR AND TIMESTAMP GT ISZERO PUSH2 0xB91 JUMPI PUSH1 0x6 DUP5 ADD DUP1 SLOAD PUSH1 0xFF PUSH1 0xC0 SHL NOT AND PUSH1 0x5 PUSH1 0xC0 SHL OR SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND SWAP3 PUSH32 0xB559D285C87E4FA0F561388264310703FF0C6C454A39AE52D0AE94032FF0DB70 SWAP2 PUSH2 0xB43 SWAP2 DUP6 DUP1 PUSH2 0xB54 JUMPI JUMPDEST POP POP PUSH2 0x2995 JUMP JUMPDEST SWAP2 PUSH1 0x40 MLOAD SWAP4 DUP5 MSTORE CALLER SWAP4 LOG3 PUSH1 0x1 DUP2 SSTORE DUP1 RETURN JUMPDEST SWAP1 SLOAD PUSH2 0xB8A SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x0 PUSH2 0x2AE9 JUMP JUMPDEST PUSH0 DUP6 PUSH2 0xB3C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x2EB3543 PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP7 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 DUP7 REVERT JUMPDEST DUP4 DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1C0 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1C0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x1C0 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C0 JUMPI PUSH2 0xC3E PUSH1 0x4 CALLDATALOAD PUSH2 0xC20 PUSH2 0x24E6 JUMP JUMPDEST SWAP1 DUP1 DUP5 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH2 0xC39 PUSH1 0x1 PUSH1 0x40 DUP7 KECCAK256 ADD SLOAD PUSH2 0x26EE JUMP JUMPDEST PUSH2 0x278E JUMP JUMPDEST POP DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x1C0 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x23F JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xC65 PUSH2 0x24FC JUMP JUMPDEST AND DUP3 MSTORE PUSH1 0x6 DUP2 MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP1 SLOAD SWAP1 PUSH2 0xC7C DUP3 PUSH2 0x2BD7 JUMP JUMPDEST SWAP3 DUP1 DUP5 ADD SWAP2 DUP6 MSTORE DUP1 DUP6 KECCAK256 SWAP5 SWAP2 JUMPDEST DUP4 DUP4 LT PUSH2 0xC9E JUMPI PUSH1 0x40 MLOAD DUP1 PUSH2 0x21F DUP8 DUP3 PUSH2 0x25F3 JUMP JUMPDEST PUSH1 0x1 DUP3 DUP2 SWAP3 PUSH2 0xCAC DUP10 PUSH2 0x2B38 JUMP JUMPDEST DUP2 MSTORE ADD SWAP7 ADD SWAP3 ADD SWAP2 SWAP5 PUSH2 0xC89 JUMP JUMPDEST POP CALLVALUE PUSH2 0x1C0 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1C0 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1C0 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C0 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x23F JUMPI PUSH1 0x20 PUSH2 0xD0C PUSH2 0xD7B SWAP3 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x2491 JUMP JUMPDEST DUP4 PUSH2 0x180 PUSH1 0x40 MLOAD PUSH2 0xD1C DUP2 PUSH2 0x2454 JUMP JUMPDEST DUP3 DUP2 MSTORE DUP3 DUP6 DUP3 ADD MSTORE PUSH1 0x60 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP1 DUP3 ADD MSTORE PUSH1 0x60 PUSH1 0x80 DUP3 ADD MSTORE DUP3 PUSH1 0xA0 DUP3 ADD MSTORE DUP3 PUSH1 0xC0 DUP3 ADD MSTORE DUP3 PUSH1 0xE0 DUP3 ADD MSTORE DUP3 PUSH2 0x100 DUP3 ADD MSTORE DUP3 PUSH2 0x120 DUP3 ADD MSTORE DUP3 PUSH2 0x140 DUP3 ADD MSTORE DUP3 PUSH2 0x160 DUP3 ADD MSTORE ADD MSTORE DUP2 PUSH1 0x40 MLOAD SWAP4 DUP3 DUP6 DUP1 SWAP5 MLOAD SWAP4 DUP5 SWAP3 ADD PUSH2 0x25AD JUMP JUMPDEST DUP2 ADD PUSH1 0x4 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 SWAP1 PUSH1 0x6 PUSH1 0x40 MLOAD SWAP3 PUSH2 0xD95 DUP5 PUSH2 0x2454 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP6 MSTORE PUSH1 0x1 DUP3 ADD SLOAD AND PUSH1 0x20 DUP6 ADD MSTORE PUSH2 0xDBB PUSH1 0x2 DUP3 ADD PUSH2 0x2B38 JUMP JUMPDEST PUSH1 0x40 DUP6 ADD MSTORE PUSH2 0xDCC PUSH1 0x3 DUP3 ADD PUSH2 0x2B38 JUMP JUMPDEST PUSH1 0x60 DUP6 ADD MSTORE PUSH2 0xDDD PUSH1 0x4 DUP3 ADD PUSH2 0x2B38 JUMP JUMPDEST PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x5 DUP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP2 AND PUSH1 0xA0 DUP8 ADD MSTORE DUP2 DUP2 PUSH1 0x60 SHR AND PUSH1 0xC0 DUP8 ADD MSTORE PUSH1 0xA0 SHR AND PUSH1 0xE0 DUP6 ADD MSTORE ADD SLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 AND PUSH2 0x100 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 PUSH1 0x40 SHR AND PUSH2 0x120 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 PUSH1 0x80 SHR AND PUSH2 0x140 DUP5 ADD MSTORE PUSH1 0x6 PUSH1 0xFF DUP4 PUSH1 0xC0 SHR AND LT ISZERO PUSH2 0xF8C JUMPI POP DUP1 PUSH1 0xFF DUP1 SWAP3 PUSH1 0xC0 SHR AND PUSH2 0x160 DUP5 ADD MSTORE PUSH1 0xC8 SHR AND ISZERO ISZERO PUSH2 0x180 DUP3 ADD MSTORE PUSH1 0x40 MLOAD DUP1 SWAP2 PUSH1 0x20 DUP3 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP2 MLOAD AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x20 DUP3 ADD MLOAD AND PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x180 PUSH2 0xEF2 PUSH2 0xEC1 PUSH1 0x40 DUP5 ADD MLOAD PUSH2 0x1A0 PUSH1 0x60 DUP8 ADD MSTORE PUSH2 0x1C0 DUP7 ADD SWAP1 PUSH2 0x25CE JUMP JUMPDEST PUSH2 0xEDD PUSH1 0x60 DUP6 ADD MLOAD SWAP2 PUSH1 0x1F NOT SWAP3 DUP4 DUP9 DUP4 SUB ADD PUSH1 0x80 DUP10 ADD MSTORE PUSH2 0x25CE JUMP JUMPDEST SWAP1 PUSH1 0x80 DUP6 ADD MLOAD SWAP1 DUP7 DUP4 SUB ADD PUSH1 0xA0 DUP8 ADD MSTORE PUSH2 0x25CE JUMP JUMPDEST SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 DUP3 ADD MLOAD AND PUSH1 0xC0 DUP6 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0xC0 DUP3 ADD MLOAD AND PUSH1 0xE0 DUP6 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0xE0 DUP3 ADD MLOAD AND PUSH2 0x100 DUP6 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH2 0x100 DUP3 ADD MLOAD AND PUSH2 0x120 DUP6 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH2 0x120 DUP3 ADD MLOAD AND PUSH2 0x140 DUP6 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH2 0x140 DUP3 ADD MLOAD AND PUSH2 0x160 DUP6 ADD MSTORE PUSH2 0xF7E PUSH2 0x160 DUP3 ADD MLOAD DUP4 DUP7 ADD SWAP1 PUSH2 0x2654 JUMP JUMPDEST ADD MLOAD ISZERO ISZERO PUSH2 0x1A0 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1C0 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C0 JUMPI PUSH2 0xFBA PUSH2 0x24FC JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x5CE JUMPI ISZERO PUSH2 0x102A JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 JUMPDEST DUP1 SLOAD PUSH2 0xFEB DUP2 PUSH2 0x2BD7 JUMP JUMPDEST SWAP2 DUP4 MSTORE PUSH1 0x20 DUP1 DUP5 KECCAK256 SWAP4 SWAP1 DUP1 DUP5 ADD JUMPDEST DUP4 DUP4 LT PUSH2 0x100E JUMPI PUSH1 0x40 MLOAD DUP1 PUSH2 0x21F DUP8 DUP3 PUSH2 0x25F3 JUMP JUMPDEST PUSH1 0x1 DUP3 DUP2 SWAP3 PUSH2 0x101C DUP10 PUSH2 0x2B38 JUMP JUMPDEST DUP2 MSTORE ADD SWAP7 ADD SWAP3 ADD SWAP2 SWAP5 PUSH2 0xFF9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0xFE0 JUMP JUMPDEST POP CALLVALUE PUSH2 0x1C0 JUMPI PUSH1 0xE0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C0 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x4 CALLDATALOAD DUP2 DUP2 GT PUSH2 0xA07 JUMPI PUSH2 0x1075 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x2491 JUMP JUMPDEST SWAP1 PUSH2 0x107E PUSH2 0x24E6 JUMP JUMPDEST SWAP1 PUSH1 0x44 CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP4 AND DUP1 SWAP4 SUB PUSH2 0x151D JUMPI PUSH1 0x84 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP1 SWAP2 SUB PUSH2 0xA03 JUMPI PUSH2 0x10AA PUSH2 0x29F9 JUMP JUMPDEST PUSH2 0x10B2 PUSH2 0x2675 JUMP JUMPDEST PUSH2 0x10BA PUSH2 0x29B5 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP3 PUSH1 0xFF PUSH1 0x6 DUP6 DUP5 MLOAD PUSH1 0x20 SWAP8 DUP2 PUSH2 0x10DA DUP11 SWAP4 DUP5 DUP11 ADD SWAP15 DUP16 PUSH2 0x25AD JUMP JUMPDEST DUP2 ADD PUSH1 0x4 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 ADD SLOAD PUSH1 0xC8 SHR AND ISZERO PUSH2 0x5BC JUMPI PUSH1 0x40 MLOAD SWAP3 DUP3 MLOAD PUSH2 0x1100 DUP2 DUP7 DUP12 PUSH2 0x25AD JUMP JUMPDEST DUP5 ADD PUSH1 0x4 DUP2 MSTORE DUP5 DUP7 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP7 DUP8 SWAP4 SUB ADD SWAP1 KECCAK256 SLOAD AND SWAP8 DUP5 DUP4 AND DUP1 SWAP10 SUB PUSH2 0x5AA JUMPI PUSH1 0xFF PUSH1 0x6 PUSH1 0x40 MLOAD DUP9 DUP2 DUP9 MLOAD PUSH2 0x1139 DUP2 DUP4 DUP10 PUSH2 0x25AD JUMP JUMPDEST DUP2 ADD PUSH1 0x4 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 ADD SLOAD PUSH1 0xC0 SHR AND PUSH1 0x6 DUP2 LT ISZERO PUSH2 0x1509 JUMPI PUSH2 0x584 JUMPI DUP4 MLOAD ISZERO PUSH2 0x14F7 JUMPI DUP8 ISZERO PUSH2 0x14E5 JUMPI PUSH2 0x117B DUP7 PUSH1 0x5 SWAP3 PUSH1 0x40 MLOAD DUP1 SWAP4 DUP2 SWAP3 DUP10 MLOAD SWAP3 DUP4 SWAP2 PUSH2 0x25AD JUMP JUMPDEST DUP2 ADD PUSH1 0x4 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 ADD SWAP2 DUP7 DUP4 SLOAD PUSH1 0xA0 SHR AND PUSH2 0x14D3 JUMPI PUSH32 0x0 SWAP5 DUP6 AND SWAP1 PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE DUP11 PUSH1 0x4 DUP3 ADD MSTORE DUP8 DUP2 PUSH1 0x24 DUP2 DUP7 GAS STATICCALL DUP1 ISZERO PUSH2 0x14C8 JUMPI DUP11 SWAP2 DUP14 SWAP2 PUSH2 0x1493 JUMPI JUMPDEST POP LT PUSH2 0x1481 JUMPI DUP7 SWAP2 DUP4 ISZERO DUP1 ISZERO SWAP1 PUSH2 0x1476 JUMPI JUMPDEST DUP1 ISZERO PUSH2 0x146B JUMPI JUMPDEST PUSH2 0x1349 JUMPI JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE ADDRESS PUSH1 0x24 DUP4 ADD MSTORE SWAP1 SWAP3 POP DUP3 SWAP1 DUP2 DUP1 PUSH1 0x44 DUP2 ADD JUMPDEST SUB SWAP2 GAS STATICCALL DUP1 ISZERO PUSH2 0x133E JUMPI DUP8 SWAP2 DUP11 SWAP2 PUSH2 0x130D JUMPI JUMPDEST POP LT PUSH2 0x12FB JUMPI PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP6 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP9 SWAP1 MSTORE ADDRESS PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP1 DUP3 ADD DUP9 SWAP1 MSTORE DUP2 MSTORE SWAP5 PUSH1 0xA0 DUP7 ADD SWAP1 DUP2 GT DUP7 DUP3 LT OR PUSH2 0x12E7 JUMPI PUSH32 0x2C138F65913CD3B9CA6F36E4B59E26830A033A978CA69F935781972E6DF1F61D SWAP6 PUSH2 0x12D8 SWAP5 PUSH2 0x12AF SWAP3 PUSH1 0x40 MSTORE PUSH2 0x2A4D JUMP JUMPDEST DUP1 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL NOT AND TIMESTAMP PUSH1 0xA0 SHL PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL AND OR SWAP1 SSTORE PUSH2 0x2995 JUMP JUMPDEST SWAP3 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 PUSH1 0x1 DUP2 SSTORE DUP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x13BE252B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST DUP1 SWAP3 POP DUP7 DUP1 SWAP3 POP RETURNDATASIZE DUP4 GT PUSH2 0x1337 JUMPI JUMPDEST PUSH2 0x1326 DUP2 DUP4 PUSH2 0x2470 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x5CE JUMPI DUP7 SWAP1 MLOAD PUSH0 PUSH2 0x1241 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x131C JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP12 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP1 SWAP3 POP SWAP3 SWAP1 SWAP3 EXTCODESIZE ISZERO PUSH2 0x1467 JUMPI PUSH1 0x40 MLOAD SWAP1 PUSH4 0xD505ACCF PUSH1 0xE0 SHL DUP3 MSTORE DUP11 PUSH1 0x4 DUP4 ADD MSTORE ADDRESS PUSH1 0x24 DUP4 ADD MSTORE DUP10 PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x64 CALLDATALOAD PUSH1 0x64 DUP4 ADD MSTORE PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 CALLDATALOAD PUSH1 0xA4 DUP3 ADD MSTORE PUSH1 0xC4 CALLDATALOAD PUSH1 0xC4 DUP3 ADD MSTORE DUP11 DUP2 PUSH1 0xE4 DUP2 DUP4 DUP7 GAS CALL SWAP1 DUP2 PUSH2 0x143F JUMPI JUMPDEST POP PUSH2 0x13B9 JUMPI PUSH1 0x40 MLOAD PUSH4 0xB78CB0DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE DUP7 DUP2 PUSH1 0x44 DUP2 DUP6 GAS STATICCALL DUP1 ISZERO PUSH2 0x1434 JUMPI DUP10 SWAP2 DUP13 SWAP2 PUSH2 0x1403 JUMPI JUMPDEST POP LT PUSH2 0x12FB JUMPI PUSH2 0x122E SWAP2 DUP7 SWAP2 PUSH2 0x11FF JUMP JUMPDEST DUP1 SWAP3 POP DUP9 DUP1 SWAP3 POP RETURNDATASIZE DUP4 GT PUSH2 0x142D JUMPI JUMPDEST PUSH2 0x141C DUP2 DUP4 PUSH2 0x2470 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x5CE JUMPI DUP9 SWAP1 MLOAD PUSH0 PUSH2 0x13F2 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1412 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP14 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP9 DUP2 SWAP13 SWAP3 SWAP13 GT PUSH2 0x1453 JUMPI PUSH1 0x40 MSTORE SWAP10 PUSH0 PUSH2 0x13A2 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP3 REVERT JUMPDEST DUP11 DUP1 REVERT JUMPDEST POP PUSH1 0xC4 CALLDATALOAD ISZERO ISZERO PUSH2 0x11FA JUMP JUMPDEST POP PUSH1 0xA4 CALLDATALOAD ISZERO ISZERO PUSH2 0x11F3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1E9ACF17 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST DUP1 SWAP3 POP DUP10 DUP1 SWAP3 POP RETURNDATASIZE DUP4 GT PUSH2 0x14C1 JUMPI JUMPDEST PUSH2 0x14AC DUP2 DUP4 PUSH2 0x2470 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x14BD JUMPI DUP10 SWAP1 MLOAD PUSH0 PUSH2 0x11E1 JUMP JUMPDEST DUP12 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x14A2 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP15 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1924FCEB PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x162908E3 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x5F0BE7AF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP12 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 DUP12 REVERT JUMPDEST DUP5 DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1C0 JUMPI PUSH2 0x1530 CALLDATASIZE PUSH2 0x2512 JUMP JUMPDEST SWAP1 PUSH2 0x1539 PUSH2 0x2675 JUMP JUMPDEST PUSH2 0x1541 PUSH2 0x29B5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF PUSH1 0x6 DUP4 MLOAD SWAP3 PUSH1 0x20 DUP2 DUP2 DUP8 ADD SWAP6 PUSH2 0x155D DUP2 DUP4 DUP10 PUSH2 0x25AD JUMP JUMPDEST DUP2 ADD PUSH1 0x4 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 ADD SLOAD PUSH1 0xC8 SHR AND ISZERO PUSH2 0x5BC JUMPI PUSH1 0x40 MLOAD DUP3 MLOAD PUSH2 0x1582 DUP2 DUP4 DUP6 PUSH2 0x25AD JUMP JUMPDEST PUSH1 0x4 SWAP1 DUP3 ADD SWAP1 DUP2 MSTORE DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND SWAP4 AND DUP4 SWAP1 SUB PUSH2 0x5AA JUMPI PUSH1 0xFF PUSH1 0x6 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP7 MLOAD PUSH2 0x15C1 DUP2 DUP4 DUP10 PUSH2 0x25AD JUMP JUMPDEST DUP2 ADD PUSH1 0x4 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 ADD SLOAD PUSH1 0xC0 SHR AND PUSH1 0x6 DUP2 LT ISZERO PUSH2 0x166E JUMPI PUSH2 0x584 JUMPI PUSH1 0x20 PUSH2 0x15F5 SWAP2 PUSH1 0x40 MLOAD DUP1 SWAP4 DUP2 SWAP3 DUP7 MLOAD SWAP3 DUP4 SWAP2 PUSH2 0x25AD JUMP JUMPDEST DUP2 ADD PUSH1 0x4 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x5 DUP4 ADD SLOAD PUSH1 0xA0 SHR AND ISZERO PUSH2 0x165C JUMPI PUSH1 0x6 SWAP2 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0xFF PUSH1 0xC0 SHL NOT AND PUSH1 0x1 PUSH1 0xC0 SHL OR SWAP1 SSTORE PUSH2 0x1636 SWAP1 PUSH2 0x2995 JUMP JUMPDEST PUSH31 0xCAEC7345D2EB04A42197AC2A2CD7CD74A00B2991B69BB53E23465D4092FDFB DUP4 DUP1 LOG3 DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x47510BBD PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 DUP6 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1C0 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C0 JUMPI PUSH2 0x169C PUSH2 0x24FC JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH2 0x16A7 PUSH2 0x2675 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP2 PUSH32 0x0 AND DUP3 EQ PUSH2 0x16EC JUMPI DUP1 ISZERO PUSH2 0x14E5 JUMPI PUSH2 0x1BD SWAP2 CALLER SWAP1 PUSH2 0x2AE9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x18BA2FC1 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1C0 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C0 JUMPI PUSH1 0xFF PUSH1 0x40 PUSH1 0x20 SWAP3 PUSH2 0x171F PUSH2 0x24E6 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD DUP3 MSTORE PUSH1 0x2 DUP6 MSTORE DUP3 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP3 MSTORE DUP5 MSTORE KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP2 AND ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1C0 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1C0 JUMPI PUSH2 0x1760 PUSH2 0x2675 JUMP JUMPDEST PUSH2 0x1768 PUSH2 0x29B5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xFF NOT DUP2 SLOAD AND OR PUSH1 0x1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH1 0x20 PUSH1 0x40 MLOAD CALLER DUP2 MSTORE LOG1 DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x1C0 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C0 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x4 CALLDATALOAD DUP2 DUP2 GT PUSH2 0xA07 JUMPI PUSH2 0x17DA PUSH1 0x20 PUSH2 0x60B PUSH1 0x6 SWAP4 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x2491 JUMP JUMPDEST DUP2 ADD PUSH1 0x4 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 ADD SLOAD SWAP1 PUSH1 0xFF DUP3 PUSH1 0xC8 SHR AND SWAP2 DUP3 PUSH2 0x181B JUMPI JUMPDEST PUSH1 0x20 SWAP4 POP DUP3 PUSH2 0x180B JUMPI JUMPDEST POP POP PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH1 0x40 SHR AND TIMESTAMP LT ISZERO SWAP1 POP PUSH0 DUP1 PUSH2 0x17FF JUMP JUMPDEST SWAP2 POP PUSH1 0xFF DUP3 PUSH1 0xC0 SHR AND SWAP3 PUSH1 0x6 DUP5 LT ISZERO PUSH2 0xF8C JUMPI POP PUSH1 0x2 PUSH1 0x20 SWAP4 EQ SWAP2 PUSH2 0x17F5 JUMP JUMPDEST POP CALLVALUE PUSH2 0x1C0 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1C0 JUMPI PUSH1 0x20 PUSH1 0xFF PUSH1 0x1 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1C0 JUMPI PUSH2 0x186D CALLDATASIZE PUSH2 0x2553 JUMP JUMPDEST PUSH2 0x1878 SWAP3 SWAP2 SWAP3 PUSH2 0x2675 JUMP JUMPDEST PUSH2 0x1880 PUSH2 0x29B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 MLOAD PUSH1 0xFF PUSH1 0x6 PUSH1 0x20 SWAP4 DUP5 DUP2 DUP2 DUP10 ADD SWAP6 PUSH2 0x189D DUP2 DUP4 DUP10 PUSH2 0x25AD JUMP JUMPDEST DUP2 ADD PUSH1 0x4 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 ADD SLOAD PUSH1 0xC8 SHR AND ISZERO PUSH2 0x5BC JUMPI PUSH1 0x40 MLOAD DUP5 MLOAD PUSH2 0x18C2 DUP2 DUP4 DUP6 PUSH2 0x25AD JUMP JUMPDEST PUSH1 0x4 SWAP1 DUP3 ADD SWAP1 DUP2 MSTORE DUP2 SWAP1 SUB DUP4 ADD SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 DUP7 AND SWAP6 AND DUP6 SWAP1 SUB PUSH2 0x5AA JUMPI PUSH1 0xFF PUSH1 0x6 PUSH1 0x40 MLOAD DUP5 DUP2 DUP9 MLOAD PUSH2 0x18FF DUP2 DUP4 DUP10 PUSH2 0x25AD JUMP JUMPDEST DUP2 ADD PUSH1 0x4 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 ADD SLOAD PUSH1 0xC0 SHR AND PUSH1 0x6 DUP2 LT ISZERO PUSH2 0x596 JUMPI PUSH1 0x1 SUB PUSH2 0x584 JUMPI DUP2 PUSH2 0x1935 SWAP2 PUSH1 0x40 MLOAD DUP1 SWAP4 DUP2 SWAP3 DUP9 MLOAD SWAP3 DUP4 SWAP2 PUSH2 0x25AD JUMP JUMPDEST DUP2 ADD PUSH1 0x4 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 DUP2 PUSH1 0x5 DUP3 ADD SLOAD PUSH1 0x60 SHR AND TIMESTAMP GT PUSH2 0x1A41 JUMPI DUP4 MLOAD ISZERO PUSH2 0x1A2F JUMPI PUSH1 0x6 DUP2 ADD SWAP1 DUP2 SLOAD PUSH3 0x3F480 TIMESTAMP ADD SWAP1 DUP2 TIMESTAMP GT PUSH2 0x1A1B JUMPI PUSH25 0xFF0000000000000000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND TIMESTAMP DUP6 AND OR PUSH1 0x40 SWAP2 SWAP1 SWAP2 SHL PUSH16 0xFFFFFFFFFFFFFFFF0000000000000000 AND OR PUSH1 0x1 PUSH1 0xC1 SHL OR DUP3 SSTORE PUSH32 0x934109F661B65DBCCFFCAE4F7EE04261EB7B36E5136E1CA86DDE1B00598CB031 SWAP5 PUSH2 0x1A11 SWAP5 SWAP1 SWAP4 SWAP1 SWAP3 PUSH2 0x19FC SWAP3 PUSH2 0x19F1 SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x2851 JUMP JUMPDEST SLOAD PUSH1 0x40 SHR AND SWAP6 PUSH2 0x2995 JUMP JUMPDEST SWAP5 PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP4 PUSH1 0x40 DUP6 MSTORE PUSH1 0x40 DUP6 ADD SWAP1 PUSH2 0x25CE JUMP JUMPDEST SWAP2 DUP4 ADD MSTORE SUB SWAP1 LOG3 DUP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP11 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP11 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x361178C7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x764B8E33 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1C0 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1C0 JUMPI PUSH1 0x20 PUSH1 0x3 SLOAD PUSH1 0x60 SHR PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1C0 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1C0 JUMPI PUSH2 0x1A8D PUSH2 0x2675 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0xFF DUP2 AND ISZERO PUSH2 0x1ACD JUMPI PUSH1 0xFF NOT AND PUSH1 0x1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH1 0x20 PUSH1 0x40 MLOAD CALLER DUP2 MSTORE LOG1 DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x14185D5CD8589B194E881B9BDD081C185D5CD959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1C0 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C0 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x4 CALLDATALOAD DUP2 DUP2 GT PUSH2 0xA07 JUMPI PUSH2 0x1B3B SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x2491 JUMP JUMPDEST SWAP1 PUSH2 0x1B44 PUSH2 0x29F9 JUMP JUMPDEST PUSH2 0x1B4C PUSH2 0x2675 JUMP JUMPDEST PUSH2 0x1B54 PUSH2 0x29B5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF PUSH1 0x6 DUP5 MLOAD SWAP3 PUSH1 0x20 DUP2 DUP2 DUP9 ADD SWAP6 PUSH2 0x1B70 DUP2 DUP4 DUP10 PUSH2 0x25AD JUMP JUMPDEST DUP2 ADD PUSH1 0x4 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 ADD SLOAD PUSH1 0xC8 SHR AND ISZERO PUSH2 0x5BC JUMPI PUSH1 0xFF PUSH1 0x6 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP8 MLOAD PUSH2 0x1B9C DUP2 DUP4 DUP10 PUSH2 0x25AD JUMP JUMPDEST DUP2 ADD PUSH1 0x4 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 ADD SLOAD PUSH1 0xC0 SHR AND PUSH1 0x6 DUP2 LT ISZERO PUSH2 0x166E JUMPI PUSH1 0x2 SUB PUSH2 0x584 JUMPI PUSH1 0x20 PUSH2 0x1BD3 SWAP2 PUSH1 0x40 MLOAD DUP1 SWAP4 DUP2 SWAP3 DUP8 MLOAD SWAP3 DUP4 SWAP2 PUSH2 0x25AD JUMP JUMPDEST DUP2 ADD PUSH1 0x4 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 PUSH1 0x6 DUP2 ADD DUP1 SLOAD SWAP3 DUP4 PUSH1 0x40 SHR AND TIMESTAMP LT PUSH2 0x1CBF JUMPI PUSH2 0x4B7 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2D26 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP1 PUSH1 0x5 DUP4 ADD SLOAD AND SWAP4 PUSH2 0x1C2F PUSH2 0x2710 DUP4 PUSH2 0x1C26 DUP2 PUSH1 0x3 SLOAD AND DUP10 PUSH2 0x2AB2 JUMP JUMPDEST AND DIV DUP1 SWAP7 PUSH2 0x2AD0 JUMP JUMPDEST PUSH1 0xFF PUSH1 0xC0 SHL NOT SWAP1 SWAP8 AND PUSH1 0x1 PUSH1 0xC2 SHL OR SWAP1 SSTORE PUSH32 0x0 SWAP1 DUP1 DUP8 AND DUP1 PUSH2 0x1CA0 JUMPI JUMPDEST POP DUP5 AND DUP1 PUSH2 0x1C89 JUMPI JUMPDEST POP POP PUSH1 0x1 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP5 PUSH2 0x2995 JUMP JUMPDEST PUSH2 0x1C99 SWAP2 PUSH1 0x3 SLOAD PUSH1 0x60 SHR SWAP1 PUSH2 0x2AE9 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x1C74 JUMP JUMPDEST PUSH1 0x1 DUP5 ADD SLOAD PUSH2 0x1CB9 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH2 0x2AE9 JUMP JUMPDEST PUSH0 PUSH2 0x1C6B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x2D6BF645 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1C0 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C0 JUMPI PUSH2 0x1CEB PUSH2 0x24E6 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SUB PUSH2 0x1D07 JUMPI PUSH2 0xC3E SWAP1 PUSH1 0x4 CALLDATALOAD PUSH2 0x278E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x334BD919 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1C0 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C0 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x23F JUMPI PUSH2 0x1BD SWAP1 PUSH2 0x1D4A PUSH2 0x2675 JUMP JUMPDEST PUSH2 0x2BFE JUMP JUMPDEST POP CALLVALUE PUSH2 0x1C0 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C0 JUMPI PUSH2 0xC3E PUSH1 0x4 CALLDATALOAD PUSH2 0x1D6F PUSH2 0x24E6 JUMP JUMPDEST SWAP1 DUP1 DUP5 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH2 0x1D88 PUSH1 0x1 PUSH1 0x40 DUP7 KECCAK256 ADD SLOAD PUSH2 0x26EE JUMP JUMPDEST PUSH2 0x2710 JUMP JUMPDEST POP CALLVALUE PUSH2 0x1C0 JUMPI PUSH2 0x1D9C CALLDATASIZE PUSH2 0x2512 JUMP JUMPDEST PUSH2 0x1DA4 PUSH2 0x29F9 JUMP JUMPDEST PUSH2 0x1DAC PUSH2 0x2675 JUMP JUMPDEST PUSH2 0x1DB4 PUSH2 0x29B5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF PUSH1 0x6 DUP5 MLOAD SWAP3 PUSH1 0x20 DUP2 DUP2 DUP9 ADD SWAP6 PUSH2 0x1DD0 DUP2 DUP4 DUP10 PUSH2 0x25AD JUMP JUMPDEST DUP2 ADD PUSH1 0x4 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 ADD SLOAD PUSH1 0xC8 SHR AND ISZERO PUSH2 0x5BC JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD DUP5 MLOAD PUSH2 0x1DF7 DUP2 DUP4 DUP7 PUSH2 0x25AD JUMP JUMPDEST DUP2 ADD PUSH1 0x4 DUP2 MSTORE DUP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 SWAP4 DUP5 SWAP4 SUB ADD SWAP1 KECCAK256 SLOAD AND SWAP4 AND DUP1 SWAP4 SUB PUSH2 0x5AA JUMPI PUSH1 0xFF PUSH1 0x6 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP9 MLOAD PUSH2 0x1E30 DUP2 DUP4 DUP11 PUSH2 0x25AD JUMP JUMPDEST DUP2 ADD PUSH1 0x4 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 ADD SLOAD PUSH1 0xC0 SHR AND PUSH1 0x6 DUP2 LT ISZERO PUSH2 0xBA3 JUMPI PUSH1 0x2 SUB PUSH2 0x584 JUMPI PUSH2 0x4B7 PUSH2 0x1E78 PUSH1 0x20 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2D26 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP5 PUSH1 0x40 MLOAD DUP1 SWAP4 DUP2 SWAP3 DUP11 MLOAD SWAP3 DUP4 SWAP2 PUSH2 0x25AD JUMP JUMPDEST DUP2 ADD PUSH1 0x4 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB SWAP4 DUP5 PUSH1 0x5 DUP3 ADD SLOAD AND SWAP5 PUSH2 0x1EB4 PUSH2 0x2710 DUP3 PUSH2 0x1EAB DUP2 PUSH1 0x3 SLOAD AND DUP11 PUSH2 0x2AB2 JUMP JUMPDEST AND DIV DUP1 SWAP8 PUSH2 0x2AD0 JUMP JUMPDEST PUSH1 0x6 DUP4 ADD DUP1 SLOAD PUSH1 0xFF PUSH1 0xC0 SHL NOT AND PUSH1 0xC2 DUP7 SWAP1 SHL OR SWAP1 SSTORE SWAP8 PUSH2 0x1ED3 DUP11 PUSH2 0x2995 JUMP JUMPDEST PUSH31 0xCAEC7345D2EB04A42197AC2A2CD7CD74A00B2991B69BB53E23465D4092FDFB DUP13 DUP1 LOG3 PUSH32 0x0 SWAP1 DUP1 DUP10 AND DUP1 PUSH2 0x1F4C JUMPI JUMPDEST POP DUP7 AND DUP1 PUSH2 0x1F35 JUMPI JUMPDEST POP POP ADD SLOAD AND SWAP5 PUSH2 0x2995 JUMP JUMPDEST PUSH2 0x1F45 SWAP2 PUSH1 0x3 SLOAD PUSH1 0x60 SHR SWAP1 PUSH2 0x2AE9 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x1F2A JUMP JUMPDEST PUSH2 0x1F5C SWAP1 DUP7 DUP7 DUP7 ADD SLOAD AND DUP5 PUSH2 0x2AE9 JUMP JUMPDEST PUSH0 PUSH2 0x1F21 JUMP JUMPDEST POP CALLVALUE PUSH2 0x1C0 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C0 JUMPI PUSH1 0x1 PUSH1 0x40 PUSH1 0x20 SWAP3 PUSH1 0x4 CALLDATALOAD DUP2 MSTORE PUSH1 0x2 DUP5 MSTORE KECCAK256 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1C0 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1C0 JUMPI PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0x3 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1C0 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C0 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x23F JUMPI PUSH2 0x1FE7 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x2491 JUMP JUMPDEST PUSH2 0x1FEF PUSH2 0x29F9 JUMP JUMPDEST PUSH2 0x1FF7 PUSH2 0x2675 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF PUSH1 0x6 DUP4 MLOAD SWAP3 PUSH1 0x20 DUP2 DUP2 DUP8 ADD SWAP6 PUSH2 0x2013 DUP2 DUP4 DUP10 PUSH2 0x25AD JUMP JUMPDEST DUP2 ADD PUSH1 0x4 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 ADD SLOAD PUSH1 0xC8 SHR AND ISZERO PUSH2 0x5BC JUMPI PUSH1 0x20 PUSH2 0x203F SWAP2 PUSH1 0x40 MLOAD DUP1 SWAP4 DUP2 SWAP3 DUP7 MLOAD SWAP3 DUP4 SWAP2 PUSH2 0x25AD JUMP JUMPDEST DUP2 ADD PUSH1 0x4 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 SWAP1 PUSH1 0x6 DUP3 ADD SWAP1 DUP2 SLOAD SWAP3 PUSH1 0xFF DUP5 PUSH1 0xC0 SHR AND PUSH1 0x6 DUP2 LT ISZERO PUSH2 0xBA3 JUMPI PUSH1 0x1 DUP2 SUB PUSH2 0x210C JUMPI JUMPDEST POP PUSH2 0x209C SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0x5 DUP4 ADD SLOAD AND SWAP5 PUSH1 0x5 PUSH1 0xC0 SHL SWAP1 PUSH1 0xFF PUSH1 0xC0 SHL NOT AND OR SWAP1 SSTORE DUP4 DUP1 PUSH2 0x20CF JUMPI POP POP PUSH2 0x2995 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 MSTORE PUSH32 0xB559D285C87E4FA0F561388264310703FF0C6C454A39AE52D0AE94032FF0DB70 PUSH1 0x20 CALLER SWAP4 LOG3 PUSH1 0x1 DUP2 SSTORE DUP1 RETURN JUMPDEST SWAP1 SLOAD PUSH2 0x2105 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x0 PUSH2 0x2AE9 JUMP JUMPDEST PUSH0 DUP4 PUSH2 0xB3C JUMP JUMPDEST PUSH1 0x2 SUB PUSH2 0x2119 JUMPI PUSH0 PUSH2 0x206B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x4DF0CAD PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1C0 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1C0 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0xA8A7BC421F721CB936EA99EFDAD79237E6EE0B871A2A08CF648691F9584CDC77 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1C0 JUMPI PUSH2 0x2175 CALLDATASIZE PUSH2 0x2553 JUMP JUMPDEST SWAP1 SWAP2 PUSH2 0x217F PUSH2 0x2675 JUMP JUMPDEST PUSH2 0x2187 PUSH2 0x29B5 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP2 MLOAD PUSH1 0xFF PUSH1 0x6 PUSH1 0x20 SWAP6 DUP7 DUP2 DUP2 DUP9 ADD SWAP6 PUSH2 0x21A5 DUP2 DUP4 DUP10 PUSH2 0x25AD JUMP JUMPDEST DUP2 ADD PUSH1 0x4 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 ADD SLOAD PUSH1 0xC8 SHR AND ISZERO PUSH2 0x5BC JUMPI PUSH1 0x40 MLOAD DUP4 MLOAD PUSH2 0x21CA DUP2 DUP4 DUP6 PUSH2 0x25AD JUMP JUMPDEST PUSH1 0x4 SWAP1 DUP3 ADD SWAP1 DUP2 MSTORE DUP2 SWAP1 SUB DUP6 ADD SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 DUP7 AND SWAP6 AND DUP6 SWAP1 SUB PUSH2 0x5AA JUMPI PUSH1 0xFF PUSH1 0x6 PUSH1 0x40 MLOAD DUP7 DUP2 DUP8 MLOAD PUSH2 0x2204 DUP2 DUP4 DUP10 PUSH2 0x25AD JUMP JUMPDEST DUP2 ADD PUSH1 0x4 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 ADD SLOAD PUSH1 0xC0 SHR AND PUSH1 0x6 DUP2 LT ISZERO PUSH2 0x596 JUMPI PUSH1 0x2 SUB PUSH2 0x584 JUMPI PUSH2 0x223C DUP5 PUSH1 0x6 SWAP3 PUSH1 0x40 MLOAD DUP1 SWAP4 DUP2 SWAP3 DUP9 MLOAD SWAP3 DUP4 SWAP2 PUSH2 0x25AD JUMP JUMPDEST DUP2 ADD PUSH1 0x4 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 ADD SWAP2 DUP3 SLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 PUSH1 0x40 SHR AND TIMESTAMP LT ISZERO PUSH2 0x22D0 JUMPI DUP3 MLOAD ISZERO PUSH2 0x22BE JUMPI PUSH1 0xFF PUSH1 0xC0 SHL NOT SWAP1 SWAP2 AND PUSH1 0x3 PUSH1 0xC0 SHL OR SWAP1 SWAP3 SSTORE PUSH32 0xDE7B01BEF0884582CE204F7F920E57F99DD569F93867450872F436BE5A03C755 SWAP2 PUSH2 0x22A3 SWAP1 PUSH2 0x2995 JUMP JUMPDEST SWAP3 PUSH2 0x22B8 PUSH1 0x40 MLOAD SWAP3 DUP3 DUP5 SWAP4 DUP5 MSTORE DUP4 ADD SWAP1 PUSH2 0x25CE JUMP JUMPDEST SUB SWAP1 LOG3 DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xBC7FD331 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x2D0F572D PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1C0 JUMPI PUSH2 0x22F1 CALLDATASIZE PUSH2 0x2512 JUMP JUMPDEST SWAP1 PUSH2 0x22FA PUSH2 0x2675 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 MLOAD PUSH1 0xFF PUSH1 0x6 PUSH1 0x20 SWAP5 DUP6 DUP2 DUP2 DUP8 ADD SWAP6 PUSH2 0x2318 DUP2 DUP4 DUP10 PUSH2 0x25AD JUMP JUMPDEST DUP2 ADD PUSH1 0x4 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 ADD SLOAD PUSH1 0xC8 SHR AND ISZERO PUSH2 0x5BC JUMPI PUSH1 0x40 MLOAD DUP3 MLOAD PUSH2 0x233D DUP2 DUP4 DUP6 PUSH2 0x25AD JUMP JUMPDEST PUSH1 0x4 SWAP1 DUP3 ADD SWAP1 DUP2 MSTORE DUP2 SWAP1 SUB DUP5 ADD SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND SWAP5 AND DUP5 SWAP1 SUB PUSH2 0x5AA JUMPI PUSH1 0xFF PUSH1 0x6 PUSH1 0x40 MLOAD DUP6 DUP2 DUP7 MLOAD PUSH2 0x2377 DUP2 DUP4 DUP10 PUSH2 0x25AD JUMP JUMPDEST DUP2 ADD PUSH1 0x4 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 ADD SLOAD PUSH1 0xC0 SHR AND PUSH1 0x6 DUP2 LT ISZERO PUSH2 0xBA3 JUMPI PUSH2 0x584 JUMPI PUSH32 0xB559D285C87E4FA0F561388264310703FF0C6C454A39AE52D0AE94032FF0DB70 SWAP2 PUSH1 0x6 PUSH2 0x23D1 DUP6 PUSH2 0x23F4 SWAP5 PUSH1 0x40 MLOAD DUP1 SWAP4 DUP2 SWAP3 DUP8 MLOAD SWAP3 DUP4 SWAP2 PUSH2 0x25AD JUMP JUMPDEST PUSH1 0x4 SWAP1 DUP3 ADD SWAP1 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 ADD DUP1 SLOAD PUSH1 0xFF PUSH1 0xC0 SHL NOT AND PUSH1 0x5 PUSH1 0xC0 SHL OR SWAP1 SSTORE PUSH2 0x2995 JUMP JUMPDEST SWAP2 PUSH1 0x40 MLOAD DUP6 DUP2 MSTORE LOG3 DUP1 RETURN JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x23F JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23F JUMPI PUSH1 0x4 CALLDATALOAD PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL DUP2 AND DUP1 SWAP2 SUB PUSH2 0xA07 JUMPI PUSH1 0x20 SWAP3 POP PUSH4 0x7965DB0B PUSH1 0xE0 SHL DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0x2443 JUMPI JUMPDEST POP ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL EQ SWAP1 POP PUSH0 PUSH2 0x243C JUMP JUMPDEST PUSH2 0x1A0 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x12E7 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x12E7 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x5CE JUMPI DUP1 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x12E7 JUMPI PUSH1 0x40 MLOAD SWAP3 PUSH2 0x24C5 PUSH1 0x1F DUP5 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP6 PUSH2 0x2470 JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x20 DUP4 DUP4 ADD ADD GT PUSH2 0x5CE JUMPI DUP2 PUSH0 SWAP3 PUSH1 0x20 DUP1 SWAP4 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x5CE JUMPI JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x5CE JUMPI JUMP JUMPDEST PUSH1 0x40 PUSH1 0x3 NOT DUP3 ADD SLT PUSH2 0x5CE JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x5CE JUMPI PUSH2 0x253C SWAP2 PUSH1 0x4 ADD PUSH2 0x2491 JUMP JUMPDEST SWAP1 PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x5CE JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 NOT DUP3 ADD SLT PUSH2 0x5CE JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP2 PUSH1 0x4 CALLDATALOAD DUP4 DUP2 GT PUSH2 0x5CE JUMPI DUP3 PUSH2 0x257F SWAP2 PUSH1 0x4 ADD PUSH2 0x2491 JUMP JUMPDEST SWAP3 PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x5CE JUMPI SWAP3 PUSH1 0x44 CALLDATALOAD SWAP2 DUP3 GT PUSH2 0x5CE JUMPI PUSH2 0x25AA SWAP2 PUSH1 0x4 ADD PUSH2 0x2491 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT PUSH2 0x25BE JUMPI POP POP PUSH0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x25AF JUMP JUMPDEST SWAP1 PUSH1 0x20 SWAP2 PUSH2 0x25E7 DUP2 MLOAD DUP1 SWAP3 DUP2 DUP6 MSTORE DUP6 DUP1 DUP7 ADD SWAP2 ADD PUSH2 0x25AD JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 ADD SWAP1 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 SWAP3 MSTORE PUSH1 0x40 DUP4 ADD SWAP3 DUP2 PUSH1 0x40 DUP5 PUSH1 0x5 SHL DUP4 ADD ADD SWAP6 ADD SWAP4 PUSH0 SWAP2 JUMPDEST DUP5 DUP4 LT PUSH2 0x2626 JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 DUP5 DUP1 PUSH2 0x2644 PUSH1 0x1 SWAP4 PUSH1 0x3F NOT DUP7 DUP3 SUB ADD DUP8 MSTORE DUP11 MLOAD PUSH2 0x25CE JUMP JUMPDEST SWAP9 ADD SWAP4 ADD SWAP4 ADD SWAP2 SWAP5 SWAP4 SWAP3 SWAP1 PUSH2 0x2616 JUMP JUMPDEST SWAP1 PUSH1 0x6 DUP3 LT ISZERO PUSH2 0x2661 JUMPI MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH32 0xEF73BF2AC44F84561B5498839AB1C8C5A4DD99305D838AEA0D76C5961778535C PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH32 0xA8A7BC421F721CB936EA99EFDAD79237E6EE0B871A2A08CF648691F9584CDC77 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0x26D0 JUMPI POP JUMP JUMPDEST PUSH1 0x44 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH4 0xE2517D3F PUSH1 0xE0 SHL DUP3 MSTORE CALLER PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE REVERT JUMPDEST DUP1 PUSH0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 CALLER PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH0 KECCAK256 SLOAD AND ISZERO PUSH2 0x26D0 JUMPI POP JUMP JUMPDEST SWAP1 PUSH0 SWAP2 DUP1 DUP4 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP5 KECCAK256 SLOAD AND ISZERO PUSH0 EQ PUSH2 0x2789 JUMPI DUP1 DUP4 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D CALLER SWAP4 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST POP POP SWAP1 JUMP JUMPDEST SWAP1 PUSH0 SWAP2 DUP1 DUP4 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP5 KECCAK256 SLOAD AND PUSH0 EQ PUSH2 0x2789 JUMPI DUP1 DUP4 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0xFF NOT DUP2 SLOAD AND SWAP1 SSTORE PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B CALLER SWAP4 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x2831 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x281D JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x2812 JUMP JUMPDEST DUP2 DUP2 LT PUSH2 0x2846 JUMPI POP POP JUMP JUMPDEST PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x283B JUMP JUMPDEST SWAP2 SWAP1 SWAP2 DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x12E7 JUMPI PUSH2 0x286E DUP3 SLOAD PUSH2 0x2803 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x2912 JUMPI JUMPDEST POP PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x28B2 JUMPI POP DUP2 SWAP3 SWAP4 SWAP5 PUSH0 SWAP3 PUSH2 0x28A7 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 SSTORE JUMP JUMPDEST ADD MLOAD SWAP1 POP PUSH0 DUP1 PUSH2 0x2892 JUMP JUMPDEST SWAP1 PUSH1 0x1F NOT DUP4 AND SWAP6 DUP5 PUSH0 MSTORE DUP3 PUSH0 KECCAK256 SWAP3 PUSH0 SWAP1 JUMPDEST DUP9 DUP3 LT PUSH2 0x28FA JUMPI POP POP DUP4 PUSH1 0x1 SWAP6 SWAP7 SWAP8 LT PUSH2 0x28E2 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE JUMP JUMPDEST ADD MLOAD PUSH0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE PUSH0 DUP1 DUP1 PUSH2 0x28D8 JUMP JUMPDEST DUP1 PUSH1 0x1 DUP6 SWAP7 DUP3 SWAP5 SWAP7 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD SWAP1 PUSH2 0x28C3 JUMP JUMPDEST PUSH2 0x293D SWAP1 DUP4 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP6 LT PUSH2 0x2943 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x283B JUMP JUMPDEST PUSH0 PUSH2 0x2877 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x2930 JUMP JUMPDEST SWAP1 DUP2 SLOAD PUSH9 0x10000000000000000 DUP2 LT ISZERO PUSH2 0x12E7 JUMPI PUSH1 0x1 DUP2 ADD DUP1 DUP5 SSTORE DUP2 LT ISZERO PUSH2 0x2981 JUMPI PUSH2 0x297F SWAP3 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH2 0x2851 JUMP JUMPDEST JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x29AD SWAP1 PUSH1 0x20 PUSH1 0x40 MLOAD SWAP3 DUP3 DUP5 DUP1 SWAP5 MLOAD SWAP4 DUP5 SWAP3 ADD PUSH2 0x25AD JUMP JUMPDEST DUP2 ADD SUB SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0xFF PUSH1 0x1 SLOAD AND PUSH2 0x29C1 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH0 SLOAD EQ PUSH2 0x2A08 JUMPI PUSH1 0x2 PUSH0 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 PUSH0 PUSH1 0x20 SWAP2 DUP3 DUP2 MLOAD SWAP2 ADD DUP3 DUP6 GAS CALL ISZERO PUSH2 0x2AA7 JUMPI PUSH0 MLOAD RETURNDATASIZE PUSH2 0x2A9E JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND EXTCODESIZE ISZERO JUMPDEST PUSH2 0x2A7C JUMPI POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x5274AFE7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x1 EQ ISZERO PUSH2 0x2A75 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP2 SWAP1 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP1 DUP1 SWAP5 AND SWAP2 AND MUL SWAP2 DUP3 AND SWAP2 DUP3 SUB PUSH2 0x511 JUMPI JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB SWAP2 DUP3 AND SWAP1 DUP3 AND SUB SWAP2 SWAP1 DUP3 GT PUSH2 0x511 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x80 DUP2 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT DUP3 DUP5 LT OR PUSH2 0x12E7 JUMPI PUSH2 0x297F SWAP3 PUSH1 0x40 MSTORE PUSH2 0x2A4D JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH0 DUP3 SLOAD SWAP3 PUSH2 0x2B4B DUP5 PUSH2 0x2803 JUMP JUMPDEST SWAP1 DUP2 DUP5 MSTORE PUSH1 0x1 SWAP5 DUP6 DUP2 AND SWAP1 DUP2 PUSH0 EQ PUSH2 0x2BB4 JUMPI POP PUSH1 0x1 EQ PUSH2 0x2B74 JUMPI JUMPDEST POP POP PUSH2 0x297F SWAP3 POP SUB DUP4 PUSH2 0x2470 JUMP JUMPDEST SWAP1 SWAP4 SWAP2 POP PUSH0 MSTORE PUSH1 0x20 SWAP1 DUP2 PUSH0 KECCAK256 SWAP4 PUSH0 SWAP2 JUMPDEST DUP2 DUP4 LT PUSH2 0x2B9C JUMPI POP POP PUSH2 0x297F SWAP4 POP DUP3 ADD ADD PUSH0 DUP1 PUSH2 0x2B66 JUMP JUMPDEST DUP6 SLOAD DUP9 DUP5 ADD DUP6 ADD MSTORE SWAP5 DUP6 ADD SWAP5 DUP8 SWAP5 POP SWAP2 DUP4 ADD SWAP2 PUSH2 0x2B84 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x297F SWAP5 POP PUSH1 0x20 SWAP3 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD PUSH0 DUP1 PUSH2 0x2B66 JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x12E7 JUMPI PUSH1 0x40 MLOAD SWAP2 PUSH2 0x2BFA PUSH1 0x20 DUP3 PUSH1 0x5 SHL ADD DUP5 PUSH2 0x2470 JUMP JUMPDEST DUP3 MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB SWAP1 DUP2 DUP2 AND PUSH2 0x3E8 DUP2 GT PUSH2 0x2C85 JUMPI PUSH1 0x3 SLOAD SWAP3 DUP4 AND SWAP1 DUP1 DUP3 EQ PUSH2 0x2C7F JUMPI PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR PUSH1 0x3 SSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0xFEEDDF72B7EE4210B769104CB8B071E5706232AC7F671FB292AF429FFD58B587 SWAP2 DUP2 SWAP1 DUP2 ADD JUMPDEST SUB SWAP1 LOG1 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xCD4E6167 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x9DB JUMPI PUSH1 0x3 SLOAD SWAP2 DUP3 PUSH1 0x60 SHR SWAP1 DUP2 EQ PUSH2 0x2D20 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB SWAP1 SWAP3 AND PUSH1 0x60 DUP3 SWAP1 SHL PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT AND OR PUSH1 0x3 SSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP3 SWAP1 SWAP2 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH32 0xAAEBCF1BFA00580E41D966056B48521FA9F202645C86D4DDF28113E617C1B1D3 SWAP2 SWAP1 DUP2 SWAP1 DUP2 ADD PUSH2 0x2C7A JUMP JUMPDEST POP POP POP JUMP INVALID DUP6 BALANCE NOT DUP15 0x5D SWAP5 PUSH11 0xF9A770D2EEBA00258645E1 PUSH4 0x142D835F 0xE1 0xB0 0x4E GASLIMIT DELEGATECALL 0xDB PUSH19 0xF8BA2646970667358221220AEE6A9A9FAA780 0x2A 0xE1 0xC0 0xB4 PUSH13 0x20752FB372E8DBB1B84175ECBB 0xB1 CALLDATALOAD 0xA8 0xF9 JUMP PUSH19 0x5064736F6C63430008140033A8A7BC421F721C 0xB9 CALLDATASIZE 0xEA SWAP10 0xEF 0xDA 0xD7 SWAP3 CALLDATACOPY 0xE6 0xEE SIGNEXTEND DUP8 BYTE 0x2A ADDMOD 0xCF PUSH5 0x8691F9584C 0xDC PUSH24 0x0 ",
							"sourceMap": "680:20895:13:-:0;;;;;;;;;;-1:-1:-1;;680:20895:13;;;;;-1:-1:-1;;;;;680:20895:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;:::i;:::-;;-1:-1:-1;1716:1:6;;;680:20895:13;;-1:-1:-1;;680:20895:13;;;-1:-1:-1;;;;;680:20895:13;;;;1716:1:6;;;4770:24:13;;4766:53;;680:20895;;;4833:27;4829:56;;680:20895;;4899:27;4895:56;;5043:38;4962:31;;;;680:20895;;;;;;;;;;1751:3;680:20895;1751:3;680:20895;5043:38;:::i;:::-;;-1:-1:-1;;;;;;;;;;;680:20895:13;-1:-1:-1;680:20895:13;3877:6:0;680:20895:13;;;;-1:-1:-1;680:20895:13;3877:22:0;680:20895:13;;;;1716:1:6;;680:20895:13;5862:52:0;;;-1:-1:-1;5862:52:0;;680:20895:13;;;;;;4962:31;680:20895;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4895:56;680:20895;;-1:-1:-1;;;4935:16:13;;;;;4829:56;680:20895;;-1:-1:-1;;;4869:16:13;;;;;680:20895;-1:-1:-1;680:20895:13;;;;;;-1:-1:-1;680:20895:13;;;;;-1:-1:-1;680:20895:13;;;;-1:-1:-1;;;;;680:20895:13;;;;;;:::o;6155:316:0:-;-1:-1:-1;;;;;680:20895:13;-1:-1:-1;680:20895:13;;;;;;;;;;-1:-1:-1;;680:20895:13;-1:-1:-1;;;;;;;;;;;1949:24:13;680:20895;;;;;;;2930:6:0;680:20895:13;;;;;;;;;;;;;;;;;;;;;;6346:40:0;735:10:10;6346:40:0;;;680:20895:13;6400:11:0;:::o;6248:217::-;6442:12;;;:::o"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"abi_decode_address": {
									"entryPoint": 9468,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_address_49892": {
									"entryPoint": 9446,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_string": {
									"entryPoint": 9361,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_stringt_address": {
									"entryPoint": 9490,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"abi_decode_stringt_addresst_string": {
									"entryPoint": 9555,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 3
								},
								"abi_encode_address_address": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_array_string_dyn": {
									"entryPoint": 9715,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_enum_ContractStatus": {
									"entryPoint": 9812,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_string": {
									"entryPoint": 9678,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_uint96_uint96": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_memory_array_array_string_dyn": {
									"entryPoint": 11223,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_push_from_string_to_array_string_storage_dyn_ptr": {
									"entryPoint": 10573,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"checked_mul_uint96": {
									"entryPoint": 10930,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_uint96": {
									"entryPoint": 10960,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clear_storage_range_bytes1": {
									"entryPoint": 10299,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_array_from_storage_to_memory_string": {
									"entryPoint": 11064,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_string_to_string": {
									"entryPoint": 10321,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 9645,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 10243,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 9328,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"finalize_allocation_49916": {
									"entryPoint": 9300,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"fun_callOptionalReturn": {
									"entryPoint": 10829,
									"id": 1178,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"fun_checkRole": {
									"entryPoint": 9966,
									"id": 94,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"fun_checkRole_49881": {
									"entryPoint": 9845,
									"id": 94,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"fun_grantRole": {
									"entryPoint": 10000,
									"id": 257,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"fun_nonReentrantBefore": {
									"entryPoint": 10745,
									"id": 622,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"fun_requireNotPaused": {
									"entryPoint": 10677,
									"id": 533,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"fun_revokeRole": {
									"entryPoint": 10126,
									"id": 295,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"fun_safeTransfer": {
									"entryPoint": 10985,
									"id": 801,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"fun_updateFeeRecipient_inner": {
									"entryPoint": 11415,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"fun_updatePlatformFee_inner": {
									"entryPoint": 11262,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"packed_hashed_string_to_string": {
									"entryPoint": 10645,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [],
							"immutableReferences": {
								"1358": [
									{
										"length": 32,
										"start": 917
									},
									{
										"length": 32,
										"start": 2918
									},
									{
										"length": 32,
										"start": 3025
									},
									{
										"length": 32,
										"start": 4500
									},
									{
										"length": 32,
										"start": 5813
									},
									{
										"length": 32,
										"start": 7234
									},
									{
										"length": 32,
										"start": 7928
									},
									{
										"length": 32,
										"start": 8417
									}
								]
							},
							"linkReferences": {},
							"object": "6080806040526004361015610012575f80fd5b5f90813560e01c90816301ffc9a7146123ff5750806303f715da146122e25780630e59a3951461216657806318cf28341461212b5780631a1aaeed14611fb657806322dcd13e14611f8f578063248a9ca314611f6257806324d956c814611d8d5780632f2ff15d14611d4f578063317b8c5b14611d1957806336568abe14611cd157806338a1328714611b095780633f4ba83a14611a745780634690484014611a535780634971716f1461185e5780635c975abb1461183b57806376492d3f146117a15780638456cb591461174757806391d14854146116fe57806395ccea67146116825780639b1221ab146115215780639f1cf42d146110435780639fad59b414610fa0578063a0a57dac14610cd6578063a217fddf14610cba578063aed1505d14610c42578063d547741f14610c00578063d6bc7c6314610bbb578063e39fff3814610a0b578063e4abd4cb14610721578063e7079180146105d2578063ef03c10e14610243578063f0c3cd20146101c35763f160d36914610194575f80fd5b346101c05760203660031901126101c0576101bd6101b06124fc565b6101b8612675565b612c97565b80f35b80fd5b50346101c05760208060031936011261023f576001600160a01b036101e66124fc565b16825260058152604082208054906101fd82612bd7565b9280840191855280852094915b838310610223576040518061021f87826125f3565b0390f35b600182819261023189612b38565b81520196019201919461020a565b5080fd5b50346101c05760603660031901126101c0576004356001600160401b03811161023f57610274903690600401612491565b61027c6124e6565b6044359182151583036105ce576102916129f9565b610299612675565b6102a16129b5565b6040519060ff6006825193602081818601966102be81838a6125ad565b81016004815203019020015460c81c16156105bc576040519181516102e48185846125ad565b8301600481526001846020828060a01b0396879403019020015416838516036105aa5760ff6006604051602081865161031e8183896125ad565b81016004815203019020015460c01c16600681101561059657600303610584576020610355916040518093819286519283916125ad565b810160048152030190206001600160601b03600582015416918360018301541695848354169260066003549101600160c21b60ff60c01b198254161790557f00000000000000000000000000000000000000000000000000000000000000009589835f1461052557506113888602916001600160601b03831692830361051157899161271080940497886103e891612ad0565b936103fc6001600160601b0384168a612ab2565b6001600160601b031604978861041191612ad0565b996001600160601b038b16928315159a6104b7997fea4ea4b4229888eeba3eb2772df89c52af23c7fe3d530b0c1f2ca146f32c12ba966060965f80516020612d268339815191529e610500575b50506001600160601b038816806104ef575b50506001600160601b038b1690816104db575b5050505b6001600160601b0361049888612995565b956040519715158852818d1660208901521660408701521693a3612995565b604080516001600160601b0395861681529290941660208301529290a36001815580f35b6104e792861c90612ae9565b5f8080610483565b6104f99183612ae9565b5f80610470565b61050a9184612ae9565b8e5f61045e565b634e487b7160e01b5f52601160045260245ffd5b915060607fea4ea4b4229888eeba3eb2772df89c52af23c7fe3d530b0c1f2ca146f32c12ba916104b79697995f80516020612d2683398151915299859b80969a81610573575b505050610487565b61057c92612ae9565b5f808061056b565b604051635e40b94f60e01b8152600490fd5b634e487b7160e01b87526021600452602487fd5b60405163ea8e4eb560e01b8152600490fd5b60405163223da47360e21b8152600490fd5b5f80fd5b50346101c05760203660031901126101c0576004356001600160401b03918282116101c05750602061060b61061e923690600401612491565b81604051938285809451938492016125ad565b81016004815203019020600681015460ff8160c81c16156105bc576106989260018060a01b0391816106eb84865416946001870154166106dd60058801549661066960028a01612b38565b98610682600461067b60038401612b38565b9201612b38565b936040519b8c9b8c6101a08091528d01906125ce565b9260208c015260408b01526001600160601b03891660608b0152858960601c1660808b01526106d060a08b0160ff8960c01c16612654565b89820360c08b01526125ce565b9087820360e08901526125ce565b93818360401c1661010087015260a01c1661012085015281811661014085015260801c1661016083015260016101808301520390f35b50346101c05760c03660031901126101c0576001600160401b03600435818111610a0757610753903690600401612491565b61075b6124e6565b6044356001600160a01b0381169391908490036105ce57606435926001600160601b03841684036105ce57826084351660843503610a035760a4358381116109ff576107ab903690600401612491565b916107b4612675565b6107bc6129b5565b60ff600660405160208186516107d58183858b016125ad565b81016004815203019020015460c81c166109ed5785156109db576001600160a01b03169384156109db578585146109c9576001600160601b038116156109b75742846084351611156109a557825115610993576109586040927fceb1a488be98b2739817f21e7d3b0a343434519cd0fe4db3ef5fc27a96e8d295946108d0855160208185516108678183858a016125ad565b810160048152030190209161087f8460028501612851565b82546001600160a01b03199081168b17845560018401805482168d1790556005840180549091166001600160601b0388161760843560601b67ffffffffffffffff60601b1617905560038301612851565b60068101805468ffffffffffffffffff60801b19164260801b67ffffffffffffffff60801b1617815560049190910180545f919061090d90612803565b601f8111610974575b5055805460ff60c81b1916600160c81b179055868952600560205283892061093f90829061294d565b878952600660205261095381858b2061294d565b612995565b936001600160601b03835192168252608435166020820152a480f35b8183526020832061098d91601f0160051c81019061283b565b5f610916565b6040516307e4dd0160e31b8152600490fd5b604051630642ce7760e01b8152600490fd5b604051635e85ae7360e01b8152600490fd5b6040516324da034560e21b8152600490fd5b60405163e6c4247b60e01b8152600490fd5b6040516338a6a80760e11b8152600490fd5b8680fd5b8580fd5b8280fd5b50346101c05760208060031936011261023f576001600160401b0390600435828111610bb757610a3f903690600401612491565b610a476129f9565b610a4f612675565b610a576129b5565b60405160ff6006835192858181870195610a728183896125ad565b81016004815203019020015460c81c16156105bc5760ff600660405185818651610a9d8183896125ad565b81016004815203019020015460c01c166006811015610ba3576001036105845782610ad3916040518093819286519283916125ad565b81016004815203019020926005840154908160601c16421115610b915760068401805460ff60c01b1916600560c01b1790556001600160601b0316927fb559d285c87e4fa0f561388264310703ff0c6c454a39ae52d0ae94032ff0db7091610b43918580610b54575b5050612995565b916040519384523393a36001815580f35b9054610b8a91906001600160a01b03167f0000000000000000000000000000000000000000000000000000000000000000612ae9565b5f85610b3c565b6040516302eb354360e41b8152600490fd5b634e487b7160e01b86526021600452602486fd5b8380fd5b50346101c057806003193601126101c0576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b50346101c05760403660031901126101c057610c3e600435610c206124e6565b908084526002602052610c3960016040862001546126ee565b61278e565b5080f35b50346101c05760208060031936011261023f576001600160a01b03610c656124fc565b1682526006815260408220805490610c7c82612bd7565b9280840191855280852094915b838310610c9e576040518061021f87826125f3565b6001828192610cac89612b38565b815201960192019194610c89565b50346101c057806003193601126101c057602090604051908152f35b50346101c05760203660031901126101c0576004356001600160401b03811161023f576020610d0c610d7b923690600401612491565b83610180604051610d1c81612454565b828152828582015260606040820152606080820152606060808201528260a08201528260c08201528260e082015282610100820152826101208201528261014082015282610160820152015281604051938285809451938492016125ad565b8101600481520301902090600660405192610d9584612454565b80546001600160a01b0390811685526001820154166020850152610dbb60028201612b38565b6040850152610dcc60038201612b38565b6060850152610ddd60048201612b38565b60808501526001600160401b0360058201546001600160601b03811660a0870152818160601c1660c087015260a01c1660e08501520154906001600160401b0382166101008401526001600160401b038260401c166101208401526001600160401b038260801c16610140840152600660ff8360c01c161015610f8c57508060ff809260c01c1661016084015260c81c16151561018082015260405180916020825260018060a01b03815116602083015260018060a01b036020820151166040830152610180610ef2610ec160408401516101a060608701526101c08601906125ce565b610edd606085015191601f1992838883030160808901526125ce565b906080850151908683030160a08701526125ce565b916001600160601b0360a08201511660c08501526001600160401b0360c08201511660e08501526001600160401b0360e0820151166101008501526001600160401b03610100820151166101208501526001600160401b03610120820151166101408501526001600160401b0361014082015116610160850152610f7e61016082015183860190612654565b015115156101a08301520390f35b634e487b7160e01b81526021600452602490fd5b50346101c05760403660031901126101c057610fba6124fc565b60243580151581036105ce571561102a576001600160a01b031681526005602052604081205b8054610feb81612bd7565b918352602080842093908084015b83831061100e576040518061021f87826125f3565b600182819261101c89612b38565b815201960192019194610ff9565b6001600160a01b03168152600660205260408120610fe0565b50346101c05760e03660031901126101c0576001600160401b03600435818111610a0757611075903690600401612491565b9061107e6124e6565b90604435916001600160601b03831680930361151d5760843560ff8116809103610a03576110aa6129f9565b6110b2612675565b6110ba6129b5565b60405194859260ff6006858451602097816110da8a93848a019e8f6125ad565b81016004815203019020015460c81c16156105bc5760405192825161110081868b6125ad565b840160048152848660018060a01b03968793030190205416978483168099036105aa5760ff6006604051888188516111398183896125ad565b81016004815203019020015460c01c16600681101561150957610584578351156114f75787156114e55761117b866005926040518093819289519283916125ad565b81016004815203019020019186835460a01c166114d3577f0000000000000000000000000000000000000000000000000000000000000000948516906040516370a0823160e01b81528a60048201528781602481865afa80156114c8578a918d91611493575b50106114815786918315801590611476575b801561146b575b611349575b604051636eb1769f60e11b81526001600160a01b03909216600483015230602483015290925082908180604481015b03915afa801561133e5787918a9161130d575b50106112fb576040516323b872dd60e01b8582015260248101889052306044820152606480820188905281529460a08601908111868210176112e7577f2c138f65913cd3b9ca6f36e4b59e26830a033a978ca69f935781972e6df1f61d956112d8946112af92604052612a4d565b805467ffffffffffffffff60a01b19164260a01b67ffffffffffffffff60a01b16179055612995565b92604051908152a36001815580f35b634e487b7160e01b5f52604160045260245ffd5b6040516313be252b60e01b8152600490fd5b809250868092503d8311611337575b6113268183612470565b810103126105ce578690515f611241565b503d61131c565b6040513d8b823e3d90fd5b8092509290923b15611467576040519063d505accf60e01b82528a60048301523060248301528960448301526064356064830152608482015260a43560a482015260c43560c48201528a8160e48183865af1908161143f575b506113b95760405163b78cb0dd60e01b8152600490fd5b604051636eb1769f60e11b81526001600160a01b03831660048201523060248201528681604481855afa80156114345789918c91611403575b50106112fb5761122e9186916111ff565b809250888092503d831161142d575b61141c8183612470565b810103126105ce578890515f6113f2565b503d611412565b6040513d8d823e3d90fd5b88819c929c1161145357604052995f6113a2565b634e487b7160e01b82526041600452602482fd5b8a80fd5b5060c43515156111fa565b5060a43515156111f3565b604051631e9acf1760e31b8152600490fd5b809250898092503d83116114c1575b6114ac8183612470565b810103126114bd578990515f6111e1565b8b80fd5b503d6114a2565b6040513d8e823e3d90fd5b604051631924fceb60e31b8152600490fd5b60405163162908e360e11b8152600490fd5b604051635f0be7af60e01b8152600490fd5b634e487b7160e01b8b52602160045260248bfd5b8480fd5b50346101c05761153036612512565b90611539612675565b6115416129b5565b60405160ff60068351926020818187019561155d8183896125ad565b81016004815203019020015460c81c16156105bc5760405182516115828183856125ad565b60049082019081528190036020019020600101546001600160a01b0393841693168390036105aa5760ff600660405160208186516115c18183896125ad565b81016004815203019020015460c01c16600681101561166e576105845760206115f5916040518093819286519283916125ad565b81016004815203019020906001600160401b03600583015460a01c161561165c57600691909101805460ff60c01b1916600160c01b17905561163690612995565b7ecaec7345d2eb04a42197ac2a2cd7cd74a00b2991b69bb53e23465d4092fdfb8380a380f35b6040516347510bbd60e11b8152600490fd5b634e487b7160e01b85526021600452602485fd5b50346101c05760403660031901126101c05761169c6124fc565b6024356116a7612675565b6001600160a01b03918216917f00000000000000000000000000000000000000000000000000000000000000001682146116ec5780156114e5576101bd913390612ae9565b6040516318ba2fc160e31b8152600490fd5b50346101c05760403660031901126101c05760ff604060209261171f6124e6565b6004358252600285528282206001600160a01b03909116825284522054604051911615158152f35b50346101c057806003193601126101c057611760612675565b6117686129b5565b600160ff19815416176001557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586020604051338152a180f35b50346101c05760203660031901126101c0576001600160401b03600435818111610a07576117da602061060b6006933690600401612491565b8101600481520301902001549060ff8260c81c16918261181b575b602093508261180b575b50506040519015158152f35b60401c1642101590505f806117ff565b915060ff8260c01c16926006841015610f8c5750600260209314916117f5565b50346101c057806003193601126101c057602060ff600154166040519015158152f35b50346101c05761186d36612553565b611878929192612675565b6118806129b5565b604051825160ff600660209384818189019561189d8183896125ad565b81016004815203019020015460c81c16156105bc5760405184516118c28183856125ad565b600490820190815281900383019020600101546001600160a01b0395861695168590036105aa5760ff6006604051848188516118ff8183896125ad565b81016004815203019020015460c01c166006811015610596576001036105845781611935916040518093819288519283916125ad565b810160048152030190206001600160401b039081600582015460601c164211611a4157835115611a2f57600681019081546203f480420190814211611a1b5778ff0000000000000000ffffffffffffffffffffffffffffffff19164285161760409190911b6fffffffffffffffff00000000000000001617600160c11b1782557f934109f661b65dbccffcae4f7ee04261eb7b36e5136e1ca86dde1b00598cb03194611a1194909390926119fc926119f1908690600401612851565b5460401c1695612995565b946040519384936040855260408501906125ce565b918301520390a380f35b634e487b7160e01b8a52601160045260248afd5b60405163361178c760e01b8152600490fd5b60405163764b8e3360e11b8152600490fd5b50346101c057806003193601126101c057602060035460601c604051908152f35b50346101c057806003193601126101c057611a8d612675565b60015460ff811615611acd5760ff19166001557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6020604051338152a180f35b60405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606490fd5b50346101c05760203660031901126101c0576001600160401b03600435818111610a0757611b3b903690600401612491565b90611b446129f9565b611b4c612675565b611b546129b5565b60405160ff600684519260208181880195611b708183896125ad565b81016004815203019020015460c81c16156105bc5760ff60066040516020818751611b9c8183896125ad565b81016004815203019020015460c01c16600681101561166e57600203610584576020611bd3916040518093819287519283916125ad565b81016004815203019020600681018054928360401c164210611cbf576104b75f80516020612d26833981519152926001600160601b038060058301541693611c2f61271083611c26816003541689612ab2565b16048096612ad0565b60ff60c01b19909716600160c21b1790557f00000000000000000000000000000000000000000000000000000000000000009080871680611ca0575b50841680611c89575b5050600101546001600160a01b031694612995565b611c999160035460601c90612ae9565b5f80611c74565b6001840154611cb991906001600160a01b031684612ae9565b5f611c6b565b604051632d6bf64560e01b8152600490fd5b50346101c05760403660031901126101c057611ceb6124e6565b336001600160a01b03821603611d0757610c3e9060043561278e565b60405163334bd91960e11b8152600490fd5b50346101c05760203660031901126101c0576004356001600160601b038116810361023f576101bd90611d4a612675565b612bfe565b50346101c05760403660031901126101c057610c3e600435611d6f6124e6565b908084526002602052611d8860016040862001546126ee565b612710565b50346101c057611d9c36612512565b611da46129f9565b611dac612675565b611db46129b5565b60405160ff600684519260208181880195611dd08183896125ad565b81016004815203019020015460c81c16156105bc5760206040518451611df78183866125ad565b8101600481528160018060a01b03938493849303019020541693168093036105aa5760ff60066040516020818851611e3081838a6125ad565b81016004815203019020015460c01c166006811015610ba357600203610584576104b7611e7860205f80516020612d2683398151915294604051809381928a519283916125ad565b810160048152030190209160016001600160601b03938460058201541694611eb461271082611eab81600354168a612ab2565b16048097612ad0565b60068301805460ff60c01b191660c286901b17905597611ed38a612995565b7ecaec7345d2eb04a42197ac2a2cd7cd74a00b2991b69bb53e23465d4092fdfb8c80a37f00000000000000000000000000000000000000000000000000000000000000009080891680611f4c575b50861680611f35575b505001541694612995565b611f459160035460601c90612ae9565b5f80611f2a565b611f5c9086868601541684612ae9565b5f611f21565b50346101c05760203660031901126101c05760016040602092600435815260028452200154604051908152f35b50346101c057806003193601126101c05760206001600160601b0360035416604051908152f35b50346101c05760203660031901126101c0576004356001600160401b03811161023f57611fe7903690600401612491565b611fef6129f9565b611ff7612675565b60405160ff6006835192602081818701956120138183896125ad565b81016004815203019020015460c81c16156105bc57602061203f916040518093819286519283916125ad565b8101600481520301902090600682019081549260ff8460c01c166006811015610ba3576001810361210c575b5061209c926001600160601b0360058301541694600560c01b9060ff60c01b191617905583806120cf575050612995565b6040519182527fb559d285c87e4fa0f561388264310703ff0c6c454a39ae52d0ae94032ff0db7060203393a36001815580f35b905461210591906001600160a01b03167f0000000000000000000000000000000000000000000000000000000000000000612ae9565b5f83610b3c565b600203612119575f61206b565b6040516304df0cad60e31b8152600490fd5b50346101c057806003193601126101c05760206040517fa8a7bc421f721cb936ea99efdad79237e6ee0b871a2a08cf648691f9584cdc778152f35b50346101c05761217536612553565b909161217f612675565b6121876129b5565b60405191815160ff60066020958681818801956121a58183896125ad565b81016004815203019020015460c81c16156105bc5760405183516121ca8183856125ad565b600490820190815281900385019020546001600160a01b0395861695168590036105aa5760ff6006604051868187516122048183896125ad565b81016004815203019020015460c01c166006811015610596576002036105845761223c846006926040518093819288519283916125ad565b8101600481520301902001918254906001600160401b038260401c164210156122d0578251156122be5760ff60c01b19909116600360c01b179092557fde7b01bef0884582ce204f7f920e57f99dd569f93867450872f436be5a03c755916122a390612995565b926122b86040519282849384528301906125ce565b0390a380f35b60405163bc7fd33160e01b8152600490fd5b604051632d0f572d60e11b8152600490fd5b50346101c0576122f136612512565b906122fa612675565b60405190805160ff60066020948581818701956123188183896125ad565b81016004815203019020015460c81c16156105bc57604051825161233d8183856125ad565b600490820190815281900384019020546001600160a01b0394851694168490036105aa5760ff6006604051858186516123778183896125ad565b81016004815203019020015460c01c166006811015610ba357610584577fb559d285c87e4fa0f561388264310703ff0c6c454a39ae52d0ae94032ff0db709160066123d1856123f4946040518093819287519283916125ad565b60049082019081520301902001805460ff60c01b1916600560c01b179055612995565b91604051858152a380f35b90503461023f57602036600319011261023f5760043563ffffffff60e01b8116809103610a075760209250637965db0b60e01b8114908115612443575b5015158152f35b6301ffc9a760e01b1490505f61243c565b6101a081019081106001600160401b038211176112e757604052565b90601f801991011681019081106001600160401b038211176112e757604052565b81601f820112156105ce578035906001600160401b0382116112e757604051926124c5601f8401601f191660200185612470565b828452602083830101116105ce57815f926020809301838601378301015290565b602435906001600160a01b03821682036105ce57565b600435906001600160a01b03821682036105ce57565b60406003198201126105ce57600435906001600160401b0382116105ce5761253c91600401612491565b906024356001600160a01b03811681036105ce5790565b60606003198201126105ce576001600160401b03916004358381116105ce578261257f91600401612491565b926024356001600160a01b03811681036105ce57926044359182116105ce576125aa91600401612491565b90565b5f5b8381106125be5750505f910152565b81810151838201526020016125af565b906020916125e7815180928185528580860191016125ad565b601f01601f1916010190565b602080820190808352835180925260408301928160408460051b8301019501935f915b8483106126265750505050505090565b9091929394958480612644600193603f198682030187528a516125ce565b9801930193019194939290612616565b9060068210156126615752565b634e487b7160e01b5f52602160045260245ffd5b335f9081527fef73bf2ac44f84561b5498839ab1c8c5a4dd99305d838aea0d76c5961778535c60205260409020547fa8a7bc421f721cb936ea99efdad79237e6ee0b871a2a08cf648691f9584cdc779060ff16156126d05750565b6044906040519063e2517d3f60e01b82523360048301526024820152fd5b805f52600260205260405f20335f5260205260ff60405f205416156126d05750565b905f918083526002602052604083209160018060a01b03169182845260205260ff604084205416155f146127895780835260026020526040832082845260205260408320600160ff198254161790557f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d339380a4600190565b505090565b905f918083526002602052604083209160018060a01b03169182845260205260ff6040842054165f14612789578083526002602052604083208284526020526040832060ff1981541690557ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b339380a4600190565b90600182811c92168015612831575b602083101461281d57565b634e487b7160e01b5f52602260045260245ffd5b91607f1691612812565b818110612846575050565b5f815560010161283b565b91909182516001600160401b0381116112e75761286e8254612803565b601f8111612912575b50602080601f83116001146128b25750819293945f926128a7575b50508160011b915f199060031b1c1916179055565b015190505f80612892565b90601f19831695845f52825f20925f905b8882106128fa575050836001959697106128e2575b505050811b019055565b01515f1960f88460031b161c191690555f80806128d8565b806001859682949686015181550195019301906128c3565b61293d90835f5260205f20601f840160051c81019160208510612943575b601f0160051c019061283b565b5f612877565b9091508190612930565b908154680100000000000000008110156112e757600181018084558110156129815761297f925f5260205f2001612851565b565b634e487b7160e01b5f52603260045260245ffd5b6129ad906020604051928284809451938492016125ad565b810103902090565b60ff600154166129c157565b60405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606490fd5b60025f5414612a085760025f55565b60405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606490fd5b905f602091828151910182855af115612aa7575f513d612a9e57506001600160a01b0381163b155b612a7c5750565b604051635274afe760e01b81526001600160a01b039091166004820152602490fd5b60011415612a75565b6040513d5f823e3d90fd5b9190916001600160601b038080941691160291821691820361051157565b6001600160601b03918216908216039190821161051157565b60405163a9059cbb60e01b60208201526001600160a01b03909216602483015260448083019390935291815260808101916001600160401b038311828410176112e75761297f92604052612a4d565b9060405191825f825492612b4b84612803565b9081845260019485811690815f14612bb45750600114612b74575b505061297f92500383612470565b909391505f52602090815f20935f915b818310612b9c57505061297f93508201015f80612b66565b85548884018501529485019487945091830191612b84565b91505061297f94506020925060ff191682840152151560051b8201015f80612b66565b906001600160401b0382116112e75760405191612bfa60208260051b0184612470565b8252565b6001600160601b03908181166103e88111612c855760035492831690808214612c7f576bffffffffffffffffffffffff1990931692909217600355604080516001600160601b0393841681529190921660208201527ffeeddf72b7ee4210b769104cb8b071e5706232ac7f671fb292af429ffd58b58791819081015b0390a1565b50505050565b60405163cd4e616760e01b8152600490fd5b6001600160a01b0381169081156109db57600354918260601c908114612d20576001600160601b03909216606082901b6bffffffffffffffffffffffff191617600355604080516001600160a01b0393841681529290911660208301527faaebcf1bfa00580e41d966056b48521fa9f202645c86d4ddf28113e617c1b1d3919081908101612c7a565b50505056fe8531198e5d946af9a770d2eeba00258645e163142d835fe1b04e45f4db720f8ba2646970667358221220aee6a9a9faa7802ae1c0b46c20752fb372e8dbb1b84175ecbbb135a8f956725064736f6c63430008140033",
							"opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 SWAP1 DUP2 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x1FFC9A7 EQ PUSH2 0x23FF JUMPI POP DUP1 PUSH4 0x3F715DA EQ PUSH2 0x22E2 JUMPI DUP1 PUSH4 0xE59A395 EQ PUSH2 0x2166 JUMPI DUP1 PUSH4 0x18CF2834 EQ PUSH2 0x212B JUMPI DUP1 PUSH4 0x1A1AAEED EQ PUSH2 0x1FB6 JUMPI DUP1 PUSH4 0x22DCD13E EQ PUSH2 0x1F8F JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x1F62 JUMPI DUP1 PUSH4 0x24D956C8 EQ PUSH2 0x1D8D JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x1D4F JUMPI DUP1 PUSH4 0x317B8C5B EQ PUSH2 0x1D19 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x1CD1 JUMPI DUP1 PUSH4 0x38A13287 EQ PUSH2 0x1B09 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x1A74 JUMPI DUP1 PUSH4 0x46904840 EQ PUSH2 0x1A53 JUMPI DUP1 PUSH4 0x4971716F EQ PUSH2 0x185E JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x183B JUMPI DUP1 PUSH4 0x76492D3F EQ PUSH2 0x17A1 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x1747 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x16FE JUMPI DUP1 PUSH4 0x95CCEA67 EQ PUSH2 0x1682 JUMPI DUP1 PUSH4 0x9B1221AB EQ PUSH2 0x1521 JUMPI DUP1 PUSH4 0x9F1CF42D EQ PUSH2 0x1043 JUMPI DUP1 PUSH4 0x9FAD59B4 EQ PUSH2 0xFA0 JUMPI DUP1 PUSH4 0xA0A57DAC EQ PUSH2 0xCD6 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0xCBA JUMPI DUP1 PUSH4 0xAED1505D EQ PUSH2 0xC42 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0xC00 JUMPI DUP1 PUSH4 0xD6BC7C63 EQ PUSH2 0xBBB JUMPI DUP1 PUSH4 0xE39FFF38 EQ PUSH2 0xA0B JUMPI DUP1 PUSH4 0xE4ABD4CB EQ PUSH2 0x721 JUMPI DUP1 PUSH4 0xE7079180 EQ PUSH2 0x5D2 JUMPI DUP1 PUSH4 0xEF03C10E EQ PUSH2 0x243 JUMPI DUP1 PUSH4 0xF0C3CD20 EQ PUSH2 0x1C3 JUMPI PUSH4 0xF160D369 EQ PUSH2 0x194 JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1C0 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C0 JUMPI PUSH2 0x1BD PUSH2 0x1B0 PUSH2 0x24FC JUMP JUMPDEST PUSH2 0x1B8 PUSH2 0x2675 JUMP JUMPDEST PUSH2 0x2C97 JUMP JUMPDEST DUP1 RETURN JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1C0 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x23F JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x1E6 PUSH2 0x24FC JUMP JUMPDEST AND DUP3 MSTORE PUSH1 0x5 DUP2 MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP1 SLOAD SWAP1 PUSH2 0x1FD DUP3 PUSH2 0x2BD7 JUMP JUMPDEST SWAP3 DUP1 DUP5 ADD SWAP2 DUP6 MSTORE DUP1 DUP6 KECCAK256 SWAP5 SWAP2 JUMPDEST DUP4 DUP4 LT PUSH2 0x223 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH2 0x21F DUP8 DUP3 PUSH2 0x25F3 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 DUP3 DUP2 SWAP3 PUSH2 0x231 DUP10 PUSH2 0x2B38 JUMP JUMPDEST DUP2 MSTORE ADD SWAP7 ADD SWAP3 ADD SWAP2 SWAP5 PUSH2 0x20A JUMP JUMPDEST POP DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1C0 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C0 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x23F JUMPI PUSH2 0x274 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x2491 JUMP JUMPDEST PUSH2 0x27C PUSH2 0x24E6 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP2 DUP3 ISZERO ISZERO DUP4 SUB PUSH2 0x5CE JUMPI PUSH2 0x291 PUSH2 0x29F9 JUMP JUMPDEST PUSH2 0x299 PUSH2 0x2675 JUMP JUMPDEST PUSH2 0x2A1 PUSH2 0x29B5 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH1 0xFF PUSH1 0x6 DUP3 MLOAD SWAP4 PUSH1 0x20 DUP2 DUP2 DUP7 ADD SWAP7 PUSH2 0x2BE DUP2 DUP4 DUP11 PUSH2 0x25AD JUMP JUMPDEST DUP2 ADD PUSH1 0x4 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 ADD SLOAD PUSH1 0xC8 SHR AND ISZERO PUSH2 0x5BC JUMPI PUSH1 0x40 MLOAD SWAP2 DUP2 MLOAD PUSH2 0x2E4 DUP2 DUP6 DUP5 PUSH2 0x25AD JUMP JUMPDEST DUP4 ADD PUSH1 0x4 DUP2 MSTORE PUSH1 0x1 DUP5 PUSH1 0x20 DUP3 DUP1 PUSH1 0xA0 SHL SUB SWAP7 DUP8 SWAP5 SUB ADD SWAP1 KECCAK256 ADD SLOAD AND DUP4 DUP6 AND SUB PUSH2 0x5AA JUMPI PUSH1 0xFF PUSH1 0x6 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP7 MLOAD PUSH2 0x31E DUP2 DUP4 DUP10 PUSH2 0x25AD JUMP JUMPDEST DUP2 ADD PUSH1 0x4 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 ADD SLOAD PUSH1 0xC0 SHR AND PUSH1 0x6 DUP2 LT ISZERO PUSH2 0x596 JUMPI PUSH1 0x3 SUB PUSH2 0x584 JUMPI PUSH1 0x20 PUSH2 0x355 SWAP2 PUSH1 0x40 MLOAD DUP1 SWAP4 DUP2 SWAP3 DUP7 MLOAD SWAP3 DUP4 SWAP2 PUSH2 0x25AD JUMP JUMPDEST DUP2 ADD PUSH1 0x4 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0x5 DUP3 ADD SLOAD AND SWAP2 DUP4 PUSH1 0x1 DUP4 ADD SLOAD AND SWAP6 DUP5 DUP4 SLOAD AND SWAP3 PUSH1 0x6 PUSH1 0x3 SLOAD SWAP2 ADD PUSH1 0x1 PUSH1 0xC2 SHL PUSH1 0xFF PUSH1 0xC0 SHL NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH32 0x0 SWAP6 DUP10 DUP4 PUSH0 EQ PUSH2 0x525 JUMPI POP PUSH2 0x1388 DUP7 MUL SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP4 AND SWAP3 DUP4 SUB PUSH2 0x511 JUMPI DUP10 SWAP2 PUSH2 0x2710 DUP1 SWAP5 DIV SWAP8 DUP9 PUSH2 0x3E8 SWAP2 PUSH2 0x2AD0 JUMP JUMPDEST SWAP4 PUSH2 0x3FC PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP5 AND DUP11 PUSH2 0x2AB2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND DIV SWAP8 DUP9 PUSH2 0x411 SWAP2 PUSH2 0x2AD0 JUMP JUMPDEST SWAP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP12 AND SWAP3 DUP4 ISZERO ISZERO SWAP11 PUSH2 0x4B7 SWAP10 PUSH32 0xEA4EA4B4229888EEBA3EB2772DF89C52AF23C7FE3D530B0C1F2CA146F32C12BA SWAP7 PUSH1 0x60 SWAP7 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2D26 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP15 PUSH2 0x500 JUMPI JUMPDEST POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP9 AND DUP1 PUSH2 0x4EF JUMPI JUMPDEST POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP12 AND SWAP1 DUP2 PUSH2 0x4DB JUMPI JUMPDEST POP POP POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH2 0x498 DUP9 PUSH2 0x2995 JUMP JUMPDEST SWAP6 PUSH1 0x40 MLOAD SWAP8 ISZERO ISZERO DUP9 MSTORE DUP2 DUP14 AND PUSH1 0x20 DUP10 ADD MSTORE AND PUSH1 0x40 DUP8 ADD MSTORE AND SWAP4 LOG3 PUSH2 0x2995 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB SWAP6 DUP7 AND DUP2 MSTORE SWAP3 SWAP1 SWAP5 AND PUSH1 0x20 DUP4 ADD MSTORE SWAP3 SWAP1 LOG3 PUSH1 0x1 DUP2 SSTORE DUP1 RETURN JUMPDEST PUSH2 0x4E7 SWAP3 DUP7 SHR SWAP1 PUSH2 0x2AE9 JUMP JUMPDEST PUSH0 DUP1 DUP1 PUSH2 0x483 JUMP JUMPDEST PUSH2 0x4F9 SWAP2 DUP4 PUSH2 0x2AE9 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x470 JUMP JUMPDEST PUSH2 0x50A SWAP2 DUP5 PUSH2 0x2AE9 JUMP JUMPDEST DUP15 PUSH0 PUSH2 0x45E JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP2 POP PUSH1 0x60 PUSH32 0xEA4EA4B4229888EEBA3EB2772DF89C52AF23C7FE3D530B0C1F2CA146F32C12BA SWAP2 PUSH2 0x4B7 SWAP7 SWAP8 SWAP10 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2D26 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP10 DUP6 SWAP12 DUP1 SWAP7 SWAP11 DUP2 PUSH2 0x573 JUMPI JUMPDEST POP POP POP PUSH2 0x487 JUMP JUMPDEST PUSH2 0x57C SWAP3 PUSH2 0x2AE9 JUMP JUMPDEST PUSH0 DUP1 DUP1 PUSH2 0x56B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x5E40B94F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP8 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 DUP8 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xEA8E4EB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x223DA473 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1C0 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C0 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP2 DUP3 DUP3 GT PUSH2 0x1C0 JUMPI POP PUSH1 0x20 PUSH2 0x60B PUSH2 0x61E SWAP3 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x2491 JUMP JUMPDEST DUP2 PUSH1 0x40 MLOAD SWAP4 DUP3 DUP6 DUP1 SWAP5 MLOAD SWAP4 DUP5 SWAP3 ADD PUSH2 0x25AD JUMP JUMPDEST DUP2 ADD PUSH1 0x4 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 PUSH1 0x6 DUP2 ADD SLOAD PUSH1 0xFF DUP2 PUSH1 0xC8 SHR AND ISZERO PUSH2 0x5BC JUMPI PUSH2 0x698 SWAP3 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP2 DUP2 PUSH2 0x6EB DUP5 DUP7 SLOAD AND SWAP5 PUSH1 0x1 DUP8 ADD SLOAD AND PUSH2 0x6DD PUSH1 0x5 DUP9 ADD SLOAD SWAP7 PUSH2 0x669 PUSH1 0x2 DUP11 ADD PUSH2 0x2B38 JUMP JUMPDEST SWAP9 PUSH2 0x682 PUSH1 0x4 PUSH2 0x67B PUSH1 0x3 DUP5 ADD PUSH2 0x2B38 JUMP JUMPDEST SWAP3 ADD PUSH2 0x2B38 JUMP JUMPDEST SWAP4 PUSH1 0x40 MLOAD SWAP12 DUP13 SWAP12 DUP13 PUSH2 0x1A0 DUP1 SWAP2 MSTORE DUP14 ADD SWAP1 PUSH2 0x25CE JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP13 ADD MSTORE PUSH1 0x40 DUP12 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP10 AND PUSH1 0x60 DUP12 ADD MSTORE DUP6 DUP10 PUSH1 0x60 SHR AND PUSH1 0x80 DUP12 ADD MSTORE PUSH2 0x6D0 PUSH1 0xA0 DUP12 ADD PUSH1 0xFF DUP10 PUSH1 0xC0 SHR AND PUSH2 0x2654 JUMP JUMPDEST DUP10 DUP3 SUB PUSH1 0xC0 DUP12 ADD MSTORE PUSH2 0x25CE JUMP JUMPDEST SWAP1 DUP8 DUP3 SUB PUSH1 0xE0 DUP10 ADD MSTORE PUSH2 0x25CE JUMP JUMPDEST SWAP4 DUP2 DUP4 PUSH1 0x40 SHR AND PUSH2 0x100 DUP8 ADD MSTORE PUSH1 0xA0 SHR AND PUSH2 0x120 DUP6 ADD MSTORE DUP2 DUP2 AND PUSH2 0x140 DUP6 ADD MSTORE PUSH1 0x80 SHR AND PUSH2 0x160 DUP4 ADD MSTORE PUSH1 0x1 PUSH2 0x180 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x1C0 JUMPI PUSH1 0xC0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C0 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x4 CALLDATALOAD DUP2 DUP2 GT PUSH2 0xA07 JUMPI PUSH2 0x753 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x2491 JUMP JUMPDEST PUSH2 0x75B PUSH2 0x24E6 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP4 SWAP2 SWAP1 DUP5 SWAP1 SUB PUSH2 0x5CE JUMPI PUSH1 0x64 CALLDATALOAD SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP5 AND DUP5 SUB PUSH2 0x5CE JUMPI DUP3 PUSH1 0x84 CALLDATALOAD AND PUSH1 0x84 CALLDATALOAD SUB PUSH2 0xA03 JUMPI PUSH1 0xA4 CALLDATALOAD DUP4 DUP2 GT PUSH2 0x9FF JUMPI PUSH2 0x7AB SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x2491 JUMP JUMPDEST SWAP2 PUSH2 0x7B4 PUSH2 0x2675 JUMP JUMPDEST PUSH2 0x7BC PUSH2 0x29B5 JUMP JUMPDEST PUSH1 0xFF PUSH1 0x6 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP7 MLOAD PUSH2 0x7D5 DUP2 DUP4 DUP6 DUP12 ADD PUSH2 0x25AD JUMP JUMPDEST DUP2 ADD PUSH1 0x4 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 ADD SLOAD PUSH1 0xC8 SHR AND PUSH2 0x9ED JUMPI DUP6 ISZERO PUSH2 0x9DB JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP4 DUP5 ISZERO PUSH2 0x9DB JUMPI DUP6 DUP6 EQ PUSH2 0x9C9 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP2 AND ISZERO PUSH2 0x9B7 JUMPI TIMESTAMP DUP5 PUSH1 0x84 CALLDATALOAD AND GT ISZERO PUSH2 0x9A5 JUMPI DUP3 MLOAD ISZERO PUSH2 0x993 JUMPI PUSH2 0x958 PUSH1 0x40 SWAP3 PUSH32 0xCEB1A488BE98B2739817F21E7D3B0A343434519CD0FE4DB3EF5FC27A96E8D295 SWAP5 PUSH2 0x8D0 DUP6 MLOAD PUSH1 0x20 DUP2 DUP6 MLOAD PUSH2 0x867 DUP2 DUP4 DUP6 DUP11 ADD PUSH2 0x25AD JUMP JUMPDEST DUP2 ADD PUSH1 0x4 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 SWAP2 PUSH2 0x87F DUP5 PUSH1 0x2 DUP6 ADD PUSH2 0x2851 JUMP JUMPDEST DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND DUP12 OR DUP5 SSTORE PUSH1 0x1 DUP5 ADD DUP1 SLOAD DUP3 AND DUP14 OR SWAP1 SSTORE PUSH1 0x5 DUP5 ADD DUP1 SLOAD SWAP1 SWAP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP9 AND OR PUSH1 0x84 CALLDATALOAD PUSH1 0x60 SHL PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x60 SHL AND OR SWAP1 SSTORE PUSH1 0x3 DUP4 ADD PUSH2 0x2851 JUMP JUMPDEST PUSH1 0x6 DUP2 ADD DUP1 SLOAD PUSH9 0xFFFFFFFFFFFFFFFFFF PUSH1 0x80 SHL NOT AND TIMESTAMP PUSH1 0x80 SHL PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x80 SHL AND OR DUP2 SSTORE PUSH1 0x4 SWAP2 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH0 SWAP2 SWAP1 PUSH2 0x90D SWAP1 PUSH2 0x2803 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x974 JUMPI JUMPDEST POP SSTORE DUP1 SLOAD PUSH1 0xFF PUSH1 0xC8 SHL NOT AND PUSH1 0x1 PUSH1 0xC8 SHL OR SWAP1 SSTORE DUP7 DUP10 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE DUP4 DUP10 KECCAK256 PUSH2 0x93F SWAP1 DUP3 SWAP1 PUSH2 0x294D JUMP JUMPDEST DUP8 DUP10 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH2 0x953 DUP2 DUP6 DUP12 KECCAK256 PUSH2 0x294D JUMP JUMPDEST PUSH2 0x2995 JUMP JUMPDEST SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP4 MLOAD SWAP3 AND DUP3 MSTORE PUSH1 0x84 CALLDATALOAD AND PUSH1 0x20 DUP3 ADD MSTORE LOG4 DUP1 RETURN JUMPDEST DUP2 DUP4 MSTORE PUSH1 0x20 DUP4 KECCAK256 PUSH2 0x98D SWAP2 PUSH1 0x1F ADD PUSH1 0x5 SHR DUP2 ADD SWAP1 PUSH2 0x283B JUMP JUMPDEST PUSH0 PUSH2 0x916 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x7E4DD01 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x642CE77 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x5E85AE73 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x24DA0345 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xE6C4247B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x38A6A807 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST DUP7 DUP1 REVERT JUMPDEST DUP6 DUP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1C0 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x23F JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 PUSH1 0x4 CALLDATALOAD DUP3 DUP2 GT PUSH2 0xBB7 JUMPI PUSH2 0xA3F SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x2491 JUMP JUMPDEST PUSH2 0xA47 PUSH2 0x29F9 JUMP JUMPDEST PUSH2 0xA4F PUSH2 0x2675 JUMP JUMPDEST PUSH2 0xA57 PUSH2 0x29B5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF PUSH1 0x6 DUP4 MLOAD SWAP3 DUP6 DUP2 DUP2 DUP8 ADD SWAP6 PUSH2 0xA72 DUP2 DUP4 DUP10 PUSH2 0x25AD JUMP JUMPDEST DUP2 ADD PUSH1 0x4 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 ADD SLOAD PUSH1 0xC8 SHR AND ISZERO PUSH2 0x5BC JUMPI PUSH1 0xFF PUSH1 0x6 PUSH1 0x40 MLOAD DUP6 DUP2 DUP7 MLOAD PUSH2 0xA9D DUP2 DUP4 DUP10 PUSH2 0x25AD JUMP JUMPDEST DUP2 ADD PUSH1 0x4 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 ADD SLOAD PUSH1 0xC0 SHR AND PUSH1 0x6 DUP2 LT ISZERO PUSH2 0xBA3 JUMPI PUSH1 0x1 SUB PUSH2 0x584 JUMPI DUP3 PUSH2 0xAD3 SWAP2 PUSH1 0x40 MLOAD DUP1 SWAP4 DUP2 SWAP3 DUP7 MLOAD SWAP3 DUP4 SWAP2 PUSH2 0x25AD JUMP JUMPDEST DUP2 ADD PUSH1 0x4 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 SWAP3 PUSH1 0x5 DUP5 ADD SLOAD SWAP1 DUP2 PUSH1 0x60 SHR AND TIMESTAMP GT ISZERO PUSH2 0xB91 JUMPI PUSH1 0x6 DUP5 ADD DUP1 SLOAD PUSH1 0xFF PUSH1 0xC0 SHL NOT AND PUSH1 0x5 PUSH1 0xC0 SHL OR SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND SWAP3 PUSH32 0xB559D285C87E4FA0F561388264310703FF0C6C454A39AE52D0AE94032FF0DB70 SWAP2 PUSH2 0xB43 SWAP2 DUP6 DUP1 PUSH2 0xB54 JUMPI JUMPDEST POP POP PUSH2 0x2995 JUMP JUMPDEST SWAP2 PUSH1 0x40 MLOAD SWAP4 DUP5 MSTORE CALLER SWAP4 LOG3 PUSH1 0x1 DUP2 SSTORE DUP1 RETURN JUMPDEST SWAP1 SLOAD PUSH2 0xB8A SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x0 PUSH2 0x2AE9 JUMP JUMPDEST PUSH0 DUP6 PUSH2 0xB3C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x2EB3543 PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP7 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 DUP7 REVERT JUMPDEST DUP4 DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1C0 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1C0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x1C0 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C0 JUMPI PUSH2 0xC3E PUSH1 0x4 CALLDATALOAD PUSH2 0xC20 PUSH2 0x24E6 JUMP JUMPDEST SWAP1 DUP1 DUP5 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH2 0xC39 PUSH1 0x1 PUSH1 0x40 DUP7 KECCAK256 ADD SLOAD PUSH2 0x26EE JUMP JUMPDEST PUSH2 0x278E JUMP JUMPDEST POP DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x1C0 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x23F JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xC65 PUSH2 0x24FC JUMP JUMPDEST AND DUP3 MSTORE PUSH1 0x6 DUP2 MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP1 SLOAD SWAP1 PUSH2 0xC7C DUP3 PUSH2 0x2BD7 JUMP JUMPDEST SWAP3 DUP1 DUP5 ADD SWAP2 DUP6 MSTORE DUP1 DUP6 KECCAK256 SWAP5 SWAP2 JUMPDEST DUP4 DUP4 LT PUSH2 0xC9E JUMPI PUSH1 0x40 MLOAD DUP1 PUSH2 0x21F DUP8 DUP3 PUSH2 0x25F3 JUMP JUMPDEST PUSH1 0x1 DUP3 DUP2 SWAP3 PUSH2 0xCAC DUP10 PUSH2 0x2B38 JUMP JUMPDEST DUP2 MSTORE ADD SWAP7 ADD SWAP3 ADD SWAP2 SWAP5 PUSH2 0xC89 JUMP JUMPDEST POP CALLVALUE PUSH2 0x1C0 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1C0 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1C0 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C0 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x23F JUMPI PUSH1 0x20 PUSH2 0xD0C PUSH2 0xD7B SWAP3 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x2491 JUMP JUMPDEST DUP4 PUSH2 0x180 PUSH1 0x40 MLOAD PUSH2 0xD1C DUP2 PUSH2 0x2454 JUMP JUMPDEST DUP3 DUP2 MSTORE DUP3 DUP6 DUP3 ADD MSTORE PUSH1 0x60 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP1 DUP3 ADD MSTORE PUSH1 0x60 PUSH1 0x80 DUP3 ADD MSTORE DUP3 PUSH1 0xA0 DUP3 ADD MSTORE DUP3 PUSH1 0xC0 DUP3 ADD MSTORE DUP3 PUSH1 0xE0 DUP3 ADD MSTORE DUP3 PUSH2 0x100 DUP3 ADD MSTORE DUP3 PUSH2 0x120 DUP3 ADD MSTORE DUP3 PUSH2 0x140 DUP3 ADD MSTORE DUP3 PUSH2 0x160 DUP3 ADD MSTORE ADD MSTORE DUP2 PUSH1 0x40 MLOAD SWAP4 DUP3 DUP6 DUP1 SWAP5 MLOAD SWAP4 DUP5 SWAP3 ADD PUSH2 0x25AD JUMP JUMPDEST DUP2 ADD PUSH1 0x4 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 SWAP1 PUSH1 0x6 PUSH1 0x40 MLOAD SWAP3 PUSH2 0xD95 DUP5 PUSH2 0x2454 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP6 MSTORE PUSH1 0x1 DUP3 ADD SLOAD AND PUSH1 0x20 DUP6 ADD MSTORE PUSH2 0xDBB PUSH1 0x2 DUP3 ADD PUSH2 0x2B38 JUMP JUMPDEST PUSH1 0x40 DUP6 ADD MSTORE PUSH2 0xDCC PUSH1 0x3 DUP3 ADD PUSH2 0x2B38 JUMP JUMPDEST PUSH1 0x60 DUP6 ADD MSTORE PUSH2 0xDDD PUSH1 0x4 DUP3 ADD PUSH2 0x2B38 JUMP JUMPDEST PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x5 DUP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP2 AND PUSH1 0xA0 DUP8 ADD MSTORE DUP2 DUP2 PUSH1 0x60 SHR AND PUSH1 0xC0 DUP8 ADD MSTORE PUSH1 0xA0 SHR AND PUSH1 0xE0 DUP6 ADD MSTORE ADD SLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 AND PUSH2 0x100 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 PUSH1 0x40 SHR AND PUSH2 0x120 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 PUSH1 0x80 SHR AND PUSH2 0x140 DUP5 ADD MSTORE PUSH1 0x6 PUSH1 0xFF DUP4 PUSH1 0xC0 SHR AND LT ISZERO PUSH2 0xF8C JUMPI POP DUP1 PUSH1 0xFF DUP1 SWAP3 PUSH1 0xC0 SHR AND PUSH2 0x160 DUP5 ADD MSTORE PUSH1 0xC8 SHR AND ISZERO ISZERO PUSH2 0x180 DUP3 ADD MSTORE PUSH1 0x40 MLOAD DUP1 SWAP2 PUSH1 0x20 DUP3 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP2 MLOAD AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x20 DUP3 ADD MLOAD AND PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x180 PUSH2 0xEF2 PUSH2 0xEC1 PUSH1 0x40 DUP5 ADD MLOAD PUSH2 0x1A0 PUSH1 0x60 DUP8 ADD MSTORE PUSH2 0x1C0 DUP7 ADD SWAP1 PUSH2 0x25CE JUMP JUMPDEST PUSH2 0xEDD PUSH1 0x60 DUP6 ADD MLOAD SWAP2 PUSH1 0x1F NOT SWAP3 DUP4 DUP9 DUP4 SUB ADD PUSH1 0x80 DUP10 ADD MSTORE PUSH2 0x25CE JUMP JUMPDEST SWAP1 PUSH1 0x80 DUP6 ADD MLOAD SWAP1 DUP7 DUP4 SUB ADD PUSH1 0xA0 DUP8 ADD MSTORE PUSH2 0x25CE JUMP JUMPDEST SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 DUP3 ADD MLOAD AND PUSH1 0xC0 DUP6 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0xC0 DUP3 ADD MLOAD AND PUSH1 0xE0 DUP6 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0xE0 DUP3 ADD MLOAD AND PUSH2 0x100 DUP6 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH2 0x100 DUP3 ADD MLOAD AND PUSH2 0x120 DUP6 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH2 0x120 DUP3 ADD MLOAD AND PUSH2 0x140 DUP6 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH2 0x140 DUP3 ADD MLOAD AND PUSH2 0x160 DUP6 ADD MSTORE PUSH2 0xF7E PUSH2 0x160 DUP3 ADD MLOAD DUP4 DUP7 ADD SWAP1 PUSH2 0x2654 JUMP JUMPDEST ADD MLOAD ISZERO ISZERO PUSH2 0x1A0 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1C0 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C0 JUMPI PUSH2 0xFBA PUSH2 0x24FC JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x5CE JUMPI ISZERO PUSH2 0x102A JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 JUMPDEST DUP1 SLOAD PUSH2 0xFEB DUP2 PUSH2 0x2BD7 JUMP JUMPDEST SWAP2 DUP4 MSTORE PUSH1 0x20 DUP1 DUP5 KECCAK256 SWAP4 SWAP1 DUP1 DUP5 ADD JUMPDEST DUP4 DUP4 LT PUSH2 0x100E JUMPI PUSH1 0x40 MLOAD DUP1 PUSH2 0x21F DUP8 DUP3 PUSH2 0x25F3 JUMP JUMPDEST PUSH1 0x1 DUP3 DUP2 SWAP3 PUSH2 0x101C DUP10 PUSH2 0x2B38 JUMP JUMPDEST DUP2 MSTORE ADD SWAP7 ADD SWAP3 ADD SWAP2 SWAP5 PUSH2 0xFF9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0xFE0 JUMP JUMPDEST POP CALLVALUE PUSH2 0x1C0 JUMPI PUSH1 0xE0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C0 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x4 CALLDATALOAD DUP2 DUP2 GT PUSH2 0xA07 JUMPI PUSH2 0x1075 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x2491 JUMP JUMPDEST SWAP1 PUSH2 0x107E PUSH2 0x24E6 JUMP JUMPDEST SWAP1 PUSH1 0x44 CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP4 AND DUP1 SWAP4 SUB PUSH2 0x151D JUMPI PUSH1 0x84 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP1 SWAP2 SUB PUSH2 0xA03 JUMPI PUSH2 0x10AA PUSH2 0x29F9 JUMP JUMPDEST PUSH2 0x10B2 PUSH2 0x2675 JUMP JUMPDEST PUSH2 0x10BA PUSH2 0x29B5 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP3 PUSH1 0xFF PUSH1 0x6 DUP6 DUP5 MLOAD PUSH1 0x20 SWAP8 DUP2 PUSH2 0x10DA DUP11 SWAP4 DUP5 DUP11 ADD SWAP15 DUP16 PUSH2 0x25AD JUMP JUMPDEST DUP2 ADD PUSH1 0x4 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 ADD SLOAD PUSH1 0xC8 SHR AND ISZERO PUSH2 0x5BC JUMPI PUSH1 0x40 MLOAD SWAP3 DUP3 MLOAD PUSH2 0x1100 DUP2 DUP7 DUP12 PUSH2 0x25AD JUMP JUMPDEST DUP5 ADD PUSH1 0x4 DUP2 MSTORE DUP5 DUP7 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP7 DUP8 SWAP4 SUB ADD SWAP1 KECCAK256 SLOAD AND SWAP8 DUP5 DUP4 AND DUP1 SWAP10 SUB PUSH2 0x5AA JUMPI PUSH1 0xFF PUSH1 0x6 PUSH1 0x40 MLOAD DUP9 DUP2 DUP9 MLOAD PUSH2 0x1139 DUP2 DUP4 DUP10 PUSH2 0x25AD JUMP JUMPDEST DUP2 ADD PUSH1 0x4 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 ADD SLOAD PUSH1 0xC0 SHR AND PUSH1 0x6 DUP2 LT ISZERO PUSH2 0x1509 JUMPI PUSH2 0x584 JUMPI DUP4 MLOAD ISZERO PUSH2 0x14F7 JUMPI DUP8 ISZERO PUSH2 0x14E5 JUMPI PUSH2 0x117B DUP7 PUSH1 0x5 SWAP3 PUSH1 0x40 MLOAD DUP1 SWAP4 DUP2 SWAP3 DUP10 MLOAD SWAP3 DUP4 SWAP2 PUSH2 0x25AD JUMP JUMPDEST DUP2 ADD PUSH1 0x4 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 ADD SWAP2 DUP7 DUP4 SLOAD PUSH1 0xA0 SHR AND PUSH2 0x14D3 JUMPI PUSH32 0x0 SWAP5 DUP6 AND SWAP1 PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE DUP11 PUSH1 0x4 DUP3 ADD MSTORE DUP8 DUP2 PUSH1 0x24 DUP2 DUP7 GAS STATICCALL DUP1 ISZERO PUSH2 0x14C8 JUMPI DUP11 SWAP2 DUP14 SWAP2 PUSH2 0x1493 JUMPI JUMPDEST POP LT PUSH2 0x1481 JUMPI DUP7 SWAP2 DUP4 ISZERO DUP1 ISZERO SWAP1 PUSH2 0x1476 JUMPI JUMPDEST DUP1 ISZERO PUSH2 0x146B JUMPI JUMPDEST PUSH2 0x1349 JUMPI JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE ADDRESS PUSH1 0x24 DUP4 ADD MSTORE SWAP1 SWAP3 POP DUP3 SWAP1 DUP2 DUP1 PUSH1 0x44 DUP2 ADD JUMPDEST SUB SWAP2 GAS STATICCALL DUP1 ISZERO PUSH2 0x133E JUMPI DUP8 SWAP2 DUP11 SWAP2 PUSH2 0x130D JUMPI JUMPDEST POP LT PUSH2 0x12FB JUMPI PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP6 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP9 SWAP1 MSTORE ADDRESS PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP1 DUP3 ADD DUP9 SWAP1 MSTORE DUP2 MSTORE SWAP5 PUSH1 0xA0 DUP7 ADD SWAP1 DUP2 GT DUP7 DUP3 LT OR PUSH2 0x12E7 JUMPI PUSH32 0x2C138F65913CD3B9CA6F36E4B59E26830A033A978CA69F935781972E6DF1F61D SWAP6 PUSH2 0x12D8 SWAP5 PUSH2 0x12AF SWAP3 PUSH1 0x40 MSTORE PUSH2 0x2A4D JUMP JUMPDEST DUP1 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL NOT AND TIMESTAMP PUSH1 0xA0 SHL PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL AND OR SWAP1 SSTORE PUSH2 0x2995 JUMP JUMPDEST SWAP3 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 PUSH1 0x1 DUP2 SSTORE DUP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x13BE252B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST DUP1 SWAP3 POP DUP7 DUP1 SWAP3 POP RETURNDATASIZE DUP4 GT PUSH2 0x1337 JUMPI JUMPDEST PUSH2 0x1326 DUP2 DUP4 PUSH2 0x2470 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x5CE JUMPI DUP7 SWAP1 MLOAD PUSH0 PUSH2 0x1241 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x131C JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP12 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP1 SWAP3 POP SWAP3 SWAP1 SWAP3 EXTCODESIZE ISZERO PUSH2 0x1467 JUMPI PUSH1 0x40 MLOAD SWAP1 PUSH4 0xD505ACCF PUSH1 0xE0 SHL DUP3 MSTORE DUP11 PUSH1 0x4 DUP4 ADD MSTORE ADDRESS PUSH1 0x24 DUP4 ADD MSTORE DUP10 PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x64 CALLDATALOAD PUSH1 0x64 DUP4 ADD MSTORE PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 CALLDATALOAD PUSH1 0xA4 DUP3 ADD MSTORE PUSH1 0xC4 CALLDATALOAD PUSH1 0xC4 DUP3 ADD MSTORE DUP11 DUP2 PUSH1 0xE4 DUP2 DUP4 DUP7 GAS CALL SWAP1 DUP2 PUSH2 0x143F JUMPI JUMPDEST POP PUSH2 0x13B9 JUMPI PUSH1 0x40 MLOAD PUSH4 0xB78CB0DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE DUP7 DUP2 PUSH1 0x44 DUP2 DUP6 GAS STATICCALL DUP1 ISZERO PUSH2 0x1434 JUMPI DUP10 SWAP2 DUP13 SWAP2 PUSH2 0x1403 JUMPI JUMPDEST POP LT PUSH2 0x12FB JUMPI PUSH2 0x122E SWAP2 DUP7 SWAP2 PUSH2 0x11FF JUMP JUMPDEST DUP1 SWAP3 POP DUP9 DUP1 SWAP3 POP RETURNDATASIZE DUP4 GT PUSH2 0x142D JUMPI JUMPDEST PUSH2 0x141C DUP2 DUP4 PUSH2 0x2470 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x5CE JUMPI DUP9 SWAP1 MLOAD PUSH0 PUSH2 0x13F2 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1412 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP14 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP9 DUP2 SWAP13 SWAP3 SWAP13 GT PUSH2 0x1453 JUMPI PUSH1 0x40 MSTORE SWAP10 PUSH0 PUSH2 0x13A2 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP3 REVERT JUMPDEST DUP11 DUP1 REVERT JUMPDEST POP PUSH1 0xC4 CALLDATALOAD ISZERO ISZERO PUSH2 0x11FA JUMP JUMPDEST POP PUSH1 0xA4 CALLDATALOAD ISZERO ISZERO PUSH2 0x11F3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1E9ACF17 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST DUP1 SWAP3 POP DUP10 DUP1 SWAP3 POP RETURNDATASIZE DUP4 GT PUSH2 0x14C1 JUMPI JUMPDEST PUSH2 0x14AC DUP2 DUP4 PUSH2 0x2470 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x14BD JUMPI DUP10 SWAP1 MLOAD PUSH0 PUSH2 0x11E1 JUMP JUMPDEST DUP12 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x14A2 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP15 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1924FCEB PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x162908E3 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x5F0BE7AF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP12 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 DUP12 REVERT JUMPDEST DUP5 DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1C0 JUMPI PUSH2 0x1530 CALLDATASIZE PUSH2 0x2512 JUMP JUMPDEST SWAP1 PUSH2 0x1539 PUSH2 0x2675 JUMP JUMPDEST PUSH2 0x1541 PUSH2 0x29B5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF PUSH1 0x6 DUP4 MLOAD SWAP3 PUSH1 0x20 DUP2 DUP2 DUP8 ADD SWAP6 PUSH2 0x155D DUP2 DUP4 DUP10 PUSH2 0x25AD JUMP JUMPDEST DUP2 ADD PUSH1 0x4 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 ADD SLOAD PUSH1 0xC8 SHR AND ISZERO PUSH2 0x5BC JUMPI PUSH1 0x40 MLOAD DUP3 MLOAD PUSH2 0x1582 DUP2 DUP4 DUP6 PUSH2 0x25AD JUMP JUMPDEST PUSH1 0x4 SWAP1 DUP3 ADD SWAP1 DUP2 MSTORE DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND SWAP4 AND DUP4 SWAP1 SUB PUSH2 0x5AA JUMPI PUSH1 0xFF PUSH1 0x6 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP7 MLOAD PUSH2 0x15C1 DUP2 DUP4 DUP10 PUSH2 0x25AD JUMP JUMPDEST DUP2 ADD PUSH1 0x4 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 ADD SLOAD PUSH1 0xC0 SHR AND PUSH1 0x6 DUP2 LT ISZERO PUSH2 0x166E JUMPI PUSH2 0x584 JUMPI PUSH1 0x20 PUSH2 0x15F5 SWAP2 PUSH1 0x40 MLOAD DUP1 SWAP4 DUP2 SWAP3 DUP7 MLOAD SWAP3 DUP4 SWAP2 PUSH2 0x25AD JUMP JUMPDEST DUP2 ADD PUSH1 0x4 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x5 DUP4 ADD SLOAD PUSH1 0xA0 SHR AND ISZERO PUSH2 0x165C JUMPI PUSH1 0x6 SWAP2 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0xFF PUSH1 0xC0 SHL NOT AND PUSH1 0x1 PUSH1 0xC0 SHL OR SWAP1 SSTORE PUSH2 0x1636 SWAP1 PUSH2 0x2995 JUMP JUMPDEST PUSH31 0xCAEC7345D2EB04A42197AC2A2CD7CD74A00B2991B69BB53E23465D4092FDFB DUP4 DUP1 LOG3 DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x47510BBD PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 DUP6 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1C0 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C0 JUMPI PUSH2 0x169C PUSH2 0x24FC JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH2 0x16A7 PUSH2 0x2675 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP2 PUSH32 0x0 AND DUP3 EQ PUSH2 0x16EC JUMPI DUP1 ISZERO PUSH2 0x14E5 JUMPI PUSH2 0x1BD SWAP2 CALLER SWAP1 PUSH2 0x2AE9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x18BA2FC1 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1C0 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C0 JUMPI PUSH1 0xFF PUSH1 0x40 PUSH1 0x20 SWAP3 PUSH2 0x171F PUSH2 0x24E6 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD DUP3 MSTORE PUSH1 0x2 DUP6 MSTORE DUP3 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP3 MSTORE DUP5 MSTORE KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP2 AND ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1C0 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1C0 JUMPI PUSH2 0x1760 PUSH2 0x2675 JUMP JUMPDEST PUSH2 0x1768 PUSH2 0x29B5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xFF NOT DUP2 SLOAD AND OR PUSH1 0x1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH1 0x20 PUSH1 0x40 MLOAD CALLER DUP2 MSTORE LOG1 DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x1C0 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C0 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x4 CALLDATALOAD DUP2 DUP2 GT PUSH2 0xA07 JUMPI PUSH2 0x17DA PUSH1 0x20 PUSH2 0x60B PUSH1 0x6 SWAP4 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x2491 JUMP JUMPDEST DUP2 ADD PUSH1 0x4 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 ADD SLOAD SWAP1 PUSH1 0xFF DUP3 PUSH1 0xC8 SHR AND SWAP2 DUP3 PUSH2 0x181B JUMPI JUMPDEST PUSH1 0x20 SWAP4 POP DUP3 PUSH2 0x180B JUMPI JUMPDEST POP POP PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH1 0x40 SHR AND TIMESTAMP LT ISZERO SWAP1 POP PUSH0 DUP1 PUSH2 0x17FF JUMP JUMPDEST SWAP2 POP PUSH1 0xFF DUP3 PUSH1 0xC0 SHR AND SWAP3 PUSH1 0x6 DUP5 LT ISZERO PUSH2 0xF8C JUMPI POP PUSH1 0x2 PUSH1 0x20 SWAP4 EQ SWAP2 PUSH2 0x17F5 JUMP JUMPDEST POP CALLVALUE PUSH2 0x1C0 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1C0 JUMPI PUSH1 0x20 PUSH1 0xFF PUSH1 0x1 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1C0 JUMPI PUSH2 0x186D CALLDATASIZE PUSH2 0x2553 JUMP JUMPDEST PUSH2 0x1878 SWAP3 SWAP2 SWAP3 PUSH2 0x2675 JUMP JUMPDEST PUSH2 0x1880 PUSH2 0x29B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 MLOAD PUSH1 0xFF PUSH1 0x6 PUSH1 0x20 SWAP4 DUP5 DUP2 DUP2 DUP10 ADD SWAP6 PUSH2 0x189D DUP2 DUP4 DUP10 PUSH2 0x25AD JUMP JUMPDEST DUP2 ADD PUSH1 0x4 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 ADD SLOAD PUSH1 0xC8 SHR AND ISZERO PUSH2 0x5BC JUMPI PUSH1 0x40 MLOAD DUP5 MLOAD PUSH2 0x18C2 DUP2 DUP4 DUP6 PUSH2 0x25AD JUMP JUMPDEST PUSH1 0x4 SWAP1 DUP3 ADD SWAP1 DUP2 MSTORE DUP2 SWAP1 SUB DUP4 ADD SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 DUP7 AND SWAP6 AND DUP6 SWAP1 SUB PUSH2 0x5AA JUMPI PUSH1 0xFF PUSH1 0x6 PUSH1 0x40 MLOAD DUP5 DUP2 DUP9 MLOAD PUSH2 0x18FF DUP2 DUP4 DUP10 PUSH2 0x25AD JUMP JUMPDEST DUP2 ADD PUSH1 0x4 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 ADD SLOAD PUSH1 0xC0 SHR AND PUSH1 0x6 DUP2 LT ISZERO PUSH2 0x596 JUMPI PUSH1 0x1 SUB PUSH2 0x584 JUMPI DUP2 PUSH2 0x1935 SWAP2 PUSH1 0x40 MLOAD DUP1 SWAP4 DUP2 SWAP3 DUP9 MLOAD SWAP3 DUP4 SWAP2 PUSH2 0x25AD JUMP JUMPDEST DUP2 ADD PUSH1 0x4 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 DUP2 PUSH1 0x5 DUP3 ADD SLOAD PUSH1 0x60 SHR AND TIMESTAMP GT PUSH2 0x1A41 JUMPI DUP4 MLOAD ISZERO PUSH2 0x1A2F JUMPI PUSH1 0x6 DUP2 ADD SWAP1 DUP2 SLOAD PUSH3 0x3F480 TIMESTAMP ADD SWAP1 DUP2 TIMESTAMP GT PUSH2 0x1A1B JUMPI PUSH25 0xFF0000000000000000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND TIMESTAMP DUP6 AND OR PUSH1 0x40 SWAP2 SWAP1 SWAP2 SHL PUSH16 0xFFFFFFFFFFFFFFFF0000000000000000 AND OR PUSH1 0x1 PUSH1 0xC1 SHL OR DUP3 SSTORE PUSH32 0x934109F661B65DBCCFFCAE4F7EE04261EB7B36E5136E1CA86DDE1B00598CB031 SWAP5 PUSH2 0x1A11 SWAP5 SWAP1 SWAP4 SWAP1 SWAP3 PUSH2 0x19FC SWAP3 PUSH2 0x19F1 SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x2851 JUMP JUMPDEST SLOAD PUSH1 0x40 SHR AND SWAP6 PUSH2 0x2995 JUMP JUMPDEST SWAP5 PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP4 PUSH1 0x40 DUP6 MSTORE PUSH1 0x40 DUP6 ADD SWAP1 PUSH2 0x25CE JUMP JUMPDEST SWAP2 DUP4 ADD MSTORE SUB SWAP1 LOG3 DUP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP11 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP11 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x361178C7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x764B8E33 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1C0 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1C0 JUMPI PUSH1 0x20 PUSH1 0x3 SLOAD PUSH1 0x60 SHR PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1C0 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1C0 JUMPI PUSH2 0x1A8D PUSH2 0x2675 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0xFF DUP2 AND ISZERO PUSH2 0x1ACD JUMPI PUSH1 0xFF NOT AND PUSH1 0x1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH1 0x20 PUSH1 0x40 MLOAD CALLER DUP2 MSTORE LOG1 DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x14185D5CD8589B194E881B9BDD081C185D5CD959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1C0 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C0 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x4 CALLDATALOAD DUP2 DUP2 GT PUSH2 0xA07 JUMPI PUSH2 0x1B3B SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x2491 JUMP JUMPDEST SWAP1 PUSH2 0x1B44 PUSH2 0x29F9 JUMP JUMPDEST PUSH2 0x1B4C PUSH2 0x2675 JUMP JUMPDEST PUSH2 0x1B54 PUSH2 0x29B5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF PUSH1 0x6 DUP5 MLOAD SWAP3 PUSH1 0x20 DUP2 DUP2 DUP9 ADD SWAP6 PUSH2 0x1B70 DUP2 DUP4 DUP10 PUSH2 0x25AD JUMP JUMPDEST DUP2 ADD PUSH1 0x4 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 ADD SLOAD PUSH1 0xC8 SHR AND ISZERO PUSH2 0x5BC JUMPI PUSH1 0xFF PUSH1 0x6 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP8 MLOAD PUSH2 0x1B9C DUP2 DUP4 DUP10 PUSH2 0x25AD JUMP JUMPDEST DUP2 ADD PUSH1 0x4 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 ADD SLOAD PUSH1 0xC0 SHR AND PUSH1 0x6 DUP2 LT ISZERO PUSH2 0x166E JUMPI PUSH1 0x2 SUB PUSH2 0x584 JUMPI PUSH1 0x20 PUSH2 0x1BD3 SWAP2 PUSH1 0x40 MLOAD DUP1 SWAP4 DUP2 SWAP3 DUP8 MLOAD SWAP3 DUP4 SWAP2 PUSH2 0x25AD JUMP JUMPDEST DUP2 ADD PUSH1 0x4 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 PUSH1 0x6 DUP2 ADD DUP1 SLOAD SWAP3 DUP4 PUSH1 0x40 SHR AND TIMESTAMP LT PUSH2 0x1CBF JUMPI PUSH2 0x4B7 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2D26 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP1 PUSH1 0x5 DUP4 ADD SLOAD AND SWAP4 PUSH2 0x1C2F PUSH2 0x2710 DUP4 PUSH2 0x1C26 DUP2 PUSH1 0x3 SLOAD AND DUP10 PUSH2 0x2AB2 JUMP JUMPDEST AND DIV DUP1 SWAP7 PUSH2 0x2AD0 JUMP JUMPDEST PUSH1 0xFF PUSH1 0xC0 SHL NOT SWAP1 SWAP8 AND PUSH1 0x1 PUSH1 0xC2 SHL OR SWAP1 SSTORE PUSH32 0x0 SWAP1 DUP1 DUP8 AND DUP1 PUSH2 0x1CA0 JUMPI JUMPDEST POP DUP5 AND DUP1 PUSH2 0x1C89 JUMPI JUMPDEST POP POP PUSH1 0x1 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP5 PUSH2 0x2995 JUMP JUMPDEST PUSH2 0x1C99 SWAP2 PUSH1 0x3 SLOAD PUSH1 0x60 SHR SWAP1 PUSH2 0x2AE9 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x1C74 JUMP JUMPDEST PUSH1 0x1 DUP5 ADD SLOAD PUSH2 0x1CB9 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH2 0x2AE9 JUMP JUMPDEST PUSH0 PUSH2 0x1C6B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x2D6BF645 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1C0 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C0 JUMPI PUSH2 0x1CEB PUSH2 0x24E6 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SUB PUSH2 0x1D07 JUMPI PUSH2 0xC3E SWAP1 PUSH1 0x4 CALLDATALOAD PUSH2 0x278E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x334BD919 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1C0 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C0 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x23F JUMPI PUSH2 0x1BD SWAP1 PUSH2 0x1D4A PUSH2 0x2675 JUMP JUMPDEST PUSH2 0x2BFE JUMP JUMPDEST POP CALLVALUE PUSH2 0x1C0 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C0 JUMPI PUSH2 0xC3E PUSH1 0x4 CALLDATALOAD PUSH2 0x1D6F PUSH2 0x24E6 JUMP JUMPDEST SWAP1 DUP1 DUP5 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH2 0x1D88 PUSH1 0x1 PUSH1 0x40 DUP7 KECCAK256 ADD SLOAD PUSH2 0x26EE JUMP JUMPDEST PUSH2 0x2710 JUMP JUMPDEST POP CALLVALUE PUSH2 0x1C0 JUMPI PUSH2 0x1D9C CALLDATASIZE PUSH2 0x2512 JUMP JUMPDEST PUSH2 0x1DA4 PUSH2 0x29F9 JUMP JUMPDEST PUSH2 0x1DAC PUSH2 0x2675 JUMP JUMPDEST PUSH2 0x1DB4 PUSH2 0x29B5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF PUSH1 0x6 DUP5 MLOAD SWAP3 PUSH1 0x20 DUP2 DUP2 DUP9 ADD SWAP6 PUSH2 0x1DD0 DUP2 DUP4 DUP10 PUSH2 0x25AD JUMP JUMPDEST DUP2 ADD PUSH1 0x4 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 ADD SLOAD PUSH1 0xC8 SHR AND ISZERO PUSH2 0x5BC JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD DUP5 MLOAD PUSH2 0x1DF7 DUP2 DUP4 DUP7 PUSH2 0x25AD JUMP JUMPDEST DUP2 ADD PUSH1 0x4 DUP2 MSTORE DUP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 SWAP4 DUP5 SWAP4 SUB ADD SWAP1 KECCAK256 SLOAD AND SWAP4 AND DUP1 SWAP4 SUB PUSH2 0x5AA JUMPI PUSH1 0xFF PUSH1 0x6 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP9 MLOAD PUSH2 0x1E30 DUP2 DUP4 DUP11 PUSH2 0x25AD JUMP JUMPDEST DUP2 ADD PUSH1 0x4 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 ADD SLOAD PUSH1 0xC0 SHR AND PUSH1 0x6 DUP2 LT ISZERO PUSH2 0xBA3 JUMPI PUSH1 0x2 SUB PUSH2 0x584 JUMPI PUSH2 0x4B7 PUSH2 0x1E78 PUSH1 0x20 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2D26 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP5 PUSH1 0x40 MLOAD DUP1 SWAP4 DUP2 SWAP3 DUP11 MLOAD SWAP3 DUP4 SWAP2 PUSH2 0x25AD JUMP JUMPDEST DUP2 ADD PUSH1 0x4 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB SWAP4 DUP5 PUSH1 0x5 DUP3 ADD SLOAD AND SWAP5 PUSH2 0x1EB4 PUSH2 0x2710 DUP3 PUSH2 0x1EAB DUP2 PUSH1 0x3 SLOAD AND DUP11 PUSH2 0x2AB2 JUMP JUMPDEST AND DIV DUP1 SWAP8 PUSH2 0x2AD0 JUMP JUMPDEST PUSH1 0x6 DUP4 ADD DUP1 SLOAD PUSH1 0xFF PUSH1 0xC0 SHL NOT AND PUSH1 0xC2 DUP7 SWAP1 SHL OR SWAP1 SSTORE SWAP8 PUSH2 0x1ED3 DUP11 PUSH2 0x2995 JUMP JUMPDEST PUSH31 0xCAEC7345D2EB04A42197AC2A2CD7CD74A00B2991B69BB53E23465D4092FDFB DUP13 DUP1 LOG3 PUSH32 0x0 SWAP1 DUP1 DUP10 AND DUP1 PUSH2 0x1F4C JUMPI JUMPDEST POP DUP7 AND DUP1 PUSH2 0x1F35 JUMPI JUMPDEST POP POP ADD SLOAD AND SWAP5 PUSH2 0x2995 JUMP JUMPDEST PUSH2 0x1F45 SWAP2 PUSH1 0x3 SLOAD PUSH1 0x60 SHR SWAP1 PUSH2 0x2AE9 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x1F2A JUMP JUMPDEST PUSH2 0x1F5C SWAP1 DUP7 DUP7 DUP7 ADD SLOAD AND DUP5 PUSH2 0x2AE9 JUMP JUMPDEST PUSH0 PUSH2 0x1F21 JUMP JUMPDEST POP CALLVALUE PUSH2 0x1C0 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C0 JUMPI PUSH1 0x1 PUSH1 0x40 PUSH1 0x20 SWAP3 PUSH1 0x4 CALLDATALOAD DUP2 MSTORE PUSH1 0x2 DUP5 MSTORE KECCAK256 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1C0 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1C0 JUMPI PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0x3 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1C0 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C0 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x23F JUMPI PUSH2 0x1FE7 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x2491 JUMP JUMPDEST PUSH2 0x1FEF PUSH2 0x29F9 JUMP JUMPDEST PUSH2 0x1FF7 PUSH2 0x2675 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF PUSH1 0x6 DUP4 MLOAD SWAP3 PUSH1 0x20 DUP2 DUP2 DUP8 ADD SWAP6 PUSH2 0x2013 DUP2 DUP4 DUP10 PUSH2 0x25AD JUMP JUMPDEST DUP2 ADD PUSH1 0x4 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 ADD SLOAD PUSH1 0xC8 SHR AND ISZERO PUSH2 0x5BC JUMPI PUSH1 0x20 PUSH2 0x203F SWAP2 PUSH1 0x40 MLOAD DUP1 SWAP4 DUP2 SWAP3 DUP7 MLOAD SWAP3 DUP4 SWAP2 PUSH2 0x25AD JUMP JUMPDEST DUP2 ADD PUSH1 0x4 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 SWAP1 PUSH1 0x6 DUP3 ADD SWAP1 DUP2 SLOAD SWAP3 PUSH1 0xFF DUP5 PUSH1 0xC0 SHR AND PUSH1 0x6 DUP2 LT ISZERO PUSH2 0xBA3 JUMPI PUSH1 0x1 DUP2 SUB PUSH2 0x210C JUMPI JUMPDEST POP PUSH2 0x209C SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0x5 DUP4 ADD SLOAD AND SWAP5 PUSH1 0x5 PUSH1 0xC0 SHL SWAP1 PUSH1 0xFF PUSH1 0xC0 SHL NOT AND OR SWAP1 SSTORE DUP4 DUP1 PUSH2 0x20CF JUMPI POP POP PUSH2 0x2995 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 MSTORE PUSH32 0xB559D285C87E4FA0F561388264310703FF0C6C454A39AE52D0AE94032FF0DB70 PUSH1 0x20 CALLER SWAP4 LOG3 PUSH1 0x1 DUP2 SSTORE DUP1 RETURN JUMPDEST SWAP1 SLOAD PUSH2 0x2105 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x0 PUSH2 0x2AE9 JUMP JUMPDEST PUSH0 DUP4 PUSH2 0xB3C JUMP JUMPDEST PUSH1 0x2 SUB PUSH2 0x2119 JUMPI PUSH0 PUSH2 0x206B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x4DF0CAD PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1C0 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1C0 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0xA8A7BC421F721CB936EA99EFDAD79237E6EE0B871A2A08CF648691F9584CDC77 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1C0 JUMPI PUSH2 0x2175 CALLDATASIZE PUSH2 0x2553 JUMP JUMPDEST SWAP1 SWAP2 PUSH2 0x217F PUSH2 0x2675 JUMP JUMPDEST PUSH2 0x2187 PUSH2 0x29B5 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP2 MLOAD PUSH1 0xFF PUSH1 0x6 PUSH1 0x20 SWAP6 DUP7 DUP2 DUP2 DUP9 ADD SWAP6 PUSH2 0x21A5 DUP2 DUP4 DUP10 PUSH2 0x25AD JUMP JUMPDEST DUP2 ADD PUSH1 0x4 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 ADD SLOAD PUSH1 0xC8 SHR AND ISZERO PUSH2 0x5BC JUMPI PUSH1 0x40 MLOAD DUP4 MLOAD PUSH2 0x21CA DUP2 DUP4 DUP6 PUSH2 0x25AD JUMP JUMPDEST PUSH1 0x4 SWAP1 DUP3 ADD SWAP1 DUP2 MSTORE DUP2 SWAP1 SUB DUP6 ADD SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 DUP7 AND SWAP6 AND DUP6 SWAP1 SUB PUSH2 0x5AA JUMPI PUSH1 0xFF PUSH1 0x6 PUSH1 0x40 MLOAD DUP7 DUP2 DUP8 MLOAD PUSH2 0x2204 DUP2 DUP4 DUP10 PUSH2 0x25AD JUMP JUMPDEST DUP2 ADD PUSH1 0x4 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 ADD SLOAD PUSH1 0xC0 SHR AND PUSH1 0x6 DUP2 LT ISZERO PUSH2 0x596 JUMPI PUSH1 0x2 SUB PUSH2 0x584 JUMPI PUSH2 0x223C DUP5 PUSH1 0x6 SWAP3 PUSH1 0x40 MLOAD DUP1 SWAP4 DUP2 SWAP3 DUP9 MLOAD SWAP3 DUP4 SWAP2 PUSH2 0x25AD JUMP JUMPDEST DUP2 ADD PUSH1 0x4 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 ADD SWAP2 DUP3 SLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 PUSH1 0x40 SHR AND TIMESTAMP LT ISZERO PUSH2 0x22D0 JUMPI DUP3 MLOAD ISZERO PUSH2 0x22BE JUMPI PUSH1 0xFF PUSH1 0xC0 SHL NOT SWAP1 SWAP2 AND PUSH1 0x3 PUSH1 0xC0 SHL OR SWAP1 SWAP3 SSTORE PUSH32 0xDE7B01BEF0884582CE204F7F920E57F99DD569F93867450872F436BE5A03C755 SWAP2 PUSH2 0x22A3 SWAP1 PUSH2 0x2995 JUMP JUMPDEST SWAP3 PUSH2 0x22B8 PUSH1 0x40 MLOAD SWAP3 DUP3 DUP5 SWAP4 DUP5 MSTORE DUP4 ADD SWAP1 PUSH2 0x25CE JUMP JUMPDEST SUB SWAP1 LOG3 DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xBC7FD331 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x2D0F572D PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1C0 JUMPI PUSH2 0x22F1 CALLDATASIZE PUSH2 0x2512 JUMP JUMPDEST SWAP1 PUSH2 0x22FA PUSH2 0x2675 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 MLOAD PUSH1 0xFF PUSH1 0x6 PUSH1 0x20 SWAP5 DUP6 DUP2 DUP2 DUP8 ADD SWAP6 PUSH2 0x2318 DUP2 DUP4 DUP10 PUSH2 0x25AD JUMP JUMPDEST DUP2 ADD PUSH1 0x4 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 ADD SLOAD PUSH1 0xC8 SHR AND ISZERO PUSH2 0x5BC JUMPI PUSH1 0x40 MLOAD DUP3 MLOAD PUSH2 0x233D DUP2 DUP4 DUP6 PUSH2 0x25AD JUMP JUMPDEST PUSH1 0x4 SWAP1 DUP3 ADD SWAP1 DUP2 MSTORE DUP2 SWAP1 SUB DUP5 ADD SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND SWAP5 AND DUP5 SWAP1 SUB PUSH2 0x5AA JUMPI PUSH1 0xFF PUSH1 0x6 PUSH1 0x40 MLOAD DUP6 DUP2 DUP7 MLOAD PUSH2 0x2377 DUP2 DUP4 DUP10 PUSH2 0x25AD JUMP JUMPDEST DUP2 ADD PUSH1 0x4 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 ADD SLOAD PUSH1 0xC0 SHR AND PUSH1 0x6 DUP2 LT ISZERO PUSH2 0xBA3 JUMPI PUSH2 0x584 JUMPI PUSH32 0xB559D285C87E4FA0F561388264310703FF0C6C454A39AE52D0AE94032FF0DB70 SWAP2 PUSH1 0x6 PUSH2 0x23D1 DUP6 PUSH2 0x23F4 SWAP5 PUSH1 0x40 MLOAD DUP1 SWAP4 DUP2 SWAP3 DUP8 MLOAD SWAP3 DUP4 SWAP2 PUSH2 0x25AD JUMP JUMPDEST PUSH1 0x4 SWAP1 DUP3 ADD SWAP1 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 ADD DUP1 SLOAD PUSH1 0xFF PUSH1 0xC0 SHL NOT AND PUSH1 0x5 PUSH1 0xC0 SHL OR SWAP1 SSTORE PUSH2 0x2995 JUMP JUMPDEST SWAP2 PUSH1 0x40 MLOAD DUP6 DUP2 MSTORE LOG3 DUP1 RETURN JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x23F JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23F JUMPI PUSH1 0x4 CALLDATALOAD PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL DUP2 AND DUP1 SWAP2 SUB PUSH2 0xA07 JUMPI PUSH1 0x20 SWAP3 POP PUSH4 0x7965DB0B PUSH1 0xE0 SHL DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0x2443 JUMPI JUMPDEST POP ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL EQ SWAP1 POP PUSH0 PUSH2 0x243C JUMP JUMPDEST PUSH2 0x1A0 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x12E7 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x12E7 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x5CE JUMPI DUP1 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x12E7 JUMPI PUSH1 0x40 MLOAD SWAP3 PUSH2 0x24C5 PUSH1 0x1F DUP5 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP6 PUSH2 0x2470 JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x20 DUP4 DUP4 ADD ADD GT PUSH2 0x5CE JUMPI DUP2 PUSH0 SWAP3 PUSH1 0x20 DUP1 SWAP4 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x5CE JUMPI JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x5CE JUMPI JUMP JUMPDEST PUSH1 0x40 PUSH1 0x3 NOT DUP3 ADD SLT PUSH2 0x5CE JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x5CE JUMPI PUSH2 0x253C SWAP2 PUSH1 0x4 ADD PUSH2 0x2491 JUMP JUMPDEST SWAP1 PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x5CE JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 NOT DUP3 ADD SLT PUSH2 0x5CE JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP2 PUSH1 0x4 CALLDATALOAD DUP4 DUP2 GT PUSH2 0x5CE JUMPI DUP3 PUSH2 0x257F SWAP2 PUSH1 0x4 ADD PUSH2 0x2491 JUMP JUMPDEST SWAP3 PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x5CE JUMPI SWAP3 PUSH1 0x44 CALLDATALOAD SWAP2 DUP3 GT PUSH2 0x5CE JUMPI PUSH2 0x25AA SWAP2 PUSH1 0x4 ADD PUSH2 0x2491 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT PUSH2 0x25BE JUMPI POP POP PUSH0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x25AF JUMP JUMPDEST SWAP1 PUSH1 0x20 SWAP2 PUSH2 0x25E7 DUP2 MLOAD DUP1 SWAP3 DUP2 DUP6 MSTORE DUP6 DUP1 DUP7 ADD SWAP2 ADD PUSH2 0x25AD JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 ADD SWAP1 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 SWAP3 MSTORE PUSH1 0x40 DUP4 ADD SWAP3 DUP2 PUSH1 0x40 DUP5 PUSH1 0x5 SHL DUP4 ADD ADD SWAP6 ADD SWAP4 PUSH0 SWAP2 JUMPDEST DUP5 DUP4 LT PUSH2 0x2626 JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 DUP5 DUP1 PUSH2 0x2644 PUSH1 0x1 SWAP4 PUSH1 0x3F NOT DUP7 DUP3 SUB ADD DUP8 MSTORE DUP11 MLOAD PUSH2 0x25CE JUMP JUMPDEST SWAP9 ADD SWAP4 ADD SWAP4 ADD SWAP2 SWAP5 SWAP4 SWAP3 SWAP1 PUSH2 0x2616 JUMP JUMPDEST SWAP1 PUSH1 0x6 DUP3 LT ISZERO PUSH2 0x2661 JUMPI MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH32 0xEF73BF2AC44F84561B5498839AB1C8C5A4DD99305D838AEA0D76C5961778535C PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH32 0xA8A7BC421F721CB936EA99EFDAD79237E6EE0B871A2A08CF648691F9584CDC77 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0x26D0 JUMPI POP JUMP JUMPDEST PUSH1 0x44 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH4 0xE2517D3F PUSH1 0xE0 SHL DUP3 MSTORE CALLER PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE REVERT JUMPDEST DUP1 PUSH0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 CALLER PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH0 KECCAK256 SLOAD AND ISZERO PUSH2 0x26D0 JUMPI POP JUMP JUMPDEST SWAP1 PUSH0 SWAP2 DUP1 DUP4 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP5 KECCAK256 SLOAD AND ISZERO PUSH0 EQ PUSH2 0x2789 JUMPI DUP1 DUP4 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D CALLER SWAP4 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST POP POP SWAP1 JUMP JUMPDEST SWAP1 PUSH0 SWAP2 DUP1 DUP4 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP5 KECCAK256 SLOAD AND PUSH0 EQ PUSH2 0x2789 JUMPI DUP1 DUP4 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0xFF NOT DUP2 SLOAD AND SWAP1 SSTORE PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B CALLER SWAP4 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x2831 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x281D JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x2812 JUMP JUMPDEST DUP2 DUP2 LT PUSH2 0x2846 JUMPI POP POP JUMP JUMPDEST PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x283B JUMP JUMPDEST SWAP2 SWAP1 SWAP2 DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x12E7 JUMPI PUSH2 0x286E DUP3 SLOAD PUSH2 0x2803 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x2912 JUMPI JUMPDEST POP PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x28B2 JUMPI POP DUP2 SWAP3 SWAP4 SWAP5 PUSH0 SWAP3 PUSH2 0x28A7 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 SSTORE JUMP JUMPDEST ADD MLOAD SWAP1 POP PUSH0 DUP1 PUSH2 0x2892 JUMP JUMPDEST SWAP1 PUSH1 0x1F NOT DUP4 AND SWAP6 DUP5 PUSH0 MSTORE DUP3 PUSH0 KECCAK256 SWAP3 PUSH0 SWAP1 JUMPDEST DUP9 DUP3 LT PUSH2 0x28FA JUMPI POP POP DUP4 PUSH1 0x1 SWAP6 SWAP7 SWAP8 LT PUSH2 0x28E2 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE JUMP JUMPDEST ADD MLOAD PUSH0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE PUSH0 DUP1 DUP1 PUSH2 0x28D8 JUMP JUMPDEST DUP1 PUSH1 0x1 DUP6 SWAP7 DUP3 SWAP5 SWAP7 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD SWAP1 PUSH2 0x28C3 JUMP JUMPDEST PUSH2 0x293D SWAP1 DUP4 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP6 LT PUSH2 0x2943 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x283B JUMP JUMPDEST PUSH0 PUSH2 0x2877 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x2930 JUMP JUMPDEST SWAP1 DUP2 SLOAD PUSH9 0x10000000000000000 DUP2 LT ISZERO PUSH2 0x12E7 JUMPI PUSH1 0x1 DUP2 ADD DUP1 DUP5 SSTORE DUP2 LT ISZERO PUSH2 0x2981 JUMPI PUSH2 0x297F SWAP3 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH2 0x2851 JUMP JUMPDEST JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x29AD SWAP1 PUSH1 0x20 PUSH1 0x40 MLOAD SWAP3 DUP3 DUP5 DUP1 SWAP5 MLOAD SWAP4 DUP5 SWAP3 ADD PUSH2 0x25AD JUMP JUMPDEST DUP2 ADD SUB SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0xFF PUSH1 0x1 SLOAD AND PUSH2 0x29C1 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH0 SLOAD EQ PUSH2 0x2A08 JUMPI PUSH1 0x2 PUSH0 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 PUSH0 PUSH1 0x20 SWAP2 DUP3 DUP2 MLOAD SWAP2 ADD DUP3 DUP6 GAS CALL ISZERO PUSH2 0x2AA7 JUMPI PUSH0 MLOAD RETURNDATASIZE PUSH2 0x2A9E JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND EXTCODESIZE ISZERO JUMPDEST PUSH2 0x2A7C JUMPI POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x5274AFE7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x1 EQ ISZERO PUSH2 0x2A75 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP2 SWAP1 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP1 DUP1 SWAP5 AND SWAP2 AND MUL SWAP2 DUP3 AND SWAP2 DUP3 SUB PUSH2 0x511 JUMPI JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB SWAP2 DUP3 AND SWAP1 DUP3 AND SUB SWAP2 SWAP1 DUP3 GT PUSH2 0x511 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x80 DUP2 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT DUP3 DUP5 LT OR PUSH2 0x12E7 JUMPI PUSH2 0x297F SWAP3 PUSH1 0x40 MSTORE PUSH2 0x2A4D JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH0 DUP3 SLOAD SWAP3 PUSH2 0x2B4B DUP5 PUSH2 0x2803 JUMP JUMPDEST SWAP1 DUP2 DUP5 MSTORE PUSH1 0x1 SWAP5 DUP6 DUP2 AND SWAP1 DUP2 PUSH0 EQ PUSH2 0x2BB4 JUMPI POP PUSH1 0x1 EQ PUSH2 0x2B74 JUMPI JUMPDEST POP POP PUSH2 0x297F SWAP3 POP SUB DUP4 PUSH2 0x2470 JUMP JUMPDEST SWAP1 SWAP4 SWAP2 POP PUSH0 MSTORE PUSH1 0x20 SWAP1 DUP2 PUSH0 KECCAK256 SWAP4 PUSH0 SWAP2 JUMPDEST DUP2 DUP4 LT PUSH2 0x2B9C JUMPI POP POP PUSH2 0x297F SWAP4 POP DUP3 ADD ADD PUSH0 DUP1 PUSH2 0x2B66 JUMP JUMPDEST DUP6 SLOAD DUP9 DUP5 ADD DUP6 ADD MSTORE SWAP5 DUP6 ADD SWAP5 DUP8 SWAP5 POP SWAP2 DUP4 ADD SWAP2 PUSH2 0x2B84 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x297F SWAP5 POP PUSH1 0x20 SWAP3 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD PUSH0 DUP1 PUSH2 0x2B66 JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x12E7 JUMPI PUSH1 0x40 MLOAD SWAP2 PUSH2 0x2BFA PUSH1 0x20 DUP3 PUSH1 0x5 SHL ADD DUP5 PUSH2 0x2470 JUMP JUMPDEST DUP3 MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB SWAP1 DUP2 DUP2 AND PUSH2 0x3E8 DUP2 GT PUSH2 0x2C85 JUMPI PUSH1 0x3 SLOAD SWAP3 DUP4 AND SWAP1 DUP1 DUP3 EQ PUSH2 0x2C7F JUMPI PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR PUSH1 0x3 SSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0xFEEDDF72B7EE4210B769104CB8B071E5706232AC7F671FB292AF429FFD58B587 SWAP2 DUP2 SWAP1 DUP2 ADD JUMPDEST SUB SWAP1 LOG1 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xCD4E6167 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x9DB JUMPI PUSH1 0x3 SLOAD SWAP2 DUP3 PUSH1 0x60 SHR SWAP1 DUP2 EQ PUSH2 0x2D20 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB SWAP1 SWAP3 AND PUSH1 0x60 DUP3 SWAP1 SHL PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT AND OR PUSH1 0x3 SSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP3 SWAP1 SWAP2 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH32 0xAAEBCF1BFA00580E41D966056B48521FA9F202645C86D4DDF28113E617C1B1D3 SWAP2 SWAP1 DUP2 SWAP1 DUP2 ADD PUSH2 0x2C7A JUMP JUMPDEST POP POP POP JUMP INVALID DUP6 BALANCE NOT DUP15 0x5D SWAP5 PUSH11 0xF9A770D2EEBA00258645E1 PUSH4 0x142D835F 0xE1 0xB0 0x4E GASLIMIT DELEGATECALL 0xDB PUSH19 0xF8BA2646970667358221220AEE6A9A9FAA780 0x2A 0xE1 0xC0 0xB4 PUSH13 0x20752FB372E8DBB1B84175ECBB 0xB1 CALLDATALOAD 0xA8 0xF9 JUMP PUSH19 0x5064736F6C6343000814003300000000000000 ",
							"sourceMap": "680:20895:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;680:20895:13;;;;2499:1:0;680:20895:13;;:::i;:::-;2484:4:0;;:::i;:::-;2499:1;:::i;:::-;680:20895:13;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;680:20895:13;;:::i;:::-;;;;17773:11;680:20895;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;680:20895:13;;;;;;-1:-1:-1;;;;;680:20895:13;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;2227:103:6;;:::i;:::-;2484:4:0;;:::i;:::-;1204:72:5;;:::i;:::-;680:20895:13;;;;4362:22;680:20895;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;4362:22;680:20895;;;;4361:23;4357:50;;680:20895;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;4221:23;680:20895;;;;;4221:35;4217:63;;680:20895;4362:22;680:20895;;;;;;;;;;;:::i;:::-;;;;;;;;;;4510:22;680:20895;;;;4362:22;680:20895;;;;;;4510:33;4506:65;;680:20895;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;;;;13699:11:13;;;680:20895;;13738:12;;680:20895;13738:12;;680:20895;;;;;;;1810:5;4362:22;680:20895;1810:5;13880:11;;680:20895;;;;;;;;;;;;;14031:10;14052:740;;;;;;;680:20895;;;;;-1:-1:-1;;;;;680:20895:13;;;;;;;;;;1810:5;;;14170:25;;;;;:::i;:::-;680:20895;14225:20;-1:-1:-1;;;;;680:20895:13;;14225:20;;:::i;:::-;-1:-1:-1;;;;;680:20895:13;1810:5;14298:25;;;;;:::i;:::-;680:20895;-1:-1:-1;;;;;680:20895:13;;14383:15;;;;14379:60;14974:61;14379:60;14807:152;14379:60;680:20895;14379:60;-1:-1:-1;;;;;;;;;;;14379:60:13;;;14052:740;680:20895;;-1:-1:-1;;;;;680:20895:13;;14457:16;14453:60;;14052:740;680:20895;;-1:-1:-1;;;;;680:20895:13;;14531:16;;14527:63;;14052:740;;;;;-1:-1:-1;;;;;14807:152:13;;;:::i;:::-;680:20895;;;;;;;;;;;;;;;;;;;;;14807:152;;14974:61;:::i;:::-;680:20895;;;-1:-1:-1;;;;;680:20895:13;;;;;;;;;1810:5;;;680:20895;;;14974:61;680:20895;1759:1:6;;680:20895:13;;14527:63;14549:41;680:20895;;;14549:41;;:::i;:::-;14527:63;;;;;14453:60;14475:38;;;;:::i;:::-;14453:60;;;;14379;14400:39;;;;:::i;:::-;14379:60;;;;680:20895;;;;;1861:8;;680:20895;1861:8;;680:20895;1861:8;14052:740;14621:17;;680:20895;14807:152;14621:17;14974:61;14621:17;;;-1:-1:-1;;;;;;;;;;;14621:17:13;;14652:25;;14691:15;14725:16;;14721:60;;14052:740;;;;;;14721:60;14743:38;;;:::i;:::-;14721:60;;;;;4506:65;680:20895;;-1:-1:-1;;;4552:19:13;;680:20895;;4552:19;680:20895;-1:-1:-1;;;680:20895:13;;;;;;;;4217:63;680:20895;;-1:-1:-1;;;4265:15:13;;680:20895;;4265:15;4357:50;680:20895;;-1:-1:-1;;;4393:14:13;;680:20895;;4393:14;680:20895;;;;;;;;;;;-1:-1:-1;;680:20895:13;;;;;;-1:-1:-1;;;;;680:20895:13;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;18534:11;;;680:20895;;;;;;18533:12;18529:39;;680:20895;;;;;;;;;;;;;;18649:12;680:20895;18649:12;;680:20895;;;18675:11;;;680:20895;18600:11;680:20895;18600:11;;;680:20895;:::i;:::-;18752:14;680:20895;;;;18752:14;;680:20895;:::i;:::-;18780:15;;680:20895;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;;;;680:20895:13;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;1861:8;;;680:20895;1861:8;680:20895;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;680:20895:13;;;;-1:-1:-1;;;;;680:20895:13;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;-1:-1:-1;;;;;680:20895:13;;;;;;;;;;;;;-1:-1:-1;;;;;680:20895:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2484:4:0;;;:::i;:::-;1204:72:5;;:::i;:::-;680:20895:13;5735:22;680:20895;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;5735:22;680:20895;;;;5731:54;;5799:29;;5795:58;;-1:-1:-1;;;;;680:20895:13;;5867:27;;5863:56;;5933:32;;;5929:67;;-1:-1:-1;;;;;680:20895:13;;6010:12;6006:54;;6087:15;680:20895;;;;6074:28;;6070:65;;680:20895;;6149:29;6145:61;;6870:142;680:20895;;6870:142;680:20895;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;6333:11;680:20895;6333:11;;;;680:20895;:::i;:::-;;;-1:-1:-1;;;;;;680:20895:13;;;;;;;-1:-1:-1;6400:12:13;;680:20895;;;;;;;;6440:11;;;680:20895;;;;;-1:-1:-1;;;;;680:20895:13;;;;;;;-1:-1:-1;;;680:20895:13;;;;;6506:14;;680:20895;:::i;:::-;5735:22;6543:11;;680:20895;;-1:-1:-1;;;;680:20895:13;6087:15;1861:8;680:20895;-1:-1:-1;;;680:20895:13;;;;;6639:15;;;;680:20895;;;;6639:15;680:20895;;;:::i;:::-;;;;;;;-1:-1:-1;680:20895:13;;;-1:-1:-1;;;;680:20895:13;-1:-1:-1;;;680:20895:13;;;;;;6440:11;680:20895;;;;;6760:40;;680:20895;;6760:40;:::i;:::-;680:20895;;;5735:22;680:20895;;6810:44;680:20895;;;;6810:44;:::i;:::-;6870:142;:::i;:::-;680:20895;-1:-1:-1;;;;;680:20895:13;;;;;;;;;;;;;6870:142;680:20895;;;;;;;;;;;;;6440:11;680:20895;;;;;:::i;:::-;;;;6145:61;680:20895;;-1:-1:-1;;;6187:19:13;;680:20895;;6187:19;6070:65;680:20895;;-1:-1:-1;;;6111:24:13;;680:20895;;6111:24;6006:54;680:20895;;-1:-1:-1;;;6031:29:13;;680:20895;;6031:29;5929:67;680:20895;;-1:-1:-1;;;5974:22:13;;680:20895;;5974:22;5863:56;680:20895;;-1:-1:-1;;;5903:16:13;;680:20895;;5903:16;5731:54;680:20895;;-1:-1:-1;;;5766:19:13;;680:20895;;5766:19;680:20895;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;680:20895:13;;;;;;;;;;;;;;;:::i;:::-;2227:103:6;;:::i;:::-;2484:4:0;;:::i;:::-;1204:72:5;;:::i;:::-;680:20895:13;;;4362:22;680:20895;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;4362:22;680:20895;;;;4361:23;4357:50;;680:20895;4362:22;680:20895;;;;;;;;;;;:::i;:::-;;;;;;;;;;4510:22;680:20895;;;;4362:22;680:20895;;;;;15389:21;4510:33;4506:65;;680:20895;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;15495:13;;;;680:20895;;;;;;15476:15;:32;;15472:64;;4362:22;15591:11;;680:20895;;-1:-1:-1;;;;680:20895:13;-1:-1:-1;;;680:20895:13;;;-1:-1:-1;;;;;680:20895:13;;15752:48;;;;680:20895;;15640:97;;680:20895;15752:48;;;:::i;:::-;680:20895;;;;;;15775:10;15752:48;;15389:21;1759:1:6;;680:20895:13;;15640:97;680:20895;;15677:49;;-1:-1:-1;;;;;;680:20895:13;15677:10;:49;:::i;:::-;15640:97;;;;15472:64;680:20895;;-1:-1:-1;;;15517:19:13;;680:20895;;15517:19;680:20895;-1:-1:-1;;;680:20895:13;;;;;;;;;;;;;;;;;;;;;;;;;;;17322:10;-1:-1:-1;;;;;680:20895:13;;;;;;;;;;;;;-1:-1:-1;;680:20895:13;;;;4723:26:0;680:20895:13;;;;:::i;:::-;;;;;3877:6:0;680:20895:13;;2484:4:0;680:20895:13;;;;3877:22:0;680:20895:13;2484:4:0;:::i;:::-;4723:26;:::i;:::-;;680:20895:13;;;;;;;;;;;;;;;;-1:-1:-1;;;;;680:20895:13;;:::i;:::-;;;;17916:13;680:20895;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;680:20895:13;;;;;;-1:-1:-1;;;;;680:20895:13;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;680:20895:13;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;680:20895:13;;;;-1:-1:-1;;;;;680:20895:13;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;680:20895:13;;;;;;-1:-1:-1;;;;;1861:8:13;680:20895;1861:8;680:20895;;;;;-1:-1:-1;;;;;680:20895:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;-1:-1:-1;;;;;680:20895:13;;;;;;;;;-1:-1:-1;;;;;680:20895:13;;;;;;;;;-1:-1:-1;;;;;680:20895:13;;;;;;;;;-1:-1:-1;;;;;680:20895:13;;;;;;;;;-1:-1:-1;;;;;680:20895:13;;;;;;;;;-1:-1:-1;;;;;680:20895:13;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;680:20895:13;;;;;;;;;;;;;;;-1:-1:-1;;680:20895:13;;;;;;:::i;:::-;;;;;;;;;;19107:66;;;-1:-1:-1;;;;;680:20895:13;;;19118:11;680:20895;;;;;19107:66;680:20895;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;19107:66;-1:-1:-1;;;;;680:20895:13;;;19146:13;680:20895;;;;;19107:66;;680:20895;;;;;;;-1:-1:-1;;680:20895:13;;;;-1:-1:-1;;;;;680:20895:13;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;-1:-1:-1;;;;;680:20895:13;;;;;;;;;;;;;;;;;2227:103:6;;:::i;:::-;2484:4:0;;:::i;:::-;1204:72:5;;:::i;:::-;680:20895:13;;;;;;4362:22;680:20895;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;4362:22;680:20895;;;;4361:23;4357:50;;680:20895;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;4062:31;;;4058:59;;680:20895;4362:22;680:20895;;;;;;;;;;;:::i;:::-;;;;;;;;;;4510:22;680:20895;;;;4362:22;680:20895;;;;;4506:65;;680:20895;;7636:26;7632:54;;7700:12;;7696:40;;680:20895;;7797:13;680:20895;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;7797:13;680:20895;;;;;;;7793:50;;7956:10;680:20895;;;;;;;;;8000:30;;;680:20895;8000:30;;680:20895;8000:30;;680:20895;8000:30;;;;;;;;;;;;;;680:20895;8044:22;;8040:56;;8173:7;;;;;;:27;;;680:20895;8173:47;;;;680:20895;8169:277;;680:20895;;;-1:-1:-1;;;8476:42:13;;-1:-1:-1;;;;;680:20895:13;;;;8476:42;;680:20895;7926:4;680:20895;;;;;;-1:-1:-1;680:20895:13;;;;;;;8476:42;;;;;;;;;;;;;;;680:20895;8532:19;;8528:55;;680:20895;;-1:-1:-1;;;1745:53:9;;;;680:20895:13;1745:53:9;;680:20895:13;;;7926:4;680:20895;;;;;;;;;;;1745:53:9;;680:20895:13;;;;;;;;;;;;;8718:43;680:20895;8718:43;680:20895;1745:53:9;680:20895:13;;;1745:53:9;:::i;:::-;680:20895:13;;-1:-1:-1;;;;680:20895:13;8686:15;680:20895;;-1:-1:-1;;;680:20895:13;;;;8718:43;:::i;:::-;680:20895;;;;;;8718:43;680:20895;1759:1:6;;680:20895:13;;;;;;;;;;;;;;8528:55;680:20895;;-1:-1:-1;;;8560:23:13;;680:20895;;8560:23;8476:42;;;;;;;;;;;;;;;;;;:::i;:::-;;;680:20895;;;;;;;8476:42;;;;;;;;;680:20895;;;;;;;;;8169:277;21258:54;;;;;;;;;;680:20895;;;;;;21258:54;;;680:20895;21258:54;;680:20895;7926:4;680:20895;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21258:54;;680:20895;21258:54;;;;;;;;;8169:277;-1:-1:-1;21254:313:13;;680:20895;;-1:-1:-1;;;21542:14:13;;680:20895;;21542:14;21254:313;680:20895;;-1:-1:-1;;;21400:36:13;;-1:-1:-1;;;;;680:20895:13;;;21400:36;;680:20895;7926:4;680:20895;;;;7926:4;680:20895;;;21400:36;;;;;;;;;;;;;21254:313;21454:17;;21450:53;;8476:42;21254:313;;;8169:277;;21400:36;;;;;;;;;;;;;;;;;;:::i;:::-;;;680:20895;;;;;;;21400:36;;;;;;;;;680:20895;;;;;;;;;21258:54;680:20895;;;;;;;;;;21258:54;;;;680:20895;-1:-1:-1;;;680:20895:13;;;;;;;;21258:54;680:20895;;;8173:47;680:20895;;;8204:16;;8173:47;;:27;680:20895;;;8184:16;;8173:27;;8040:56;680:20895;;-1:-1:-1;;;8075:21:13;;680:20895;;8075:21;8000:30;;;;;;;;;;;;;;;;;;:::i;:::-;;;680:20895;;;;;;;8000:30;;;680:20895;;;;8000:30;;;;;;680:20895;;;;;;;;;7793:50;680:20895;;-1:-1:-1;;;7824:19:13;;680:20895;;7824:19;7696:40;680:20895;;-1:-1:-1;;;7721:15:13;;680:20895;;7721:15;7632:54;680:20895;;-1:-1:-1;;;7671:15:13;;680:20895;;7671:15;680:20895;-1:-1:-1;;;680:20895:13;;;;;;;;;;;;;;;;;;;;:::i;:::-;2484:4:0;;;:::i;:::-;1204:72:5;;:::i;:::-;680:20895:13;;;4362:22;680:20895;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;4362:22;680:20895;;;;4361:23;4357:50;;680:20895;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;4221:23;680:20895;-1:-1:-1;;;;;680:20895:13;;;;;4221:35;;;4217:63;;680:20895;4362:22;680:20895;;;;;;;;;;;:::i;:::-;;;;;;;;;;4510:22;680:20895;;;;4362:22;680:20895;;;;;4506:65;;680:20895;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;9200:13;-1:-1:-1;;;;;9200:13:13;;;680:20895;;;;9200:18;9196:46;;4362:22;9253:11;;;;680:20895;;-1:-1:-1;;;;680:20895:13;-1:-1:-1;;;680:20895:13;;;9304:38;;;:::i;:::-;;;;;680:20895;;9196:46;680:20895;;-1:-1:-1;;;9227:15:13;;680:20895;;9227:15;680:20895;-1:-1:-1;;;680:20895:13;;;;;;;;;;;;;;;-1:-1:-1;;680:20895:13;;;;;;:::i;:::-;;;2484:4:0;;:::i;:::-;-1:-1:-1;;;;;680:20895:13;;;;20675:10;680:20895;20657:29;;20653:62;;20729:12;;20725:40;;20815:7;20803:10;;20815:7;;:::i;20653:62::-;680:20895;;-1:-1:-1;;;20695:20:13;;680:20895;;20695:20;680:20895;;;;;;;-1:-1:-1;;680:20895:13;;;;;;;;;;:::i;:::-;;;;;2930:6:0;680:20895:13;;;;;-1:-1:-1;;;;;680:20895:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2484:4:0;;:::i;:::-;1204:72:5;;:::i;:::-;2255:4;680:20895:13;;;;;;2255:4:5;680:20895:13;2274:20:5;680:20895:13;;;735:10:10;680:20895:13;;2274:20:5;680:20895:13;;;;;;;;;-1:-1:-1;;680:20895:13;;;;-1:-1:-1;;;;;680:20895:13;;;;;;;;;;19350:11;680:20895;;;;;;:::i;:::-;;;;;;;;;;19350:11;680:20895;;;;;;;19350:71;;;;680:20895;;19350:125;;;;;680:20895;;;;;;;;;;;19350:125;680:20895;1861:8;680:20895;19437:15;:38;;;-1:-1:-1;19350:125:13;;;;:71;680:20895;;;;;;;;19350:11;680:20895;;;;;19377:44;19392:29;680:20895;19377:44;;19350:71;;;680:20895;;;;;;;;;;;;;;;1685:7:5;680:20895:13;;;;;;;;;;;;;;;;;;:::i;:::-;2484:4:0;;;;;:::i;:::-;1204:72:5;;:::i;:::-;680:20895:13;;;;;4362:22;680:20895;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;4362:22;680:20895;;;;4361:23;4357:50;;680:20895;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;4221:23;680:20895;-1:-1:-1;;;;;680:20895:13;;;;;4221:35;;;4217:63;;680:20895;4362:22;680:20895;;;;;;;;;;;:::i;:::-;;;;;;;;;;4510:22;680:20895;;;;4362:22;680:20895;;;;;;4510:33;4506:65;;680:20895;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;;;;9833:13:13;;;;;680:20895;;;;9815:15;:31;9811:70;;680:20895;;9895:30;9891:63;;4362:22;9965:11;;680:20895;;;1861:8;9815:15;1861:8;9815:15;;;1861:8;;;-1:-1:-1;;1861:8:13;9815:15;680:20895;;1861:8;680:20895;1861:8;;;;;;;-1:-1:-1;;;1861:8:13;;;10186:134;;1861:8;;680:20895;;;;10186:134;;680:20895;;;;;10141:15;680:20895;:::i;:::-;1861:8;680:20895;1861:8;680:20895;10186:134;;:::i;:::-;680:20895;;;1861:8;;;680:20895;1861:8;;680:20895;1861:8;;;;:::i;:::-;;;;680:20895;10186:134;;;680:20895;;1861:8;-1:-1:-1;;;1861:8:13;;;680:20895;1861:8;;680:20895;1861:8;9891:63;680:20895;;-1:-1:-1;;;9934:20:13;;680:20895;;9934:20;9811:70;680:20895;;-1:-1:-1;;;9855:26:13;;680:20895;;9855:26;680:20895;;;;;;;;;;;;;;;1810:5;680:20895;;;;;;;;;;;;;;;;;;;;;2484:4:0;;:::i;:::-;1685:7:5;680:20895:13;;;;;;;;;;1685:7:5;680:20895:13;2521:22:5;680:20895:13;;;735:10:10;680:20895:13;;2521:22:5;680:20895:13;;;;;-1:-1:-1;;;680:20895:13;;;;;;;;;;;;-1:-1:-1;;;680:20895:13;;;;;;;;;;;;;;-1:-1:-1;;680:20895:13;;;;-1:-1:-1;;;;;680:20895:13;;;;;;;;;;;;;;:::i;:::-;2227:103:6;;;:::i;:::-;2484:4:0;;:::i;:::-;1204:72:5;;:::i;:::-;680:20895:13;;;4362:22;680:20895;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;4362:22;680:20895;;;;4361:23;4357:50;;680:20895;4362:22;680:20895;;;;;;;;;;;:::i;:::-;;;;;;;;;;4510:22;680:20895;;;;4362:22;680:20895;;;;;11714:29;4510:33;4506:65;;680:20895;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;4362:22;11826:19;;1861:8;;;;680:20895;1861:8;680:20895;11808:15;:37;11804:84;;12386:66;-1:-1:-1;;;;;;;;;;;680:20895:13;-1:-1:-1;;;;;11971:11:13;;;;680:20895;;;12052:25;680:20895;;11971:29;680:20895;;;;11971:29;;:::i;:::-;680:20895;1810:5;12052:25;;;:::i;:::-;-1:-1:-1;;;;680:20895:13;;;-1:-1:-1;;;680:20895:13;;;12152:10;;680:20895;;;;12172:96;;680:20895;;;;12282:16;12278:93;;680:20895;-1:-1:-1;;680:20895:13;12411:12;680:20895;-1:-1:-1;;;;;680:20895:13;;12386:66;:::i;12278:93::-;12314:46;1810:5;680:20895;1810:5;680:20895;;12314:46;;:::i;:::-;12278:93;;;;12172:96;680:20895;12229:12;;680:20895;12210:47;;680:20895;-1:-1:-1;;;;;680:20895:13;12210:47;;:::i;:::-;12172:96;;;11804:84;680:20895;;-1:-1:-1;;;11866:22:13;;680:20895;;11866:22;680:20895;;;;;;;-1:-1:-1;;680:20895:13;;;;;;:::i;:::-;735:10:10;-1:-1:-1;;;;;680:20895:13;;5397:34:0;5393:102;;5505:37;680:20895:13;;;5505:37:0;:::i;5393:102::-;680:20895:13;;-1:-1:-1;;;5454:30:0;;680:20895:13;;5454:30:0;680:20895:13;;;;;;;-1:-1:-1;;680:20895:13;;;;;;-1:-1:-1;;;;;680:20895:13;;;;;;2499:1:0;2484:4;;;:::i;:::-;2499:1;:::i;680:20895:13:-;;;;;;;-1:-1:-1;;680:20895:13;;;;4306:25:0;680:20895:13;;;;:::i;:::-;;;;;3877:6:0;680:20895:13;;2484:4:0;680:20895:13;;;;3877:22:0;680:20895:13;2484:4:0;:::i;:::-;4306:25;:::i;680:20895:13:-;;;;;;;;:::i;:::-;2227:103:6;;:::i;:::-;2484:4:0;;:::i;:::-;1204:72:5;;:::i;:::-;680:20895:13;;;4362:22;680:20895;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;4362:22;680:20895;;;;4361:23;4357:50;;680:20895;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;4062:31;;;4058:59;;680:20895;4362:22;680:20895;;;;;;;;;;;:::i;:::-;;;;;;;;;;4510:22;680:20895;;;;4362:22;680:20895;;;;;10696:29;4510:33;4506:65;;11354:66;680:20895;;-1:-1:-1;;;;;;;;;;;680:20895:13;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;10887:11:13;;;;;680:20895;;;10968:25;680:20895;;10887:29;680:20895;10901:15;680:20895;;10887:29;;:::i;:::-;680:20895;1810:5;10968:25;;;:::i;:::-;4362:22;11004:11;;680:20895;;-1:-1:-1;;;;680:20895:13;;;;;;;;11004:11;11058:36;;;:::i;:::-;;;;;11120:10;680:20895;;;;11144:18;11140:96;;680:20895;;;;11250:16;11246:93;;680:20895;11379:12;;;680:20895;;11354:66;;:::i;11246:93::-;11282:46;1810:5;10901:15;1810:5;680:20895;;11282:46;;:::i;:::-;11246:93;;;;11140:96;11178:47;11197:12;;;;;680:20895;;11178:47;;:::i;:::-;11140:96;;;680:20895;;;;;;;-1:-1:-1;;680:20895:13;;;;;;;;;;;;3877:6:0;680:20895:13;;;3877:22:0;680:20895:13;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;680:20895:13;;;;;;;;;;;;;;;;-1:-1:-1;;680:20895:13;;;;;;-1:-1:-1;;;;;680:20895:13;;;;;;;;;;;:::i;:::-;2227:103:6;;:::i;:::-;2484:4:0;;:::i;:::-;680:20895:13;;;4362:22;680:20895;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;4362:22;680:20895;;;;4361:23;4357:50;;680:20895;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;16616:11;4362:22;16616:11;;680:20895;;;;;;;;;4362:22;680:20895;;;;;16631:21;16616:36;;16612:178;;680:20895;16822:11;17004:48;16822:11;-1:-1:-1;;;;;16822:11:13;;;680:20895;;;;;;;;;;;;;;;16896:17;;16892:97;;17004:48;;;:::i;:::-;680:20895;;;;;17004:48;680:20895;17027:10;17004:48;;16631:21;1759:1:6;;680:20895:13;;16892:97;680:20895;;16929:49;;-1:-1:-1;;;;;;680:20895:13;16929:10;:49;:::i;:::-;16892:97;;;;16612:178;16687:29;16672:44;16668:112;;16612:178;;;16668:112;680:20895;;-1:-1:-1;;;16743:22:13;;680:20895;;16743:22;680:20895;;;;;;;;;;;;;;;;1949:24;680:20895;;;;;;;;;;;:::i;:::-;2484:4:0;;;;:::i;:::-;1204:72:5;;:::i;:::-;680:20895:13;;;;;;4362:22;680:20895;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;4362:22;680:20895;;;;4361:23;4357:50;;680:20895;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;680:20895:13;;;;;4062:31;;;4058:59;;680:20895;4362:22;680:20895;;;;;;;;;;;:::i;:::-;;;;;;;;;;4510:22;680:20895;;;;4362:22;680:20895;;;;;12825:29;4510:33;4506:65;;680:20895;;4362:22;680:20895;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;12938:19;1861:8;;;;-1:-1:-1;;;;;1861:8:13;680:20895;1861:8;680:20895;12919:15;:38;;12915:70;;680:20895;;12999:26;12995:55;;-1:-1:-1;;;;680:20895:13;;;-1:-1:-1;;;680:20895:13;;;;13114:49;;;;;:::i;:::-;680:20895;;;;;;;;;;;;;;:::i;:::-;13114:49;;;680:20895;;12995:55;680:20895;;-1:-1:-1;;;13034:16:13;;680:20895;;13034:16;12915:70;680:20895;;-1:-1:-1;;;12966:19:13;;680:20895;;12966:19;680:20895;;;;;;;;:::i;:::-;2484:4:0;;;:::i;:::-;680:20895:13;;;;;;4362:22;680:20895;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;4362:22;680:20895;;;;4361:23;4357:50;;680:20895;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;680:20895:13;;;;;4062:31;;;4058:59;;680:20895;4362:22;680:20895;;;;;;;;;;;:::i;:::-;;;;;;;;;;4510:22;680:20895;;;;4362:22;680:20895;;;;;4506:65;;16231:40;680:20895;4362:22;680:20895;;16231:40;680:20895;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;16166:22;680:20895;;-1:-1:-1;;;;680:20895:13;-1:-1:-1;;;680:20895:13;;;16231:40;:::i;:::-;680:20895;;;;;;16231:40;680:20895;;;;;;;;;;-1:-1:-1;;680:20895:13;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2649:47:0;;;:87;;;;680:20895:13;;;;;;;2649:87:0;-1:-1:-1;;;829:40:11;;-1:-1:-1;2649:87:0;;;680:20895:13;;;;;;;-1:-1:-1;;;;;680:20895:13;;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;680:20895:13;;;;;;;:::o;:::-;;;;;;;;;;;;-1:-1:-1;;;;;680:20895:13;;;;;;;;;;;-1:-1:-1;;680:20895:13;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;680:20895:13;;;;;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;680:20895:13;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;680:20895:13;;;;;;:::o;:::-;;-1:-1:-1;;680:20895:13;;;;;;;;-1:-1:-1;;;;;680:20895:13;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;680:20895:13;;;;;;;:::o;:::-;;-1:-1:-1;;680:20895:13;;;;;-1:-1:-1;;;;;680:20895:13;;;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;680:20895:13;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;-1:-1:-1;;680:20895:13;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;680:20895:13;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;680:20895:13;;;;;-1:-1:-1;680:20895:13;3175:103:0;735:10:10;-1:-1:-1;680:20895:13;;;;;;;;;;1949:24;;680:20895;;3495:23:0;3491:108;;3175:103;:::o;3491:108::-;680:20895:13;;;;3541:47:0;;;;;;735:10:10;3541:47:0;;;680:20895:13;;;;;3541:47:0;3175:103;680:20895:13;-1:-1:-1;680:20895:13;2930:6:0;680:20895:13;;;-1:-1:-1;680:20895:13;735:10:10;-1:-1:-1;680:20895:13;;;;;-1:-1:-1;680:20895:13;;;3495:23:0;3491:108;;3175:103;:::o;6155:316::-;;-1:-1:-1;680:20895:13;;;;2930:6:0;680:20895:13;;;;;;;;;;;;;;;;;;;;;;;;6252:23:0;6248:217;680:20895:13;;;;;;2930:6:0;680:20895:13;;;;;;;;;;;;;;;;;;;;;;6346:40:0;735:10:10;6346:40:0;;;680:20895:13;6400:11:0;:::o;6248:217::-;6442:12;;;:::o;6708:317::-;;-1:-1:-1;680:20895:13;;;;2930:6:0;680:20895:13;;;;;;;;;;;;;;;;;;;;;;;;6802:217:0;680:20895:13;;;;;;2930:6:0;680:20895:13;;;;;;;;;;;;;;;;;;;;6900:40:0;735:10:10;6900:40:0;;;680:20895:13;6954:11:0;:::o;680:20895:13:-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;-1:-1:-1;;;;;680:20895:13;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;680:20895:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;680:20895:13;;-1:-1:-1;680:20895:13;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;680:20895:13;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;680:20895:13;;-1:-1:-1;680:20895:13;;;:::i;:::-;:::o;:::-;;;;-1:-1:-1;680:20895:13;;;;;-1:-1:-1;680:20895:13;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::o;1767:106:5:-;680:20895:13;1685:7:5;680:20895:13;;;;1767:106:5:o;680:20895:13:-;;;-1:-1:-1;;;680:20895:13;;;;;;;;;;;;-1:-1:-1;;;680:20895:13;;;;;;;2336:287:6;1759:1;2468:7;680:20895:13;2468:19:6;1759:1;;;2468:7;1759:1;2336:287::o;1759:1::-;680:20895:13;;-1:-1:-1;;;1759:1:6;;;;;;;;;;;680:20895:13;1759:1:6;680:20895:13;;;1759:1:6;;;;8370:720:9;;-1:-1:-1;8507:421:9;8370:720;8507:421;;;;;;;;;;;;-1:-1:-1;8507:421:9;;8942:15;;-1:-1:-1;;;;;;680:20895:13;;8960:26:9;:31;8942:68;8938:146;;8370:720;:::o;8938:146::-;680:20895:13;;-1:-1:-1;;;9033:40:9;;-1:-1:-1;;;;;680:20895:13;;;9033:40:9;;;680:20895:13;;;9033:40:9;8942:68;9009:1;8994:16;;8942:68;;8507:421;;;;-1:-1:-1;8507:421:9;;;;;680:20895:13;;;;-1:-1:-1;;;;;680:20895:13;;;;;;;;;;;;;;;:::o;1810:5::-;-1:-1:-1;;;;;680:20895:13;;;;;;1810:5;;;;;;;:::o;1219:160:9:-;680:20895:13;;-1:-1:-1;;;1328:43:9;;;;-1:-1:-1;;;;;680:20895:13;;;1328:43:9;;;680:20895:13;;;;;;;;;1328:43:9;;;680:20895:13;;;;-1:-1:-1;;;;;680:20895:13;;;;;;;;1328:43:9;680:20895:13;;;1328:43:9;:::i;680:20895:13:-;;;;;;-1:-1:-1;680:20895:13;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;680:20895:13;;;;-1:-1:-1;680:20895:13;;-1:-1:-1;680:20895:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;680:20895:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;680:20895:13;;;;;;;;;;;;;;;:::i;:::-;;;:::o;19658:327::-;-1:-1:-1;;;;;680:20895:13;;;;19776:4;19763:17;;19759:42;;19828:15;680:20895;;;;19857:20;;;;19853:33;;-1:-1:-1;;680:20895:13;;;;;;;19828:15;680:20895;;;;-1:-1:-1;;;;;680:20895:13;;;;;;;;;1810:5;;;680:20895;19940:38;;680:20895;;1810:5;;19940:38;;;;19658:327::o;19853:33::-;19879:7;;;;:::o;19759:42::-;680:20895;;-1:-1:-1;;;19789:12:13;;;;;19991:371;-1:-1:-1;;;;;680:20895:13;;;20101:27;;20097:56;;20187:13;1810:5;680:20895;;;;20214:29;;;20210:42;;-1:-1:-1;;;;;680:20895:13;;;;;;;-1:-1:-1;;680:20895:13;;20187:13;680:20895;;;;-1:-1:-1;;;;;680:20895:13;;;;;;;;;;;;;20307:48;;680:20895;;;;;20307:48;680:20895;20210:42;20245:7;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2328600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DEFAULT_ADMIN_ROLE()": "693",
								"SERVER_ROLE()": "228",
								"acceptDeal(string,address)": "infinite",
								"approveDeal(string,address)": "infinite",
								"autoRefundAfterDeadline(string)": "infinite",
								"autoReleasePayment(string)": "infinite",
								"brandDeals(address)": "infinite",
								"canAutoRelease(string)": "infinite",
								"cancelDeal(string,address)": "infinite",
								"createDeal(string,address,address,uint96,uint64,string)": "infinite",
								"creatorDeals(address)": "infinite",
								"deals(string)": "infinite",
								"emergencyCancelDeal(string)": "infinite",
								"emergencyWithdraw(address,uint256)": "infinite",
								"feeRecipient()": "2557",
								"fundDeal(string,address,uint96,uint256,uint8,bytes32,bytes32)": "infinite",
								"getDeal(string)": "infinite",
								"getDeals(address,bool)": "infinite",
								"getRoleAdmin(bytes32)": "2469",
								"grantRole(bytes32,address)": "33399",
								"hasRole(bytes32,address)": "2896",
								"idrxToken()": "infinite",
								"initiateDispute(string,address,string)": "infinite",
								"pause()": "30138",
								"paused()": "2607",
								"platformFeeBps()": "2393",
								"renounceRole(bytes32,address)": "29029",
								"resolveDispute(string,address,bool)": "infinite",
								"revokeRole(bytes32,address)": "33786",
								"submitContent(string,address,string)": "infinite",
								"supportsInterface(bytes4)": "279",
								"unpause()": "27901",
								"updateFeeRecipient(address)": "28887",
								"updatePlatformFee(uint96)": "28311"
							},
							"internal": {
								"_executePermit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 680,
									"end": 21575,
									"name": "PUSH",
									"source": 13,
									"value": "A0"
								},
								{
									"begin": 680,
									"end": 21575,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 680,
									"end": 21575,
									"name": "PUSHSIZE",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21575,
									"name": "CODESIZE",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21575,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21575,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21575,
									"name": "SUB",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21575,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21575,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21575,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 680,
									"end": 21575,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21575,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21575,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21575,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21575,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 680,
									"end": 21575,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21575,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21575,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21575,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21575,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21575,
									"name": "OR",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21575,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "3"
								},
								{
									"begin": 680,
									"end": 21575,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21575,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21575,
									"name": "PUSH",
									"source": 13,
									"value": "60"
								},
								{
									"begin": 680,
									"end": 21575,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21575,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21575,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21575,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 680,
									"end": 21575,
									"name": "SWAP6",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21575,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21575,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21575,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21575,
									"name": "CODECOPY",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21575,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21575,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21575,
									"name": "SUB",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21575,
									"name": "SLT",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21575,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "5"
								},
								{
									"begin": 680,
									"end": 21575,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21575,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "7"
								},
								{
									"begin": 680,
									"end": 21575,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21575,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 680,
									"end": 21575,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21575,
									"name": "tag",
									"source": 13,
									"value": "7"
								},
								{
									"begin": 680,
									"end": 21575,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21575,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21575,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "8"
								},
								{
									"begin": 680,
									"end": 21575,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21575,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "9"
								},
								{
									"begin": 680,
									"end": 21575,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 680,
									"end": 21575,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21575,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21575,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 680,
									"end": 21575,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21575,
									"name": "tag",
									"source": 13,
									"value": "9"
								},
								{
									"begin": 680,
									"end": 21575,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21575,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21575,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21575,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 680,
									"end": 21575,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21575,
									"name": "tag",
									"source": 13,
									"value": "8"
								},
								{
									"begin": 680,
									"end": 21575,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21575,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 680,
									"end": 21575,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21575,
									"name": "SLOAD",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 680,
									"end": 21575,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21575,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21575,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 680,
									"end": 21575,
									"name": "SWAP4",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21575,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21575,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21575,
									"name": "SWAP4",
									"source": 13
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4770,
									"end": 4794,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 4770,
									"end": 4794,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 4766,
									"end": 4819,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "12"
								},
								{
									"begin": 4766,
									"end": 4819,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21575,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21575,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21575,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 4833,
									"end": 4860,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 4829,
									"end": 4885,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "12"
								},
								{
									"begin": 4829,
									"end": 4885,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21575,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21575,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 4899,
									"end": 4926,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 4895,
									"end": 4951,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "14"
								},
								{
									"begin": 4895,
									"end": 4951,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 5043,
									"end": 5081,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "16"
								},
								{
									"begin": 4962,
									"end": 4993,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 4962,
									"end": 4993,
									"name": "SWAP4",
									"source": 13
								},
								{
									"begin": 4962,
									"end": 4993,
									"name": "PUSH",
									"source": 13,
									"value": "80"
								},
								{
									"begin": 4962,
									"end": 4993,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21575,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 680,
									"end": 21575,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21575,
									"name": "PUSH",
									"source": 13,
									"value": "60"
								},
								{
									"begin": 680,
									"end": 21575,
									"name": "SHL",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21575,
									"name": "SUB",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21575,
									"name": "NOT",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21575,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21575,
									"name": "PUSH",
									"source": 13,
									"value": "60"
								},
								{
									"begin": 680,
									"end": 21575,
									"name": "SHL",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21575,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 1751,
									"end": 1754,
									"name": "PUSH",
									"source": 13,
									"value": "FA"
								},
								{
									"begin": 680,
									"end": 21575,
									"name": "OR",
									"source": 13
								},
								{
									"begin": 1751,
									"end": 1754,
									"name": "PUSH",
									"source": 13,
									"value": "3"
								},
								{
									"begin": 680,
									"end": 21575,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 5043,
									"end": 5081,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "2"
								},
								{
									"begin": 5043,
									"end": 5081,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5043,
									"end": 5081,
									"name": "tag",
									"source": 13,
									"value": "16"
								},
								{
									"begin": 5043,
									"end": 5081,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5043,
									"end": 5081,
									"name": "POP",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH data",
									"source": -1,
									"value": "2B911A32A95F59603F7637B420E0D131A993F16F7410883B87320ADD8A183555"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP4",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "CODECOPY",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 680,
									"end": 21575,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 680,
									"end": 21575,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 3877,
									"end": 3883,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 680,
									"end": 21575,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 680,
									"end": 21575,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21575,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 680,
									"end": 21575,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 680,
									"end": 21575,
									"name": "KECCAK256",
									"source": 13
								},
								{
									"begin": 3877,
									"end": 3899,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 680,
									"end": 21575,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21575,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21575,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21575,
									"name": "SLOAD",
									"source": 13
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 680,
									"end": 21575,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 5862,
									"end": 5914,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 5862,
									"end": 5914,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 5862,
									"end": 5914,
									"name": "PUSH",
									"source": 0,
									"value": "BD79B86FFE0AB8E8776151514217CD7CACD52C909F66475C3AF44E129F0B00FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 5862,
									"end": 5914,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 5862,
									"end": 5914,
									"name": "LOG4",
									"source": 0
								},
								{
									"begin": 680,
									"end": 21575,
									"name": "PUSH #[$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 680,
									"end": 21575,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21575,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21575,
									"name": "PUSH [$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 680,
									"end": 21575,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21575,
									"name": "CODECOPY",
									"source": 13
								},
								{
									"begin": 4962,
									"end": 4993,
									"name": "PUSH",
									"source": 13,
									"value": "80"
								},
								{
									"begin": 680,
									"end": 21575,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21575,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21575,
									"name": "ASSIGNIMMUTABLE",
									"source": 13,
									"value": "1358"
								},
								{
									"begin": 680,
									"end": 21575,
									"name": "RETURN",
									"source": 13
								},
								{
									"begin": 4895,
									"end": 4951,
									"name": "tag",
									"source": 13,
									"value": "14"
								},
								{
									"begin": 4895,
									"end": 4951,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21575,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21575,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E6C4247B"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 4935,
									"end": 4951,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 4935,
									"end": 4951,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 4935,
									"end": 4951,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 4935,
									"end": 4951,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 4935,
									"end": 4951,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 4829,
									"end": 4885,
									"name": "tag",
									"source": 13,
									"value": "12"
								},
								{
									"begin": 4829,
									"end": 4885,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21575,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21575,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E6C4247B"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 4869,
									"end": 4885,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 4869,
									"end": 4885,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 4869,
									"end": 4885,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 4869,
									"end": 4885,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 4869,
									"end": 4885,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21575,
									"name": "tag",
									"source": 13,
									"value": "5"
								},
								{
									"begin": 680,
									"end": 21575,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 680,
									"end": 21575,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21575,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21575,
									"name": "tag",
									"source": 13,
									"value": "3"
								},
								{
									"begin": 680,
									"end": 21575,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21575,
									"name": "PUSH",
									"source": 13,
									"value": "4E487B71"
								},
								{
									"begin": 680,
									"end": 21575,
									"name": "PUSH",
									"source": 13,
									"value": "E0"
								},
								{
									"begin": 680,
									"end": 21575,
									"name": "SHL",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 680,
									"end": 21575,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21575,
									"name": "PUSH",
									"source": 13,
									"value": "41"
								},
								{
									"begin": 680,
									"end": 21575,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 680,
									"end": 21575,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21575,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 680,
									"end": 21575,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21575,
									"name": "tag",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 680,
									"end": 21575,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21575,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21575,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 680,
									"end": 21575,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21575,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21575,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21575,
									"name": "SUB",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21575,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "5"
								},
								{
									"begin": 680,
									"end": 21575,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21575,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 6155,
									"end": 6471,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 6155,
									"end": 6471,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 680,
									"end": 21575,
									"name": "AND",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 680,
									"end": 21575,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21575,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21575,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21575,
									"name": "PUSH",
									"source": 13,
									"value": "EF73BF2AC44F84561B5498839AB1C8C5A4DD99305D838AEA0D76C5961778535C"
								},
								{
									"begin": 680,
									"end": 21575,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 680,
									"end": 21575,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21575,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 680,
									"end": 21575,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21575,
									"name": "KECCAK256",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21575,
									"name": "SLOAD",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP1",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP2",
									"source": -1
								},
								{
									"begin": 680,
									"end": 21575,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH data",
									"source": -1,
									"value": "2B911A32A95F59603F7637B420E0D131A993F16F7410883B87320ADD8A183555"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP4",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "CODECOPY",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 1949,
									"end": 1973,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21575,
									"name": "PUSH",
									"source": 13,
									"value": "FF"
								},
								{
									"begin": 680,
									"end": 21575,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21575,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "19"
								},
								{
									"begin": 680,
									"end": 21575,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21575,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21575,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21575,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 2930,
									"end": 2936,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 680,
									"end": 21575,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 680,
									"end": 21575,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21575,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 680,
									"end": 21575,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21575,
									"name": "KECCAK256",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21575,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21575,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21575,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21575,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 680,
									"end": 21575,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21575,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 680,
									"end": 21575,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21575,
									"name": "KECCAK256",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21575,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 680,
									"end": 21575,
									"name": "PUSH",
									"source": 13,
									"value": "FF"
								},
								{
									"begin": 680,
									"end": 21575,
									"name": "NOT",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21575,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21575,
									"name": "SLOAD",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21575,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21575,
									"name": "OR",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21575,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 680,
									"end": 21575,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "PUSH",
									"source": 0,
									"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
								},
								{
									"begin": 735,
									"end": 745,
									"name": "CALLER",
									"source": 10
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "LOG4",
									"source": 0
								},
								{
									"begin": 680,
									"end": 21575,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 6400,
									"end": 6411,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6400,
									"end": 6411,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6248,
									"end": 6465,
									"name": "tag",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 6248,
									"end": 6465,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6442,
									"end": 6454,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6442,
									"end": 6454,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6442,
									"end": 6454,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6442,
									"end": 6454,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220aee6a9a9faa7802ae1c0b46c20752fb372e8dbb1b84175ecbbb135a8f956725064736f6c63430008140033",
									".code": [
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "33"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "33"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "1FFC9A7"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "35"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "3F715DA"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "37"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "E59A395"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "39"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "18CF2834"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "41"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "1A1AAEED"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "43"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "22DCD13E"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "45"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "248A9CA3"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "47"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "24D956C8"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "49"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "2F2FF15D"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "51"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "317B8C5B"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "53"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "36568ABE"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "55"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "38A13287"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "57"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "3F4BA83A"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "59"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "46904840"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "61"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "4971716F"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "63"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "5C975ABB"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "65"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "76492D3F"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "67"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "8456CB59"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "69"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "91D14854"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "71"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "95CCEA67"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "73"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "9B1221AB"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "75"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "9F1CF42D"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "77"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "9FAD59B4"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "79"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "A0A57DAC"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "81"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "A217FDDF"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "83"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "AED1505D"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "85"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "D547741F"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "87"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "D6BC7C63"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "89"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "E39FFF38"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "91"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "E4ABD4CB"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "93"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "E7079180"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "95"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "EF03C10E"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "97"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "F0C3CD20"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "99"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "F160D369"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "101"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "101"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "105"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "105"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2499,
											"end": 2500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "108"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 680,
											"end": 21575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "108"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2484,
											"end": 2488,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2499,
											"end": 2500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 2499,
											"end": 2500,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2499,
											"end": 2500,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 2499,
											"end": 2500,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "105"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "99"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "105"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "112"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "114"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 680,
											"end": 21575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "114"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 17773,
											"end": 17784,
											"name": "PUSH",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "115"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "30"
										},
										{
											"begin": 680,
											"end": 21575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "115"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "116"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "117"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "119"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "10"
										},
										{
											"begin": 680,
											"end": 21575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "119"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "117"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "120"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "29"
										},
										{
											"begin": 680,
											"end": 21575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "120"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP7",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "116"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "112"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "97"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "105"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "105"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "112"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "127"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 680,
											"end": 21575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "127"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "128"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "128"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "129"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 2227,
											"end": 2330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "tag",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2484,
											"end": 2488,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1204,
											"end": 1276,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 1204,
											"end": 1276,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 1204,
											"end": 1276,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1204,
											"end": 1276,
											"name": "tag",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 1204,
											"end": 1276,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 4362,
											"end": 4384,
											"name": "PUSH",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP7",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "134"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP11",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 680,
											"end": 21575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "134"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 4362,
											"end": 4384,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "C8"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4361,
											"end": 4384,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4357,
											"end": 4407,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "135"
										},
										{
											"begin": 4357,
											"end": 4407,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "137"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 680,
											"end": 21575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "137"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "A0"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP7",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 4221,
											"end": 4244,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4221,
											"end": 4256,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4217,
											"end": 4280,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "138"
										},
										{
											"begin": 4217,
											"end": 4280,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 4362,
											"end": 4384,
											"name": "PUSH",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "140"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 680,
											"end": 21575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "140"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 4510,
											"end": 4532,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "C0"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4362,
											"end": 4384,
											"name": "PUSH",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "141"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 4510,
											"end": 4543,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4506,
											"end": 4571,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "143"
										},
										{
											"begin": 4506,
											"end": 4571,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "145"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 680,
											"end": 21575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "145"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13699,
											"end": 13710,
											"name": "PUSH",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 13699,
											"end": 13710,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13699,
											"end": 13710,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 13738,
											"end": 13750,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 13738,
											"end": 13750,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 13738,
											"end": 13750,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 13738,
											"end": 13750,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1810,
											"end": 1815,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4362,
											"end": 4384,
											"name": "PUSH",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 1810,
											"end": 1815,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 13880,
											"end": 13891,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 13880,
											"end": 13891,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "C2"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "C0"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 14031,
											"end": 14041,
											"name": "PUSHIMMUTABLE",
											"source": 13,
											"value": "1358"
										},
										{
											"begin": 14052,
											"end": 14792,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 14052,
											"end": 14792,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 14052,
											"end": 14792,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 14052,
											"end": 14792,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14052,
											"end": 14792,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 14052,
											"end": 14792,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "146"
										},
										{
											"begin": 14052,
											"end": 14792,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "1388"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "148"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "2710"
										},
										{
											"begin": 1810,
											"end": 1815,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1810,
											"end": 1815,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 1810,
											"end": 1815,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 14170,
											"end": 14195,
											"name": "SWAP8",
											"source": 13
										},
										{
											"begin": 14170,
											"end": 14195,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 14170,
											"end": 14195,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "150"
										},
										{
											"begin": 14170,
											"end": 14195,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 14170,
											"end": 14195,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "26"
										},
										{
											"begin": 14170,
											"end": 14195,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14170,
											"end": 14195,
											"name": "tag",
											"source": 13,
											"value": "150"
										},
										{
											"begin": 14170,
											"end": 14195,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 14225,
											"end": 14245,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "151"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 14225,
											"end": 14245,
											"name": "DUP11",
											"source": 13
										},
										{
											"begin": 14225,
											"end": 14245,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "25"
										},
										{
											"begin": 14225,
											"end": 14245,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14225,
											"end": 14245,
											"name": "tag",
											"source": 13,
											"value": "151"
										},
										{
											"begin": 14225,
											"end": 14245,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1810,
											"end": 1815,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 14298,
											"end": 14323,
											"name": "SWAP8",
											"source": 13
										},
										{
											"begin": 14298,
											"end": 14323,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 14298,
											"end": 14323,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "152"
										},
										{
											"begin": 14298,
											"end": 14323,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 14298,
											"end": 14323,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "26"
										},
										{
											"begin": 14298,
											"end": 14323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14298,
											"end": 14323,
											"name": "tag",
											"source": 13,
											"value": "152"
										},
										{
											"begin": 14298,
											"end": 14323,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP10",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP12",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 14383,
											"end": 14398,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 14383,
											"end": 14398,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 14383,
											"end": 14398,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 14383,
											"end": 14398,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 14379,
											"end": 14439,
											"name": "SWAP11",
											"source": 13
										},
										{
											"begin": 14974,
											"end": 15035,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "153"
										},
										{
											"begin": 14379,
											"end": 14439,
											"name": "SWAP10",
											"source": 13
										},
										{
											"begin": 14807,
											"end": 14959,
											"name": "PUSH",
											"source": 13,
											"value": "EA4EA4B4229888EEBA3EB2772DF89C52AF23C7FE3D530B0C1F2CA146F32C12BA"
										},
										{
											"begin": 14379,
											"end": 14439,
											"name": "SWAP7",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 14379,
											"end": 14439,
											"name": "SWAP7",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "A8EDA418A66B2F5395D4A15B2F03DE75B34FFF39BB2E2A8B57F6BE974D56E7B0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 14379,
											"end": 14439,
											"name": "SWAP15",
											"source": 13
										},
										{
											"begin": 14379,
											"end": 14439,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "154"
										},
										{
											"begin": 14379,
											"end": 14439,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 14052,
											"end": 14792,
											"name": "tag",
											"source": 13,
											"value": "155"
										},
										{
											"begin": 14052,
											"end": 14792,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "POP",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 14457,
											"end": 14473,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 14453,
											"end": 14513,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "156"
										},
										{
											"begin": 14453,
											"end": 14513,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 14052,
											"end": 14792,
											"name": "tag",
											"source": 13,
											"value": "157"
										},
										{
											"begin": 14052,
											"end": 14792,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "POP",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP12",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 14531,
											"end": 14547,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14531,
											"end": 14547,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14527,
											"end": 14590,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "158"
										},
										{
											"begin": 14527,
											"end": 14590,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 14052,
											"end": 14792,
											"name": "tag",
											"source": 13,
											"value": "159"
										},
										{
											"begin": 14052,
											"end": 14792,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14052,
											"end": 14792,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14052,
											"end": 14792,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14052,
											"end": 14792,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14052,
											"end": 14792,
											"name": "tag",
											"source": 13,
											"value": "160"
										},
										{
											"begin": 14052,
											"end": 14792,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14807,
											"end": 14959,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "161"
										},
										{
											"begin": 14807,
											"end": 14959,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 14807,
											"end": 14959,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 14807,
											"end": 14959,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14807,
											"end": 14959,
											"name": "tag",
											"source": 13,
											"value": "161"
										},
										{
											"begin": 14807,
											"end": 14959,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP8",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP14",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 14807,
											"end": 14959,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 14807,
											"end": 14959,
											"name": "LOG3",
											"source": 13
										},
										{
											"begin": 14974,
											"end": 15035,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 14974,
											"end": 15035,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14974,
											"end": 15035,
											"name": "tag",
											"source": 13,
											"value": "153"
										},
										{
											"begin": 14974,
											"end": 15035,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1810,
											"end": 1815,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1810,
											"end": 1815,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1810,
											"end": 1815,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14974,
											"end": 15035,
											"name": "LOG3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 14527,
											"end": 14590,
											"name": "tag",
											"source": 13,
											"value": "158"
										},
										{
											"begin": 14527,
											"end": 14590,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14549,
											"end": 14590,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "163"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 14549,
											"end": 14590,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14549,
											"end": 14590,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "28"
										},
										{
											"begin": 14549,
											"end": 14590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14549,
											"end": 14590,
											"name": "tag",
											"source": 13,
											"value": "163"
										},
										{
											"begin": 14549,
											"end": 14590,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14527,
											"end": 14590,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14527,
											"end": 14590,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 14527,
											"end": 14590,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 14527,
											"end": 14590,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "159"
										},
										{
											"begin": 14527,
											"end": 14590,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14453,
											"end": 14513,
											"name": "tag",
											"source": 13,
											"value": "156"
										},
										{
											"begin": 14453,
											"end": 14513,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14475,
											"end": 14513,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "164"
										},
										{
											"begin": 14475,
											"end": 14513,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 14475,
											"end": 14513,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 14475,
											"end": 14513,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "28"
										},
										{
											"begin": 14475,
											"end": 14513,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14475,
											"end": 14513,
											"name": "tag",
											"source": 13,
											"value": "164"
										},
										{
											"begin": 14475,
											"end": 14513,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14453,
											"end": 14513,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14453,
											"end": 14513,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 14453,
											"end": 14513,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "157"
										},
										{
											"begin": 14453,
											"end": 14513,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14379,
											"end": 14439,
											"name": "tag",
											"source": 13,
											"value": "154"
										},
										{
											"begin": 14379,
											"end": 14439,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14400,
											"end": 14439,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "165"
										},
										{
											"begin": 14400,
											"end": 14439,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 14400,
											"end": 14439,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 14400,
											"end": 14439,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "28"
										},
										{
											"begin": 14400,
											"end": 14439,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14400,
											"end": 14439,
											"name": "tag",
											"source": 13,
											"value": "165"
										},
										{
											"begin": 14400,
											"end": 14439,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14379,
											"end": 14439,
											"name": "DUP15",
											"source": 13
										},
										{
											"begin": 14379,
											"end": 14439,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14379,
											"end": 14439,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "155"
										},
										{
											"begin": 14379,
											"end": 14439,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "148"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B71"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1861,
											"end": 1869,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1861,
											"end": 1869,
											"name": "PUSH",
											"source": 13,
											"value": "11"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 1861,
											"end": 1869,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1861,
											"end": 1869,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1861,
											"end": 1869,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 14052,
											"end": 14792,
											"name": "tag",
											"source": 13,
											"value": "146"
										},
										{
											"begin": 14052,
											"end": 14792,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14621,
											"end": 14638,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 14621,
											"end": 14638,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 14807,
											"end": 14959,
											"name": "PUSH",
											"source": 13,
											"value": "EA4EA4B4229888EEBA3EB2772DF89C52AF23C7FE3D530B0C1F2CA146F32C12BA"
										},
										{
											"begin": 14621,
											"end": 14638,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 14974,
											"end": 15035,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "153"
										},
										{
											"begin": 14621,
											"end": 14638,
											"name": "SWAP7",
											"source": 13
										},
										{
											"begin": 14621,
											"end": 14638,
											"name": "SWAP8",
											"source": 13
										},
										{
											"begin": 14621,
											"end": 14638,
											"name": "SWAP10",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "A8EDA418A66B2F5395D4A15B2F03DE75B34FFF39BB2E2A8B57F6BE974D56E7B0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 14621,
											"end": 14638,
											"name": "SWAP10",
											"source": 13
										},
										{
											"begin": 14621,
											"end": 14638,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 14652,
											"end": 14677,
											"name": "SWAP12",
											"source": 13
										},
										{
											"begin": 14652,
											"end": 14677,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 14691,
											"end": 14706,
											"name": "SWAP7",
											"source": 13
										},
										{
											"begin": 14725,
											"end": 14741,
											"name": "SWAP11",
											"source": 13
										},
										{
											"begin": 14725,
											"end": 14741,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14721,
											"end": 14781,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "166"
										},
										{
											"begin": 14721,
											"end": 14781,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 14052,
											"end": 14792,
											"name": "tag",
											"source": 13,
											"value": "167"
										},
										{
											"begin": 14052,
											"end": 14792,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14052,
											"end": 14792,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14052,
											"end": 14792,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14052,
											"end": 14792,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14052,
											"end": 14792,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "160"
										},
										{
											"begin": 14052,
											"end": 14792,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14721,
											"end": 14781,
											"name": "tag",
											"source": 13,
											"value": "166"
										},
										{
											"begin": 14721,
											"end": 14781,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14743,
											"end": 14781,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "168"
										},
										{
											"begin": 14743,
											"end": 14781,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 14743,
											"end": 14781,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "28"
										},
										{
											"begin": 14743,
											"end": 14781,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14743,
											"end": 14781,
											"name": "tag",
											"source": 13,
											"value": "168"
										},
										{
											"begin": 14743,
											"end": 14781,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14721,
											"end": 14781,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14721,
											"end": 14781,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 14721,
											"end": 14781,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 14721,
											"end": 14781,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "167"
										},
										{
											"begin": 14721,
											"end": 14781,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4506,
											"end": 4571,
											"name": "tag",
											"source": 13,
											"value": "143"
										},
										{
											"begin": 4506,
											"end": 4571,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5E40B94F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4552,
											"end": 4571,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4552,
											"end": 4571,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4552,
											"end": 4571,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "141"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "21"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 4217,
											"end": 4280,
											"name": "tag",
											"source": 13,
											"value": "138"
										},
										{
											"begin": 4217,
											"end": 4280,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "EA8E4EB5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4265,
											"end": 4280,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4265,
											"end": 4280,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4265,
											"end": 4280,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 4357,
											"end": 4407,
											"name": "tag",
											"source": 13,
											"value": "135"
										},
										{
											"begin": 4357,
											"end": 4407,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "223DA473"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4393,
											"end": 4407,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4393,
											"end": 4407,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4393,
											"end": 4407,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "129"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "95"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "105"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "105"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "105"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "175"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "176"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 680,
											"end": 21575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "175"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 680,
											"end": 21575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "176"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 18534,
											"end": 18545,
											"name": "PUSH",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 18534,
											"end": 18545,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 18534,
											"end": 18545,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "C8"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 18533,
											"end": 18545,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 18529,
											"end": 18568,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "135"
										},
										{
											"begin": 18529,
											"end": 18568,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "179"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "A0"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "180"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 18649,
											"end": 18661,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 18649,
											"end": 18661,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 18649,
											"end": 18661,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "181"
										},
										{
											"begin": 18675,
											"end": 18686,
											"name": "PUSH",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 18675,
											"end": 18686,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 18675,
											"end": 18686,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 18600,
											"end": 18611,
											"name": "SWAP7",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "182"
										},
										{
											"begin": 18600,
											"end": 18611,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 18600,
											"end": 18611,
											"name": "DUP11",
											"source": 13
										},
										{
											"begin": 18600,
											"end": 18611,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "29"
										},
										{
											"begin": 680,
											"end": 21575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "182"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18752,
											"end": 18766,
											"name": "SWAP9",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "183"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "184"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 18752,
											"end": 18766,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 18752,
											"end": 18766,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "29"
										},
										{
											"begin": 680,
											"end": 21575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "184"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18780,
											"end": 18795,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 18780,
											"end": 18795,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "29"
										},
										{
											"begin": 680,
											"end": 21575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "183"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP12",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP13",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP12",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP13",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "1A0"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP14",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "9"
										},
										{
											"begin": 680,
											"end": 21575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "179"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP13",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP12",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP12",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP12",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "185"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "A0"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP12",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "C0"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "11"
										},
										{
											"begin": 680,
											"end": 21575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "185"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "C0"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP12",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "9"
										},
										{
											"begin": 680,
											"end": 21575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "181"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "9"
										},
										{
											"begin": 680,
											"end": 21575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "180"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1861,
											"end": 1869,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 1861,
											"end": 1869,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1861,
											"end": 1869,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1861,
											"end": 1869,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "A0"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "120"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "140"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "160"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "180"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "93"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "105"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "C0"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "105"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "190"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "192"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 680,
											"end": 21575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "192"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "193"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "193"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "129"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "129"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "198"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "A4"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "200"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "202"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 680,
											"end": 21575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "202"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2484,
											"end": 2488,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "tag",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1204,
											"end": 1276,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "204"
										},
										{
											"begin": 1204,
											"end": 1276,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 1204,
											"end": 1276,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1204,
											"end": 1276,
											"name": "tag",
											"source": 5,
											"value": "204"
										},
										{
											"begin": 1204,
											"end": 1276,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 5735,
											"end": 5757,
											"name": "PUSH",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "205"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP12",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 680,
											"end": 21575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "205"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 5735,
											"end": 5757,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "C8"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 5731,
											"end": 5785,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "206"
										},
										{
											"begin": 5731,
											"end": 5785,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5799,
											"end": 5828,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 5799,
											"end": 5828,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5795,
											"end": 5853,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "210"
										},
										{
											"begin": 5795,
											"end": 5853,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 5867,
											"end": 5894,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 5867,
											"end": 5894,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5863,
											"end": 5919,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "210"
										},
										{
											"begin": 5863,
											"end": 5919,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5933,
											"end": 5965,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 5933,
											"end": 5965,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 5933,
											"end": 5965,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 5929,
											"end": 5996,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "212"
										},
										{
											"begin": 5929,
											"end": 5996,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 6010,
											"end": 6022,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 6006,
											"end": 6060,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "214"
										},
										{
											"begin": 6006,
											"end": 6060,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6087,
											"end": 6102,
											"name": "TIMESTAMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 6074,
											"end": 6102,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 6074,
											"end": 6102,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 6070,
											"end": 6135,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "216"
										},
										{
											"begin": 6070,
											"end": 6135,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 6149,
											"end": 6178,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 6145,
											"end": 6206,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "218"
										},
										{
											"begin": 6145,
											"end": 6206,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6870,
											"end": 7012,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "220"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6870,
											"end": 7012,
											"name": "PUSH",
											"source": 13,
											"value": "CEB1A488BE98B2739817F21E7D3B0A343434519CD0FE4DB3EF5FC27A96E8D295"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "221"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "222"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP11",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 680,
											"end": 21575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "222"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 6333,
											"end": 6344,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "223"
										},
										{
											"begin": 6333,
											"end": 6344,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 6333,
											"end": 6344,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 6333,
											"end": 6344,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 6333,
											"end": 6344,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "18"
										},
										{
											"begin": 680,
											"end": 21575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "223"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP12",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 6400,
											"end": 6412,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 6400,
											"end": 6412,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP14",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 6440,
											"end": 6451,
											"name": "PUSH",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 6440,
											"end": 6451,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 6440,
											"end": 6451,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "AND",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 6506,
											"end": 6520,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6506,
											"end": 6520,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "18"
										},
										{
											"begin": 680,
											"end": 21575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "221"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5735,
											"end": 5757,
											"name": "PUSH",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 6543,
											"end": 6554,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6543,
											"end": 6554,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 6087,
											"end": 6102,
											"name": "TIMESTAMP",
											"source": 13
										},
										{
											"begin": 1861,
											"end": 1869,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 6639,
											"end": 6654,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6639,
											"end": 6654,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6639,
											"end": 6654,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6639,
											"end": 6654,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6639,
											"end": 6654,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "224"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "16"
										},
										{
											"begin": 680,
											"end": 21575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "224"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "225"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "226"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "AND",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6440,
											"end": 6451,
											"name": "PUSH",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 6760,
											"end": 6800,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "227"
										},
										{
											"begin": 6760,
											"end": 6800,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6760,
											"end": 6800,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "19"
										},
										{
											"begin": 6760,
											"end": 6800,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6760,
											"end": 6800,
											"name": "tag",
											"source": 13,
											"value": "227"
										},
										{
											"begin": 6760,
											"end": 6800,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5735,
											"end": 5757,
											"name": "PUSH",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6810,
											"end": 6854,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "228"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP12",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 6810,
											"end": 6854,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "19"
										},
										{
											"begin": 6810,
											"end": 6854,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6810,
											"end": 6854,
											"name": "tag",
											"source": 13,
											"value": "228"
										},
										{
											"begin": 6810,
											"end": 6854,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6870,
											"end": 7012,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6870,
											"end": 7012,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6870,
											"end": 7012,
											"name": "tag",
											"source": 13,
											"value": "220"
										},
										{
											"begin": 6870,
											"end": 7012,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6870,
											"end": 7012,
											"name": "LOG4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "225"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "229"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6440,
											"end": 6451,
											"name": "PUSH",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "17"
										},
										{
											"begin": 680,
											"end": 21575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "229"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "226"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6145,
											"end": 6206,
											"name": "tag",
											"source": 13,
											"value": "218"
										},
										{
											"begin": 6145,
											"end": 6206,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7E4DD01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6187,
											"end": 6206,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6187,
											"end": 6206,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6187,
											"end": 6206,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 6070,
											"end": 6135,
											"name": "tag",
											"source": 13,
											"value": "216"
										},
										{
											"begin": 6070,
											"end": 6135,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "642CE77"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6111,
											"end": 6135,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6111,
											"end": 6135,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6111,
											"end": 6135,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 6006,
											"end": 6060,
											"name": "tag",
											"source": 13,
											"value": "214"
										},
										{
											"begin": 6006,
											"end": 6060,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5E85AE73"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6031,
											"end": 6060,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6031,
											"end": 6060,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6031,
											"end": 6060,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 5929,
											"end": 5996,
											"name": "tag",
											"source": 13,
											"value": "212"
										},
										{
											"begin": 5929,
											"end": 5996,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "24DA0345"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5974,
											"end": 5996,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5974,
											"end": 5996,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5974,
											"end": 5996,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 5863,
											"end": 5919,
											"name": "tag",
											"source": 13,
											"value": "210"
										},
										{
											"begin": 5863,
											"end": 5919,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E6C4247B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5903,
											"end": 5919,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5903,
											"end": 5919,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5903,
											"end": 5919,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 5731,
											"end": 5785,
											"name": "tag",
											"source": 13,
											"value": "206"
										},
										{
											"begin": 5731,
											"end": 5785,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "38A6A807"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5766,
											"end": 5785,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5766,
											"end": 5785,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5766,
											"end": 5785,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "200"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "198"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "190"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "91"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "105"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "112"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "234"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "236"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 680,
											"end": 21575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "236"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "237"
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 2227,
											"end": 2330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "tag",
											"source": 6,
											"value": "237"
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2484,
											"end": 2488,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "tag",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1204,
											"end": 1276,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "239"
										},
										{
											"begin": 1204,
											"end": 1276,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 1204,
											"end": 1276,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1204,
											"end": 1276,
											"name": "tag",
											"source": 5,
											"value": "239"
										},
										{
											"begin": 1204,
											"end": 1276,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 4362,
											"end": 4384,
											"name": "PUSH",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "240"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 680,
											"end": 21575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "240"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 4362,
											"end": 4384,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "C8"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4361,
											"end": 4384,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4357,
											"end": 4407,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "135"
										},
										{
											"begin": 4357,
											"end": 4407,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 4362,
											"end": 4384,
											"name": "PUSH",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "243"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 680,
											"end": 21575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "243"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 4510,
											"end": 4532,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "C0"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4362,
											"end": 4384,
											"name": "PUSH",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "244"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 15389,
											"end": 15410,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 4510,
											"end": 4543,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4506,
											"end": 4571,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "143"
										},
										{
											"begin": 4506,
											"end": 4571,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "248"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 680,
											"end": 21575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "248"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 15495,
											"end": 15508,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 15495,
											"end": 15508,
											"name": "PUSH",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 15495,
											"end": 15508,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 15495,
											"end": 15508,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 15476,
											"end": 15491,
											"name": "TIMESTAMP",
											"source": 13
										},
										{
											"begin": 15476,
											"end": 15508,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 15476,
											"end": 15508,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 15472,
											"end": 15536,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "249"
										},
										{
											"begin": 15472,
											"end": 15536,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4362,
											"end": 4384,
											"name": "PUSH",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 15591,
											"end": 15602,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 15591,
											"end": 15602,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "AND",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 15752,
											"end": 15800,
											"name": "PUSH",
											"source": 13,
											"value": "B559D285C87E4FA0F561388264310703FF0C6C454A39AE52D0AE94032FF0DB70"
										},
										{
											"begin": 15752,
											"end": 15800,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 15752,
											"end": 15800,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "251"
										},
										{
											"begin": 15752,
											"end": 15800,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 15640,
											"end": 15737,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "252"
										},
										{
											"begin": 15640,
											"end": 15737,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "253"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15752,
											"end": 15800,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15752,
											"end": 15800,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15752,
											"end": 15800,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 15752,
											"end": 15800,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15752,
											"end": 15800,
											"name": "tag",
											"source": 13,
											"value": "251"
										},
										{
											"begin": 15752,
											"end": 15800,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 15775,
											"end": 15785,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 15752,
											"end": 15800,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 15752,
											"end": 15800,
											"name": "LOG3",
											"source": 13
										},
										{
											"begin": 15389,
											"end": 15410,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 15640,
											"end": 15737,
											"name": "tag",
											"source": 13,
											"value": "252"
										},
										{
											"begin": 15640,
											"end": 15737,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 15677,
											"end": 15726,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "254"
										},
										{
											"begin": 15677,
											"end": 15726,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 15677,
											"end": 15687,
											"name": "PUSHIMMUTABLE",
											"source": 13,
											"value": "1358"
										},
										{
											"begin": 15677,
											"end": 15726,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "28"
										},
										{
											"begin": 15677,
											"end": 15726,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15677,
											"end": 15726,
											"name": "tag",
											"source": 13,
											"value": "254"
										},
										{
											"begin": 15677,
											"end": 15726,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15640,
											"end": 15737,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 15640,
											"end": 15737,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 15640,
											"end": 15737,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "253"
										},
										{
											"begin": 15640,
											"end": 15737,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15472,
											"end": 15536,
											"name": "tag",
											"source": 13,
											"value": "249"
										},
										{
											"begin": 15472,
											"end": 15536,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2EB3543"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15517,
											"end": 15536,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 15517,
											"end": 15536,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15517,
											"end": 15536,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "244"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "21"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "234"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "89"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "105"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "105"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 17322,
											"end": 17332,
											"name": "PUSHIMMUTABLE",
											"source": 13,
											"value": "1358"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "87"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "105"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "105"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4723,
											"end": 4749,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "264"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "264"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3877,
											"end": 3883,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 3877,
											"end": 3899,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 2484,
											"end": 2488,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "tag",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4723,
											"end": 4749,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 4723,
											"end": 4749,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4723,
											"end": 4749,
											"name": "tag",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 4723,
											"end": 4749,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4723,
											"end": 4749,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "85"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "105"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "112"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "270"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 680,
											"end": 21575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "270"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 17916,
											"end": 17929,
											"name": "PUSH",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "271"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "30"
										},
										{
											"begin": 680,
											"end": 21575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "271"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "272"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "273"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "119"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "10"
										},
										{
											"begin": 680,
											"end": 21575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "273"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "276"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "29"
										},
										{
											"begin": 680,
											"end": 21575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "276"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP7",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "272"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "83"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "105"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "105"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "81"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "105"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "105"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "112"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "287"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "288"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 680,
											"end": 21575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "287"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "180"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "289"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 680,
											"end": 21575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "289"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "A0"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "C0"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "120"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "140"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "160"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 680,
											"end": 21575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "288"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "290"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 680,
											"end": 21575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "290"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "291"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "29"
										},
										{
											"begin": 680,
											"end": 21575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "291"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "292"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "29"
										},
										{
											"begin": 680,
											"end": 21575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "292"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "293"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "29"
										},
										{
											"begin": 680,
											"end": 21575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "293"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "A0"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "C0"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "A0"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1861,
											"end": 1869,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1861,
											"end": 1869,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "120"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "140"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "C0"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "294"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "C0"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "160"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "C8"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "180"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "A0"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "A0"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "180"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "296"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "297"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "1A0"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "1C0"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "9"
										},
										{
											"begin": 680,
											"end": 21575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "297"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "298"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "9"
										},
										{
											"begin": 680,
											"end": 21575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "298"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "A0"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "9"
										},
										{
											"begin": 680,
											"end": 21575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "296"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "A0"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "C0"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "C0"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "120"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "120"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "140"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "140"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "160"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "299"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "160"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "11"
										},
										{
											"begin": 680,
											"end": 21575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "299"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "1A0"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "294"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "21"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "79"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "105"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "105"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "304"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 680,
											"end": 21575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "304"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "129"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 19107,
											"end": 19173,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 19107,
											"end": 19173,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "307"
										},
										{
											"begin": 19107,
											"end": 19173,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 19118,
											"end": 19129,
											"name": "PUSH",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 19107,
											"end": 19173,
											"name": "tag",
											"source": 13,
											"value": "309"
										},
										{
											"begin": 19107,
											"end": 19173,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "310"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "30"
										},
										{
											"begin": 680,
											"end": 21575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "310"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "311"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "312"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "119"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "10"
										},
										{
											"begin": 680,
											"end": 21575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "312"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "315"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "29"
										},
										{
											"begin": 680,
											"end": 21575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "315"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP7",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "311"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19107,
											"end": 19173,
											"name": "tag",
											"source": 13,
											"value": "307"
										},
										{
											"begin": 19107,
											"end": 19173,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 19146,
											"end": 19159,
											"name": "PUSH",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 19107,
											"end": 19173,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "309"
										},
										{
											"begin": 19107,
											"end": 19173,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "77"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "105"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "105"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "190"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "322"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 680,
											"end": 21575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "322"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "323"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "323"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "324"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "198"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "328"
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 2227,
											"end": 2330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "tag",
											"source": 6,
											"value": "328"
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "329"
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2484,
											"end": 2488,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "tag",
											"source": 0,
											"value": "329"
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1204,
											"end": 1276,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "330"
										},
										{
											"begin": 1204,
											"end": 1276,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 1204,
											"end": 1276,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1204,
											"end": 1276,
											"name": "tag",
											"source": 5,
											"value": "330"
										},
										{
											"begin": 1204,
											"end": 1276,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 4362,
											"end": 4384,
											"name": "PUSH",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP8",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "331"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP11",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP11",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP15",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP16",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 680,
											"end": 21575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "331"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 4362,
											"end": 4384,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "C8"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4361,
											"end": 4384,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4357,
											"end": 4407,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "135"
										},
										{
											"begin": 4357,
											"end": 4407,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "334"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP12",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 680,
											"end": 21575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "334"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "A0"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP7",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP8",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4062,
											"end": 4093,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4062,
											"end": 4093,
											"name": "SWAP10",
											"source": 13
										},
										{
											"begin": 4062,
											"end": 4093,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4058,
											"end": 4117,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "138"
										},
										{
											"begin": 4058,
											"end": 4117,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 4362,
											"end": 4384,
											"name": "PUSH",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "337"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 680,
											"end": 21575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "337"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 4510,
											"end": 4532,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "C0"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4362,
											"end": 4384,
											"name": "PUSH",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "338"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4506,
											"end": 4571,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "143"
										},
										{
											"begin": 4506,
											"end": 4571,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 7636,
											"end": 7662,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 7632,
											"end": 7686,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "342"
										},
										{
											"begin": 7632,
											"end": 7686,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7700,
											"end": 7712,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 7700,
											"end": 7712,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 7696,
											"end": 7736,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "344"
										},
										{
											"begin": 7696,
											"end": 7736,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "346"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 7797,
											"end": 7810,
											"name": "PUSH",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 680,
											"end": 21575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "346"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 7797,
											"end": 7810,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "A0"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 7793,
											"end": 7843,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "347"
										},
										{
											"begin": 7793,
											"end": 7843,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7956,
											"end": 7966,
											"name": "PUSHIMMUTABLE",
											"source": 13,
											"value": "1358"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "70A08231"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 8000,
											"end": 8030,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8000,
											"end": 8030,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8000,
											"end": 8030,
											"name": "DUP11",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 8000,
											"end": 8030,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8000,
											"end": 8030,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8000,
											"end": 8030,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 8000,
											"end": 8030,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 8000,
											"end": 8030,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8000,
											"end": 8030,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 8000,
											"end": 8030,
											"name": "GAS",
											"source": 13
										},
										{
											"begin": 8000,
											"end": 8030,
											"name": "STATICCALL",
											"source": 13
										},
										{
											"begin": 8000,
											"end": 8030,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 8000,
											"end": 8030,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 8000,
											"end": 8030,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "349"
										},
										{
											"begin": 8000,
											"end": 8030,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 8000,
											"end": 8030,
											"name": "DUP11",
											"source": 13
										},
										{
											"begin": 8000,
											"end": 8030,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8000,
											"end": 8030,
											"name": "DUP14",
											"source": 13
										},
										{
											"begin": 8000,
											"end": 8030,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8000,
											"end": 8030,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "351"
										},
										{
											"begin": 8000,
											"end": 8030,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "352"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8044,
											"end": 8066,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8044,
											"end": 8066,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 8040,
											"end": 8096,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "353"
										},
										{
											"begin": 8040,
											"end": 8096,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 8173,
											"end": 8180,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 8173,
											"end": 8180,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8173,
											"end": 8180,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 8173,
											"end": 8180,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 8173,
											"end": 8180,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 8173,
											"end": 8180,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 8173,
											"end": 8200,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8173,
											"end": 8200,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "355"
										},
										{
											"begin": 8173,
											"end": 8200,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "356"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8173,
											"end": 8220,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 8173,
											"end": 8220,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 8173,
											"end": 8220,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "357"
										},
										{
											"begin": 8173,
											"end": 8220,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "358"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8169,
											"end": 8446,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "359"
										},
										{
											"begin": 8169,
											"end": 8446,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "360"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6EB1769F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8476,
											"end": 8518,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8476,
											"end": 8518,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 8476,
											"end": 8518,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 8476,
											"end": 8518,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7926,
											"end": 7930,
											"name": "ADDRESS",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8476,
											"end": 8518,
											"name": "tag",
											"source": 13,
											"value": "361"
										},
										{
											"begin": 8476,
											"end": 8518,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8476,
											"end": 8518,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 8476,
											"end": 8518,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8476,
											"end": 8518,
											"name": "GAS",
											"source": 13
										},
										{
											"begin": 8476,
											"end": 8518,
											"name": "STATICCALL",
											"source": 13
										},
										{
											"begin": 8476,
											"end": 8518,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 8476,
											"end": 8518,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 8476,
											"end": 8518,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "362"
										},
										{
											"begin": 8476,
											"end": 8518,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 8476,
											"end": 8518,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 8476,
											"end": 8518,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8476,
											"end": 8518,
											"name": "DUP11",
											"source": 13
										},
										{
											"begin": 8476,
											"end": 8518,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8476,
											"end": 8518,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "364"
										},
										{
											"begin": 8476,
											"end": 8518,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "365"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8532,
											"end": 8551,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8532,
											"end": 8551,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 8528,
											"end": 8583,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "366"
										},
										{
											"begin": 8528,
											"end": 8583,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7926,
											"end": 7930,
											"name": "ADDRESS",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "A0"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "368"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 8718,
											"end": 8761,
											"name": "PUSH",
											"source": 13,
											"value": "2C138F65913CD3B9CA6F36E4B59E26830A033A978CA69F935781972E6DF1F61D"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 8718,
											"end": 8761,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "370"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "371"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 1745,
											"end": 1798,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "tag",
											"source": 9,
											"value": "371"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 8686,
											"end": 8701,
											"name": "TIMESTAMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "A0"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 8718,
											"end": 8761,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 8718,
											"end": 8761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8718,
											"end": 8761,
											"name": "tag",
											"source": 13,
											"value": "370"
										},
										{
											"begin": 8718,
											"end": 8761,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8718,
											"end": 8761,
											"name": "LOG3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "368"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B71"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "41"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 8528,
											"end": 8583,
											"name": "tag",
											"source": 13,
											"value": "366"
										},
										{
											"begin": 8528,
											"end": 8583,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "13BE252B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8560,
											"end": 8583,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8560,
											"end": 8583,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8560,
											"end": 8583,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 8476,
											"end": 8518,
											"name": "tag",
											"source": 13,
											"value": "364"
										},
										{
											"begin": 8476,
											"end": 8518,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8476,
											"end": 8518,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 8476,
											"end": 8518,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 8476,
											"end": 8518,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8476,
											"end": 8518,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 8476,
											"end": 8518,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 8476,
											"end": 8518,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 8476,
											"end": 8518,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8476,
											"end": 8518,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 8476,
											"end": 8518,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 8476,
											"end": 8518,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 8476,
											"end": 8518,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "372"
										},
										{
											"begin": 8476,
											"end": 8518,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 8476,
											"end": 8518,
											"name": "tag",
											"source": 13,
											"value": "373"
										},
										{
											"begin": 8476,
											"end": 8518,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8476,
											"end": 8518,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "374"
										},
										{
											"begin": 8476,
											"end": 8518,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8476,
											"end": 8518,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 8476,
											"end": 8518,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 8476,
											"end": 8518,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8476,
											"end": 8518,
											"name": "tag",
											"source": 13,
											"value": "374"
										},
										{
											"begin": 8476,
											"end": 8518,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8476,
											"end": 8518,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8476,
											"end": 8518,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "129"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 8476,
											"end": 8518,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8476,
											"end": 8518,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "365"
										},
										{
											"begin": 8476,
											"end": 8518,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8476,
											"end": 8518,
											"name": "tag",
											"source": 13,
											"value": "372"
										},
										{
											"begin": 8476,
											"end": 8518,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8476,
											"end": 8518,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8476,
											"end": 8518,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 8476,
											"end": 8518,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "373"
										},
										{
											"begin": 8476,
											"end": 8518,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8476,
											"end": 8518,
											"name": "tag",
											"source": 13,
											"value": "362"
										},
										{
											"begin": 8476,
											"end": 8518,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP12",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "RETURNDATACOPY",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 8169,
											"end": 8446,
											"name": "tag",
											"source": 13,
											"value": "359"
										},
										{
											"begin": 8169,
											"end": 8446,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21258,
											"end": 21312,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 21258,
											"end": 21312,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 21258,
											"end": 21312,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21258,
											"end": 21312,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 21258,
											"end": 21312,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 21258,
											"end": 21312,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 21258,
											"end": 21312,
											"name": "EXTCODESIZE",
											"source": 13
										},
										{
											"begin": 21258,
											"end": 21312,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 21258,
											"end": 21312,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "377"
										},
										{
											"begin": 21258,
											"end": 21312,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "D505ACCF"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 21258,
											"end": 21312,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 21258,
											"end": 21312,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 21258,
											"end": 21312,
											"name": "DUP11",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 21258,
											"end": 21312,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 21258,
											"end": 21312,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7926,
											"end": 7930,
											"name": "ADDRESS",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "A4"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "A4"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "C4"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "C4"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 21258,
											"end": 21312,
											"name": "DUP11",
											"source": 13
										},
										{
											"begin": 21258,
											"end": 21312,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "E4"
										},
										{
											"begin": 21258,
											"end": 21312,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 21258,
											"end": 21312,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 21258,
											"end": 21312,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 21258,
											"end": 21312,
											"name": "GAS",
											"source": 13
										},
										{
											"begin": 21258,
											"end": 21312,
											"name": "CALL",
											"source": 13
										},
										{
											"begin": 21258,
											"end": 21312,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 21258,
											"end": 21312,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 21258,
											"end": 21312,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "379"
										},
										{
											"begin": 21258,
											"end": 21312,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 8169,
											"end": 8446,
											"name": "tag",
											"source": 13,
											"value": "380"
										},
										{
											"begin": 8169,
											"end": 8446,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 21254,
											"end": 21567,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "381"
										},
										{
											"begin": 21254,
											"end": 21567,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B78CB0DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 21542,
											"end": 21556,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 21542,
											"end": 21556,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 21542,
											"end": 21556,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 21254,
											"end": 21567,
											"name": "tag",
											"source": 13,
											"value": "381"
										},
										{
											"begin": 21254,
											"end": 21567,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6EB1769F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 21400,
											"end": 21436,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 21400,
											"end": 21436,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 21400,
											"end": 21436,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 21400,
											"end": 21436,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7926,
											"end": 7930,
											"name": "ADDRESS",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7926,
											"end": 7930,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 21400,
											"end": 21436,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 21400,
											"end": 21436,
											"name": "GAS",
											"source": 13
										},
										{
											"begin": 21400,
											"end": 21436,
											"name": "STATICCALL",
											"source": 13
										},
										{
											"begin": 21400,
											"end": 21436,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 21400,
											"end": 21436,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 21400,
											"end": 21436,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "384"
										},
										{
											"begin": 21400,
											"end": 21436,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 21400,
											"end": 21436,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 21400,
											"end": 21436,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 21400,
											"end": 21436,
											"name": "DUP13",
											"source": 13
										},
										{
											"begin": 21400,
											"end": 21436,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 21400,
											"end": 21436,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "386"
										},
										{
											"begin": 21400,
											"end": 21436,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 21254,
											"end": 21567,
											"name": "tag",
											"source": 13,
											"value": "387"
										},
										{
											"begin": 21254,
											"end": 21567,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21454,
											"end": 21471,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21454,
											"end": 21471,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 21450,
											"end": 21503,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "366"
										},
										{
											"begin": 21450,
											"end": 21503,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 8476,
											"end": 8518,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "361"
										},
										{
											"begin": 21254,
											"end": 21567,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 21254,
											"end": 21567,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 21254,
											"end": 21567,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8169,
											"end": 8446,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "360"
										},
										{
											"begin": 8169,
											"end": 8446,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 21400,
											"end": 21436,
											"name": "tag",
											"source": 13,
											"value": "386"
										},
										{
											"begin": 21400,
											"end": 21436,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21400,
											"end": 21436,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 21400,
											"end": 21436,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 21400,
											"end": 21436,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21400,
											"end": 21436,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 21400,
											"end": 21436,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 21400,
											"end": 21436,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 21400,
											"end": 21436,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21400,
											"end": 21436,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 21400,
											"end": 21436,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 21400,
											"end": 21436,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 21400,
											"end": 21436,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "390"
										},
										{
											"begin": 21400,
											"end": 21436,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 21400,
											"end": 21436,
											"name": "tag",
											"source": 13,
											"value": "391"
										},
										{
											"begin": 21400,
											"end": 21436,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21400,
											"end": 21436,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "392"
										},
										{
											"begin": 21400,
											"end": 21436,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 21400,
											"end": 21436,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 21400,
											"end": 21436,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 21400,
											"end": 21436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 21400,
											"end": 21436,
											"name": "tag",
											"source": 13,
											"value": "392"
										},
										{
											"begin": 21400,
											"end": 21436,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21400,
											"end": 21436,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 21400,
											"end": 21436,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "129"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 21400,
											"end": 21436,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 21400,
											"end": 21436,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "387"
										},
										{
											"begin": 21400,
											"end": 21436,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 21400,
											"end": 21436,
											"name": "tag",
											"source": 13,
											"value": "390"
										},
										{
											"begin": 21400,
											"end": 21436,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21400,
											"end": 21436,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21400,
											"end": 21436,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 21400,
											"end": 21436,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "391"
										},
										{
											"begin": 21400,
											"end": 21436,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 21400,
											"end": 21436,
											"name": "tag",
											"source": 13,
											"value": "384"
										},
										{
											"begin": 21400,
											"end": 21436,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP14",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "RETURNDATACOPY",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 21258,
											"end": 21312,
											"name": "tag",
											"source": 13,
											"value": "379"
										},
										{
											"begin": 21258,
											"end": 21312,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP13",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP13",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "395"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 21258,
											"end": 21312,
											"name": "SWAP10",
											"source": 13
										},
										{
											"begin": 21258,
											"end": 21312,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 21258,
											"end": 21312,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "380"
										},
										{
											"begin": 21258,
											"end": 21312,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "395"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "41"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 21258,
											"end": 21312,
											"name": "tag",
											"source": 13,
											"value": "377"
										},
										{
											"begin": 21258,
											"end": 21312,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP11",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 8173,
											"end": 8220,
											"name": "tag",
											"source": 13,
											"value": "357"
										},
										{
											"begin": 8173,
											"end": 8220,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "C4"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 8204,
											"end": 8220,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 8204,
											"end": 8220,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 8173,
											"end": 8220,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "358"
										},
										{
											"begin": 8173,
											"end": 8220,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8173,
											"end": 8200,
											"name": "tag",
											"source": 13,
											"value": "355"
										},
										{
											"begin": 8173,
											"end": 8200,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "A4"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 8184,
											"end": 8200,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 8184,
											"end": 8200,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 8173,
											"end": 8200,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "356"
										},
										{
											"begin": 8173,
											"end": 8200,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8040,
											"end": 8096,
											"name": "tag",
											"source": 13,
											"value": "353"
										},
										{
											"begin": 8040,
											"end": 8096,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1E9ACF17"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8075,
											"end": 8096,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8075,
											"end": 8096,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8075,
											"end": 8096,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 8000,
											"end": 8030,
											"name": "tag",
											"source": 13,
											"value": "351"
										},
										{
											"begin": 8000,
											"end": 8030,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8000,
											"end": 8030,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 8000,
											"end": 8030,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 8000,
											"end": 8030,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8000,
											"end": 8030,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 8000,
											"end": 8030,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 8000,
											"end": 8030,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 8000,
											"end": 8030,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8000,
											"end": 8030,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 8000,
											"end": 8030,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 8000,
											"end": 8030,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 8000,
											"end": 8030,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "397"
										},
										{
											"begin": 8000,
											"end": 8030,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 8000,
											"end": 8030,
											"name": "tag",
											"source": 13,
											"value": "398"
										},
										{
											"begin": 8000,
											"end": 8030,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8000,
											"end": 8030,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "399"
										},
										{
											"begin": 8000,
											"end": 8030,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8000,
											"end": 8030,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 8000,
											"end": 8030,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 8000,
											"end": 8030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8000,
											"end": 8030,
											"name": "tag",
											"source": 13,
											"value": "399"
										},
										{
											"begin": 8000,
											"end": 8030,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8000,
											"end": 8030,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8000,
											"end": 8030,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "400"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 8000,
											"end": 8030,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8000,
											"end": 8030,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "352"
										},
										{
											"begin": 8000,
											"end": 8030,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "400"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP12",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 8000,
											"end": 8030,
											"name": "tag",
											"source": 13,
											"value": "397"
										},
										{
											"begin": 8000,
											"end": 8030,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8000,
											"end": 8030,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8000,
											"end": 8030,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 8000,
											"end": 8030,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "398"
										},
										{
											"begin": 8000,
											"end": 8030,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8000,
											"end": 8030,
											"name": "tag",
											"source": 13,
											"value": "349"
										},
										{
											"begin": 8000,
											"end": 8030,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP15",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "RETURNDATACOPY",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 7793,
											"end": 7843,
											"name": "tag",
											"source": 13,
											"value": "347"
										},
										{
											"begin": 7793,
											"end": 7843,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1924FCEB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7824,
											"end": 7843,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7824,
											"end": 7843,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7824,
											"end": 7843,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 7696,
											"end": 7736,
											"name": "tag",
											"source": 13,
											"value": "344"
										},
										{
											"begin": 7696,
											"end": 7736,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "162908E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7721,
											"end": 7736,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7721,
											"end": 7736,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7721,
											"end": 7736,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 7632,
											"end": 7686,
											"name": "tag",
											"source": 13,
											"value": "342"
										},
										{
											"begin": 7632,
											"end": 7686,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5F0BE7AF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7671,
											"end": 7686,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7671,
											"end": 7686,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7671,
											"end": 7686,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "338"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP12",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "21"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP12",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "324"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "75"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "105"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "404"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 680,
											"end": 21575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "404"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "405"
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2484,
											"end": 2488,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "tag",
											"source": 0,
											"value": "405"
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1204,
											"end": 1276,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "406"
										},
										{
											"begin": 1204,
											"end": 1276,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 1204,
											"end": 1276,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1204,
											"end": 1276,
											"name": "tag",
											"source": 5,
											"value": "406"
										},
										{
											"begin": 1204,
											"end": 1276,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 4362,
											"end": 4384,
											"name": "PUSH",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "407"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 680,
											"end": 21575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "407"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 4362,
											"end": 4384,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "C8"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4361,
											"end": 4384,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4357,
											"end": 4407,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "135"
										},
										{
											"begin": 4357,
											"end": 4407,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "410"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 680,
											"end": 21575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "410"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 4221,
											"end": 4244,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4221,
											"end": 4256,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4221,
											"end": 4256,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4221,
											"end": 4256,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4217,
											"end": 4280,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "138"
										},
										{
											"begin": 4217,
											"end": 4280,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 4362,
											"end": 4384,
											"name": "PUSH",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "413"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 680,
											"end": 21575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "413"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 4510,
											"end": 4532,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "C0"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4362,
											"end": 4384,
											"name": "PUSH",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "414"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4506,
											"end": 4571,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "143"
										},
										{
											"begin": 4506,
											"end": 4571,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "418"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 680,
											"end": 21575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "418"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 9200,
											"end": 9213,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9200,
											"end": 9213,
											"name": "PUSH",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 9200,
											"end": 9213,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 9200,
											"end": 9213,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "A0"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 9200,
											"end": 9218,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 9196,
											"end": 9242,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "419"
										},
										{
											"begin": 9196,
											"end": 9242,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4362,
											"end": 4384,
											"name": "PUSH",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 9253,
											"end": 9264,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 9253,
											"end": 9264,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9253,
											"end": 9264,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 9253,
											"end": 9264,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "AND",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 9304,
											"end": 9342,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "421"
										},
										{
											"begin": 9304,
											"end": 9342,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9304,
											"end": 9342,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 9304,
											"end": 9342,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9304,
											"end": 9342,
											"name": "tag",
											"source": 13,
											"value": "421"
										},
										{
											"begin": 9304,
											"end": 9342,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9304,
											"end": 9342,
											"name": "PUSH",
											"source": 13,
											"value": "CAEC7345D2EB04A42197AC2A2CD7CD74A00B2991B69BB53E23465D4092FDFB"
										},
										{
											"begin": 9304,
											"end": 9342,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 9304,
											"end": 9342,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 9304,
											"end": 9342,
											"name": "LOG3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 9196,
											"end": 9242,
											"name": "tag",
											"source": 13,
											"value": "419"
										},
										{
											"begin": 9196,
											"end": 9242,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "47510BBD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9227,
											"end": 9242,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9227,
											"end": 9242,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9227,
											"end": 9242,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "414"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "21"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "73"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "105"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "105"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "426"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 680,
											"end": 21575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "426"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "427"
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2484,
											"end": 2488,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "tag",
											"source": 0,
											"value": "427"
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 20675,
											"end": 20685,
											"name": "PUSHIMMUTABLE",
											"source": 13,
											"value": "1358"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 20657,
											"end": 20686,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 20657,
											"end": 20686,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 20653,
											"end": 20715,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "428"
										},
										{
											"begin": 20653,
											"end": 20715,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 20729,
											"end": 20741,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 20729,
											"end": 20741,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 20725,
											"end": 20765,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "344"
										},
										{
											"begin": 20725,
											"end": 20765,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 20815,
											"end": 20822,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "107"
										},
										{
											"begin": 20803,
											"end": 20813,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 20803,
											"end": 20813,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 20815,
											"end": 20822,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 20815,
											"end": 20822,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "28"
										},
										{
											"begin": 20815,
											"end": 20822,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20653,
											"end": 20715,
											"name": "tag",
											"source": 13,
											"value": "428"
										},
										{
											"begin": 20653,
											"end": 20715,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "18BA2FC1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 20695,
											"end": 20715,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 20695,
											"end": 20715,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 20695,
											"end": 20715,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "71"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "105"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "105"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "437"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "437"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2930,
											"end": 2936,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "69"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "105"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "105"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "442"
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2484,
											"end": 2488,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "tag",
											"source": 0,
											"value": "442"
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1204,
											"end": 1276,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "443"
										},
										{
											"begin": 1204,
											"end": 1276,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 1204,
											"end": 1276,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1204,
											"end": 1276,
											"name": "tag",
											"source": 5,
											"value": "443"
										},
										{
											"begin": 1204,
											"end": 1276,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2255,
											"end": 2259,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 2255,
											"end": 2259,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 2274,
											"end": 2294,
											"name": "PUSH",
											"source": 5,
											"value": "62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2274,
											"end": 2294,
											"name": "LOG1",
											"source": 5
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "67"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "105"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "105"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "190"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "450"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "175"
										},
										{
											"begin": 19350,
											"end": 19361,
											"name": "PUSH",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 680,
											"end": 21575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "450"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 19350,
											"end": 19361,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "C8"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 19350,
											"end": 19421,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 19350,
											"end": 19421,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 19350,
											"end": 19421,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "452"
										},
										{
											"begin": 19350,
											"end": 19421,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "453"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 19350,
											"end": 19475,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 19350,
											"end": 19475,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19350,
											"end": 19475,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 19350,
											"end": 19475,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "454"
										},
										{
											"begin": 19350,
											"end": 19475,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "455"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 19350,
											"end": 19475,
											"name": "tag",
											"source": 13,
											"value": "454"
										},
										{
											"begin": 19350,
											"end": 19475,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1861,
											"end": 1869,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 19437,
											"end": 19452,
											"name": "TIMESTAMP",
											"source": 13
										},
										{
											"begin": 19437,
											"end": 19475,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 19437,
											"end": 19475,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 19437,
											"end": 19475,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 19350,
											"end": 19475,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 19350,
											"end": 19475,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 19350,
											"end": 19475,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "455"
										},
										{
											"begin": 19350,
											"end": 19475,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19350,
											"end": 19421,
											"name": "tag",
											"source": 13,
											"value": "452"
										},
										{
											"begin": 19350,
											"end": 19421,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "C0"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 19350,
											"end": 19361,
											"name": "PUSH",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "294"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 19377,
											"end": 19421,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19392,
											"end": 19421,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 19377,
											"end": 19421,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 19377,
											"end": 19421,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 19350,
											"end": 19421,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 19350,
											"end": 19421,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "453"
										},
										{
											"begin": 19350,
											"end": 19421,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "65"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "105"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "105"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "63"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "105"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "464"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "7"
										},
										{
											"begin": 680,
											"end": 21575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "464"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "465"
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2484,
											"end": 2488,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "tag",
											"source": 0,
											"value": "465"
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1204,
											"end": 1276,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "466"
										},
										{
											"begin": 1204,
											"end": 1276,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 1204,
											"end": 1276,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1204,
											"end": 1276,
											"name": "tag",
											"source": 5,
											"value": "466"
										},
										{
											"begin": 1204,
											"end": 1276,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 4362,
											"end": 4384,
											"name": "PUSH",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "467"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 680,
											"end": 21575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "467"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 4362,
											"end": 4384,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "C8"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4361,
											"end": 4384,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4357,
											"end": 4407,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "135"
										},
										{
											"begin": 4357,
											"end": 4407,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "470"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 680,
											"end": 21575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "470"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 4221,
											"end": 4244,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4221,
											"end": 4256,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 4221,
											"end": 4256,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4221,
											"end": 4256,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4217,
											"end": 4280,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "138"
										},
										{
											"begin": 4217,
											"end": 4280,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 4362,
											"end": 4384,
											"name": "PUSH",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "473"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 680,
											"end": 21575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "473"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 4510,
											"end": 4532,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "C0"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4362,
											"end": 4384,
											"name": "PUSH",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "141"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 4510,
											"end": 4543,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4506,
											"end": 4571,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "143"
										},
										{
											"begin": 4506,
											"end": 4571,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "478"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 680,
											"end": 21575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "478"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9833,
											"end": 9846,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9833,
											"end": 9846,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9833,
											"end": 9846,
											"name": "PUSH",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 9833,
											"end": 9846,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9833,
											"end": 9846,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 9815,
											"end": 9830,
											"name": "TIMESTAMP",
											"source": 13
										},
										{
											"begin": 9815,
											"end": 9846,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 9811,
											"end": 9881,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "479"
										},
										{
											"begin": 9811,
											"end": 9881,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 9895,
											"end": 9925,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 9891,
											"end": 9954,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "481"
										},
										{
											"begin": 9891,
											"end": 9954,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4362,
											"end": 4384,
											"name": "PUSH",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 9965,
											"end": 9976,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9965,
											"end": 9976,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 1861,
											"end": 1869,
											"name": "PUSH",
											"source": 13,
											"value": "3F480"
										},
										{
											"begin": 9815,
											"end": 9830,
											"name": "TIMESTAMP",
											"source": 13
										},
										{
											"begin": 1861,
											"end": 1869,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9815,
											"end": 9830,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9815,
											"end": 9830,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9815,
											"end": 9830,
											"name": "TIMESTAMP",
											"source": 13
										},
										{
											"begin": 1861,
											"end": 1869,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 1861,
											"end": 1869,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "483"
										},
										{
											"begin": 1861,
											"end": 1869,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF0000000000000000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1861,
											"end": 1869,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 9815,
											"end": 9830,
											"name": "TIMESTAMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1861,
											"end": 1869,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1861,
											"end": 1869,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1861,
											"end": 1869,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1861,
											"end": 1869,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1861,
											"end": 1869,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 1861,
											"end": 1869,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF0000000000000000"
										},
										{
											"begin": 1861,
											"end": 1869,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1861,
											"end": 1869,
											"name": "OR",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1861,
											"end": 1869,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 1861,
											"end": 1869,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1861,
											"end": 1869,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 10186,
											"end": 10320,
											"name": "PUSH",
											"source": 13,
											"value": "934109F661B65DBCCFFCAE4F7EE04261EB7B36E5136E1CA86DDE1B00598CB031"
										},
										{
											"begin": 10186,
											"end": 10320,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 1861,
											"end": 1869,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "487"
										},
										{
											"begin": 1861,
											"end": 1869,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 10186,
											"end": 10320,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "486"
										},
										{
											"begin": 10186,
											"end": 10320,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "485"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 10141,
											"end": 10156,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "18"
										},
										{
											"begin": 680,
											"end": 21575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "485"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1861,
											"end": 1869,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1861,
											"end": 1869,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 10186,
											"end": 10320,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 10186,
											"end": 10320,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 10186,
											"end": 10320,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10186,
											"end": 10320,
											"name": "tag",
											"source": 13,
											"value": "486"
										},
										{
											"begin": 10186,
											"end": 10320,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1861,
											"end": 1869,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 1861,
											"end": 1869,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1861,
											"end": 1869,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1861,
											"end": 1869,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 1861,
											"end": 1869,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1861,
											"end": 1869,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 1861,
											"end": 1869,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1861,
											"end": 1869,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1861,
											"end": 1869,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "9"
										},
										{
											"begin": 1861,
											"end": 1869,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1861,
											"end": 1869,
											"name": "tag",
											"source": 13,
											"value": "487"
										},
										{
											"begin": 1861,
											"end": 1869,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1861,
											"end": 1869,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1861,
											"end": 1869,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1861,
											"end": 1869,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10186,
											"end": 10320,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 10186,
											"end": 10320,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10186,
											"end": 10320,
											"name": "LOG3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 1861,
											"end": 1869,
											"name": "tag",
											"source": 13,
											"value": "483"
										},
										{
											"begin": 1861,
											"end": 1869,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1861,
											"end": 1869,
											"name": "DUP11",
											"source": 13
										},
										{
											"begin": 1861,
											"end": 1869,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1861,
											"end": 1869,
											"name": "PUSH",
											"source": 13,
											"value": "11"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 1861,
											"end": 1869,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1861,
											"end": 1869,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP11",
											"source": 13
										},
										{
											"begin": 1861,
											"end": 1869,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 9891,
											"end": 9954,
											"name": "tag",
											"source": 13,
											"value": "481"
										},
										{
											"begin": 9891,
											"end": 9954,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "361178C7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9934,
											"end": 9954,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9934,
											"end": 9954,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9934,
											"end": 9954,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 9811,
											"end": 9881,
											"name": "tag",
											"source": 13,
											"value": "479"
										},
										{
											"begin": 9811,
											"end": 9881,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "764B8E33"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9855,
											"end": 9881,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9855,
											"end": 9881,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9855,
											"end": 9881,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "61"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "105"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "105"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 1810,
											"end": 1815,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "59"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "105"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "105"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "496"
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2484,
											"end": 2488,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "tag",
											"source": 0,
											"value": "496"
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "497"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 2521,
											"end": 2543,
											"name": "PUSH",
											"source": 5,
											"value": "5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2521,
											"end": 2543,
											"name": "LOG1",
											"source": 5
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "497"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "14"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "14185D5CD8589B194E881B9BDD081C185D5CD959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "62"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "57"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "105"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "105"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "190"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "505"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 680,
											"end": 21575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "505"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "506"
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 2227,
											"end": 2330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "tag",
											"source": 6,
											"value": "506"
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "507"
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2484,
											"end": 2488,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "tag",
											"source": 0,
											"value": "507"
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1204,
											"end": 1276,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "508"
										},
										{
											"begin": 1204,
											"end": 1276,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 1204,
											"end": 1276,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1204,
											"end": 1276,
											"name": "tag",
											"source": 5,
											"value": "508"
										},
										{
											"begin": 1204,
											"end": 1276,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 4362,
											"end": 4384,
											"name": "PUSH",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "509"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 680,
											"end": 21575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "509"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 4362,
											"end": 4384,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "C8"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4361,
											"end": 4384,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4357,
											"end": 4407,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "135"
										},
										{
											"begin": 4357,
											"end": 4407,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 4362,
											"end": 4384,
											"name": "PUSH",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "512"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 680,
											"end": 21575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "512"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 4510,
											"end": 4532,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "C0"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4362,
											"end": 4384,
											"name": "PUSH",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "414"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 11714,
											"end": 11743,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 4510,
											"end": 4543,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4506,
											"end": 4571,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "143"
										},
										{
											"begin": 4506,
											"end": 4571,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "517"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 680,
											"end": 21575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "517"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 4362,
											"end": 4384,
											"name": "PUSH",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 11826,
											"end": 11845,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11826,
											"end": 11845,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1861,
											"end": 1869,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1861,
											"end": 1869,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 1861,
											"end": 1869,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1861,
											"end": 1869,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1861,
											"end": 1869,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 11808,
											"end": 11823,
											"name": "TIMESTAMP",
											"source": 13
										},
										{
											"begin": 11808,
											"end": 11845,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 11804,
											"end": 11888,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "518"
										},
										{
											"begin": 11804,
											"end": 11888,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 12386,
											"end": 12452,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "153"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "A8EDA418A66B2F5395D4A15B2F03DE75B34FFF39BB2E2A8B57F6BE974D56E7B0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11971,
											"end": 11982,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 11971,
											"end": 11982,
											"name": "PUSH",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 11971,
											"end": 11982,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 11971,
											"end": 11982,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 12052,
											"end": 12077,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "521"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "2710"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 11971,
											"end": 12000,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "522"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 11971,
											"end": 12000,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 11971,
											"end": 12000,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "25"
										},
										{
											"begin": 11971,
											"end": 12000,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11971,
											"end": 12000,
											"name": "tag",
											"source": 13,
											"value": "522"
										},
										{
											"begin": 11971,
											"end": 12000,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1810,
											"end": 1815,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 12052,
											"end": 12077,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 12052,
											"end": 12077,
											"name": "SWAP7",
											"source": 13
										},
										{
											"begin": 12052,
											"end": 12077,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "26"
										},
										{
											"begin": 12052,
											"end": 12077,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12052,
											"end": 12077,
											"name": "tag",
											"source": 13,
											"value": "521"
										},
										{
											"begin": 12052,
											"end": 12077,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP8",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "AND",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 12152,
											"end": 12162,
											"name": "PUSHIMMUTABLE",
											"source": 13,
											"value": "1358"
										},
										{
											"begin": 12152,
											"end": 12162,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 12172,
											"end": 12268,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "523"
										},
										{
											"begin": 12172,
											"end": 12268,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "524"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 12282,
											"end": 12298,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 12278,
											"end": 12371,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "525"
										},
										{
											"begin": 12278,
											"end": 12371,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "526"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 12411,
											"end": 12423,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 12386,
											"end": 12452,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 12386,
											"end": 12452,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12278,
											"end": 12371,
											"name": "tag",
											"source": 13,
											"value": "525"
										},
										{
											"begin": 12278,
											"end": 12371,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12314,
											"end": 12360,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "528"
										},
										{
											"begin": 1810,
											"end": 1815,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 1810,
											"end": 1815,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 12314,
											"end": 12360,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12314,
											"end": 12360,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "28"
										},
										{
											"begin": 12314,
											"end": 12360,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12314,
											"end": 12360,
											"name": "tag",
											"source": 13,
											"value": "528"
										},
										{
											"begin": 12314,
											"end": 12360,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12278,
											"end": 12371,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12278,
											"end": 12371,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 12278,
											"end": 12371,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "526"
										},
										{
											"begin": 12278,
											"end": 12371,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12172,
											"end": 12268,
											"name": "tag",
											"source": 13,
											"value": "523"
										},
										{
											"begin": 12172,
											"end": 12268,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 12229,
											"end": 12241,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 12229,
											"end": 12241,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 12210,
											"end": 12257,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "529"
										},
										{
											"begin": 12210,
											"end": 12257,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 12210,
											"end": 12257,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 12210,
											"end": 12257,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "28"
										},
										{
											"begin": 12210,
											"end": 12257,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12210,
											"end": 12257,
											"name": "tag",
											"source": 13,
											"value": "529"
										},
										{
											"begin": 12210,
											"end": 12257,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12172,
											"end": 12268,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12172,
											"end": 12268,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "524"
										},
										{
											"begin": 12172,
											"end": 12268,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11804,
											"end": 11888,
											"name": "tag",
											"source": 13,
											"value": "518"
										},
										{
											"begin": 11804,
											"end": 11888,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2D6BF645"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11866,
											"end": 11888,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11866,
											"end": 11888,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11866,
											"end": 11888,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "55"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "105"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "105"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "534"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "534"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 5397,
											"end": 5431,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5393,
											"end": 5495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "535"
										},
										{
											"begin": 5393,
											"end": 5495,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5505,
											"end": 5542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 5505,
											"end": 5542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 5505,
											"end": 5542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5393,
											"end": 5495,
											"name": "tag",
											"source": 0,
											"value": "535"
										},
										{
											"begin": 5393,
											"end": 5495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "334BD919"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "53"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "105"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "105"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "112"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2499,
											"end": 2500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "545"
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2484,
											"end": 2488,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "tag",
											"source": 0,
											"value": "545"
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2499,
											"end": 2500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 2499,
											"end": 2500,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "51"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "105"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "105"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4306,
											"end": 4331,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "551"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "551"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3877,
											"end": 3883,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "552"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 3877,
											"end": 3899,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 2484,
											"end": 2488,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "tag",
											"source": 0,
											"value": "552"
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4306,
											"end": 4331,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 4306,
											"end": 4331,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "49"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "105"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "555"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 680,
											"end": 21575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "555"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "556"
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 2227,
											"end": 2330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "tag",
											"source": 6,
											"value": "556"
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "557"
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2484,
											"end": 2488,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "tag",
											"source": 0,
											"value": "557"
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1204,
											"end": 1276,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "558"
										},
										{
											"begin": 1204,
											"end": 1276,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 1204,
											"end": 1276,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1204,
											"end": 1276,
											"name": "tag",
											"source": 5,
											"value": "558"
										},
										{
											"begin": 1204,
											"end": 1276,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 4362,
											"end": 4384,
											"name": "PUSH",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "559"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 680,
											"end": 21575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "559"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 4362,
											"end": 4384,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "C8"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4361,
											"end": 4384,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4357,
											"end": 4407,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "135"
										},
										{
											"begin": 4357,
											"end": 4407,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "562"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 680,
											"end": 21575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "562"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "A0"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4062,
											"end": 4093,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4062,
											"end": 4093,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 4062,
											"end": 4093,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4058,
											"end": 4117,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "138"
										},
										{
											"begin": 4058,
											"end": 4117,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 4362,
											"end": 4384,
											"name": "PUSH",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "565"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP11",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 680,
											"end": 21575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "565"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 4510,
											"end": 4532,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "C0"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4362,
											"end": 4384,
											"name": "PUSH",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "244"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 10696,
											"end": 10725,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 4510,
											"end": 4543,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4506,
											"end": 4571,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "143"
										},
										{
											"begin": 4506,
											"end": 4571,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 11354,
											"end": 11420,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "153"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "571"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "A8EDA418A66B2F5395D4A15B2F03DE75B34FFF39BB2E2A8B57F6BE974D56E7B0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP11",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 680,
											"end": 21575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "571"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10887,
											"end": 10898,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 10887,
											"end": 10898,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 10887,
											"end": 10898,
											"name": "PUSH",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 10887,
											"end": 10898,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10887,
											"end": 10898,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 10968,
											"end": 10993,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "572"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "2710"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10887,
											"end": 10916,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "573"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10901,
											"end": 10916,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 10887,
											"end": 10916,
											"name": "DUP11",
											"source": 13
										},
										{
											"begin": 10887,
											"end": 10916,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "25"
										},
										{
											"begin": 10887,
											"end": 10916,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10887,
											"end": 10916,
											"name": "tag",
											"source": 13,
											"value": "573"
										},
										{
											"begin": 10887,
											"end": 10916,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1810,
											"end": 1815,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 10968,
											"end": 10993,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 10968,
											"end": 10993,
											"name": "SWAP8",
											"source": 13
										},
										{
											"begin": 10968,
											"end": 10993,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "26"
										},
										{
											"begin": 10968,
											"end": 10993,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10968,
											"end": 10993,
											"name": "tag",
											"source": 13,
											"value": "572"
										},
										{
											"begin": 10968,
											"end": 10993,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4362,
											"end": 4384,
											"name": "PUSH",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 11004,
											"end": 11015,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 11004,
											"end": 11015,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "C2"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 11004,
											"end": 11015,
											"name": "SWAP8",
											"source": 13
										},
										{
											"begin": 11058,
											"end": 11094,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "574"
										},
										{
											"begin": 11058,
											"end": 11094,
											"name": "DUP11",
											"source": 13
										},
										{
											"begin": 11058,
											"end": 11094,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 11058,
											"end": 11094,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11058,
											"end": 11094,
											"name": "tag",
											"source": 13,
											"value": "574"
										},
										{
											"begin": 11058,
											"end": 11094,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11058,
											"end": 11094,
											"name": "PUSH",
											"source": 13,
											"value": "CAEC7345D2EB04A42197AC2A2CD7CD74A00B2991B69BB53E23465D4092FDFB"
										},
										{
											"begin": 11058,
											"end": 11094,
											"name": "DUP13",
											"source": 13
										},
										{
											"begin": 11058,
											"end": 11094,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 11058,
											"end": 11094,
											"name": "LOG3",
											"source": 13
										},
										{
											"begin": 11120,
											"end": 11130,
											"name": "PUSHIMMUTABLE",
											"source": 13,
											"value": "1358"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 11144,
											"end": 11162,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 11140,
											"end": 11236,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "575"
										},
										{
											"begin": 11140,
											"end": 11236,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "576"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 11250,
											"end": 11266,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 11246,
											"end": 11339,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "577"
										},
										{
											"begin": 11246,
											"end": 11339,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "578"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11379,
											"end": 11391,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11379,
											"end": 11391,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11379,
											"end": 11391,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 11354,
											"end": 11420,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 11354,
											"end": 11420,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 11354,
											"end": 11420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11246,
											"end": 11339,
											"name": "tag",
											"source": 13,
											"value": "577"
										},
										{
											"begin": 11246,
											"end": 11339,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11282,
											"end": 11328,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "580"
										},
										{
											"begin": 1810,
											"end": 1815,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 10901,
											"end": 10916,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 1810,
											"end": 1815,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 11282,
											"end": 11328,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11282,
											"end": 11328,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "28"
										},
										{
											"begin": 11282,
											"end": 11328,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11282,
											"end": 11328,
											"name": "tag",
											"source": 13,
											"value": "580"
										},
										{
											"begin": 11282,
											"end": 11328,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11246,
											"end": 11339,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11246,
											"end": 11339,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 11246,
											"end": 11339,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "578"
										},
										{
											"begin": 11246,
											"end": 11339,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11140,
											"end": 11236,
											"name": "tag",
											"source": 13,
											"value": "575"
										},
										{
											"begin": 11140,
											"end": 11236,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11178,
											"end": 11225,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "581"
										},
										{
											"begin": 11197,
											"end": 11209,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11197,
											"end": 11209,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 11197,
											"end": 11209,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 11197,
											"end": 11209,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 11197,
											"end": 11209,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 11178,
											"end": 11225,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 11178,
											"end": 11225,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "28"
										},
										{
											"begin": 11178,
											"end": 11225,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11178,
											"end": 11225,
											"name": "tag",
											"source": 13,
											"value": "581"
										},
										{
											"begin": 11178,
											"end": 11225,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11140,
											"end": 11236,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11140,
											"end": 11236,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "576"
										},
										{
											"begin": 11140,
											"end": 11236,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "47"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "105"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "105"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3877,
											"end": 3883,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 3877,
											"end": 3899,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "45"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "105"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "105"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "43"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "105"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "105"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "112"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "596"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 680,
											"end": 21575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "596"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "597"
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 2227,
											"end": 2330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "tag",
											"source": 6,
											"value": "597"
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "598"
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2484,
											"end": 2488,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "tag",
											"source": 0,
											"value": "598"
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 4362,
											"end": 4384,
											"name": "PUSH",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "599"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 680,
											"end": 21575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "599"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 4362,
											"end": 4384,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "C8"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4361,
											"end": 4384,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4357,
											"end": 4407,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "135"
										},
										{
											"begin": 4357,
											"end": 4407,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "602"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 680,
											"end": 21575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "602"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 16616,
											"end": 16627,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4362,
											"end": 4384,
											"name": "PUSH",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 16616,
											"end": 16627,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16616,
											"end": 16627,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "C0"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4362,
											"end": 4384,
											"name": "PUSH",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "244"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 16631,
											"end": 16652,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 16616,
											"end": 16652,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 16616,
											"end": 16652,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 16612,
											"end": 16790,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "605"
										},
										{
											"begin": 16612,
											"end": 16790,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "606"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16822,
											"end": 16833,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17004,
											"end": 17052,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "607"
										},
										{
											"begin": 16822,
											"end": 16833,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16822,
											"end": 16833,
											"name": "PUSH",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 16822,
											"end": 16833,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 16822,
											"end": 16833,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "C0"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "C0"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 16896,
											"end": 16913,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 16896,
											"end": 16913,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 16892,
											"end": 16989,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "608"
										},
										{
											"begin": 16892,
											"end": 16989,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 17004,
											"end": 17052,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17004,
											"end": 17052,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17004,
											"end": 17052,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 17004,
											"end": 17052,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17004,
											"end": 17052,
											"name": "tag",
											"source": 13,
											"value": "607"
										},
										{
											"begin": 17004,
											"end": 17052,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 17004,
											"end": 17052,
											"name": "PUSH",
											"source": 13,
											"value": "B559D285C87E4FA0F561388264310703FF0C6C454A39AE52D0AE94032FF0DB70"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 17027,
											"end": 17037,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 17004,
											"end": 17052,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 17004,
											"end": 17052,
											"name": "LOG3",
											"source": 13
										},
										{
											"begin": 16631,
											"end": 16652,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 16892,
											"end": 16989,
											"name": "tag",
											"source": 13,
											"value": "608"
										},
										{
											"begin": 16892,
											"end": 16989,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 16929,
											"end": 16978,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "610"
										},
										{
											"begin": 16929,
											"end": 16978,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 16929,
											"end": 16939,
											"name": "PUSHIMMUTABLE",
											"source": 13,
											"value": "1358"
										},
										{
											"begin": 16929,
											"end": 16978,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "28"
										},
										{
											"begin": 16929,
											"end": 16978,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16929,
											"end": 16978,
											"name": "tag",
											"source": 13,
											"value": "610"
										},
										{
											"begin": 16929,
											"end": 16978,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16892,
											"end": 16989,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 16892,
											"end": 16989,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 16892,
											"end": 16989,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "253"
										},
										{
											"begin": 16892,
											"end": 16989,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16612,
											"end": 16790,
											"name": "tag",
											"source": 13,
											"value": "605"
										},
										{
											"begin": 16612,
											"end": 16790,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16687,
											"end": 16716,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 16672,
											"end": 16716,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 16668,
											"end": 16780,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "611"
										},
										{
											"begin": 16668,
											"end": 16780,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 16612,
											"end": 16790,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 16612,
											"end": 16790,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "606"
										},
										{
											"begin": 16612,
											"end": 16790,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16668,
											"end": 16780,
											"name": "tag",
											"source": 13,
											"value": "611"
										},
										{
											"begin": 16668,
											"end": 16780,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4DF0CAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16743,
											"end": 16765,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 16743,
											"end": 16765,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 16743,
											"end": 16765,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "41"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "105"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "105"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1949,
											"end": 1973,
											"name": "PUSH",
											"source": 13,
											"value": "A8A7BC421F721CB936EA99EFDAD79237E6EE0B871A2A08CF648691F9584CDC77"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "39"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "105"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "619"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "7"
										},
										{
											"begin": 680,
											"end": 21575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "619"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "620"
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2484,
											"end": 2488,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "tag",
											"source": 0,
											"value": "620"
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1204,
											"end": 1276,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "621"
										},
										{
											"begin": 1204,
											"end": 1276,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 1204,
											"end": 1276,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1204,
											"end": 1276,
											"name": "tag",
											"source": 5,
											"value": "621"
										},
										{
											"begin": 1204,
											"end": 1276,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 4362,
											"end": 4384,
											"name": "PUSH",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "622"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 680,
											"end": 21575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "622"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 4362,
											"end": 4384,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "C8"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4361,
											"end": 4384,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4357,
											"end": 4407,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "135"
										},
										{
											"begin": 4357,
											"end": 4407,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "625"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 680,
											"end": 21575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "625"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4062,
											"end": 4093,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 4062,
											"end": 4093,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4062,
											"end": 4093,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4058,
											"end": 4117,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "138"
										},
										{
											"begin": 4058,
											"end": 4117,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 4362,
											"end": 4384,
											"name": "PUSH",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "628"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 680,
											"end": 21575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "628"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 4510,
											"end": 4532,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "C0"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4362,
											"end": 4384,
											"name": "PUSH",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "141"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 12825,
											"end": 12854,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 4510,
											"end": 4543,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4506,
											"end": 4571,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "143"
										},
										{
											"begin": 4506,
											"end": 4571,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "633"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4362,
											"end": 4384,
											"name": "PUSH",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 680,
											"end": 21575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "633"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 12938,
											"end": 12957,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1861,
											"end": 1869,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1861,
											"end": 1869,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1861,
											"end": 1869,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 1861,
											"end": 1869,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1861,
											"end": 1869,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1861,
											"end": 1869,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 12919,
											"end": 12934,
											"name": "TIMESTAMP",
											"source": 13
										},
										{
											"begin": 12919,
											"end": 12957,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 12919,
											"end": 12957,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 12915,
											"end": 12985,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "634"
										},
										{
											"begin": 12915,
											"end": 12985,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 12999,
											"end": 13025,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 12995,
											"end": 13050,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "636"
										},
										{
											"begin": 12995,
											"end": 13050,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "AND",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 13114,
											"end": 13163,
											"name": "PUSH",
											"source": 13,
											"value": "DE7B01BEF0884582CE204F7F920E57F99DD569F93867450872F436BE5A03C755"
										},
										{
											"begin": 13114,
											"end": 13163,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 13114,
											"end": 13163,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "638"
										},
										{
											"begin": 13114,
											"end": 13163,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13114,
											"end": 13163,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 13114,
											"end": 13163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13114,
											"end": 13163,
											"name": "tag",
											"source": 13,
											"value": "638"
										},
										{
											"begin": 13114,
											"end": 13163,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "639"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "9"
										},
										{
											"begin": 680,
											"end": 21575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "639"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13114,
											"end": 13163,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 13114,
											"end": 13163,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13114,
											"end": 13163,
											"name": "LOG3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 12995,
											"end": 13050,
											"name": "tag",
											"source": 13,
											"value": "636"
										},
										{
											"begin": 12995,
											"end": 13050,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "BC7FD331"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13034,
											"end": 13050,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 13034,
											"end": 13050,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13034,
											"end": 13050,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 12915,
											"end": 12985,
											"name": "tag",
											"source": 13,
											"value": "634"
										},
										{
											"begin": 12915,
											"end": 12985,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2D0F572D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12966,
											"end": 12985,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12966,
											"end": 12985,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12966,
											"end": 12985,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "37"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "105"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "642"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 680,
											"end": 21575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "642"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "643"
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2484,
											"end": 2488,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "tag",
											"source": 0,
											"value": "643"
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 4362,
											"end": 4384,
											"name": "PUSH",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "644"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 680,
											"end": 21575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "644"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 4362,
											"end": 4384,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "C8"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4361,
											"end": 4384,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4357,
											"end": 4407,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "135"
										},
										{
											"begin": 4357,
											"end": 4407,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "647"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 680,
											"end": 21575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "647"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4062,
											"end": 4093,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4062,
											"end": 4093,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4062,
											"end": 4093,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4058,
											"end": 4117,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "138"
										},
										{
											"begin": 4058,
											"end": 4117,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 4362,
											"end": 4384,
											"name": "PUSH",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "650"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 680,
											"end": 21575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "650"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 4510,
											"end": 4532,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "C0"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4362,
											"end": 4384,
											"name": "PUSH",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "244"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4506,
											"end": 4571,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "143"
										},
										{
											"begin": 4506,
											"end": 4571,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 16231,
											"end": 16271,
											"name": "PUSH",
											"source": 13,
											"value": "B559D285C87E4FA0F561388264310703FF0C6C454A39AE52D0AE94032FF0DB70"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4362,
											"end": 4384,
											"name": "PUSH",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "655"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 16231,
											"end": 16271,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "656"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 680,
											"end": 21575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "655"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 16166,
											"end": 16188,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "AND",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 16231,
											"end": 16271,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 16231,
											"end": 16271,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16231,
											"end": 16271,
											"name": "tag",
											"source": 13,
											"value": "656"
										},
										{
											"begin": 16231,
											"end": 16271,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 16231,
											"end": 16271,
											"name": "LOG3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "35"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "112"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "112"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFF"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "190"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7965DB0B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2649,
											"end": 2696,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2649,
											"end": 2696,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2649,
											"end": 2696,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2649,
											"end": 2736,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2649,
											"end": 2736,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2649,
											"end": 2736,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "663"
										},
										{
											"begin": 2649,
											"end": 2736,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "664"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 2649,
											"end": 2736,
											"name": "tag",
											"source": 0,
											"value": "663"
										},
										{
											"begin": 2649,
											"end": 2736,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1FFC9A7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 829,
											"end": 869,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 829,
											"end": 869,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2649,
											"end": 2736,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2649,
											"end": 2736,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "664"
										},
										{
											"begin": 2649,
											"end": 2736,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "1A0"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "LT",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "368"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "LT",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "368"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "129"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "368"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "673"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 680,
											"end": 21575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "673"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "129"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "CALLDATACOPY",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "129"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "129"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "129"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "129"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "684"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 680,
											"end": 21575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "684"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "129"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "7"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "129"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "129"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "691"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 680,
											"end": 21575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "691"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "129"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "129"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "696"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 680,
											"end": 21575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "696"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "697"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "698"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "698"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "697"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "9"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "700"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 680,
											"end": 21575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "700"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "10"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "701"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "702"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "702"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "704"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "3F"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP11",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "9"
										},
										{
											"begin": 680,
											"end": 21575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "704"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP9",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "701"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "11"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "705"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "705"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B71"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "21"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3175,
											"end": 3278,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 3175,
											"end": 3278,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "EF73BF2AC44F84561B5498839AB1C8C5A4DD99305D838AEA0D76C5961778535C"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 1949,
											"end": 1973,
											"name": "PUSH",
											"source": 13,
											"value": "A8A7BC421F721CB936EA99EFDAD79237E6EE0B871A2A08CF648691F9584CDC77"
										},
										{
											"begin": 1949,
											"end": 1973,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3495,
											"end": 3518,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3491,
											"end": 3599,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "707"
										},
										{
											"begin": 3491,
											"end": 3599,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3175,
											"end": 3278,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3175,
											"end": 3278,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3491,
											"end": 3599,
											"name": "tag",
											"source": 0,
											"value": "707"
										},
										{
											"begin": 3491,
											"end": 3599,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "PUSH",
											"source": 0,
											"value": "E2517D3F"
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3175,
											"end": 3278,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 3175,
											"end": 3278,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2930,
											"end": 2936,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3495,
											"end": 3518,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3491,
											"end": 3599,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "707"
										},
										{
											"begin": 3491,
											"end": 3599,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3175,
											"end": 3278,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3175,
											"end": 3278,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6155,
											"end": 6471,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 6155,
											"end": 6471,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6155,
											"end": 6471,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2930,
											"end": 2936,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "A0"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 6252,
											"end": 6275,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6248,
											"end": 6465,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "711"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2930,
											"end": 2936,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "PUSH",
											"source": 0,
											"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 6400,
											"end": 6411,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6400,
											"end": 6411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6248,
											"end": 6465,
											"name": "tag",
											"source": 0,
											"value": "711"
										},
										{
											"begin": 6248,
											"end": 6465,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6442,
											"end": 6454,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6442,
											"end": 6454,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6442,
											"end": 6454,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6442,
											"end": 6454,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6708,
											"end": 7025,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 6708,
											"end": 7025,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6708,
											"end": 7025,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2930,
											"end": 2936,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "A0"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 6802,
											"end": 7019,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "711"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2930,
											"end": 2936,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "PUSH",
											"source": 0,
											"value": "F6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 6954,
											"end": 6965,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6954,
											"end": 6965,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "16"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "715"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "716"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "717"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "717"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B71"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "22"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "715"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "7F"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "716"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "17"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "720"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "720"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "17"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "18"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "368"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "724"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "16"
										},
										{
											"begin": 680,
											"end": 21575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "724"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "725"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "726"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "727"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "729"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "730"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "729"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "730"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "727"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "732"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "733"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP7",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP8",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "735"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "736"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "735"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "F8"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "736"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "733"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP7",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP7",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "732"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "725"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "737"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "738"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "739"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "17"
										},
										{
											"begin": 680,
											"end": 21575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "737"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "726"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "738"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "739"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "19"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "10000000000000000"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "368"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "742"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "744"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "18"
										},
										{
											"begin": 680,
											"end": 21575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "744"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "742"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B71"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "32"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "745"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 680,
											"end": 21575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "745"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1767,
											"end": 1873,
											"name": "tag",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 1767,
											"end": 1873,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "746"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1767,
											"end": 1873,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "746"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "10"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "14185D5CD8589B194E881C185D5CD959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "82"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "tag",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 2468,
											"end": 2487,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "748"
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2336,
											"end": 2623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "tag",
											"source": 6,
											"value": "748"
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 6,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 8370,
											"end": 9090,
											"name": "tag",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 8370,
											"end": 9090,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8370,
											"end": 9090,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8370,
											"end": 9090,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "CALL",
											"source": 9
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "750"
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 8942,
											"end": 8957,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "752"
										},
										{
											"begin": 8942,
											"end": 8957,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 8960,
											"end": 8986,
											"name": "EXTCODESIZE",
											"source": 9
										},
										{
											"begin": 8960,
											"end": 8991,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "tag",
											"source": 9,
											"value": "754"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "755"
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8370,
											"end": 9090,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8370,
											"end": 9090,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "tag",
											"source": 9,
											"value": "755"
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5274AFE7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "tag",
											"source": 9,
											"value": "752"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9009,
											"end": 9010,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 8994,
											"end": 9010,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 8994,
											"end": 9010,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "754"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "tag",
											"source": 9,
											"value": "750"
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "25"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "148"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1810,
											"end": 1815,
											"name": "tag",
											"source": 13,
											"value": "26"
										},
										{
											"begin": 1810,
											"end": 1815,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1810,
											"end": 1815,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1810,
											"end": 1815,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1810,
											"end": 1815,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1810,
											"end": 1815,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1810,
											"end": 1815,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 1810,
											"end": 1815,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "148"
										},
										{
											"begin": 1810,
											"end": 1815,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1810,
											"end": 1815,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "tag",
											"source": 9,
											"value": "28"
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "368"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "744"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 1328,
											"end": 1371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "29"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "764"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "16"
										},
										{
											"begin": 680,
											"end": 21575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "764"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "765"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "767"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "768"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "744"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 680,
											"end": 21575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "767"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "POP",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "770"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "771"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "744"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "768"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "771"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "770"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "765"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "744"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "768"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "30"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "368"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "775"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 680,
											"end": 21575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "tag",
											"source": 13,
											"value": "775"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19658,
											"end": 19985,
											"name": "tag",
											"source": 13,
											"value": "31"
										},
										{
											"begin": 19658,
											"end": 19985,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 19776,
											"end": 19780,
											"name": "PUSH",
											"source": 13,
											"value": "3E8"
										},
										{
											"begin": 19763,
											"end": 19780,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 19763,
											"end": 19780,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 19759,
											"end": 19801,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "776"
										},
										{
											"begin": 19759,
											"end": 19801,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 19828,
											"end": 19843,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 19857,
											"end": 19877,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 19857,
											"end": 19877,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 19857,
											"end": 19877,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 19857,
											"end": 19877,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 19853,
											"end": 19886,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "778"
										},
										{
											"begin": 19853,
											"end": 19886,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 19828,
											"end": 19843,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1810,
											"end": 1815,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1810,
											"end": 1815,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1810,
											"end": 1815,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 19940,
											"end": 19978,
											"name": "PUSH",
											"source": 13,
											"value": "FEEDDF72B7EE4210B769104CB8B071E5706232AC7F671FB292AF429FFD58B587"
										},
										{
											"begin": 19940,
											"end": 19978,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1810,
											"end": 1815,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1810,
											"end": 1815,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 19940,
											"end": 19978,
											"name": "tag",
											"source": 13,
											"value": "780"
										},
										{
											"begin": 19940,
											"end": 19978,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19940,
											"end": 19978,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 19940,
											"end": 19978,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 19940,
											"end": 19978,
											"name": "LOG1",
											"source": 13
										},
										{
											"begin": 19658,
											"end": 19985,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19853,
											"end": 19886,
											"name": "tag",
											"source": 13,
											"value": "778"
										},
										{
											"begin": 19853,
											"end": 19886,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19879,
											"end": 19886,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19879,
											"end": 19886,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19879,
											"end": 19886,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19879,
											"end": 19886,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19879,
											"end": 19886,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19759,
											"end": 19801,
											"name": "tag",
											"source": 13,
											"value": "776"
										},
										{
											"begin": 19759,
											"end": 19801,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "CD4E6167"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 19789,
											"end": 19801,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 19789,
											"end": 19801,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 19789,
											"end": 19801,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 19789,
											"end": 19801,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 19789,
											"end": 19801,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 19991,
											"end": 20362,
											"name": "tag",
											"source": 13,
											"value": "32"
										},
										{
											"begin": 19991,
											"end": 20362,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 20101,
											"end": 20128,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 20101,
											"end": 20128,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 20097,
											"end": 20153,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "210"
										},
										{
											"begin": 20097,
											"end": 20153,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 20187,
											"end": 20200,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 1810,
											"end": 1815,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 20214,
											"end": 20243,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 20214,
											"end": 20243,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 20214,
											"end": 20243,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 20210,
											"end": 20252,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "783"
										},
										{
											"begin": 20210,
											"end": 20252,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 20187,
											"end": 20200,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 20307,
											"end": 20355,
											"name": "PUSH",
											"source": 13,
											"value": "AAEBCF1BFA00580E41D966056B48521FA9F202645C86D4DDF28113E617C1B1D3"
										},
										{
											"begin": 20307,
											"end": 20355,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 20307,
											"end": 20355,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "780"
										},
										{
											"begin": 680,
											"end": 21575,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20210,
											"end": 20252,
											"name": "tag",
											"source": 13,
											"value": "783"
										},
										{
											"begin": 20210,
											"end": 20252,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20245,
											"end": 20252,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20245,
											"end": 20252,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20245,
											"end": 20252,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20245,
											"end": 20252,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										}
									],
									".data": {
										"A8EDA418A66B2F5395D4A15B2F03DE75B34FFF39BB2E2A8B57F6BE974D56E7B0": "8531198e5d946af9a770d2eeba00258645e163142d835fe1b04e45f4db720f8b"
									}
								},
								"2B911A32A95F59603F7637B420E0D131A993F16F7410883B87320ADD8A183555": "a8a7bc421f721cb936ea99efdad79237e6ee0b871a2a08cf648691f9584cdc77"
							},
							"sourceList": [
								"@openzeppelin/contracts/access/AccessControl.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/security/Pausable.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/EtharisEscrow.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"SERVER_ROLE()": "18cf2834",
							"acceptDeal(string,address)": "9b1221ab",
							"approveDeal(string,address)": "24d956c8",
							"autoRefundAfterDeadline(string)": "e39fff38",
							"autoReleasePayment(string)": "38a13287",
							"brandDeals(address)": "f0c3cd20",
							"canAutoRelease(string)": "76492d3f",
							"cancelDeal(string,address)": "03f715da",
							"createDeal(string,address,address,uint96,uint64,string)": "e4abd4cb",
							"creatorDeals(address)": "aed1505d",
							"deals(string)": "a0a57dac",
							"emergencyCancelDeal(string)": "1a1aaeed",
							"emergencyWithdraw(address,uint256)": "95ccea67",
							"feeRecipient()": "46904840",
							"fundDeal(string,address,uint96,uint256,uint8,bytes32,bytes32)": "9f1cf42d",
							"getDeal(string)": "e7079180",
							"getDeals(address,bool)": "9fad59b4",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"idrxToken()": "d6bc7c63",
							"initiateDispute(string,address,string)": "0e59a395",
							"pause()": "8456cb59",
							"paused()": "5c975abb",
							"platformFeeBps()": "22dcd13e",
							"renounceRole(bytes32,address)": "36568abe",
							"resolveDispute(string,address,bool)": "ef03c10e",
							"revokeRole(bytes32,address)": "d547741f",
							"submitContent(string,address,string)": "4971716f",
							"supportsInterface(bytes4)": "01ffc9a7",
							"unpause()": "3f4ba83a",
							"updateFeeRecipient(address)": "f160d369",
							"updatePlatformFee(uint96)": "317b8c5b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"idrxToken_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"feeRecipient_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"initialOwner_\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AmountMustBeGreaterThanZero\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BriefHashRequired\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CannotCancelThisDeal\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CannotWithdrawIDRX\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ContentUrlRequired\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CreatorCannotBeBrand\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DeadlineMustBeInFuture\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DeadlineNotPassed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DealAlreadyExists\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DealAlreadyFunded\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DealNotFound\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DealNotFunded\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FeeTooHigh\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidDealID\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidDealStatus\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotAuthorized\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PermitFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReasonRequired\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReviewPeriodEnded\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReviewPeriodNotEnded\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SubmissionDeadlinePassed\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"string\",\"name\":\"dealId\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"contentUrl\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"reviewDeadline\",\"type\":\"uint64\"}],\"name\":\"ContentSubmitted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"string\",\"name\":\"dealId\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"brand\",\"type\":\"address\"}],\"name\":\"DealApproved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"string\",\"name\":\"dealId\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"initiator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint96\",\"name\":\"refundAmount\",\"type\":\"uint96\"}],\"name\":\"DealCancelled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"string\",\"name\":\"dealId\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"brand\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint96\",\"name\":\"amount\",\"type\":\"uint96\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"deadline\",\"type\":\"uint64\"}],\"name\":\"DealCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"string\",\"name\":\"dealId\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"brand\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint96\",\"name\":\"amount\",\"type\":\"uint96\"}],\"name\":\"DealFunded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"string\",\"name\":\"dealId\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"brand\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"DisputeInitiated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"string\",\"name\":\"dealId\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"accepted5050\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint96\",\"name\":\"creatorAmount\",\"type\":\"uint96\"},{\"indexed\":false,\"internalType\":\"uint96\",\"name\":\"brandRefund\",\"type\":\"uint96\"}],\"name\":\"DisputeResolved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldRecipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newRecipient\",\"type\":\"address\"}],\"name\":\"FeeRecipientUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"string\",\"name\":\"dealId\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint96\",\"name\":\"amount\",\"type\":\"uint96\"},{\"indexed\":false,\"internalType\":\"uint96\",\"name\":\"platformFee\",\"type\":\"uint96\"}],\"name\":\"PaymentReleased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint96\",\"name\":\"oldFee\",\"type\":\"uint96\"},{\"indexed\":false,\"internalType\":\"uint96\",\"name\":\"newFee\",\"type\":\"uint96\"}],\"name\":\"PlatformFeeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SERVER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_dealId\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_creatorAddress\",\"type\":\"address\"}],\"name\":\"acceptDeal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_dealId\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_brandAddress\",\"type\":\"address\"}],\"name\":\"approveDeal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_dealId\",\"type\":\"string\"}],\"name\":\"autoRefundAfterDeadline\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_dealId\",\"type\":\"string\"}],\"name\":\"autoReleasePayment\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_brand\",\"type\":\"address\"}],\"name\":\"brandDeals\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_dealId\",\"type\":\"string\"}],\"name\":\"canAutoRelease\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_dealId\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_brandAddress\",\"type\":\"address\"}],\"name\":\"cancelDeal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_dealId\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_brandAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_creatorAddress\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"_amount\",\"type\":\"uint96\"},{\"internalType\":\"uint64\",\"name\":\"_deadline\",\"type\":\"uint64\"},{\"internalType\":\"string\",\"name\":\"_briefHash\",\"type\":\"string\"}],\"name\":\"createDeal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_creator\",\"type\":\"address\"}],\"name\":\"creatorDeals\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_dealId\",\"type\":\"string\"}],\"name\":\"deals\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"brand\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"dealId\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"briefHash\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"contentUrl\",\"type\":\"string\"},{\"internalType\":\"uint96\",\"name\":\"amount\",\"type\":\"uint96\"},{\"internalType\":\"uint64\",\"name\":\"deadline\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"fundedAt\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"submittedAt\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"reviewDeadline\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"createdAt\",\"type\":\"uint64\"},{\"internalType\":\"enum EtharisEscrow.ContractStatus\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"exists\",\"type\":\"bool\"}],\"internalType\":\"struct EtharisEscrow.Deal\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_dealId\",\"type\":\"string\"}],\"name\":\"emergencyCancelDeal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"emergencyWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeRecipient\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_dealId\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_brandAddress\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"_amount\",\"type\":\"uint96\"},{\"internalType\":\"uint256\",\"name\":\"_deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"_v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"_r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"_s\",\"type\":\"bytes32\"}],\"name\":\"fundDeal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_dealId\",\"type\":\"string\"}],\"name\":\"getDeal\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"dealId\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"brand\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"amount\",\"type\":\"uint96\"},{\"internalType\":\"uint64\",\"name\":\"deadline\",\"type\":\"uint64\"},{\"internalType\":\"enum EtharisEscrow.ContractStatus\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"briefHash\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"contentUrl\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"reviewDeadline\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"fundedAt\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"submittedAt\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"createdAt\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"exists\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_isBrand\",\"type\":\"bool\"}],\"name\":\"getDeals\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"idrxToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_dealId\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_brandAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_reason\",\"type\":\"string\"}],\"name\":\"initiateDispute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"platformFeeBps\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_dealId\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_creatorAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_accept5050\",\"type\":\"bool\"}],\"name\":\"resolveDispute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_dealId\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_creatorAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_contentUrl\",\"type\":\"string\"}],\"name\":\"submitContent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newRecipient\",\"type\":\"address\"}],\"name\":\"updateFeeRecipient\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint96\",\"name\":\"_newFeeBps\",\"type\":\"uint96\"}],\"name\":\"updatePlatformFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Etharis Team\",\"details\":\"Escrow contract for sponsorship deals. All action functions can only be called by the Server Wallet (Owner).\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"createDeal(string,address,address,uint96,uint64,string)\":{\"details\":\"Only SERVER_ROLE can call this function\"},\"fundDeal(string,address,uint96,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Brands sign permit off-chain, server executes with signature for gasless transaction\"},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"title\":\"EtharisEscrow\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"acceptDeal(string,address)\":{\"notice\":\"[CUSTODIAL] Creator accepts the funded deal\"},\"approveDeal(string,address)\":{\"notice\":\"[CUSTODIAL] Brand approve content & release payment.\"},\"autoRefundAfterDeadline(string)\":{\"notice\":\"Triggers a full refund to the Brand if the Creator fails to submit content before the deadline.\"},\"autoReleasePayment(string)\":{\"notice\":\"Auto-release payment after review period\"},\"cancelDeal(string,address)\":{\"notice\":\"[CUSTODIAL] Cancel the deal before it is funded.\"},\"createDeal(string,address,address,uint96,uint64,string)\":{\"notice\":\"[CUSTODIAL] Brand creates a new deal.\"},\"emergencyCancelDeal(string)\":{\"notice\":\"Emergency cancel deal (SERVER_ROLE only).\"},\"fundDeal(string,address,uint96,uint256,uint8,bytes32,bytes32)\":{\"notice\":\"[CUSTODIAL] Brand fund deal with gasless permit support\"},\"initiateDispute(string,address,string)\":{\"notice\":\"[CUSTODIAL] Brand initiate dispute.\"},\"resolveDispute(string,address,bool)\":{\"notice\":\"[CUSTODIAL] Creator resolve dispute.\"},\"submitContent(string,address,string)\":{\"notice\":\"[CUSTODIAL] Creator submits the content.\"}},\"notice\":\"Uses IDRX as the payment token (Indonesian Rupiah stablecoin).\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/EtharisEscrow.sol\":\"EtharisEscrow\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x1a6b4f6b7798ab80929d491b89d5427a9b3338c0fd1acd0ba325f69c6f1646af\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7bb7f346c12a14dc622bc105ce3c47202fbc89f4b153a28a63bb68193297330c\",\"dweb:/ipfs/QmagwF8P3bUBXwdo159ueEnY9dLSvEWwK24kk2op58egwG\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xbff9f59c84e5337689161ce7641c0ef8e872d6a7536fbc1f5133f128887aba3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b308f882e796f7b79c9502deacb0a62983035c6f6f4e962b319ba6a1f4a77d3d\",\"dweb:/ipfs/QmaWCW7ahEQqFjwhSUhV7Ae7WhfNvzSpE7DQ58hvEooqPL\"]},\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100\",\"dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d\",\"dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF\"]},\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x2fa0657dd7b8bc75475a47f64bc04a9adb42236b15d65e6781594ea69a46c3e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7496f42681aed94bf0142a077324e50b86046610c1724e7c12e96cf1c365914a\",\"dweb:/ipfs/QmZvhNdSAAbN4PKPdheAqwpXukUiXp3Q3TdQccDMg2NDTV\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x2d9dc2fe26180f74c11c13663647d38e259e45f95eb88f57b61d2160b0109d3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81233d1f98060113d9922180bb0f14f8335856fe9f339134b09335e9f678c377\",\"dweb:/ipfs/QmWh6R35SarhAn4z2wH8SU456jJSYL2FgucfTFgbHJJN4E\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"contracts/EtharisEscrow.sol\":{\"keccak256\":\"0xabee98beed560d57c6f080229dba375a58f7ec0b753ac90af4d66711ae5e0c28\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://561daa71ab7f47f07ee2c1de14678f84256897dd3c05872b04d66d0625a65b17\",\"dweb:/ipfs/QmRH2uGTSNhdHvgjdAmTXMz6YuJdRZMChJqQizPzAn4GhD\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 588,
								"contract": "contracts/EtharisEscrow.sol:EtharisEscrow",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 487,
								"contract": "contracts/EtharisEscrow.sol:EtharisEscrow",
								"label": "_paused",
								"offset": 0,
								"slot": "1",
								"type": "t_bool"
							},
							{
								"astId": 27,
								"contract": "contracts/EtharisEscrow.sol:EtharisEscrow",
								"label": "_roles",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)22_storage)"
							},
							{
								"astId": 1361,
								"contract": "contracts/EtharisEscrow.sol:EtharisEscrow",
								"label": "_platformFeeBps",
								"offset": 0,
								"slot": "3",
								"type": "t_uint96"
							},
							{
								"astId": 1369,
								"contract": "contracts/EtharisEscrow.sol:EtharisEscrow",
								"label": "_feeRecipient",
								"offset": 12,
								"slot": "3",
								"type": "t_address"
							},
							{
								"astId": 1414,
								"contract": "contracts/EtharisEscrow.sol:EtharisEscrow",
								"label": "_deals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_string_memory_ptr,t_struct(Deal)1409_storage)"
							},
							{
								"astId": 1419,
								"contract": "contracts/EtharisEscrow.sol:EtharisEscrow",
								"label": "_brandDeals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_array(t_string_storage)dyn_storage)"
							},
							{
								"astId": 1424,
								"contract": "contracts/EtharisEscrow.sol:EtharisEscrow",
								"label": "_creatorDeals",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_address,t_array(t_string_storage)dyn_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_string_storage)dyn_storage": {
								"base": "t_string_storage",
								"encoding": "dynamic_array",
								"label": "string[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_enum(ContractStatus)1381": {
								"encoding": "inplace",
								"label": "enum EtharisEscrow.ContractStatus",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_array(t_string_storage)dyn_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => string[])",
								"numberOfBytes": "32",
								"value": "t_array(t_string_storage)dyn_storage"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)22_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)22_storage"
							},
							"t_mapping(t_string_memory_ptr,t_struct(Deal)1409_storage)": {
								"encoding": "mapping",
								"key": "t_string_memory_ptr",
								"label": "mapping(string => struct EtharisEscrow.Deal)",
								"numberOfBytes": "32",
								"value": "t_struct(Deal)1409_storage"
							},
							"t_string_memory_ptr": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(Deal)1409_storage": {
								"encoding": "inplace",
								"label": "struct EtharisEscrow.Deal",
								"members": [
									{
										"astId": 1383,
										"contract": "contracts/EtharisEscrow.sol:EtharisEscrow",
										"label": "brand",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 1385,
										"contract": "contracts/EtharisEscrow.sol:EtharisEscrow",
										"label": "creator",
										"offset": 0,
										"slot": "1",
										"type": "t_address"
									},
									{
										"astId": 1387,
										"contract": "contracts/EtharisEscrow.sol:EtharisEscrow",
										"label": "dealId",
										"offset": 0,
										"slot": "2",
										"type": "t_string_storage"
									},
									{
										"astId": 1389,
										"contract": "contracts/EtharisEscrow.sol:EtharisEscrow",
										"label": "briefHash",
										"offset": 0,
										"slot": "3",
										"type": "t_string_storage"
									},
									{
										"astId": 1391,
										"contract": "contracts/EtharisEscrow.sol:EtharisEscrow",
										"label": "contentUrl",
										"offset": 0,
										"slot": "4",
										"type": "t_string_storage"
									},
									{
										"astId": 1393,
										"contract": "contracts/EtharisEscrow.sol:EtharisEscrow",
										"label": "amount",
										"offset": 0,
										"slot": "5",
										"type": "t_uint96"
									},
									{
										"astId": 1395,
										"contract": "contracts/EtharisEscrow.sol:EtharisEscrow",
										"label": "deadline",
										"offset": 12,
										"slot": "5",
										"type": "t_uint64"
									},
									{
										"astId": 1397,
										"contract": "contracts/EtharisEscrow.sol:EtharisEscrow",
										"label": "fundedAt",
										"offset": 20,
										"slot": "5",
										"type": "t_uint64"
									},
									{
										"astId": 1399,
										"contract": "contracts/EtharisEscrow.sol:EtharisEscrow",
										"label": "submittedAt",
										"offset": 0,
										"slot": "6",
										"type": "t_uint64"
									},
									{
										"astId": 1401,
										"contract": "contracts/EtharisEscrow.sol:EtharisEscrow",
										"label": "reviewDeadline",
										"offset": 8,
										"slot": "6",
										"type": "t_uint64"
									},
									{
										"astId": 1403,
										"contract": "contracts/EtharisEscrow.sol:EtharisEscrow",
										"label": "createdAt",
										"offset": 16,
										"slot": "6",
										"type": "t_uint64"
									},
									{
										"astId": 1406,
										"contract": "contracts/EtharisEscrow.sol:EtharisEscrow",
										"label": "status",
										"offset": 24,
										"slot": "6",
										"type": "t_enum(ContractStatus)1381"
									},
									{
										"astId": 1408,
										"contract": "contracts/EtharisEscrow.sol:EtharisEscrow",
										"label": "exists",
										"offset": 25,
										"slot": "6",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "224"
							},
							"t_struct(RoleData)22_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 19,
										"contract": "contracts/EtharisEscrow.sol:EtharisEscrow",
										"label": "hasRole",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 21,
										"contract": "contracts/EtharisEscrow.sol:EtharisEscrow",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint64": {
								"encoding": "inplace",
								"label": "uint64",
								"numberOfBytes": "8"
							},
							"t_uint96": {
								"encoding": "inplace",
								"label": "uint96",
								"numberOfBytes": "12"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"acceptDeal(string,address)": {
								"notice": "[CUSTODIAL] Creator accepts the funded deal"
							},
							"approveDeal(string,address)": {
								"notice": "[CUSTODIAL] Brand approve content & release payment."
							},
							"autoRefundAfterDeadline(string)": {
								"notice": "Triggers a full refund to the Brand if the Creator fails to submit content before the deadline."
							},
							"autoReleasePayment(string)": {
								"notice": "Auto-release payment after review period"
							},
							"cancelDeal(string,address)": {
								"notice": "[CUSTODIAL] Cancel the deal before it is funded."
							},
							"createDeal(string,address,address,uint96,uint64,string)": {
								"notice": "[CUSTODIAL] Brand creates a new deal."
							},
							"emergencyCancelDeal(string)": {
								"notice": "Emergency cancel deal (SERVER_ROLE only)."
							},
							"fundDeal(string,address,uint96,uint256,uint8,bytes32,bytes32)": {
								"notice": "[CUSTODIAL] Brand fund deal with gasless permit support"
							},
							"initiateDispute(string,address,string)": {
								"notice": "[CUSTODIAL] Brand initiate dispute."
							},
							"resolveDispute(string,address,bool)": {
								"notice": "[CUSTODIAL] Creator resolve dispute."
							},
							"submitContent(string,address,string)": {
								"notice": "[CUSTODIAL] Creator submits the content."
							}
						},
						"notice": "Uses IDRX as the payment token (Indonesian Rupiah stablecoin).",
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
					"exportedSymbols": {
						"AccessControl": [
							296
						],
						"Context": [
							1250
						],
						"ERC165": [
							1274
						],
						"IAccessControl": [
							379
						],
						"IERC165": [
							1286
						]
					},
					"id": 297,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
							"file": "./IAccessControl.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 297,
							"sourceUnit": 380,
							"src": "134:52:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "IAccessControl",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 379,
										"src": "142:14:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 297,
							"sourceUnit": 1251,
							"src": "187:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1250,
										"src": "195:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../utils/introspection/ERC165.sol",
							"id": 8,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 297,
							"sourceUnit": 1275,
							"src": "233:66:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 6,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1286,
										"src": "241:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 7,
										"name": "ERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1274,
										"src": "250:6:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 10,
										"name": "Context",
										"nameLocations": [
											"1997:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1250,
										"src": "1997:7:0"
									},
									"id": 11,
									"nodeType": "InheritanceSpecifier",
									"src": "1997:7:0"
								},
								{
									"baseName": {
										"id": 12,
										"name": "IAccessControl",
										"nameLocations": [
											"2006:14:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 379,
										"src": "2006:14:0"
									},
									"id": 13,
									"nodeType": "InheritanceSpecifier",
									"src": "2006:14:0"
								},
								{
									"baseName": {
										"id": 14,
										"name": "ERC165",
										"nameLocations": [
											"2022:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1274,
										"src": "2022:6:0"
									},
									"id": 15,
									"nodeType": "InheritanceSpecifier",
									"src": "2022:6:0"
								}
							],
							"canonicalName": "AccessControl",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 9,
								"nodeType": "StructuredDocumentation",
								"src": "301:1660:0",
								"text": " @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```solidity\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```solidity\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n to enforce additional security measures for this role."
							},
							"fullyImplemented": true,
							"id": 296,
							"linearizedBaseContracts": [
								296,
								1274,
								1286,
								379,
								1250
							],
							"name": "AccessControl",
							"nameLocation": "1980:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "AccessControl.RoleData",
									"id": 22,
									"members": [
										{
											"constant": false,
											"id": 19,
											"mutability": "mutable",
											"name": "hasRole",
											"nameLocation": "2094:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 22,
											"src": "2061:40:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"typeName": {
												"id": 18,
												"keyName": "account",
												"keyNameLocation": "2077:7:0",
												"keyType": {
													"id": 16,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2069:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "2061:32:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
													"typeString": "mapping(address => bool)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 17,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2088:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 21,
											"mutability": "mutable",
											"name": "adminRole",
											"nameLocation": "2119:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 22,
											"src": "2111:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 20,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "2111:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "RoleData",
									"nameLocation": "2042:8:0",
									"nodeType": "StructDefinition",
									"scope": 296,
									"src": "2035:100:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 27,
									"mutability": "mutable",
									"name": "_roles",
									"nameLocation": "2183:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 296,
									"src": "2141:48:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$22_storage_$",
										"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
									},
									"typeName": {
										"id": 26,
										"keyName": "role",
										"keyNameLocation": "2157:4:0",
										"keyType": {
											"id": 23,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "2149:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "2141:33:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$22_storage_$",
											"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 25,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 24,
												"name": "RoleData",
												"nameLocations": [
													"2165:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 22,
												"src": "2165:8:0"
											},
											"referencedDeclaration": 22,
											"src": "2165:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_RoleData_$22_storage_ptr",
												"typeString": "struct AccessControl.RoleData"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"functionSelector": "a217fddf",
									"id": 30,
									"mutability": "constant",
									"name": "DEFAULT_ADMIN_ROLE",
									"nameLocation": "2220:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 296,
									"src": "2196:49:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 28,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2196:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "30783030",
										"id": 29,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2241:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0x00"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 40,
										"nodeType": "Block",
										"src": "2463:44:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 36,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 33,
															"src": "2484:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 35,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															94,
															115
														],
														"referencedDeclaration": 94,
														"src": "2473:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32) view"
														}
													},
													"id": 37,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2473:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 38,
												"nodeType": "ExpressionStatement",
												"src": "2473:16:0"
											},
											{
												"id": 39,
												"nodeType": "PlaceholderStatement",
												"src": "2499:1:0"
											}
										]
									},
									"documentation": {
										"id": 31,
										"nodeType": "StructuredDocumentation",
										"src": "2252:174:0",
										"text": " @dev Modifier that checks that an account has a specific role. Reverts\n with an {AccessControlUnauthorizedAccount} error including the required role."
									},
									"id": 41,
									"name": "onlyRole",
									"nameLocation": "2440:8:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2457:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "2449:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 32,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2449:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2448:14:0"
									},
									"src": "2431:76:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1273
									],
									"body": {
										"id": 62,
										"nodeType": "Block",
										"src": "2632:111:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 60,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 55,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 50,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 44,
															"src": "2649:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 52,
																		"name": "IAccessControl",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 379,
																		"src": "2669:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$379_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$379_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	],
																	"id": 51,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "2664:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 53,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2664:20:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IAccessControl_$379",
																	"typeString": "type(contract IAccessControl)"
																}
															},
															"id": 54,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "2685:11:0",
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "2664:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "2649:47:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 58,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 44,
																"src": "2724:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 56,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "2700:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_AccessControl_$296_$",
																	"typeString": "type(contract super AccessControl)"
																}
															},
															"id": 57,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2706:17:0",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1273,
															"src": "2700:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 59,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2700:36:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2649:87:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 49,
												"id": 61,
												"nodeType": "Return",
												"src": "2642:94:0"
											}
										]
									},
									"documentation": {
										"id": 42,
										"nodeType": "StructuredDocumentation",
										"src": "2513:23:0",
										"text": "@inheritdoc IERC165"
									},
									"functionSelector": "01ffc9a7",
									"id": 63,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "2550:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 46,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2608:8:0"
									},
									"parameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "2575:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 63,
												"src": "2568:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 43,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2568:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2567:20:0"
									},
									"returnParameters": {
										"id": 49,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 48,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 63,
												"src": "2626:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 47,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2626:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2625:6:0"
									},
									"scope": 296,
									"src": "2541:202:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										346
									],
									"body": {
										"id": 80,
										"nodeType": "Block",
										"src": "2913:53:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"baseExpression": {
																"id": 73,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 27,
																"src": "2930:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$22_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 75,
															"indexExpression": {
																"id": 74,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 66,
																"src": "2937:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2930:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$22_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 76,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2943:7:0",
														"memberName": "hasRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 19,
														"src": "2930:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 78,
													"indexExpression": {
														"id": 77,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 68,
														"src": "2951:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2930:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 72,
												"id": 79,
												"nodeType": "Return",
												"src": "2923:36:0"
											}
										]
									},
									"documentation": {
										"id": 64,
										"nodeType": "StructuredDocumentation",
										"src": "2749:76:0",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 81,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "2839:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 66,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2855:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "2847:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 65,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2847:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 68,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2869:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "2861:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 67,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2861:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2846:31:0"
									},
									"returnParameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "2907:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 70,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2907:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2906:6:0"
									},
									"scope": 296,
									"src": "2830:136:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 93,
										"nodeType": "Block",
										"src": "3231:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 88,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 84,
															"src": "3252:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 89,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1232,
																"src": "3258:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 90,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3258:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 87,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															94,
															115
														],
														"referencedDeclaration": 115,
														"src": "3241:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address) view"
														}
													},
													"id": 91,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3241:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 92,
												"nodeType": "ExpressionStatement",
												"src": "3241:30:0"
											}
										]
									},
									"documentation": {
										"id": 82,
										"nodeType": "StructuredDocumentation",
										"src": "2972:198:0",
										"text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier."
									},
									"id": 94,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3184:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 85,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 84,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3203:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 94,
												"src": "3195:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 83,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3195:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3194:14:0"
									},
									"returnParameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3231:0:0"
									},
									"scope": 296,
									"src": "3175:103:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 114,
										"nodeType": "Block",
										"src": "3481:124:0",
										"statements": [
											{
												"condition": {
													"id": 106,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3495:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 103,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 97,
																"src": "3504:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 104,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 99,
																"src": "3510:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 102,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 81,
															"src": "3496:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 105,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3496:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 113,
												"nodeType": "IfStatement",
												"src": "3491:108:0",
												"trueBody": {
													"id": 112,
													"nodeType": "Block",
													"src": "3520:79:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 108,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 99,
																		"src": "3574:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 109,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 97,
																		"src": "3583:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 107,
																	"name": "AccessControlUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 306,
																	"src": "3541:32:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_bytes32_$returns$__$",
																		"typeString": "function (address,bytes32) pure"
																	}
																},
																"id": 110,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3541:47:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 111,
															"nodeType": "RevertStatement",
															"src": "3534:54:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 95,
										"nodeType": "StructuredDocumentation",
										"src": "3284:119:0",
										"text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n is missing `role`."
									},
									"id": 115,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3417:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3436:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 115,
												"src": "3428:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 96,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3428:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3450:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 115,
												"src": "3442:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 98,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3442:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3427:31:0"
									},
									"returnParameters": {
										"id": 101,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3481:0:0"
									},
									"scope": 296,
									"src": "3408:197:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										354
									],
									"body": {
										"id": 128,
										"nodeType": "Block",
										"src": "3860:46:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 123,
															"name": "_roles",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "3877:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$22_storage_$",
																"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
															}
														},
														"id": 125,
														"indexExpression": {
															"id": 124,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 118,
															"src": "3884:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3877:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RoleData_$22_storage",
															"typeString": "struct AccessControl.RoleData storage ref"
														}
													},
													"id": 126,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3890:9:0",
													"memberName": "adminRole",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 21,
													"src": "3877:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 122,
												"id": 127,
												"nodeType": "Return",
												"src": "3870:29:0"
											}
										]
									},
									"documentation": {
										"id": 116,
										"nodeType": "StructuredDocumentation",
										"src": "3611:170:0",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 129,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "3795:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 118,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3816:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 129,
												"src": "3808:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 117,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3808:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3807:14:0"
									},
									"returnParameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 129,
												"src": "3851:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 120,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3851:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3850:9:0"
									},
									"scope": 296,
									"src": "3786:120:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										362
									],
									"body": {
										"id": 147,
										"nodeType": "Block",
										"src": "4296:42:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 143,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 132,
															"src": "4317:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 144,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 134,
															"src": "4323:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 142,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 257,
														"src": "4306:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 145,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4306:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 146,
												"nodeType": "ExpressionStatement",
												"src": "4306:25:0"
											}
										]
									},
									"documentation": {
										"id": 130,
										"nodeType": "StructuredDocumentation",
										"src": "3912:285:0",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."
									},
									"functionSelector": "2f2ff15d",
									"id": 148,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 138,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 132,
															"src": "4289:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 137,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "4276:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 139,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4276:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 140,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 136,
												"name": "onlyRole",
												"nameLocations": [
													"4267:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 41,
												"src": "4267:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4267:28:0"
										}
									],
									"name": "grantRole",
									"nameLocation": "4211:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 132,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4229:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 148,
												"src": "4221:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 131,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4221:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4243:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 148,
												"src": "4235:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 133,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4235:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4220:31:0"
									},
									"returnParameters": {
										"id": 141,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4296:0:0"
									},
									"scope": 296,
									"src": "4202:136:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										370
									],
									"body": {
										"id": 166,
										"nodeType": "Block",
										"src": "4713:43:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 162,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 151,
															"src": "4735:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 163,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 153,
															"src": "4741:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 161,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 295,
														"src": "4723:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 164,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4723:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 165,
												"nodeType": "ExpressionStatement",
												"src": "4723:26:0"
											}
										]
									},
									"documentation": {
										"id": 149,
										"nodeType": "StructuredDocumentation",
										"src": "4344:269:0",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "d547741f",
									"id": 167,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 157,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 151,
															"src": "4706:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 156,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "4693:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 158,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4693:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 159,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 155,
												"name": "onlyRole",
												"nameLocations": [
													"4684:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 41,
												"src": "4684:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4684:28:0"
										}
									],
									"name": "revokeRole",
									"nameLocation": "4627:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 151,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4646:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "4638:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 150,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4638:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4660:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "4652:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4652:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4637:31:0"
									},
									"returnParameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4713:0:0"
									},
									"scope": 296,
									"src": "4618:138:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										378
									],
									"body": {
										"id": 189,
										"nodeType": "Block",
										"src": "5383:166:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 178,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 175,
														"name": "callerConfirmation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 172,
														"src": "5397:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 176,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1232,
															"src": "5419:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 177,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5419:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5397:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 183,
												"nodeType": "IfStatement",
												"src": "5393:102:0",
												"trueBody": {
													"id": 182,
													"nodeType": "Block",
													"src": "5433:62:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 179,
																	"name": "AccessControlBadConfirmation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 309,
																	"src": "5454:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 180,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5454:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 181,
															"nodeType": "RevertStatement",
															"src": "5447:37:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 185,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 170,
															"src": "5517:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 186,
															"name": "callerConfirmation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 172,
															"src": "5523:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 184,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 295,
														"src": "5505:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5505:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 188,
												"nodeType": "ExpressionStatement",
												"src": "5505:37:0"
											}
										]
									},
									"documentation": {
										"id": 168,
										"nodeType": "StructuredDocumentation",
										"src": "4762:537:0",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "36568abe",
									"id": 190,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "5313:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 170,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5334:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "5326:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 169,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5326:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "callerConfirmation",
												"nameLocation": "5348:18:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "5340:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5340:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5325:42:0"
									},
									"returnParameters": {
										"id": 174,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5383:0:0"
									},
									"scope": 296,
									"src": "5304:245:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 217,
										"nodeType": "Block",
										"src": "5747:174:0",
										"statements": [
											{
												"assignments": [
													199
												],
												"declarations": [
													{
														"constant": false,
														"id": 199,
														"mutability": "mutable",
														"name": "previousAdminRole",
														"nameLocation": "5765:17:0",
														"nodeType": "VariableDeclaration",
														"scope": 217,
														"src": "5757:25:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 198,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "5757:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 203,
												"initialValue": {
													"arguments": [
														{
															"id": 201,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 193,
															"src": "5798:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 200,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "5785:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 202,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5785:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5757:46:0"
											},
											{
												"expression": {
													"id": 209,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 204,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 27,
																"src": "5813:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$22_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 206,
															"indexExpression": {
																"id": 205,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 193,
																"src": "5820:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5813:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$22_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 207,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5826:9:0",
														"memberName": "adminRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 21,
														"src": "5813:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 208,
														"name": "adminRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 195,
														"src": "5838:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "5813:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 210,
												"nodeType": "ExpressionStatement",
												"src": "5813:34:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 212,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 193,
															"src": "5879:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 213,
															"name": "previousAdminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 199,
															"src": "5885:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 214,
															"name": "adminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 195,
															"src": "5904:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 211,
														"name": "RoleAdminChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 318,
														"src": "5862:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32,bytes32,bytes32)"
														}
													},
													"id": 215,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5862:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 216,
												"nodeType": "EmitStatement",
												"src": "5857:57:0"
											}
										]
									},
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "5555:114:0",
										"text": " @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."
									},
									"id": 218,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setRoleAdmin",
									"nameLocation": "5683:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5705:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 218,
												"src": "5697:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 192,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5697:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "adminRole",
												"nameLocation": "5719:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 218,
												"src": "5711:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 194,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5711:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5696:33:0"
									},
									"returnParameters": {
										"id": 197,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5747:0:0"
									},
									"scope": 296,
									"src": "5674:247:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 256,
										"nodeType": "Block",
										"src": "6238:233:0",
										"statements": [
											{
												"condition": {
													"id": 232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "6252:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 229,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 221,
																"src": "6261:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 230,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 223,
																"src": "6267:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 228,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 81,
															"src": "6253:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 231,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6253:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 254,
													"nodeType": "Block",
													"src": "6428:37:0",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 252,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6449:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 227,
															"id": 253,
															"nodeType": "Return",
															"src": "6442:12:0"
														}
													]
												},
												"id": 255,
												"nodeType": "IfStatement",
												"src": "6248:217:0",
												"trueBody": {
													"id": 251,
													"nodeType": "Block",
													"src": "6277:145:0",
													"statements": [
														{
															"expression": {
																"id": 240,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 233,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 27,
																				"src": "6291:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$22_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 235,
																			"indexExpression": {
																				"id": 234,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 221,
																				"src": "6298:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6291:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$22_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 236,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6304:7:0",
																		"memberName": "hasRole",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 19,
																		"src": "6291:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 238,
																	"indexExpression": {
																		"id": 237,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 223,
																		"src": "6312:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6291:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 239,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6323:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "6291:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 241,
															"nodeType": "ExpressionStatement",
															"src": "6291:36:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 243,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 221,
																		"src": "6358:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 244,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 223,
																		"src": "6364:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 245,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1232,
																			"src": "6373:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 246,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6373:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 242,
																	"name": "RoleGranted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 327,
																	"src": "6346:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 247,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6346:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 248,
															"nodeType": "EmitStatement",
															"src": "6341:45:0"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 249,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6407:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 227,
															"id": 250,
															"nodeType": "Return",
															"src": "6400:11:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 219,
										"nodeType": "StructuredDocumentation",
										"src": "5927:223:0",
										"text": " @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n Internal function without access restriction.\n May emit a {RoleGranted} event."
									},
									"id": 257,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_grantRole",
									"nameLocation": "6164:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6183:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "6175:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 220,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6175:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6197:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "6189:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 222,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6189:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6174:31:0"
									},
									"returnParameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "6232:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 225,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6232:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6231:6:0"
									},
									"scope": 296,
									"src": "6155:316:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 294,
										"nodeType": "Block",
										"src": "6792:233:0",
										"statements": [
											{
												"condition": {
													"arguments": [
														{
															"id": 268,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 260,
															"src": "6814:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 269,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 262,
															"src": "6820:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 267,
														"name": "hasRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 81,
														"src": "6806:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) view returns (bool)"
														}
													},
													"id": 270,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6806:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 292,
													"nodeType": "Block",
													"src": "6982:37:0",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 290,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7003:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 266,
															"id": 291,
															"nodeType": "Return",
															"src": "6996:12:0"
														}
													]
												},
												"id": 293,
												"nodeType": "IfStatement",
												"src": "6802:217:0",
												"trueBody": {
													"id": 289,
													"nodeType": "Block",
													"src": "6830:146:0",
													"statements": [
														{
															"expression": {
																"id": 278,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 271,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 27,
																				"src": "6844:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$22_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 273,
																			"indexExpression": {
																				"id": 272,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 260,
																				"src": "6851:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6844:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$22_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 274,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6857:7:0",
																		"memberName": "hasRole",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 19,
																		"src": "6844:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 276,
																	"indexExpression": {
																		"id": 275,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 262,
																		"src": "6865:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6844:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 277,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6876:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "6844:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 279,
															"nodeType": "ExpressionStatement",
															"src": "6844:37:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 281,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 260,
																		"src": "6912:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 282,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 262,
																		"src": "6918:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 283,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1232,
																			"src": "6927:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 284,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6927:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 280,
																	"name": "RoleRevoked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 336,
																	"src": "6900:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 285,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6900:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 286,
															"nodeType": "EmitStatement",
															"src": "6895:45:0"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 287,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6961:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 266,
															"id": 288,
															"nodeType": "Return",
															"src": "6954:11:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 258,
										"nodeType": "StructuredDocumentation",
										"src": "6477:226:0",
										"text": " @dev Attempts to revoke `role` from `account` and returns a boolean indicating if `role` was revoked.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."
									},
									"id": 295,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revokeRole",
									"nameLocation": "6717:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 260,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6737:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "6729:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 259,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6729:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6751:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "6743:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6743:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6728:31:0"
									},
									"returnParameters": {
										"id": 266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "6786:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 264,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6786:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6785:6:0"
									},
									"scope": 296,
									"src": "6708:317:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 297,
							"src": "1962:5065:0",
							"usedErrors": [
								306,
								309
							],
							"usedEvents": [
								318,
								327,
								336
							]
						}
					],
					"src": "108:6920:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
					"exportedSymbols": {
						"IAccessControl": [
							379
						]
					},
					"id": 380,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 298,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IAccessControl",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 299,
								"nodeType": "StructuredDocumentation",
								"src": "135:90:1",
								"text": " @dev External interface of AccessControl declared to support ERC-165 detection."
							},
							"fullyImplemented": false,
							"id": 379,
							"linearizedBaseContracts": [
								379
							],
							"name": "IAccessControl",
							"nameLocation": "236:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 300,
										"nodeType": "StructuredDocumentation",
										"src": "257:56:1",
										"text": " @dev The `account` is missing a role."
									},
									"errorSelector": "e2517d3f",
									"id": 306,
									"name": "AccessControlUnauthorizedAccount",
									"nameLocation": "324:32:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 305,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 302,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "365:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 306,
												"src": "357:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 301,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "357:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 304,
												"mutability": "mutable",
												"name": "neededRole",
												"nameLocation": "382:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 306,
												"src": "374:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 303,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "374:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "356:37:1"
									},
									"src": "318:76:1"
								},
								{
									"documentation": {
										"id": 307,
										"nodeType": "StructuredDocumentation",
										"src": "400:148:1",
										"text": " @dev The caller of a function is not the expected one.\n NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
									},
									"errorSelector": "6697b232",
									"id": 309,
									"name": "AccessControlBadConfirmation",
									"nameLocation": "559:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 308,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "587:2:1"
									},
									"src": "553:37:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 310,
										"nodeType": "StructuredDocumentation",
										"src": "596:254:1",
										"text": " @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted to signal this."
									},
									"eventSelector": "bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff",
									"id": 318,
									"name": "RoleAdminChanged",
									"nameLocation": "861:16:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 317,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "894:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "878:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 311,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "878:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 314,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousAdminRole",
												"nameLocation": "916:17:1",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "900:33:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 313,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "900:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 316,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAdminRole",
												"nameLocation": "951:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "935:28:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 315,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "877:87:1"
									},
									"src": "855:110:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 319,
										"nodeType": "StructuredDocumentation",
										"src": "971:295:1",
										"text": " @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
									},
									"eventSelector": "2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d",
									"id": 327,
									"name": "RoleGranted",
									"nameLocation": "1277:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 321,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1305:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "1289:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 320,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1289:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 323,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1327:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "1311:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 322,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1311:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 325,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1352:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "1336:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 324,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1336:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1288:71:1"
									},
									"src": "1271:89:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 328,
										"nodeType": "StructuredDocumentation",
										"src": "1366:275:1",
										"text": " @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
									},
									"eventSelector": "f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b",
									"id": 336,
									"name": "RoleRevoked",
									"nameLocation": "1652:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 335,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 330,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1680:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1664:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 329,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1664:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 332,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1702:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1686:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 331,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1686:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 334,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1727:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1711:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 333,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1711:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1663:71:1"
									},
									"src": "1646:89:1"
								},
								{
									"documentation": {
										"id": 337,
										"nodeType": "StructuredDocumentation",
										"src": "1741:76:1",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 346,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "1831:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1847:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "1839:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 338,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1839:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1861:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "1853:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 340,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1853:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1838:31:1"
									},
									"returnParameters": {
										"id": 345,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 344,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "1893:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 343,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1893:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1892:6:1"
									},
									"scope": 379,
									"src": "1822:77:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 347,
										"nodeType": "StructuredDocumentation",
										"src": "1905:184:1",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 354,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "2103:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2124:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "2116:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 348,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2116:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2115:14:1"
									},
									"returnParameters": {
										"id": 353,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 352,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "2153:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 351,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2153:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2152:9:1"
									},
									"scope": 379,
									"src": "2094:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 355,
										"nodeType": "StructuredDocumentation",
										"src": "2168:239:1",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "2f2ff15d",
									"id": 362,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "grantRole",
									"nameLocation": "2421:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 357,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2439:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 362,
												"src": "2431:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 356,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2431:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 359,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2453:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 362,
												"src": "2445:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 358,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2445:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2430:31:1"
									},
									"returnParameters": {
										"id": 361,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2470:0:1"
									},
									"scope": 379,
									"src": "2412:59:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 363,
										"nodeType": "StructuredDocumentation",
										"src": "2477:223:1",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "d547741f",
									"id": 370,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "revokeRole",
									"nameLocation": "2714:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 365,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2733:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 370,
												"src": "2725:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 364,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2747:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 370,
												"src": "2739:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 366,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2739:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2724:31:1"
									},
									"returnParameters": {
										"id": 369,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2764:0:1"
									},
									"scope": 379,
									"src": "2705:60:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 371,
										"nodeType": "StructuredDocumentation",
										"src": "2771:491:1",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`."
									},
									"functionSelector": "36568abe",
									"id": 378,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "3276:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 373,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3297:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 378,
												"src": "3289:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 372,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3289:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "callerConfirmation",
												"nameLocation": "3311:18:1",
												"nodeType": "VariableDeclaration",
												"scope": 378,
												"src": "3303:26:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 374,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3303:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3288:42:1"
									},
									"returnParameters": {
										"id": 377,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3339:0:1"
									},
									"scope": 379,
									"src": "3267:73:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 380,
							"src": "226:3116:1",
							"usedErrors": [
								306,
								309
							],
							"usedEvents": [
								318,
								327,
								336
							]
						}
					],
					"src": "109:3234:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
					"exportedSymbols": {
						"IERC1363": [
							461
						],
						"IERC165": [
							1286
						],
						"IERC20": [
							720
						]
					},
					"id": 462,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 381,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 383,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 462,
							"sourceUnit": 470,
							"src": "133:36:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 382,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 720,
										"src": "141:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 385,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 462,
							"sourceUnit": 466,
							"src": "170:38:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 384,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1286,
										"src": "178:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 387,
										"name": "IERC20",
										"nameLocations": [
											"590:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 720,
										"src": "590:6:2"
									},
									"id": 388,
									"nodeType": "InheritanceSpecifier",
									"src": "590:6:2"
								},
								{
									"baseName": {
										"id": 389,
										"name": "IERC165",
										"nameLocations": [
											"598:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1286,
										"src": "598:7:2"
									},
									"id": 390,
									"nodeType": "InheritanceSpecifier",
									"src": "598:7:2"
								}
							],
							"canonicalName": "IERC1363",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 386,
								"nodeType": "StructuredDocumentation",
								"src": "210:357:2",
								"text": " @title IERC1363\n @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction."
							},
							"fullyImplemented": false,
							"id": 461,
							"linearizedBaseContracts": [
								461,
								1286,
								720
							],
							"name": "IERC1363",
							"nameLocation": "578:8:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 391,
										"nodeType": "StructuredDocumentation",
										"src": "1148:370:2",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "1296ee62",
									"id": 400,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "1532:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 396,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1556:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 400,
												"src": "1548:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 392,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1548:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 395,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1568:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 400,
												"src": "1560:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 394,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1560:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1547:27:2"
									},
									"returnParameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 400,
												"src": "1593:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 397,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1593:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1592:6:2"
									},
									"scope": 461,
									"src": "1523:76:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 401,
										"nodeType": "StructuredDocumentation",
										"src": "1605:453:2",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "4000aea0",
									"id": 412,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "2072:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 408,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 403,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2096:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 412,
												"src": "2088:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 402,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2088:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 405,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2108:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 412,
												"src": "2100:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 404,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2100:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 407,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2130:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 412,
												"src": "2115:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 406,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2115:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2087:48:2"
									},
									"returnParameters": {
										"id": 411,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 410,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 412,
												"src": "2154:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 409,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2154:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2153:6:2"
									},
									"scope": 461,
									"src": "2063:97:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 413,
										"nodeType": "StructuredDocumentation",
										"src": "2166:453:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "d8fbe994",
									"id": 424,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "2633:19:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 420,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 415,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2661:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 424,
												"src": "2653:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 414,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2653:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2675:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 424,
												"src": "2667:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 416,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2667:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 419,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2687:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 424,
												"src": "2679:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 418,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2679:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2652:41:2"
									},
									"returnParameters": {
										"id": 423,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 422,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 424,
												"src": "2712:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 421,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2712:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:6:2"
									},
									"scope": 461,
									"src": "2624:94:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 425,
										"nodeType": "StructuredDocumentation",
										"src": "2724:536:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "c1d34b89",
									"id": 438,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "3274:19:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 434,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 427,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3302:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 438,
												"src": "3294:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 426,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3294:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3316:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 438,
												"src": "3308:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 428,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3308:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3328:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 438,
												"src": "3320:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 430,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3320:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 433,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3350:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 438,
												"src": "3335:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 432,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3335:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3293:62:2"
									},
									"returnParameters": {
										"id": 437,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 436,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 438,
												"src": "3374:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 435,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3374:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3373:6:2"
									},
									"scope": 461,
									"src": "3265:115:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 439,
										"nodeType": "StructuredDocumentation",
										"src": "3386:390:2",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "3177029f",
									"id": 448,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "3790:14:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 441,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3813:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 448,
												"src": "3805:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 440,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3805:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 443,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3830:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 448,
												"src": "3822:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 442,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3822:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3804:32:2"
									},
									"returnParameters": {
										"id": 447,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 446,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 448,
												"src": "3855:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 445,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3855:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3854:6:2"
									},
									"scope": 461,
									"src": "3781:80:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 449,
										"nodeType": "StructuredDocumentation",
										"src": "3867:478:2",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @param data Additional data with no specified format, sent in call to `spender`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "cae9ca51",
									"id": 460,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "4359:14:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 456,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 451,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4382:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 460,
												"src": "4374:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 450,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4374:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4399:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 460,
												"src": "4391:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 452,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4391:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4421:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 460,
												"src": "4406:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 454,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4406:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4373:53:2"
									},
									"returnParameters": {
										"id": 459,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 458,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 460,
												"src": "4445:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 457,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4445:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4444:6:2"
									},
									"scope": 461,
									"src": "4350:101:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 462,
							"src": "568:3885:2",
							"usedErrors": [],
							"usedEvents": [
								654,
								663
							]
						}
					],
					"src": "107:4347:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1286
						]
					},
					"id": 466,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 463,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "106:25:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../utils/introspection/IERC165.sol",
							"id": 465,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 466,
							"sourceUnit": 1287,
							"src": "133:59:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 464,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1286,
										"src": "141:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "106:87:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							720
						]
					},
					"id": 470,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 467,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "105:25:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../token/ERC20/IERC20.sol",
							"id": 469,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 470,
							"sourceUnit": 721,
							"src": "132:49:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 468,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 720,
										"src": "140:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "105:77:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/security/Pausable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/Pausable.sol",
					"exportedSymbols": {
						"Context": [
							1250
						],
						"Pausable": [
							577
						]
					},
					"id": 578,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 471,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "105:23:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 472,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 578,
							"sourceUnit": 1251,
							"src": "130:30:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 474,
										"name": "Context",
										"nameLocations": [
											"632:7:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1250,
										"src": "632:7:5"
									},
									"id": 475,
									"nodeType": "InheritanceSpecifier",
									"src": "632:7:5"
								}
							],
							"canonicalName": "Pausable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 473,
								"nodeType": "StructuredDocumentation",
								"src": "162:439:5",
								"text": " @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."
							},
							"fullyImplemented": true,
							"id": 577,
							"linearizedBaseContracts": [
								577,
								1250
							],
							"name": "Pausable",
							"nameLocation": "620:8:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 476,
										"nodeType": "StructuredDocumentation",
										"src": "646:73:5",
										"text": " @dev Emitted when the pause is triggered by `account`."
									},
									"eventSelector": "62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258",
									"id": 480,
									"name": "Paused",
									"nameLocation": "730:6:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 479,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 478,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "745:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "737:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 477,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "737:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "736:17:5"
									},
									"src": "724:30:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 481,
										"nodeType": "StructuredDocumentation",
										"src": "760:70:5",
										"text": " @dev Emitted when the pause is lifted by `account`."
									},
									"eventSelector": "5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa",
									"id": 485,
									"name": "Unpaused",
									"nameLocation": "841:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 484,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 483,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "858:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 485,
												"src": "850:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 482,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "850:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "849:17:5"
									},
									"src": "835:32:5"
								},
								{
									"constant": false,
									"id": 487,
									"mutability": "mutable",
									"name": "_paused",
									"nameLocation": "886:7:5",
									"nodeType": "VariableDeclaration",
									"scope": 577,
									"src": "873:20:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 486,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "873:4:5",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 495,
										"nodeType": "Block",
										"src": "986:32:5",
										"statements": [
											{
												"expression": {
													"id": 493,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 491,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 487,
														"src": "996:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 492,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1006:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "996:15:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 494,
												"nodeType": "ExpressionStatement",
												"src": "996:15:5"
											}
										]
									},
									"documentation": {
										"id": 488,
										"nodeType": "StructuredDocumentation",
										"src": "900:67:5",
										"text": " @dev Initializes the contract in unpaused state."
									},
									"id": 496,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 489,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "983:2:5"
									},
									"returnParameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "986:0:5"
									},
									"scope": 577,
									"src": "972:46:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 503,
										"nodeType": "Block",
										"src": "1229:47:5",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 499,
														"name": "_requireNotPaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 533,
														"src": "1239:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 500,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1239:19:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 501,
												"nodeType": "ExpressionStatement",
												"src": "1239:19:5"
											},
											{
												"id": 502,
												"nodeType": "PlaceholderStatement",
												"src": "1268:1:5"
											}
										]
									},
									"documentation": {
										"id": 497,
										"nodeType": "StructuredDocumentation",
										"src": "1024:175:5",
										"text": " @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."
									},
									"id": 504,
									"name": "whenNotPaused",
									"nameLocation": "1213:13:5",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 498,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1226:2:5"
									},
									"src": "1204:72:5",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 511,
										"nodeType": "Block",
										"src": "1476:44:5",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 507,
														"name": "_requirePaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 544,
														"src": "1486:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 508,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1486:16:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 509,
												"nodeType": "ExpressionStatement",
												"src": "1486:16:5"
											},
											{
												"id": 510,
												"nodeType": "PlaceholderStatement",
												"src": "1512:1:5"
											}
										]
									},
									"documentation": {
										"id": 505,
										"nodeType": "StructuredDocumentation",
										"src": "1282:167:5",
										"text": " @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."
									},
									"id": 512,
									"name": "whenPaused",
									"nameLocation": "1463:10:5",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 506,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1473:2:5"
									},
									"src": "1454:66:5",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 520,
										"nodeType": "Block",
										"src": "1668:31:5",
										"statements": [
											{
												"expression": {
													"id": 518,
													"name": "_paused",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 487,
													"src": "1685:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 517,
												"id": 519,
												"nodeType": "Return",
												"src": "1678:14:5"
											}
										]
									},
									"documentation": {
										"id": 513,
										"nodeType": "StructuredDocumentation",
										"src": "1526:84:5",
										"text": " @dev Returns true if the contract is paused, and false otherwise."
									},
									"functionSelector": "5c975abb",
									"id": 521,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "paused",
									"nameLocation": "1624:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 514,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1630:2:5"
									},
									"returnParameters": {
										"id": 517,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 516,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 521,
												"src": "1662:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 515,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1662:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1661:6:5"
									},
									"scope": 577,
									"src": "1615:84:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 532,
										"nodeType": "Block",
										"src": "1818:55:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 528,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "1836:9:5",
															"subExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 526,
																	"name": "paused",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 521,
																	"src": "1837:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																		"typeString": "function () view returns (bool)"
																	}
																},
																"id": 527,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1837:8:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a20706175736564",
															"id": 529,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1847:18:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															},
															"value": "Pausable: paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															}
														],
														"id": 525,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1828:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 530,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1828:38:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 531,
												"nodeType": "ExpressionStatement",
												"src": "1828:38:5"
											}
										]
									},
									"documentation": {
										"id": 522,
										"nodeType": "StructuredDocumentation",
										"src": "1705:57:5",
										"text": " @dev Throws if the contract is paused."
									},
									"id": 533,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireNotPaused",
									"nameLocation": "1776:17:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 523,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1793:2:5"
									},
									"returnParameters": {
										"id": 524,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1818:0:5"
									},
									"scope": 577,
									"src": "1767:106:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 543,
										"nodeType": "Block",
										"src": "1993:58:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 538,
																"name": "paused",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 521,
																"src": "2011:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																	"typeString": "function () view returns (bool)"
																}
															},
															"id": 539,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2011:8:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a206e6f7420706175736564",
															"id": 540,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2021:22:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															},
															"value": "Pausable: not paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															}
														],
														"id": 537,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2003:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 541,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2003:41:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 542,
												"nodeType": "ExpressionStatement",
												"src": "2003:41:5"
											}
										]
									},
									"documentation": {
										"id": 534,
										"nodeType": "StructuredDocumentation",
										"src": "1879:61:5",
										"text": " @dev Throws if the contract is not paused."
									},
									"id": 544,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requirePaused",
									"nameLocation": "1954:14:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 535,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1968:2:5"
									},
									"returnParameters": {
										"id": 536,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1993:0:5"
									},
									"scope": 577,
									"src": "1945:106:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 559,
										"nodeType": "Block",
										"src": "2235:66:5",
										"statements": [
											{
												"expression": {
													"id": 552,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 550,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 487,
														"src": "2245:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 551,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2255:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2245:14:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 553,
												"nodeType": "ExpressionStatement",
												"src": "2245:14:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 555,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1232,
																"src": "2281:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 556,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2281:12:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 554,
														"name": "Paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 480,
														"src": "2274:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 557,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2274:20:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 558,
												"nodeType": "EmitStatement",
												"src": "2269:25:5"
											}
										]
									},
									"documentation": {
										"id": 545,
										"nodeType": "StructuredDocumentation",
										"src": "2057:124:5",
										"text": " @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."
									},
									"id": 560,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 548,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 547,
												"name": "whenNotPaused",
												"nameLocations": [
													"2221:13:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 504,
												"src": "2221:13:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "2221:13:5"
										}
									],
									"name": "_pause",
									"nameLocation": "2195:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 546,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2201:2:5"
									},
									"returnParameters": {
										"id": 549,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2235:0:5"
									},
									"scope": 577,
									"src": "2186:115:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 575,
										"nodeType": "Block",
										"src": "2481:69:5",
										"statements": [
											{
												"expression": {
													"id": 568,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 566,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 487,
														"src": "2491:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 567,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2501:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "2491:15:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 569,
												"nodeType": "ExpressionStatement",
												"src": "2491:15:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 571,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1232,
																"src": "2530:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 572,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2530:12:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 570,
														"name": "Unpaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 485,
														"src": "2521:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 573,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2521:22:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 574,
												"nodeType": "EmitStatement",
												"src": "2516:27:5"
											}
										]
									},
									"documentation": {
										"id": 561,
										"nodeType": "StructuredDocumentation",
										"src": "2307:121:5",
										"text": " @dev Returns to normal state.\n Requirements:\n - The contract must be paused."
									},
									"id": 576,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 564,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 563,
												"name": "whenPaused",
												"nameLocations": [
													"2470:10:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 512,
												"src": "2470:10:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "2470:10:5"
										}
									],
									"name": "_unpause",
									"nameLocation": "2442:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 562,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2450:2:5"
									},
									"returnParameters": {
										"id": 565,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2481:0:5"
									},
									"scope": 577,
									"src": "2433:117:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 578,
							"src": "602:1950:5",
							"usedErrors": [],
							"usedEvents": [
								480,
								485
							]
						}
					],
					"src": "105:2448:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							642
						]
					},
					"id": 643,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 579,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:6"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 580,
								"nodeType": "StructuredDocumentation",
								"src": "137:750:6",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 642,
							"linearizedBaseContracts": [
								642
							],
							"name": "ReentrancyGuard",
							"nameLocation": "906:15:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 583,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1701:12:6",
									"nodeType": "VariableDeclaration",
									"scope": 642,
									"src": "1676:41:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 581,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1676:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 582,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1716:1:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 586,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1748:8:6",
									"nodeType": "VariableDeclaration",
									"scope": 642,
									"src": "1723:37:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 584,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1723:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 585,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1759:1:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 588,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1783:7:6",
									"nodeType": "VariableDeclaration",
									"scope": 642,
									"src": "1767:23:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 587,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1767:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 595,
										"nodeType": "Block",
										"src": "1811:39:6",
										"statements": [
											{
												"expression": {
													"id": 593,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 591,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 588,
														"src": "1821:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 592,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 583,
														"src": "1831:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1821:22:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 594,
												"nodeType": "ExpressionStatement",
												"src": "1821:22:6"
											}
										]
									},
									"id": 596,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 589,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1808:2:6"
									},
									"returnParameters": {
										"id": 590,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1811:0:6"
									},
									"scope": 642,
									"src": "1797:53:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 606,
										"nodeType": "Block",
										"src": "2251:79:6",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 599,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 622,
														"src": "2261:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 600,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2261:21:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 601,
												"nodeType": "ExpressionStatement",
												"src": "2261:21:6"
											},
											{
												"id": 602,
												"nodeType": "PlaceholderStatement",
												"src": "2292:1:6"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 603,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 630,
														"src": "2303:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 604,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2303:20:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 605,
												"nodeType": "ExpressionStatement",
												"src": "2303:20:6"
											}
										]
									},
									"documentation": {
										"id": 597,
										"nodeType": "StructuredDocumentation",
										"src": "1856:366:6",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 607,
									"name": "nonReentrant",
									"nameLocation": "2236:12:6",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 598,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2248:2:6"
									},
									"src": "2227:103:6",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 621,
										"nodeType": "Block",
										"src": "2375:248:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 613,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 611,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 588,
																"src": "2468:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 612,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 586,
																"src": "2479:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2468:19:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 614,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2489:33:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 610,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2460:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 615,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2460:63:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 616,
												"nodeType": "ExpressionStatement",
												"src": "2460:63:6"
											},
											{
												"expression": {
													"id": 619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 617,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 588,
														"src": "2598:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 618,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 586,
														"src": "2608:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2598:18:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 620,
												"nodeType": "ExpressionStatement",
												"src": "2598:18:6"
											}
										]
									},
									"id": 622,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2345:19:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 608,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2364:2:6"
									},
									"returnParameters": {
										"id": 609,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2375:0:6"
									},
									"scope": 642,
									"src": "2336:287:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 629,
										"nodeType": "Block",
										"src": "2667:171:6",
										"statements": [
											{
												"expression": {
													"id": 627,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 625,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 588,
														"src": "2809:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 626,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 583,
														"src": "2819:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2809:22:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 628,
												"nodeType": "ExpressionStatement",
												"src": "2809:22:6"
											}
										]
									},
									"id": 630,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2638:18:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 623,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2656:2:6"
									},
									"returnParameters": {
										"id": 624,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2667:0:6"
									},
									"scope": 642,
									"src": "2629:209:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 640,
										"nodeType": "Block",
										"src": "3081:43:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 638,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 636,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 588,
														"src": "3098:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 637,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 586,
														"src": "3109:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3098:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 635,
												"id": 639,
												"nodeType": "Return",
												"src": "3091:26:6"
											}
										]
									},
									"documentation": {
										"id": 631,
										"nodeType": "StructuredDocumentation",
										"src": "2844:168:6",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 641,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3026:23:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 632,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3049:2:6"
									},
									"returnParameters": {
										"id": 635,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 634,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 641,
												"src": "3075:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 633,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3075:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3074:6:6"
									},
									"scope": 642,
									"src": "3017:107:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 643,
							"src": "888:2238:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "112:3015:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							720
						]
					},
					"id": 721,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 644,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "106:25:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 645,
								"nodeType": "StructuredDocumentation",
								"src": "133:71:7",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 720,
							"linearizedBaseContracts": [
								720
							],
							"name": "IERC20",
							"nameLocation": "215:6:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 646,
										"nodeType": "StructuredDocumentation",
										"src": "228:158:7",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 654,
									"name": "Transfer",
									"nameLocation": "397:8:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 653,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 648,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "422:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 654,
												"src": "406:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 647,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "406:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 650,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "444:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 654,
												"src": "428:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 649,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "428:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 652,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "456:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 654,
												"src": "448:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 651,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "448:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "405:57:7"
									},
									"src": "391:72:7"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 655,
										"nodeType": "StructuredDocumentation",
										"src": "469:148:7",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 663,
									"name": "Approval",
									"nameLocation": "628:8:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 662,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 657,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "653:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "637:21:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 656,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "637:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 659,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "676:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "660:23:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 658,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "660:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 661,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "693:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "685:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 660,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "636:63:7"
									},
									"src": "622:78:7"
								},
								{
									"documentation": {
										"id": 664,
										"nodeType": "StructuredDocumentation",
										"src": "706:65:7",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 669,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "785:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 665,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "796:2:7"
									},
									"returnParameters": {
										"id": 668,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 667,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 669,
												"src": "822:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 666,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "822:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "821:9:7"
									},
									"scope": 720,
									"src": "776:55:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 670,
										"nodeType": "StructuredDocumentation",
										"src": "837:71:7",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 677,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "922:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 673,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 672,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "940:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 677,
												"src": "932:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 671,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "932:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "931:17:7"
									},
									"returnParameters": {
										"id": 676,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 677,
												"src": "972:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 674,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "972:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "971:9:7"
									},
									"scope": 720,
									"src": "913:68:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 678,
										"nodeType": "StructuredDocumentation",
										"src": "987:213:7",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 687,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1214:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 683,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 680,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1231:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 687,
												"src": "1223:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 679,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 682,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1243:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 687,
												"src": "1235:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 681,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1235:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1222:27:7"
									},
									"returnParameters": {
										"id": 686,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 685,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 687,
												"src": "1268:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 684,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:6:7"
									},
									"scope": 720,
									"src": "1205:69:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 688,
										"nodeType": "StructuredDocumentation",
										"src": "1280:264:7",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 697,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1558:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 693,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 690,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1576:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 697,
												"src": "1568:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 689,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1568:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 692,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1591:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 697,
												"src": "1583:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 691,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1583:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1567:32:7"
									},
									"returnParameters": {
										"id": 696,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 697,
												"src": "1623:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 694,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1623:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1622:9:7"
									},
									"scope": 720,
									"src": "1549:83:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 698,
										"nodeType": "StructuredDocumentation",
										"src": "1638:667:7",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 707,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2319:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 703,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 700,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2335:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 707,
												"src": "2327:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 699,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2327:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 702,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2352:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 707,
												"src": "2344:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 701,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2344:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2326:32:7"
									},
									"returnParameters": {
										"id": 706,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 705,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 707,
												"src": "2377:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 704,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2377:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2376:6:7"
									},
									"scope": 720,
									"src": "2310:73:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 708,
										"nodeType": "StructuredDocumentation",
										"src": "2389:297:7",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 719,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2700:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 715,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 710,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2721:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 719,
												"src": "2713:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 709,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2713:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 712,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2735:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 719,
												"src": "2727:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 711,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2727:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 714,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2747:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 719,
												"src": "2739:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 713,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2739:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2712:41:7"
									},
									"returnParameters": {
										"id": 718,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 717,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 719,
												"src": "2772:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 716,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2772:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2771:6:7"
									},
									"scope": 720,
									"src": "2691:87:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 721,
							"src": "205:2575:7",
							"usedErrors": [],
							"usedEvents": [
								654,
								663
							]
						}
					],
					"src": "106:2675:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
					"exportedSymbols": {
						"IERC20Permit": [
							756
						]
					},
					"id": 757,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 722,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "123:25:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Permit",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 723,
								"nodeType": "StructuredDocumentation",
								"src": "150:1965:8",
								"text": " @dev Interface of the ERC-20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[ERC-2612].\n Adds the {permit} method, which can be used to change an account's ERC-20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all.\n ==== Security Considerations\n There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n considered as an intention to spend the allowance in any specific way. The second is that because permits have\n built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n generally recommended is:\n ```solidity\n function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n     doThing(..., value);\n }\n function doThing(..., uint256 value) public {\n     token.safeTransferFrom(msg.sender, address(this), value);\n     ...\n }\n ```\n Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n {SafeERC20-safeTransferFrom}).\n Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n contracts should have entry points that don't rely on permit."
							},
							"fullyImplemented": false,
							"id": 756,
							"linearizedBaseContracts": [
								756
							],
							"name": "IERC20Permit",
							"nameLocation": "2126:12:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 724,
										"nodeType": "StructuredDocumentation",
										"src": "2145:850:8",
										"text": " @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section].\n CAUTION: See Security Considerations above."
									},
									"functionSelector": "d505accf",
									"id": 741,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nameLocation": "3009:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 739,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 726,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3033:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 741,
												"src": "3025:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 725,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3025:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 728,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3056:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 741,
												"src": "3048:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 727,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3048:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 730,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3081:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 741,
												"src": "3073:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 729,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3073:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 732,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "3104:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 741,
												"src": "3096:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 731,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3096:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 734,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "3128:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 741,
												"src": "3122:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 733,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3122:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 736,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3147:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 741,
												"src": "3139:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 735,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3139:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 738,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "3166:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 741,
												"src": "3158:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 737,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3158:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3015:158:8"
									},
									"returnParameters": {
										"id": 740,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3182:0:8"
									},
									"scope": 756,
									"src": "3000:183:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 742,
										"nodeType": "StructuredDocumentation",
										"src": "3189:294:8",
										"text": " @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."
									},
									"functionSelector": "7ecebe00",
									"id": 749,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nameLocation": "3497:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 745,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 744,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3512:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 749,
												"src": "3504:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 743,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3504:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3503:15:8"
									},
									"returnParameters": {
										"id": 748,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 747,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 749,
												"src": "3542:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 746,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3542:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3541:9:8"
									},
									"scope": 756,
									"src": "3488:63:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 750,
										"nodeType": "StructuredDocumentation",
										"src": "3557:128:8",
										"text": " @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
									},
									"functionSelector": "3644e515",
									"id": 755,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nameLocation": "3752:16:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 751,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3768:2:8"
									},
									"returnParameters": {
										"id": 754,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 755,
												"src": "3794:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 752,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3794:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3793:9:8"
									},
									"scope": 756,
									"src": "3743:60:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 757,
							"src": "2116:1689:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "123:3683:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"IERC1363": [
							461
						],
						"IERC20": [
							720
						],
						"SafeERC20": [
							1220
						]
					},
					"id": 1221,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 758,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:9"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 760,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1221,
							"sourceUnit": 721,
							"src": "141:37:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 759,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 720,
										"src": "149:6:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
							"file": "../../../interfaces/IERC1363.sol",
							"id": 762,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1221,
							"sourceUnit": 462,
							"src": "179:58:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 761,
										"name": "IERC1363",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 461,
										"src": "187:8:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 763,
								"nodeType": "StructuredDocumentation",
								"src": "239:458:9",
								"text": " @title SafeERC20\n @dev Wrappers around ERC-20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 1220,
							"linearizedBaseContracts": [
								1220
							],
							"name": "SafeERC20",
							"nameLocation": "706:9:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 764,
										"nodeType": "StructuredDocumentation",
										"src": "722:65:9",
										"text": " @dev An operation with an ERC-20 token failed."
									},
									"errorSelector": "5274afe7",
									"id": 768,
									"name": "SafeERC20FailedOperation",
									"nameLocation": "798:24:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 767,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 766,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "831:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 768,
												"src": "823:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 765,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "823:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "822:15:9"
									},
									"src": "792:46:9"
								},
								{
									"documentation": {
										"id": 769,
										"nodeType": "StructuredDocumentation",
										"src": "844:71:9",
										"text": " @dev Indicates a failed `decreaseAllowance` request."
									},
									"errorSelector": "e570110f",
									"id": 777,
									"name": "SafeERC20FailedDecreaseAllowance",
									"nameLocation": "926:32:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 776,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 771,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "967:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 777,
												"src": "959:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 770,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "959:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 773,
												"mutability": "mutable",
												"name": "currentAllowance",
												"nameLocation": "984:16:9",
												"nodeType": "VariableDeclaration",
												"scope": 777,
												"src": "976:24:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 772,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "976:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 775,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "1010:17:9",
												"nodeType": "VariableDeclaration",
												"scope": 777,
												"src": "1002:25:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 774,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1002:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "958:70:9"
									},
									"src": "920:109:9"
								},
								{
									"body": {
										"id": 800,
										"nodeType": "Block",
										"src": "1291:88:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 789,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 781,
															"src": "1321:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$720",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 792,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 781,
																		"src": "1343:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$720",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 793,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1349:8:9",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 687,
																	"src": "1343:14:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 794,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 783,
																			"src": "1360:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 795,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 785,
																			"src": "1364:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 796,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1359:11:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 790,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1328:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 791,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1332:10:9",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1328:14:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 797,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1328:43:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$720",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 788,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1178,
														"src": "1301:19:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$720_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 798,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1301:71:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 799,
												"nodeType": "ExpressionStatement",
												"src": "1301:71:9"
											}
										]
									},
									"documentation": {
										"id": 778,
										"nodeType": "StructuredDocumentation",
										"src": "1035:179:9",
										"text": " @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 801,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "1228:12:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 786,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 781,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1248:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 801,
												"src": "1241:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$720",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 780,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 779,
														"name": "IERC20",
														"nameLocations": [
															"1241:6:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 720,
														"src": "1241:6:9"
													},
													"referencedDeclaration": 720,
													"src": "1241:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$720",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 783,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1263:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 801,
												"src": "1255:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 782,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1255:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 785,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1275:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 801,
												"src": "1267:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 784,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1267:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1240:41:9"
									},
									"returnParameters": {
										"id": 787,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1291:0:9"
									},
									"scope": 1220,
									"src": "1219:160:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 827,
										"nodeType": "Block",
										"src": "1708:98:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 815,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 805,
															"src": "1738:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$720",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 818,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 805,
																		"src": "1760:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$720",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 819,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1766:12:9",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 719,
																	"src": "1760:18:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 820,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 807,
																			"src": "1781:4:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 821,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 809,
																			"src": "1787:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 822,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 811,
																			"src": "1791:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 823,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1780:17:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 816,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1745:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 817,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1749:10:9",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1745:14:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 824,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1745:53:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$720",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 814,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1178,
														"src": "1718:19:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$720_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 825,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1718:81:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 826,
												"nodeType": "ExpressionStatement",
												"src": "1718:81:9"
											}
										]
									},
									"documentation": {
										"id": 802,
										"nodeType": "StructuredDocumentation",
										"src": "1385:228:9",
										"text": " @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."
									},
									"id": 828,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1627:16:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 812,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 805,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1651:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 828,
												"src": "1644:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$720",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 804,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 803,
														"name": "IERC20",
														"nameLocations": [
															"1644:6:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 720,
														"src": "1644:6:9"
													},
													"referencedDeclaration": 720,
													"src": "1644:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$720",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 807,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1666:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 828,
												"src": "1658:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 806,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1658:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 809,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1680:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 828,
												"src": "1672:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 808,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1672:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 811,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1692:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 828,
												"src": "1684:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 810,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1643:55:9"
									},
									"returnParameters": {
										"id": 813,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1708:0:9"
									},
									"scope": 1220,
									"src": "1618:188:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 853,
										"nodeType": "Block",
										"src": "2033:99:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 842,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 832,
															"src": "2074:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$720",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 845,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 832,
																		"src": "2096:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$720",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 846,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2102:8:9",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 687,
																	"src": "2096:14:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 847,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 834,
																			"src": "2113:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 848,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 836,
																			"src": "2117:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 849,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2112:11:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 843,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2081:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 844,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2085:10:9",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "2081:14:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 850,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2081:43:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$720",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 841,
														"name": "_callOptionalReturnBool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1219,
														"src": "2050:23:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$720_$_t_bytes_memory_ptr_$returns$_t_bool_$",
															"typeString": "function (contract IERC20,bytes memory) returns (bool)"
														}
													},
													"id": 851,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2050:75:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 840,
												"id": 852,
												"nodeType": "Return",
												"src": "2043:82:9"
											}
										]
									},
									"documentation": {
										"id": 829,
										"nodeType": "StructuredDocumentation",
										"src": "1812:126:9",
										"text": " @dev Variant of {safeTransfer} that returns a bool instead of reverting if the operation is not successful."
									},
									"id": 854,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySafeTransfer",
									"nameLocation": "1952:15:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 837,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1975:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1968:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$720",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 831,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 830,
														"name": "IERC20",
														"nameLocations": [
															"1968:6:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 720,
														"src": "1968:6:9"
													},
													"referencedDeclaration": 720,
													"src": "1968:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$720",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 834,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1990:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1982:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 833,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1982:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 836,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2002:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1994:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 835,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1994:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1967:41:9"
									},
									"returnParameters": {
										"id": 840,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 839,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "2027:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 838,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2027:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2026:6:9"
									},
									"scope": 1220,
									"src": "1943:189:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 882,
										"nodeType": "Block",
										"src": "2381:109:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 870,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 858,
															"src": "2422:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$720",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 873,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 858,
																		"src": "2444:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$720",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 874,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2450:12:9",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 719,
																	"src": "2444:18:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 875,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 860,
																			"src": "2465:4:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 876,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 862,
																			"src": "2471:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 877,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 864,
																			"src": "2475:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 878,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2464:17:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 871,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2429:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 872,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2433:10:9",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "2429:14:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 879,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2429:53:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$720",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 869,
														"name": "_callOptionalReturnBool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1219,
														"src": "2398:23:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$720_$_t_bytes_memory_ptr_$returns$_t_bool_$",
															"typeString": "function (contract IERC20,bytes memory) returns (bool)"
														}
													},
													"id": 880,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2398:85:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 868,
												"id": 881,
												"nodeType": "Return",
												"src": "2391:92:9"
											}
										]
									},
									"documentation": {
										"id": 855,
										"nodeType": "StructuredDocumentation",
										"src": "2138:130:9",
										"text": " @dev Variant of {safeTransferFrom} that returns a bool instead of reverting if the operation is not successful."
									},
									"id": 883,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySafeTransferFrom",
									"nameLocation": "2282:19:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 865,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 858,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2309:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 883,
												"src": "2302:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$720",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 857,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 856,
														"name": "IERC20",
														"nameLocations": [
															"2302:6:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 720,
														"src": "2302:6:9"
													},
													"referencedDeclaration": 720,
													"src": "2302:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$720",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 860,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2324:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 883,
												"src": "2316:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 859,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2316:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 862,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2338:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 883,
												"src": "2330:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 861,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2330:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 864,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 883,
												"src": "2342:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 863,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2301:55:9"
									},
									"returnParameters": {
										"id": 868,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 867,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 883,
												"src": "2375:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 866,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:9"
									},
									"scope": 1220,
									"src": "2273:217:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 913,
										"nodeType": "Block",
										"src": "3232:139:9",
										"statements": [
											{
												"assignments": [
													895
												],
												"declarations": [
													{
														"constant": false,
														"id": 895,
														"mutability": "mutable",
														"name": "oldAllowance",
														"nameLocation": "3250:12:9",
														"nodeType": "VariableDeclaration",
														"scope": 913,
														"src": "3242:20:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 894,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3242:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 904,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 900,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3289:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SafeERC20_$1220",
																		"typeString": "library SafeERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SafeERC20_$1220",
																		"typeString": "library SafeERC20"
																	}
																],
																"id": 899,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3281:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 898,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3281:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 901,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3281:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 902,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 889,
															"src": "3296:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 896,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 887,
															"src": "3265:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$720",
																"typeString": "contract IERC20"
															}
														},
														"id": 897,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3271:9:9",
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 697,
														"src": "3265:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 903,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3265:39:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3242:62:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 906,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 887,
															"src": "3327:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$720",
																"typeString": "contract IERC20"
															}
														},
														{
															"id": 907,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 889,
															"src": "3334:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 910,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 908,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 895,
																"src": "3343:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 909,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 891,
																"src": "3358:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3343:20:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$720",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 905,
														"name": "forceApprove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1004,
														"src": "3314:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$720_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 911,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3314:50:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 912,
												"nodeType": "ExpressionStatement",
												"src": "3314:50:9"
											}
										]
									},
									"documentation": {
										"id": 884,
										"nodeType": "StructuredDocumentation",
										"src": "2496:645:9",
										"text": " @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 914,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "3155:21:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 892,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 887,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3184:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 914,
												"src": "3177:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$720",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 886,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 885,
														"name": "IERC20",
														"nameLocations": [
															"3177:6:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 720,
														"src": "3177:6:9"
													},
													"referencedDeclaration": 720,
													"src": "3177:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$720",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 889,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3199:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 914,
												"src": "3191:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 888,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3191:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 891,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3216:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 914,
												"src": "3208:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 890,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3208:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3176:46:9"
									},
									"returnParameters": {
										"id": 893,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3232:0:9"
									},
									"scope": 1220,
									"src": "3146:225:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 956,
										"nodeType": "Block",
										"src": "4137:370:9",
										"statements": [
											{
												"id": 955,
												"nodeType": "UncheckedBlock",
												"src": "4147:354:9",
												"statements": [
													{
														"assignments": [
															926
														],
														"declarations": [
															{
																"constant": false,
																"id": 926,
																"mutability": "mutable",
																"name": "currentAllowance",
																"nameLocation": "4179:16:9",
																"nodeType": "VariableDeclaration",
																"scope": 955,
																"src": "4171:24:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 925,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4171:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 935,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 931,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4222:4:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$1220",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$1220",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 930,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4214:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 929,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4214:7:9",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 932,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4214:13:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 933,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 920,
																	"src": "4229:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 927,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 918,
																	"src": "4198:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$720",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 928,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4204:9:9",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 697,
																"src": "4198:15:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 934,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4198:39:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4171:66:9"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 938,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 936,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 926,
																"src": "4255:16:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 937,
																"name": "requestedDecrease",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 922,
																"src": "4274:17:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4255:36:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 946,
														"nodeType": "IfStatement",
														"src": "4251:160:9",
														"trueBody": {
															"id": 945,
															"nodeType": "Block",
															"src": "4293:118:9",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 940,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 920,
																				"src": "4351:7:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 941,
																				"name": "currentAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 926,
																				"src": "4360:16:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 942,
																				"name": "requestedDecrease",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 922,
																				"src": "4378:17:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 939,
																			"name": "SafeERC20FailedDecreaseAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 777,
																			"src": "4318:32:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																				"typeString": "function (address,uint256,uint256) pure"
																			}
																		},
																		"id": 943,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4318:78:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 944,
																	"nodeType": "RevertStatement",
																	"src": "4311:85:9"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 948,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 918,
																	"src": "4437:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$720",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"id": 949,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 920,
																	"src": "4444:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 952,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 950,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 926,
																		"src": "4453:16:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 951,
																		"name": "requestedDecrease",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 922,
																		"src": "4472:17:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4453:36:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$720",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 947,
																"name": "forceApprove",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1004,
																"src": "4424:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$720_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (contract IERC20,address,uint256)"
																}
															},
															"id": 953,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4424:66:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 954,
														"nodeType": "ExpressionStatement",
														"src": "4424:66:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 915,
										"nodeType": "StructuredDocumentation",
										"src": "3377:657:9",
										"text": " @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 957,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "4048:21:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 923,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 918,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4077:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 957,
												"src": "4070:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$720",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 917,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 916,
														"name": "IERC20",
														"nameLocations": [
															"4070:6:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 720,
														"src": "4070:6:9"
													},
													"referencedDeclaration": 720,
													"src": "4070:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$720",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 920,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4092:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 957,
												"src": "4084:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 919,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4084:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 922,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "4109:17:9",
												"nodeType": "VariableDeclaration",
												"scope": 957,
												"src": "4101:25:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 921,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4101:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4069:58:9"
									},
									"returnParameters": {
										"id": 924,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4137:0:9"
									},
									"scope": 1220,
									"src": "4039:468:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1003,
										"nodeType": "Block",
										"src": "5161:303:9",
										"statements": [
											{
												"assignments": [
													969
												],
												"declarations": [
													{
														"constant": false,
														"id": 969,
														"mutability": "mutable",
														"name": "approvalCall",
														"nameLocation": "5184:12:9",
														"nodeType": "VariableDeclaration",
														"scope": 1003,
														"src": "5171:25:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 968,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5171:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 978,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 972,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 961,
																"src": "5214:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$720",
																	"typeString": "contract IERC20"
																}
															},
															"id": 973,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5220:7:9",
															"memberName": "approve",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 707,
															"src": "5214:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															}
														},
														{
															"components": [
																{
																	"id": 974,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 963,
																	"src": "5230:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 975,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 965,
																	"src": "5239:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 976,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5229:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															},
															{
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														],
														"expression": {
															"id": 970,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "5199:3:9",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 971,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "5203:10:9",
														"memberName": "encodeCall",
														"nodeType": "MemberAccess",
														"src": "5199:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 977,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5199:47:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5171:75:9"
											},
											{
												"condition": {
													"id": 983,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5261:45:9",
													"subExpression": {
														"arguments": [
															{
																"id": 980,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 961,
																"src": "5286:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$720",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 981,
																"name": "approvalCall",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 969,
																"src": "5293:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$720",
																	"typeString": "contract IERC20"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 979,
															"name": "_callOptionalReturnBool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1219,
															"src": "5262:23:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$720_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																"typeString": "function (contract IERC20,bytes memory) returns (bool)"
															}
														},
														"id": 982,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5262:44:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1002,
												"nodeType": "IfStatement",
												"src": "5257:201:9",
												"trueBody": {
													"id": 1001,
													"nodeType": "Block",
													"src": "5308:150:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 985,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 961,
																		"src": "5342:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$720",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 988,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 961,
																					"src": "5364:5:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$720",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 989,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "5370:7:9",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 707,
																				"src": "5364:13:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 990,
																						"name": "spender",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 963,
																						"src": "5380:7:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"hexValue": "30",
																						"id": 991,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "5389:1:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					}
																				],
																				"id": 992,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "5379:12:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				},
																				{
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			],
																			"expression": {
																				"id": 986,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "5349:3:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 987,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "5353:10:9",
																			"memberName": "encodeCall",
																			"nodeType": "MemberAccess",
																			"src": "5349:14:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 993,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5349:43:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$720",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 984,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1178,
																	"src": "5322:19:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$720_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 994,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5322:71:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 995,
															"nodeType": "ExpressionStatement",
															"src": "5322:71:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 997,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 961,
																		"src": "5427:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$720",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"id": 998,
																		"name": "approvalCall",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 969,
																		"src": "5434:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$720",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 996,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1178,
																	"src": "5407:19:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$720_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 999,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5407:40:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1000,
															"nodeType": "ExpressionStatement",
															"src": "5407:40:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 958,
										"nodeType": "StructuredDocumentation",
										"src": "4513:566:9",
										"text": " @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT.\n NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n set here."
									},
									"id": 1004,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "forceApprove",
									"nameLocation": "5093:12:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 966,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 961,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5113:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1004,
												"src": "5106:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$720",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 960,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 959,
														"name": "IERC20",
														"nameLocations": [
															"5106:6:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 720,
														"src": "5106:6:9"
													},
													"referencedDeclaration": 720,
													"src": "5106:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$720",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 963,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5128:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1004,
												"src": "5120:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 962,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5120:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 965,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5145:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1004,
												"src": "5137:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 964,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5137:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5105:46:9"
									},
									"returnParameters": {
										"id": 967,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5161:0:9"
									},
									"scope": 1220,
									"src": "5084:380:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1046,
										"nodeType": "Block",
										"src": "5911:219:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1021,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1017,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1010,
																"src": "5925:2:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1018,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5928:4:9",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "5925:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1019,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5933:6:9",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5925:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1020,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5943:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5925:19:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 1035,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "6011:39:9",
														"subExpression": {
															"arguments": [
																{
																	"id": 1031,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1010,
																	"src": "6034:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1032,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1012,
																	"src": "6038:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1033,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1014,
																	"src": "6045:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 1029,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1008,
																	"src": "6012:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$461",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 1030,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6018:15:9",
																"memberName": "transferAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 412,
																"src": "6012:21:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 1034,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6012:38:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1044,
													"nodeType": "IfStatement",
													"src": "6007:117:9",
													"trueBody": {
														"id": 1043,
														"nodeType": "Block",
														"src": "6052:72:9",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 1039,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1008,
																					"src": "6106:5:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$461",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$461",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 1038,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6098:7:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1037,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "6098:7:9",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1040,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6098:14:9",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1036,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 768,
																		"src": "6073:24:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																			"typeString": "function (address) pure"
																		}
																	},
																	"id": 1041,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6073:40:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 1042,
																"nodeType": "RevertStatement",
																"src": "6066:47:9"
															}
														]
													}
												},
												"id": 1045,
												"nodeType": "IfStatement",
												"src": "5921:203:9",
												"trueBody": {
													"id": 1028,
													"nodeType": "Block",
													"src": "5946:55:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1023,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1008,
																		"src": "5973:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$461",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 1024,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1010,
																		"src": "5980:2:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1025,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1012,
																		"src": "5984:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$461",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1022,
																	"name": "safeTransfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 801,
																	"src": "5960:12:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$720_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 1026,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5960:30:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1027,
															"nodeType": "ExpressionStatement",
															"src": "5960:30:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1005,
										"nodeType": "StructuredDocumentation",
										"src": "5470:333:9",
										"text": " @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 1047,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCallRelaxed",
									"nameLocation": "5817:22:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1015,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1008,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5849:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1047,
												"src": "5840:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$461",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 1007,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1006,
														"name": "IERC1363",
														"nameLocations": [
															"5840:8:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 461,
														"src": "5840:8:9"
													},
													"referencedDeclaration": 461,
													"src": "5840:8:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$461",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1010,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5864:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1047,
												"src": "5856:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1009,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5856:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1012,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5876:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1047,
												"src": "5868:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1011,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5868:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1014,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5896:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1047,
												"src": "5883:17:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1013,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5883:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5839:62:9"
									},
									"returnParameters": {
										"id": 1016,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5911:0:9"
									},
									"scope": 1220,
									"src": "5808:322:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1093,
										"nodeType": "Block",
										"src": "6649:239:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1066,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1062,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1055,
																"src": "6663:2:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1063,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6666:4:9",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "6663:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1064,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6671:6:9",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6663:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1065,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6681:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6663:19:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 1082,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "6759:49:9",
														"subExpression": {
															"arguments": [
																{
																	"id": 1077,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1053,
																	"src": "6786:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1078,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1055,
																	"src": "6792:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1079,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1057,
																	"src": "6796:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1080,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1059,
																	"src": "6803:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 1075,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1051,
																	"src": "6760:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$461",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 1076,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6766:19:9",
																"memberName": "transferFromAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 438,
																"src": "6760:25:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 1081,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6760:48:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1091,
													"nodeType": "IfStatement",
													"src": "6755:127:9",
													"trueBody": {
														"id": 1090,
														"nodeType": "Block",
														"src": "6810:72:9",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 1086,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1051,
																					"src": "6864:5:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$461",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$461",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 1085,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6856:7:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1084,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "6856:7:9",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1087,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6856:14:9",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1083,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 768,
																		"src": "6831:24:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																			"typeString": "function (address) pure"
																		}
																	},
																	"id": 1088,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6831:40:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 1089,
																"nodeType": "RevertStatement",
																"src": "6824:47:9"
															}
														]
													}
												},
												"id": 1092,
												"nodeType": "IfStatement",
												"src": "6659:223:9",
												"trueBody": {
													"id": 1074,
													"nodeType": "Block",
													"src": "6684:65:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1068,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1051,
																		"src": "6715:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$461",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 1069,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1053,
																		"src": "6722:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1070,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1055,
																		"src": "6728:2:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1071,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1057,
																		"src": "6732:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$461",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1067,
																	"name": "safeTransferFrom",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 828,
																	"src": "6698:16:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$720_$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,address,uint256)"
																	}
																},
																"id": 1072,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6698:40:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1073,
															"nodeType": "ExpressionStatement",
															"src": "6698:40:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1048,
										"nodeType": "StructuredDocumentation",
										"src": "6136:341:9",
										"text": " @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 1094,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCallRelaxed",
									"nameLocation": "6491:26:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1060,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1051,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "6536:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1094,
												"src": "6527:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$461",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 1050,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1049,
														"name": "IERC1363",
														"nameLocations": [
															"6527:8:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 461,
														"src": "6527:8:9"
													},
													"referencedDeclaration": 461,
													"src": "6527:8:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$461",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1053,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6559:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1094,
												"src": "6551:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1052,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6551:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1055,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6581:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1094,
												"src": "6573:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1054,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6573:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1057,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6601:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1094,
												"src": "6593:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1056,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6593:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1059,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6629:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1094,
												"src": "6616:17:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1058,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6616:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6517:122:9"
									},
									"returnParameters": {
										"id": 1061,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6649:0:9"
									},
									"scope": 1220,
									"src": "6482:406:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1136,
										"nodeType": "Block",
										"src": "7655:218:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1107,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1100,
																"src": "7669:2:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1108,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7672:4:9",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "7669:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1109,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7677:6:9",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "7669:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7687:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7669:19:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 1125,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "7755:38:9",
														"subExpression": {
															"arguments": [
																{
																	"id": 1121,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1100,
																	"src": "7777:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1122,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1102,
																	"src": "7781:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1123,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1104,
																	"src": "7788:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 1119,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1098,
																	"src": "7756:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$461",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 1120,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7762:14:9",
																"memberName": "approveAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 460,
																"src": "7756:20:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 1124,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7756:37:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1134,
													"nodeType": "IfStatement",
													"src": "7751:116:9",
													"trueBody": {
														"id": 1133,
														"nodeType": "Block",
														"src": "7795:72:9",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 1129,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1098,
																					"src": "7849:5:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$461",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$461",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 1128,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "7841:7:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1127,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "7841:7:9",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1130,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7841:14:9",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1126,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 768,
																		"src": "7816:24:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																			"typeString": "function (address) pure"
																		}
																	},
																	"id": 1131,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7816:40:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 1132,
																"nodeType": "RevertStatement",
																"src": "7809:47:9"
															}
														]
													}
												},
												"id": 1135,
												"nodeType": "IfStatement",
												"src": "7665:202:9",
												"trueBody": {
													"id": 1118,
													"nodeType": "Block",
													"src": "7690:55:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1113,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1098,
																		"src": "7717:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$461",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 1114,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1100,
																		"src": "7724:2:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1115,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1102,
																		"src": "7728:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$461",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1112,
																	"name": "forceApprove",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1004,
																	"src": "7704:12:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$720_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 1116,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7704:30:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1117,
															"nodeType": "ExpressionStatement",
															"src": "7704:30:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1095,
										"nodeType": "StructuredDocumentation",
										"src": "6894:654:9",
										"text": " @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n once without retrying, and relies on the returned value to be true.\n Reverts if the returned value is other than `true`."
									},
									"id": 1137,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCallRelaxed",
									"nameLocation": "7562:21:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1098,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "7593:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1137,
												"src": "7584:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$461",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 1097,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1096,
														"name": "IERC1363",
														"nameLocations": [
															"7584:8:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 461,
														"src": "7584:8:9"
													},
													"referencedDeclaration": 461,
													"src": "7584:8:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$461",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1100,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7608:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1137,
												"src": "7600:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1099,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7600:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1102,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7620:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1137,
												"src": "7612:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1101,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7612:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1104,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7640:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1137,
												"src": "7627:17:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1103,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7627:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7583:62:9"
									},
									"returnParameters": {
										"id": 1106,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7655:0:9"
									},
									"scope": 1220,
									"src": "7553:320:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1177,
										"nodeType": "Block",
										"src": "8440:650:9",
										"statements": [
											{
												"assignments": [
													1147
												],
												"declarations": [
													{
														"constant": false,
														"id": 1147,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "8458:10:9",
														"nodeType": "VariableDeclaration",
														"scope": 1177,
														"src": "8450:18:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1146,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8450:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1148,
												"nodeType": "VariableDeclarationStatement",
												"src": "8450:18:9"
											},
											{
												"assignments": [
													1150
												],
												"declarations": [
													{
														"constant": false,
														"id": 1150,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "8486:11:9",
														"nodeType": "VariableDeclaration",
														"scope": 1177,
														"src": "8478:19:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1149,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8478:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1151,
												"nodeType": "VariableDeclarationStatement",
												"src": "8478:19:9"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "8532:396:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8546:75:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nodeType": "YulIdentifier",
																			"src": "8566:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8566:5:9"
																	},
																	{
																		"name": "token",
																		"nodeType": "YulIdentifier",
																		"src": "8573:5:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8580:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nodeType": "YulIdentifier",
																				"src": "8587:4:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8593:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8583:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8583:15:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nodeType": "YulIdentifier",
																				"src": "8606:4:9"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "8600:5:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8600:11:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8613:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8616:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nodeType": "YulIdentifier",
																	"src": "8561:4:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8561:60:9"
															},
															"variables": [
																{
																	"name": "success",
																	"nodeType": "YulTypedName",
																	"src": "8550:7:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8682:157:9",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "8700:22:9",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8717:4:9",
																					"type": "",
																					"value": "0x40"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "8711:5:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8711:11:9"
																		},
																		"variables": [
																			{
																				"name": "ptr",
																				"nodeType": "YulTypedName",
																				"src": "8704:3:9",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nodeType": "YulIdentifier",
																					"src": "8754:3:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8759:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nodeType": "YulIdentifier",
																						"src": "8762:14:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8762:16:9"
																				}
																			],
																			"functionName": {
																				"name": "returndatacopy",
																				"nodeType": "YulIdentifier",
																				"src": "8739:14:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8739:40:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8739:40:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nodeType": "YulIdentifier",
																					"src": "8803:3:9"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nodeType": "YulIdentifier",
																						"src": "8808:14:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8808:16:9"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8796:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8796:29:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8796:29:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "success",
																		"nodeType": "YulIdentifier",
																		"src": "8673:7:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8666:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8666:15:9"
															},
															"nodeType": "YulIf",
															"src": "8663:176:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8852:30:9",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nodeType": "YulIdentifier",
																	"src": "8866:14:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8866:16:9"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nodeType": "YulIdentifier",
																	"src": "8852:10:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8895:23:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8916:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "8910:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8910:8:9"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nodeType": "YulIdentifier",
																	"src": "8895:11:9"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1143,
														"isOffset": false,
														"isSlot": false,
														"src": "8587:4:9",
														"valueSize": 1
													},
													{
														"declaration": 1143,
														"isOffset": false,
														"isSlot": false,
														"src": "8606:4:9",
														"valueSize": 1
													},
													{
														"declaration": 1147,
														"isOffset": false,
														"isSlot": false,
														"src": "8852:10:9",
														"valueSize": 1
													},
													{
														"declaration": 1150,
														"isOffset": false,
														"isSlot": false,
														"src": "8895:11:9",
														"valueSize": 1
													},
													{
														"declaration": 1141,
														"isOffset": false,
														"isSlot": false,
														"src": "8573:5:9",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1152,
												"nodeType": "InlineAssembly",
												"src": "8507:421:9"
											},
											{
												"condition": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1155,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1153,
															"name": "returnSize",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1147,
															"src": "8942:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1154,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8956:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8942:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1166,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1164,
															"name": "returnValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1150,
															"src": "8994:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "31",
															"id": 1165,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9009:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "8994:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1167,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "8942:68:9",
													"trueExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1163,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1158,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1141,
																			"src": "8968:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$720",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$720",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 1157,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8960:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1156,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "8960:7:9",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1159,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8960:14:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1160,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8975:4:9",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "8960:19:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1161,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8980:6:9",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "8960:26:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1162,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8990:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8960:31:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1176,
												"nodeType": "IfStatement",
												"src": "8938:146:9",
												"trueBody": {
													"id": 1175,
													"nodeType": "Block",
													"src": "9012:72:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1171,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1141,
																				"src": "9066:5:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$720",
																					"typeString": "contract IERC20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IERC20_$720",
																					"typeString": "contract IERC20"
																				}
																			],
																			"id": 1170,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9058:7:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1169,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9058:7:9",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1172,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9058:14:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1168,
																	"name": "SafeERC20FailedOperation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 768,
																	"src": "9033:24:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1173,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9033:40:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1174,
															"nodeType": "RevertStatement",
															"src": "9026:47:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1138,
										"nodeType": "StructuredDocumentation",
										"src": "7879:486:9",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements."
									},
									"id": 1178,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "8379:19:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1144,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1141,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "8406:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1178,
												"src": "8399:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$720",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1140,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1139,
														"name": "IERC20",
														"nameLocations": [
															"8399:6:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 720,
														"src": "8399:6:9"
													},
													"referencedDeclaration": 720,
													"src": "8399:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$720",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1143,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "8426:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1178,
												"src": "8413:17:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1142,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8413:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8398:33:9"
									},
									"returnParameters": {
										"id": 1145,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8440:0:9"
									},
									"scope": 1220,
									"src": "8370:720:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1218,
										"nodeType": "Block",
										"src": "9681:391:9",
										"statements": [
											{
												"assignments": [
													1190
												],
												"declarations": [
													{
														"constant": false,
														"id": 1190,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "9696:7:9",
														"nodeType": "VariableDeclaration",
														"scope": 1218,
														"src": "9691:12:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1189,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "9691:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1191,
												"nodeType": "VariableDeclarationStatement",
												"src": "9691:12:9"
											},
											{
												"assignments": [
													1193
												],
												"declarations": [
													{
														"constant": false,
														"id": 1193,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "9721:10:9",
														"nodeType": "VariableDeclaration",
														"scope": 1218,
														"src": "9713:18:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1192,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9713:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1194,
												"nodeType": "VariableDeclarationStatement",
												"src": "9713:18:9"
											},
											{
												"assignments": [
													1196
												],
												"declarations": [
													{
														"constant": false,
														"id": 1196,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "9749:11:9",
														"nodeType": "VariableDeclaration",
														"scope": 1218,
														"src": "9741:19:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1195,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9741:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1197,
												"nodeType": "VariableDeclarationStatement",
												"src": "9741:19:9"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "9795:174:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9809:71:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nodeType": "YulIdentifier",
																			"src": "9825:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9825:5:9"
																	},
																	{
																		"name": "token",
																		"nodeType": "YulIdentifier",
																		"src": "9832:5:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9839:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nodeType": "YulIdentifier",
																				"src": "9846:4:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9852:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9842:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9842:15:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nodeType": "YulIdentifier",
																				"src": "9865:4:9"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "9859:5:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9859:11:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9872:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9875:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nodeType": "YulIdentifier",
																	"src": "9820:4:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9820:60:9"
															},
															"variableNames": [
																{
																	"name": "success",
																	"nodeType": "YulIdentifier",
																	"src": "9809:7:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9893:30:9",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nodeType": "YulIdentifier",
																	"src": "9907:14:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9907:16:9"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nodeType": "YulIdentifier",
																	"src": "9893:10:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9936:23:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9957:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "9951:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9951:8:9"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nodeType": "YulIdentifier",
																	"src": "9936:11:9"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1184,
														"isOffset": false,
														"isSlot": false,
														"src": "9846:4:9",
														"valueSize": 1
													},
													{
														"declaration": 1184,
														"isOffset": false,
														"isSlot": false,
														"src": "9865:4:9",
														"valueSize": 1
													},
													{
														"declaration": 1193,
														"isOffset": false,
														"isSlot": false,
														"src": "9893:10:9",
														"valueSize": 1
													},
													{
														"declaration": 1196,
														"isOffset": false,
														"isSlot": false,
														"src": "9936:11:9",
														"valueSize": 1
													},
													{
														"declaration": 1190,
														"isOffset": false,
														"isSlot": false,
														"src": "9809:7:9",
														"valueSize": 1
													},
													{
														"declaration": 1182,
														"isOffset": false,
														"isSlot": false,
														"src": "9832:5:9",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1198,
												"nodeType": "InlineAssembly",
												"src": "9770:199:9"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1216,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1199,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1190,
														"src": "9985:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1202,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1200,
																		"name": "returnSize",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1193,
																		"src": "9997:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1201,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10011:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "9997:15:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1213,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1211,
																		"name": "returnValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1196,
																		"src": "10048:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1212,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10063:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "10048:16:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 1214,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "Conditional",
																"src": "9997:67:9",
																"trueExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1210,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"arguments": [
																					{
																						"id": 1205,
																						"name": "token",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1182,
																						"src": "10023:5:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_IERC20_$720",
																							"typeString": "contract IERC20"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_contract$_IERC20_$720",
																							"typeString": "contract IERC20"
																						}
																					],
																					"id": 1204,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "10015:7:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_address_$",
																						"typeString": "type(address)"
																					},
																					"typeName": {
																						"id": 1203,
																						"name": "address",
																						"nodeType": "ElementaryTypeName",
																						"src": "10015:7:9",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 1206,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10015:14:9",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 1207,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "10030:4:9",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "10015:19:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 1208,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "10035:6:9",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "10015:26:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1209,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10044:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "10015:30:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 1215,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9996:69:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "9985:80:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1188,
												"id": 1217,
												"nodeType": "Return",
												"src": "9978:87:9"
											}
										]
									},
									"documentation": {
										"id": 1179,
										"nodeType": "StructuredDocumentation",
										"src": "9096:491:9",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead."
									},
									"id": 1219,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturnBool",
									"nameLocation": "9601:23:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1182,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "9632:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1219,
												"src": "9625:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$720",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1181,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1180,
														"name": "IERC20",
														"nameLocations": [
															"9625:6:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 720,
														"src": "9625:6:9"
													},
													"referencedDeclaration": 720,
													"src": "9625:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$720",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1184,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "9652:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1219,
												"src": "9639:17:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1183,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9639:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9624:33:9"
									},
									"returnParameters": {
										"id": 1188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1187,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1219,
												"src": "9675:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1186,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9675:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9674:6:9"
									},
									"scope": 1220,
									"src": "9592:480:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1221,
							"src": "698:9376:9",
							"usedErrors": [
								768,
								777
							],
							"usedEvents": []
						}
					],
					"src": "115:9960:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1250
						]
					},
					"id": 1251,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1222,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:10"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1223,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:10",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1250,
							"linearizedBaseContracts": [
								1250
							],
							"name": "Context",
							"nameLocation": "642:7:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1231,
										"nodeType": "Block",
										"src": "718:34:10",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1228,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:10",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1229,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:10",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:10",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1227,
												"id": 1230,
												"nodeType": "Return",
												"src": "728:17:10"
											}
										]
									},
									"id": 1232,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1224,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:10"
									},
									"returnParameters": {
										"id": 1227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1226,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1232,
												"src": "709:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1225,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:10"
									},
									"scope": 1250,
									"src": "656:96:10",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1240,
										"nodeType": "Block",
										"src": "825:32:10",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1237,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:10",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1238,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:10",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1236,
												"id": 1239,
												"nodeType": "Return",
												"src": "835:15:10"
											}
										]
									},
									"id": 1241,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1233,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:10"
									},
									"returnParameters": {
										"id": 1236,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1235,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1241,
												"src": "809:14:10",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1234,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:10"
									},
									"scope": 1250,
									"src": "758:99:10",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1248,
										"nodeType": "Block",
										"src": "935:25:10",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1246,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:10",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1245,
												"id": 1247,
												"nodeType": "Return",
												"src": "945:8:10"
											}
										]
									},
									"id": 1249,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1242,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:10"
									},
									"returnParameters": {
										"id": 1245,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1244,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1249,
												"src": "926:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1243,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:10"
									},
									"scope": 1250,
									"src": "863:97:10",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1251,
							"src": "624:338:10",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:10"
				},
				"id": 10
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							1274
						],
						"IERC165": [
							1286
						]
					},
					"id": 1275,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1252,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:11"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 1254,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1275,
							"sourceUnit": 1287,
							"src": "140:38:11",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1253,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1286,
										"src": "148:7:11",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1256,
										"name": "IERC165",
										"nameLocations": [
											"688:7:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1286,
										"src": "688:7:11"
									},
									"id": 1257,
									"nodeType": "InheritanceSpecifier",
									"src": "688:7:11"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1255,
								"nodeType": "StructuredDocumentation",
								"src": "180:479:11",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 1274,
							"linearizedBaseContracts": [
								1274,
								1286
							],
							"name": "ERC165",
							"nameLocation": "678:6:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										1285
									],
									"body": {
										"id": 1272,
										"nodeType": "Block",
										"src": "812:64:11",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 1270,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1265,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1260,
														"src": "829:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1267,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1286,
																	"src": "849:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1286_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1286_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 1266,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "844:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1268,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "844:13:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$1286",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 1269,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "858:11:11",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "844:25:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "829:40:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1264,
												"id": 1271,
												"nodeType": "Return",
												"src": "822:47:11"
											}
										]
									},
									"documentation": {
										"id": 1258,
										"nodeType": "StructuredDocumentation",
										"src": "702:23:11",
										"text": "@inheritdoc IERC165"
									},
									"functionSelector": "01ffc9a7",
									"id": 1273,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "739:17:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1261,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1260,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "764:11:11",
												"nodeType": "VariableDeclaration",
												"scope": 1273,
												"src": "757:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1259,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "757:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "756:20:11"
									},
									"returnParameters": {
										"id": 1264,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1263,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1273,
												"src": "806:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1262,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "806:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "805:6:11"
									},
									"scope": 1274,
									"src": "730:146:11",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1275,
							"src": "660:218:11",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "114:765:11"
				},
				"id": 11
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1286
						]
					},
					"id": 1287,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1276,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "115:25:12"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1277,
								"nodeType": "StructuredDocumentation",
								"src": "142:280:12",
								"text": " @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1286,
							"linearizedBaseContracts": [
								1286
							],
							"name": "IERC165",
							"nameLocation": "433:7:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1278,
										"nodeType": "StructuredDocumentation",
										"src": "447:340:12",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1285,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "801:17:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1280,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "826:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 1285,
												"src": "819:18:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1279,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "819:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "818:20:12"
									},
									"returnParameters": {
										"id": 1284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1283,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1285,
												"src": "862:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1282,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "862:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "861:6:12"
									},
									"scope": 1286,
									"src": "792:76:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1287,
							"src": "423:447:12",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:756:12"
				},
				"id": 12
			},
			"contracts/EtharisEscrow.sol": {
				"ast": {
					"absolutePath": "contracts/EtharisEscrow.sol",
					"exportedSymbols": {
						"AccessControl": [
							296
						],
						"Context": [
							1250
						],
						"ERC165": [
							1274
						],
						"EtharisEscrow": [
							3154
						],
						"IAccessControl": [
							379
						],
						"IERC1363": [
							461
						],
						"IERC165": [
							1286
						],
						"IERC20": [
							720
						],
						"IERC20Permit": [
							756
						],
						"Pausable": [
							577
						],
						"ReentrancyGuard": [
							642
						],
						"SafeERC20": [
							1220
						]
					},
					"id": 3155,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1288,
							"literals": [
								"solidity",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:13"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 1289,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3155,
							"sourceUnit": 721,
							"src": "57:56:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
							"file": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
							"id": 1290,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3155,
							"sourceUnit": 757,
							"src": "114:73:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 1291,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3155,
							"sourceUnit": 1221,
							"src": "188:65:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 1292,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3155,
							"sourceUnit": 643,
							"src": "254:62:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/Pausable.sol",
							"file": "@openzeppelin/contracts/security/Pausable.sol",
							"id": 1293,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3155,
							"sourceUnit": 578,
							"src": "317:55:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
							"file": "@openzeppelin/contracts/access/AccessControl.sol",
							"id": 1294,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3155,
							"sourceUnit": 297,
							"src": "373:58:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1296,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"706:15:13"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 642,
										"src": "706:15:13"
									},
									"id": 1297,
									"nodeType": "InheritanceSpecifier",
									"src": "706:15:13"
								},
								{
									"baseName": {
										"id": 1298,
										"name": "Pausable",
										"nameLocations": [
											"723:8:13"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 577,
										"src": "723:8:13"
									},
									"id": 1299,
									"nodeType": "InheritanceSpecifier",
									"src": "723:8:13"
								},
								{
									"baseName": {
										"id": 1300,
										"name": "AccessControl",
										"nameLocations": [
											"733:13:13"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 296,
										"src": "733:13:13"
									},
									"id": 1301,
									"nodeType": "InheritanceSpecifier",
									"src": "733:13:13"
								}
							],
							"canonicalName": "EtharisEscrow",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1295,
								"nodeType": "StructuredDocumentation",
								"src": "433:246:13",
								"text": " @title EtharisEscrow\n @author Etharis Team\n @dev Escrow contract for sponsorship deals. All action functions can only be called by the Server Wallet (Owner).\n @notice Uses IDRX as the payment token (Indonesian Rupiah stablecoin)."
							},
							"fullyImplemented": true,
							"id": 3154,
							"linearizedBaseContracts": [
								3154,
								296,
								1274,
								1286,
								379,
								577,
								1250,
								642
							],
							"name": "EtharisEscrow",
							"nameLocation": "689:13:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1305,
									"libraryName": {
										"id": 1302,
										"name": "SafeERC20",
										"nameLocations": [
											"759:9:13"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1220,
										"src": "759:9:13"
									},
									"nodeType": "UsingForDirective",
									"src": "753:27:13",
									"typeName": {
										"id": 1304,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1303,
											"name": "IERC20",
											"nameLocations": [
												"773:6:13"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 720,
											"src": "773:6:13"
										},
										"referencedDeclaration": 720,
										"src": "773:6:13",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$720",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"errorSelector": "714d500e",
									"id": 1307,
									"name": "DealAlreadyExists",
									"nameLocation": "858:17:13",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1306,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "875:2:13"
									},
									"src": "852:26:13"
								},
								{
									"errorSelector": "e6c4247b",
									"id": 1309,
									"name": "InvalidAddress",
									"nameLocation": "889:14:13",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1308,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "903:2:13"
									},
									"src": "883:23:13"
								},
								{
									"errorSelector": "93680d14",
									"id": 1311,
									"name": "CreatorCannotBeBrand",
									"nameLocation": "917:20:13",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1310,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "937:2:13"
									},
									"src": "911:29:13"
								},
								{
									"errorSelector": "5e85ae73",
									"id": 1313,
									"name": "AmountMustBeGreaterThanZero",
									"nameLocation": "951:27:13",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1312,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "978:2:13"
									},
									"src": "945:36:13"
								},
								{
									"errorSelector": "0642ce77",
									"id": 1315,
									"name": "DeadlineMustBeInFuture",
									"nameLocation": "992:22:13",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1314,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1014:2:13"
									},
									"src": "986:31:13"
								},
								{
									"errorSelector": "3f26e808",
									"id": 1317,
									"name": "BriefHashRequired",
									"nameLocation": "1028:17:13",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1316,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1045:2:13"
									},
									"src": "1022:26:13"
								},
								{
									"errorSelector": "88f691cc",
									"id": 1319,
									"name": "DealNotFound",
									"nameLocation": "1059:12:13",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1318,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1071:2:13"
									},
									"src": "1053:21:13"
								},
								{
									"errorSelector": "5e40b94f",
									"id": 1321,
									"name": "InvalidDealStatus",
									"nameLocation": "1085:17:13",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1320,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1102:2:13"
									},
									"src": "1079:26:13"
								},
								{
									"errorSelector": "ea8e4eb5",
									"id": 1323,
									"name": "NotAuthorized",
									"nameLocation": "1116:13:13",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1322,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1129:2:13"
									},
									"src": "1110:22:13"
								},
								{
									"errorSelector": "c927e758",
									"id": 1325,
									"name": "DealAlreadyFunded",
									"nameLocation": "1143:17:13",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1324,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1160:2:13"
									},
									"src": "1137:26:13"
								},
								{
									"errorSelector": "f4d678b8",
									"id": 1327,
									"name": "InsufficientBalance",
									"nameLocation": "1174:19:13",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1326,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1193:2:13"
									},
									"src": "1168:28:13"
								},
								{
									"errorSelector": "13be252b",
									"id": 1329,
									"name": "InsufficientAllowance",
									"nameLocation": "1207:21:13",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1328,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1228:2:13"
									},
									"src": "1201:30:13"
								},
								{
									"errorSelector": "8ea2177a",
									"id": 1331,
									"name": "DealNotFunded",
									"nameLocation": "1242:13:13",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1330,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1255:2:13"
									},
									"src": "1236:22:13"
								},
								{
									"errorSelector": "ec971c66",
									"id": 1333,
									"name": "SubmissionDeadlinePassed",
									"nameLocation": "1269:24:13",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1332,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1293:2:13"
									},
									"src": "1263:33:13"
								},
								{
									"errorSelector": "361178c7",
									"id": 1335,
									"name": "ContentUrlRequired",
									"nameLocation": "1307:18:13",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1334,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1325:2:13"
									},
									"src": "1301:27:13"
								},
								{
									"errorSelector": "2d6bf645",
									"id": 1337,
									"name": "ReviewPeriodNotEnded",
									"nameLocation": "1339:20:13",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1336,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1359:2:13"
									},
									"src": "1333:29:13"
								},
								{
									"errorSelector": "5a1eae5a",
									"id": 1339,
									"name": "ReviewPeriodEnded",
									"nameLocation": "1373:17:13",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1338,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1390:2:13"
									},
									"src": "1367:26:13"
								},
								{
									"errorSelector": "bc7fd331",
									"id": 1341,
									"name": "ReasonRequired",
									"nameLocation": "1404:14:13",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1340,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1418:2:13"
									},
									"src": "1398:23:13"
								},
								{
									"errorSelector": "2eb35430",
									"id": 1343,
									"name": "DeadlineNotPassed",
									"nameLocation": "1432:17:13",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1342,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1449:2:13"
									},
									"src": "1426:26:13"
								},
								{
									"errorSelector": "26f86568",
									"id": 1345,
									"name": "CannotCancelThisDeal",
									"nameLocation": "1463:20:13",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1344,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1483:2:13"
									},
									"src": "1457:29:13"
								},
								{
									"errorSelector": "cd4e6167",
									"id": 1347,
									"name": "FeeTooHigh",
									"nameLocation": "1497:10:13",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1346,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1507:2:13"
									},
									"src": "1491:19:13"
								},
								{
									"errorSelector": "c5d17e08",
									"id": 1349,
									"name": "CannotWithdrawIDRX",
									"nameLocation": "1521:18:13",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1348,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1539:2:13"
									},
									"src": "1515:27:13"
								},
								{
									"errorSelector": "5f0be7af",
									"id": 1351,
									"name": "InvalidDealID",
									"nameLocation": "1553:13:13",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1350,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1566:2:13"
									},
									"src": "1547:22:13"
								},
								{
									"errorSelector": "2c5211c6",
									"id": 1353,
									"name": "InvalidAmount",
									"nameLocation": "1580:13:13",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1352,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1593:2:13"
									},
									"src": "1574:22:13"
								},
								{
									"errorSelector": "b78cb0dd",
									"id": 1355,
									"name": "PermitFailed",
									"nameLocation": "1607:12:13",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1354,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1619:2:13"
									},
									"src": "1601:21:13"
								},
								{
									"constant": false,
									"id": 1358,
									"mutability": "immutable",
									"name": "_idrxToken",
									"nameLocation": "1702:10:13",
									"nodeType": "VariableDeclaration",
									"scope": 3154,
									"src": "1677:35:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$720",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 1357,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1356,
											"name": "IERC20",
											"nameLocations": [
												"1677:6:13"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 720,
											"src": "1677:6:13"
										},
										"referencedDeclaration": 720,
										"src": "1677:6:13",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$720",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1361,
									"mutability": "mutable",
									"name": "_platformFeeBps",
									"nameLocation": "1733:15:13",
									"nodeType": "VariableDeclaration",
									"scope": 3154,
									"src": "1718:36:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint96",
										"typeString": "uint96"
									},
									"typeName": {
										"id": 1359,
										"name": "uint96",
										"nodeType": "ElementaryTypeName",
										"src": "1718:6:13",
										"typeDescriptions": {
											"typeIdentifier": "t_uint96",
											"typeString": "uint96"
										}
									},
									"value": {
										"hexValue": "323530",
										"id": 1360,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1751:3:13",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_250_by_1",
											"typeString": "int_const 250"
										},
										"value": "250"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1364,
									"mutability": "constant",
									"name": "BPS_DENOMINATOR",
									"nameLocation": "1792:15:13",
									"nodeType": "VariableDeclaration",
									"scope": 3154,
									"src": "1768:47:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint96",
										"typeString": "uint96"
									},
									"typeName": {
										"id": 1362,
										"name": "uint96",
										"nodeType": "ElementaryTypeName",
										"src": "1768:6:13",
										"typeDescriptions": {
											"typeIdentifier": "t_uint96",
											"typeString": "uint96"
										}
									},
									"value": {
										"hexValue": "3130303030",
										"id": 1363,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1810:5:13",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10000_by_1",
											"typeString": "int_const 10000"
										},
										"value": "10000"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1367,
									"mutability": "constant",
									"name": "REVIEW_PERIOD",
									"nameLocation": "1845:13:13",
									"nodeType": "VariableDeclaration",
									"scope": 3154,
									"src": "1821:48:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint64",
										"typeString": "uint64"
									},
									"typeName": {
										"id": 1365,
										"name": "uint64",
										"nodeType": "ElementaryTypeName",
										"src": "1821:6:13",
										"typeDescriptions": {
											"typeIdentifier": "t_uint64",
											"typeString": "uint64"
										}
									},
									"value": {
										"hexValue": "3732",
										"id": 1366,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1861:8:13",
										"subdenomination": "hours",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_259200_by_1",
											"typeString": "int_const 259200"
										},
										"value": "72"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1369,
									"mutability": "mutable",
									"name": "_feeRecipient",
									"nameLocation": "1891:13:13",
									"nodeType": "VariableDeclaration",
									"scope": 3154,
									"src": "1875:29:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1368,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1875:7:13",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"functionSelector": "18cf2834",
									"id": 1374,
									"mutability": "constant",
									"name": "SERVER_ROLE",
									"nameLocation": "1935:11:13",
									"nodeType": "VariableDeclaration",
									"scope": 3154,
									"src": "1911:62:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1370,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1911:7:13",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "5345525645525f524f4c45",
												"id": 1372,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1959:13:13",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_a8a7bc421f721cb936ea99efdad79237e6ee0b871a2a08cf648691f9584cdc77",
													"typeString": "literal_string \"SERVER_ROLE\""
												},
												"value": "SERVER_ROLE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_a8a7bc421f721cb936ea99efdad79237e6ee0b871a2a08cf648691f9584cdc77",
													"typeString": "literal_string \"SERVER_ROLE\""
												}
											],
											"id": 1371,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "1949:9:13",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 1373,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1949:24:13",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"canonicalName": "EtharisEscrow.ContractStatus",
									"id": 1381,
									"members": [
										{
											"id": 1375,
											"name": "PENDING",
											"nameLocation": "2010:7:13",
											"nodeType": "EnumValue",
											"src": "2010:7:13"
										},
										{
											"id": 1376,
											"name": "ACTIVE",
											"nameLocation": "2027:6:13",
											"nodeType": "EnumValue",
											"src": "2027:6:13"
										},
										{
											"id": 1377,
											"name": "PENDING_REVIEW",
											"nameLocation": "2043:14:13",
											"nodeType": "EnumValue",
											"src": "2043:14:13"
										},
										{
											"id": 1378,
											"name": "DISPUTED",
											"nameLocation": "2067:8:13",
											"nodeType": "EnumValue",
											"src": "2067:8:13"
										},
										{
											"id": 1379,
											"name": "COMPLETED",
											"nameLocation": "2085:9:13",
											"nodeType": "EnumValue",
											"src": "2085:9:13"
										},
										{
											"id": 1380,
											"name": "CANCELLED",
											"nameLocation": "2104:9:13",
											"nodeType": "EnumValue",
											"src": "2104:9:13"
										}
									],
									"name": "ContractStatus",
									"nameLocation": "1985:14:13",
									"nodeType": "EnumDefinition",
									"src": "1980:139:13"
								},
								{
									"canonicalName": "EtharisEscrow.Deal",
									"id": 1409,
									"members": [
										{
											"constant": false,
											"id": 1383,
											"mutability": "mutable",
											"name": "brand",
											"nameLocation": "2155:5:13",
											"nodeType": "VariableDeclaration",
											"scope": 1409,
											"src": "2147:13:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1382,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "2147:7:13",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1385,
											"mutability": "mutable",
											"name": "creator",
											"nameLocation": "2178:7:13",
											"nodeType": "VariableDeclaration",
											"scope": 1409,
											"src": "2170:15:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1384,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "2170:7:13",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1387,
											"mutability": "mutable",
											"name": "dealId",
											"nameLocation": "2202:6:13",
											"nodeType": "VariableDeclaration",
											"scope": 1409,
											"src": "2195:13:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 1386,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "2195:6:13",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1389,
											"mutability": "mutable",
											"name": "briefHash",
											"nameLocation": "2225:9:13",
											"nodeType": "VariableDeclaration",
											"scope": 1409,
											"src": "2218:16:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 1388,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "2218:6:13",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1391,
											"mutability": "mutable",
											"name": "contentUrl",
											"nameLocation": "2251:10:13",
											"nodeType": "VariableDeclaration",
											"scope": 1409,
											"src": "2244:17:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 1390,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "2244:6:13",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1393,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "2278:6:13",
											"nodeType": "VariableDeclaration",
											"scope": 1409,
											"src": "2271:13:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint96",
												"typeString": "uint96"
											},
											"typeName": {
												"id": 1392,
												"name": "uint96",
												"nodeType": "ElementaryTypeName",
												"src": "2271:6:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1395,
											"mutability": "mutable",
											"name": "deadline",
											"nameLocation": "2301:8:13",
											"nodeType": "VariableDeclaration",
											"scope": 1409,
											"src": "2294:15:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 1394,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "2294:6:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1397,
											"mutability": "mutable",
											"name": "fundedAt",
											"nameLocation": "2326:8:13",
											"nodeType": "VariableDeclaration",
											"scope": 1409,
											"src": "2319:15:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 1396,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "2319:6:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1399,
											"mutability": "mutable",
											"name": "submittedAt",
											"nameLocation": "2351:11:13",
											"nodeType": "VariableDeclaration",
											"scope": 1409,
											"src": "2344:18:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 1398,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "2344:6:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1401,
											"mutability": "mutable",
											"name": "reviewDeadline",
											"nameLocation": "2379:14:13",
											"nodeType": "VariableDeclaration",
											"scope": 1409,
											"src": "2372:21:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 1400,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "2372:6:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1403,
											"mutability": "mutable",
											"name": "createdAt",
											"nameLocation": "2410:9:13",
											"nodeType": "VariableDeclaration",
											"scope": 1409,
											"src": "2403:16:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 1402,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "2403:6:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1406,
											"mutability": "mutable",
											"name": "status",
											"nameLocation": "2444:6:13",
											"nodeType": "VariableDeclaration",
											"scope": 1409,
											"src": "2429:21:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_enum$_ContractStatus_$1381",
												"typeString": "enum EtharisEscrow.ContractStatus"
											},
											"typeName": {
												"id": 1405,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 1404,
													"name": "ContractStatus",
													"nameLocations": [
														"2429:14:13"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 1381,
													"src": "2429:14:13"
												},
												"referencedDeclaration": 1381,
												"src": "2429:14:13",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_ContractStatus_$1381",
													"typeString": "enum EtharisEscrow.ContractStatus"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1408,
											"mutability": "mutable",
											"name": "exists",
											"nameLocation": "2465:6:13",
											"nodeType": "VariableDeclaration",
											"scope": 1409,
											"src": "2460:11:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1407,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "2460:4:13",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Deal",
									"nameLocation": "2132:4:13",
									"nodeType": "StructDefinition",
									"scope": 3154,
									"src": "2125:353:13",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1414,
									"mutability": "mutable",
									"name": "_deals",
									"nameLocation": "2532:6:13",
									"nodeType": "VariableDeclaration",
									"scope": 3154,
									"src": "2484:54:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_Deal_$1409_storage_$",
										"typeString": "mapping(string => struct EtharisEscrow.Deal)"
									},
									"typeName": {
										"id": 1413,
										"keyName": "dealId",
										"keyNameLocation": "2499:6:13",
										"keyType": {
											"id": 1410,
											"name": "string",
											"nodeType": "ElementaryTypeName",
											"src": "2492:6:13",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											}
										},
										"nodeType": "Mapping",
										"src": "2484:39:13",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_Deal_$1409_storage_$",
											"typeString": "mapping(string => struct EtharisEscrow.Deal)"
										},
										"valueName": "dealData",
										"valueNameLocation": "2514:8:13",
										"valueType": {
											"id": 1412,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 1411,
												"name": "Deal",
												"nameLocations": [
													"2509:4:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1409,
												"src": "2509:4:13"
											},
											"referencedDeclaration": 1409,
											"src": "2509:4:13",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Deal_$1409_storage_ptr",
												"typeString": "struct EtharisEscrow.Deal"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1419,
									"mutability": "mutable",
									"name": "_brandDeals",
									"nameLocation": "2594:11:13",
									"nodeType": "VariableDeclaration",
									"scope": 3154,
									"src": "2544:61:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_string_storage_$dyn_storage_$",
										"typeString": "mapping(address => string[])"
									},
									"typeName": {
										"id": 1418,
										"keyName": "user",
										"keyNameLocation": "2560:4:13",
										"keyType": {
											"id": 1415,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2552:7:13",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2544:41:13",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_string_storage_$dyn_storage_$",
											"typeString": "mapping(address => string[])"
										},
										"valueName": "dealIds",
										"valueNameLocation": "2577:7:13",
										"valueType": {
											"baseType": {
												"id": 1416,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "2568:6:13",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"id": 1417,
											"nodeType": "ArrayTypeName",
											"src": "2568:8:13",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
												"typeString": "string[]"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1424,
									"mutability": "mutable",
									"name": "_creatorDeals",
									"nameLocation": "2661:13:13",
									"nodeType": "VariableDeclaration",
									"scope": 3154,
									"src": "2611:63:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_string_storage_$dyn_storage_$",
										"typeString": "mapping(address => string[])"
									},
									"typeName": {
										"id": 1423,
										"keyName": "user",
										"keyNameLocation": "2627:4:13",
										"keyType": {
											"id": 1420,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2619:7:13",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2611:41:13",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_string_storage_$dyn_storage_$",
											"typeString": "mapping(address => string[])"
										},
										"valueName": "dealIds",
										"valueNameLocation": "2644:7:13",
										"valueType": {
											"baseType": {
												"id": 1421,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "2635:6:13",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"id": 1422,
											"nodeType": "ArrayTypeName",
											"src": "2635:8:13",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
												"typeString": "string[]"
											}
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "ceb1a488be98b2739817f21e7d3b0a343434519cd0fe4db3ef5fc27a96e8d295",
									"id": 1436,
									"name": "DealCreated",
									"nameLocation": "2727:11:13",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1426,
												"indexed": true,
												"mutability": "mutable",
												"name": "dealId",
												"nameLocation": "2763:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 1436,
												"src": "2748:21:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1425,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2748:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1428,
												"indexed": true,
												"mutability": "mutable",
												"name": "brand",
												"nameLocation": "2795:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 1436,
												"src": "2779:21:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1427,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2779:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1430,
												"indexed": true,
												"mutability": "mutable",
												"name": "creator",
												"nameLocation": "2826:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 1436,
												"src": "2810:23:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1429,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2810:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1432,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2850:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 1436,
												"src": "2843:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 1431,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "2843:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1434,
												"indexed": false,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "2873:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 1436,
												"src": "2866:15:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 1433,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "2866:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2738:149:13"
									},
									"src": "2721:167:13"
								},
								{
									"anonymous": false,
									"eventSelector": "2c138f65913cd3b9ca6f36e4b59e26830a033a978ca69f935781972e6df1f61d",
									"id": 1444,
									"name": "DealFunded",
									"nameLocation": "2899:10:13",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1443,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1438,
												"indexed": true,
												"mutability": "mutable",
												"name": "dealId",
												"nameLocation": "2934:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 1444,
												"src": "2919:21:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1437,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2919:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1440,
												"indexed": true,
												"mutability": "mutable",
												"name": "brand",
												"nameLocation": "2966:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 1444,
												"src": "2950:21:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1439,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2950:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1442,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2988:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 1444,
												"src": "2981:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 1441,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "2981:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2909:91:13"
									},
									"src": "2893:108:13"
								},
								{
									"anonymous": false,
									"eventSelector": "934109f661b65dbccffcae4f7ee04261eb7b36e5136e1ca86dde1b00598cb031",
									"id": 1454,
									"name": "ContentSubmitted",
									"nameLocation": "3012:16:13",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1453,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1446,
												"indexed": true,
												"mutability": "mutable",
												"name": "dealId",
												"nameLocation": "3053:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 1454,
												"src": "3038:21:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1445,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3038:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1448,
												"indexed": true,
												"mutability": "mutable",
												"name": "creator",
												"nameLocation": "3085:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 1454,
												"src": "3069:23:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1447,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3069:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1450,
												"indexed": false,
												"mutability": "mutable",
												"name": "contentUrl",
												"nameLocation": "3109:10:13",
												"nodeType": "VariableDeclaration",
												"scope": 1454,
												"src": "3102:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1449,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3102:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1452,
												"indexed": false,
												"mutability": "mutable",
												"name": "reviewDeadline",
												"nameLocation": "3136:14:13",
												"nodeType": "VariableDeclaration",
												"scope": 1454,
												"src": "3129:21:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 1451,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "3129:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3028:128:13"
									},
									"src": "3006:151:13"
								},
								{
									"anonymous": false,
									"eventSelector": "00caec7345d2eb04a42197ac2a2cd7cd74a00b2991b69bb53e23465d4092fdfb",
									"id": 1460,
									"name": "DealApproved",
									"nameLocation": "3168:12:13",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1459,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1456,
												"indexed": true,
												"mutability": "mutable",
												"name": "dealId",
												"nameLocation": "3196:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 1460,
												"src": "3181:21:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1455,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3181:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1458,
												"indexed": true,
												"mutability": "mutable",
												"name": "brand",
												"nameLocation": "3220:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 1460,
												"src": "3204:21:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1457,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3204:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3180:46:13"
									},
									"src": "3162:65:13"
								},
								{
									"anonymous": false,
									"eventSelector": "8531198e5d946af9a770d2eeba00258645e163142d835fe1b04e45f4db720f8b",
									"id": 1470,
									"name": "PaymentReleased",
									"nameLocation": "3238:15:13",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1469,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1462,
												"indexed": true,
												"mutability": "mutable",
												"name": "dealId",
												"nameLocation": "3278:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 1470,
												"src": "3263:21:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1461,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3263:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1464,
												"indexed": true,
												"mutability": "mutable",
												"name": "creator",
												"nameLocation": "3310:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 1470,
												"src": "3294:23:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1463,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3294:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1466,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3334:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 1470,
												"src": "3327:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 1465,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "3327:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1468,
												"indexed": false,
												"mutability": "mutable",
												"name": "platformFee",
												"nameLocation": "3357:11:13",
												"nodeType": "VariableDeclaration",
												"scope": 1470,
												"src": "3350:18:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 1467,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "3350:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3253:121:13"
									},
									"src": "3232:143:13"
								},
								{
									"anonymous": false,
									"eventSelector": "de7b01bef0884582ce204f7f920e57f99dd569f93867450872f436be5a03c755",
									"id": 1478,
									"name": "DisputeInitiated",
									"nameLocation": "3386:16:13",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1477,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1472,
												"indexed": true,
												"mutability": "mutable",
												"name": "dealId",
												"nameLocation": "3427:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 1478,
												"src": "3412:21:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1471,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3412:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1474,
												"indexed": true,
												"mutability": "mutable",
												"name": "brand",
												"nameLocation": "3459:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 1478,
												"src": "3443:21:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1473,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3443:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1476,
												"indexed": false,
												"mutability": "mutable",
												"name": "reason",
												"nameLocation": "3481:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 1478,
												"src": "3474:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1475,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3474:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3402:91:13"
									},
									"src": "3380:114:13"
								},
								{
									"anonymous": false,
									"eventSelector": "ea4ea4b4229888eeba3eb2772df89c52af23c7fe3d530b0c1f2ca146f32c12ba",
									"id": 1490,
									"name": "DisputeResolved",
									"nameLocation": "3505:15:13",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1489,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1480,
												"indexed": true,
												"mutability": "mutable",
												"name": "dealId",
												"nameLocation": "3545:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 1490,
												"src": "3530:21:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1479,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3530:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1482,
												"indexed": true,
												"mutability": "mutable",
												"name": "creator",
												"nameLocation": "3577:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 1490,
												"src": "3561:23:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1481,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3561:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1484,
												"indexed": false,
												"mutability": "mutable",
												"name": "accepted5050",
												"nameLocation": "3599:12:13",
												"nodeType": "VariableDeclaration",
												"scope": 1490,
												"src": "3594:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1483,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3594:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1486,
												"indexed": false,
												"mutability": "mutable",
												"name": "creatorAmount",
												"nameLocation": "3628:13:13",
												"nodeType": "VariableDeclaration",
												"scope": 1490,
												"src": "3621:20:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 1485,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "3621:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1488,
												"indexed": false,
												"mutability": "mutable",
												"name": "brandRefund",
												"nameLocation": "3658:11:13",
												"nodeType": "VariableDeclaration",
												"scope": 1490,
												"src": "3651:18:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 1487,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "3651:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3520:155:13"
									},
									"src": "3499:177:13"
								},
								{
									"anonymous": false,
									"eventSelector": "b559d285c87e4fa0f561388264310703ff0c6c454a39ae52d0ae94032ff0db70",
									"id": 1498,
									"name": "DealCancelled",
									"nameLocation": "3687:13:13",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1492,
												"indexed": true,
												"mutability": "mutable",
												"name": "dealId",
												"nameLocation": "3725:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 1498,
												"src": "3710:21:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1491,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3710:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1494,
												"indexed": true,
												"mutability": "mutable",
												"name": "initiator",
												"nameLocation": "3757:9:13",
												"nodeType": "VariableDeclaration",
												"scope": 1498,
												"src": "3741:25:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1493,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3741:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1496,
												"indexed": false,
												"mutability": "mutable",
												"name": "refundAmount",
												"nameLocation": "3783:12:13",
												"nodeType": "VariableDeclaration",
												"scope": 1498,
												"src": "3776:19:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 1495,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "3776:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3700:101:13"
									},
									"src": "3681:121:13"
								},
								{
									"anonymous": false,
									"eventSelector": "feeddf72b7ee4210b769104cb8b071e5706232ac7f671fb292af429ffd58b587",
									"id": 1504,
									"name": "PlatformFeeUpdated",
									"nameLocation": "3813:18:13",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1503,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1500,
												"indexed": false,
												"mutability": "mutable",
												"name": "oldFee",
												"nameLocation": "3839:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 1504,
												"src": "3832:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 1499,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "3832:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1502,
												"indexed": false,
												"mutability": "mutable",
												"name": "newFee",
												"nameLocation": "3854:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 1504,
												"src": "3847:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 1501,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "3847:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3831:30:13"
									},
									"src": "3807:55:13"
								},
								{
									"anonymous": false,
									"eventSelector": "aaebcf1bfa00580e41d966056b48521fa9f202645c86d4ddf28113e617c1b1d3",
									"id": 1510,
									"name": "FeeRecipientUpdated",
									"nameLocation": "3873:19:13",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1509,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1506,
												"indexed": false,
												"mutability": "mutable",
												"name": "oldRecipient",
												"nameLocation": "3901:12:13",
												"nodeType": "VariableDeclaration",
												"scope": 1510,
												"src": "3893:20:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1505,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3893:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1508,
												"indexed": false,
												"mutability": "mutable",
												"name": "newRecipient",
												"nameLocation": "3923:12:13",
												"nodeType": "VariableDeclaration",
												"scope": 1510,
												"src": "3915:20:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1507,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3915:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3892:44:13"
									},
									"src": "3867:70:13"
								},
								{
									"body": {
										"id": 1527,
										"nodeType": "Block",
										"src": "4048:87:13",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1521,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"baseExpression": {
																"id": 1516,
																"name": "_deals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1414,
																"src": "4062:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_Deal_$1409_storage_$",
																	"typeString": "mapping(string memory => struct EtharisEscrow.Deal storage ref)"
																}
															},
															"id": 1518,
															"indexExpression": {
																"id": 1517,
																"name": "_dealId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1512,
																"src": "4069:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4062:15:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Deal_$1409_storage",
																"typeString": "struct EtharisEscrow.Deal storage ref"
															}
														},
														"id": 1519,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4078:5:13",
														"memberName": "brand",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1383,
														"src": "4062:21:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 1520,
														"name": "_brand",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1514,
														"src": "4087:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4062:31:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1525,
												"nodeType": "IfStatement",
												"src": "4058:59:13",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1522,
															"name": "NotAuthorized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1323,
															"src": "4102:13:13",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1523,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4102:15:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1524,
													"nodeType": "RevertStatement",
													"src": "4095:22:13"
												}
											},
											{
												"id": 1526,
												"nodeType": "PlaceholderStatement",
												"src": "4127:1:13"
											}
										]
									},
									"id": 1528,
									"name": "onlyDealBrand",
									"nameLocation": "3995:13:13",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1515,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1512,
												"mutability": "mutable",
												"name": "_dealId",
												"nameLocation": "4023:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 1528,
												"src": "4009:21:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1511,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4009:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1514,
												"mutability": "mutable",
												"name": "_brand",
												"nameLocation": "4040:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 1528,
												"src": "4032:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1513,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4032:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4008:39:13"
									},
									"src": "3986:149:13",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1545,
										"nodeType": "Block",
										"src": "4207:91:13",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"baseExpression": {
																"id": 1534,
																"name": "_deals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1414,
																"src": "4221:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_Deal_$1409_storage_$",
																	"typeString": "mapping(string memory => struct EtharisEscrow.Deal storage ref)"
																}
															},
															"id": 1536,
															"indexExpression": {
																"id": 1535,
																"name": "_dealId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1530,
																"src": "4228:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4221:15:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Deal_$1409_storage",
																"typeString": "struct EtharisEscrow.Deal storage ref"
															}
														},
														"id": 1537,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4237:7:13",
														"memberName": "creator",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1385,
														"src": "4221:23:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 1538,
														"name": "_creator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1532,
														"src": "4248:8:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4221:35:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1543,
												"nodeType": "IfStatement",
												"src": "4217:63:13",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1540,
															"name": "NotAuthorized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1323,
															"src": "4265:13:13",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1541,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4265:15:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1542,
													"nodeType": "RevertStatement",
													"src": "4258:22:13"
												}
											},
											{
												"id": 1544,
												"nodeType": "PlaceholderStatement",
												"src": "4290:1:13"
											}
										]
									},
									"id": 1546,
									"name": "onlyDealCreator",
									"nameLocation": "4150:15:13",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1533,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1530,
												"mutability": "mutable",
												"name": "_dealId",
												"nameLocation": "4180:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 1546,
												"src": "4166:21:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1529,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4166:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1532,
												"mutability": "mutable",
												"name": "_creator",
												"nameLocation": "4197:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 1546,
												"src": "4189:16:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1531,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4189:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4165:41:13"
									},
									"src": "4141:157:13",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1560,
										"nodeType": "Block",
										"src": "4347:78:13",
										"statements": [
											{
												"condition": {
													"id": 1554,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4361:23:13",
													"subExpression": {
														"expression": {
															"baseExpression": {
																"id": 1550,
																"name": "_deals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1414,
																"src": "4362:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_Deal_$1409_storage_$",
																	"typeString": "mapping(string memory => struct EtharisEscrow.Deal storage ref)"
																}
															},
															"id": 1552,
															"indexExpression": {
																"id": 1551,
																"name": "_dealId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1548,
																"src": "4369:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4362:15:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Deal_$1409_storage",
																"typeString": "struct EtharisEscrow.Deal storage ref"
															}
														},
														"id": 1553,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4378:6:13",
														"memberName": "exists",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1408,
														"src": "4362:22:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1558,
												"nodeType": "IfStatement",
												"src": "4357:50:13",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1555,
															"name": "DealNotFound",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1319,
															"src": "4393:12:13",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1556,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4393:14:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1557,
													"nodeType": "RevertStatement",
													"src": "4386:21:13"
												}
											},
											{
												"id": 1559,
												"nodeType": "PlaceholderStatement",
												"src": "4417:1:13"
											}
										]
									},
									"id": 1561,
									"name": "dealExists",
									"nameLocation": "4313:10:13",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1549,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1548,
												"mutability": "mutable",
												"name": "_dealId",
												"nameLocation": "4338:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 1561,
												"src": "4324:21:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1547,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4324:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4323:23:13"
									},
									"src": "4304:121:13",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1579,
										"nodeType": "Block",
										"src": "4496:93:13",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_enum$_ContractStatus_$1381",
														"typeString": "enum EtharisEscrow.ContractStatus"
													},
													"id": 1573,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"baseExpression": {
																"id": 1568,
																"name": "_deals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1414,
																"src": "4510:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_Deal_$1409_storage_$",
																	"typeString": "mapping(string memory => struct EtharisEscrow.Deal storage ref)"
																}
															},
															"id": 1570,
															"indexExpression": {
																"id": 1569,
																"name": "_dealId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1563,
																"src": "4517:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4510:15:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Deal_$1409_storage",
																"typeString": "struct EtharisEscrow.Deal storage ref"
															}
														},
														"id": 1571,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4526:6:13",
														"memberName": "status",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1406,
														"src": "4510:22:13",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_ContractStatus_$1381",
															"typeString": "enum EtharisEscrow.ContractStatus"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 1572,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1566,
														"src": "4536:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_ContractStatus_$1381",
															"typeString": "enum EtharisEscrow.ContractStatus"
														}
													},
													"src": "4510:33:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1577,
												"nodeType": "IfStatement",
												"src": "4506:65:13",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1574,
															"name": "InvalidDealStatus",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1321,
															"src": "4552:17:13",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1575,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4552:19:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1576,
													"nodeType": "RevertStatement",
													"src": "4545:26:13"
												}
											},
											{
												"id": 1578,
												"nodeType": "PlaceholderStatement",
												"src": "4581:1:13"
											}
										]
									},
									"id": 1580,
									"name": "inStatus",
									"nameLocation": "4440:8:13",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1567,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1563,
												"mutability": "mutable",
												"name": "_dealId",
												"nameLocation": "4463:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 1580,
												"src": "4449:21:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1562,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4449:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1566,
												"mutability": "mutable",
												"name": "_status",
												"nameLocation": "4487:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 1580,
												"src": "4472:22:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_ContractStatus_$1381",
													"typeString": "enum EtharisEscrow.ContractStatus"
												},
												"typeName": {
													"id": 1565,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1564,
														"name": "ContractStatus",
														"nameLocations": [
															"4472:14:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1381,
														"src": "4472:14:13"
													},
													"referencedDeclaration": 1381,
													"src": "4472:14:13",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_ContractStatus_$1381",
														"typeString": "enum EtharisEscrow.ContractStatus"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4448:47:13"
									},
									"src": "4431:158:13",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1639,
										"nodeType": "Block",
										"src": "4756:381:13",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1594,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1589,
														"name": "idrxToken_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1582,
														"src": "4770:10:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1592,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4792:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1591,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4784:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1590,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "4784:7:13",
																"typeDescriptions": {}
															}
														},
														"id": 1593,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4784:10:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4770:24:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1598,
												"nodeType": "IfStatement",
												"src": "4766:53:13",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1595,
															"name": "InvalidAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1309,
															"src": "4803:14:13",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1596,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4803:16:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1597,
													"nodeType": "RevertStatement",
													"src": "4796:23:13"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1604,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1599,
														"name": "feeRecipient_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1584,
														"src": "4833:13:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1602,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4858:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1601,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4850:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1600,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "4850:7:13",
																"typeDescriptions": {}
															}
														},
														"id": 1603,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4850:10:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4833:27:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1608,
												"nodeType": "IfStatement",
												"src": "4829:56:13",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1605,
															"name": "InvalidAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1309,
															"src": "4869:14:13",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1606,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4869:16:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1607,
													"nodeType": "RevertStatement",
													"src": "4862:23:13"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1614,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1609,
														"name": "initialOwner_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1586,
														"src": "4899:13:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1612,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4924:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1611,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4916:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1610,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "4916:7:13",
																"typeDescriptions": {}
															}
														},
														"id": 1613,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4916:10:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4899:27:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1618,
												"nodeType": "IfStatement",
												"src": "4895:56:13",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1615,
															"name": "InvalidAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1309,
															"src": "4935:14:13",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1616,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4935:16:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1617,
													"nodeType": "RevertStatement",
													"src": "4928:23:13"
												}
											},
											{
												"expression": {
													"id": 1623,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1619,
														"name": "_idrxToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1358,
														"src": "4962:10:13",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$720",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1621,
																"name": "idrxToken_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1582,
																"src": "4982:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1620,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 720,
															"src": "4975:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$720_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 1622,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4975:18:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$720",
															"typeString": "contract IERC20"
														}
													},
													"src": "4962:31:13",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$720",
														"typeString": "contract IERC20"
													}
												},
												"id": 1624,
												"nodeType": "ExpressionStatement",
												"src": "4962:31:13"
											},
											{
												"expression": {
													"id": 1627,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1625,
														"name": "_feeRecipient",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1369,
														"src": "5003:13:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1626,
														"name": "feeRecipient_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1584,
														"src": "5019:13:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5003:29:13",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1628,
												"nodeType": "ExpressionStatement",
												"src": "5003:29:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1630,
															"name": "SERVER_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1374,
															"src": "5054:11:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1631,
															"name": "initialOwner_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1586,
															"src": "5067:13:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1629,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 257,
														"src": "5043:10:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 1632,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5043:38:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1633,
												"nodeType": "ExpressionStatement",
												"src": "5043:38:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1635,
															"name": "SERVER_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1374,
															"src": "5105:11:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1636,
															"name": "SERVER_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1374,
															"src": "5118:11:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1634,
														"name": "_setRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 218,
														"src": "5091:13:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32,bytes32)"
														}
													},
													"id": 1637,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5091:39:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1638,
												"nodeType": "ExpressionStatement",
												"src": "5091:39:13"
											}
										]
									},
									"id": 1640,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1587,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1582,
												"mutability": "mutable",
												"name": "idrxToken_",
												"nameLocation": "4669:10:13",
												"nodeType": "VariableDeclaration",
												"scope": 1640,
												"src": "4661:18:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1581,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4661:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1584,
												"mutability": "mutable",
												"name": "feeRecipient_",
												"nameLocation": "4697:13:13",
												"nodeType": "VariableDeclaration",
												"scope": 1640,
												"src": "4689:21:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1583,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4689:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1586,
												"mutability": "mutable",
												"name": "initialOwner_",
												"nameLocation": "4728:13:13",
												"nodeType": "VariableDeclaration",
												"scope": 1640,
												"src": "4720:21:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1585,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4720:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4651:96:13"
									},
									"returnParameters": {
										"id": 1588,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4756:0:13"
									},
									"scope": 3154,
									"src": "4640:497:13",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1816,
										"nodeType": "Block",
										"src": "5721:1298:13",
										"statements": [
											{
												"condition": {
													"expression": {
														"baseExpression": {
															"id": 1661,
															"name": "_deals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1414,
															"src": "5735:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_Deal_$1409_storage_$",
																"typeString": "mapping(string memory => struct EtharisEscrow.Deal storage ref)"
															}
														},
														"id": 1663,
														"indexExpression": {
															"id": 1662,
															"name": "_dealId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1643,
															"src": "5742:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "5735:15:13",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Deal_$1409_storage",
															"typeString": "struct EtharisEscrow.Deal storage ref"
														}
													},
													"id": 1664,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "5751:6:13",
													"memberName": "exists",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1408,
													"src": "5735:22:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1668,
												"nodeType": "IfStatement",
												"src": "5731:54:13",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1665,
															"name": "DealAlreadyExists",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1307,
															"src": "5766:17:13",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1666,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5766:19:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1667,
													"nodeType": "RevertStatement",
													"src": "5759:26:13"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1674,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1669,
														"name": "_creatorAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1647,
														"src": "5799:15:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1672,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5826:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1671,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5818:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1670,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5818:7:13",
																"typeDescriptions": {}
															}
														},
														"id": 1673,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5818:10:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5799:29:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1678,
												"nodeType": "IfStatement",
												"src": "5795:58:13",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1675,
															"name": "InvalidAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1309,
															"src": "5837:14:13",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1676,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5837:16:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1677,
													"nodeType": "RevertStatement",
													"src": "5830:23:13"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1684,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1679,
														"name": "_brandAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1645,
														"src": "5867:13:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1682,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5892:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1681,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5884:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1680,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5884:7:13",
																"typeDescriptions": {}
															}
														},
														"id": 1683,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5884:10:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5867:27:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1688,
												"nodeType": "IfStatement",
												"src": "5863:56:13",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1685,
															"name": "InvalidAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1309,
															"src": "5903:14:13",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1686,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5903:16:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1687,
													"nodeType": "RevertStatement",
													"src": "5896:23:13"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1691,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1689,
														"name": "_brandAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1645,
														"src": "5933:13:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 1690,
														"name": "_creatorAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1647,
														"src": "5950:15:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5933:32:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1695,
												"nodeType": "IfStatement",
												"src": "5929:67:13",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1692,
															"name": "CreatorCannotBeBrand",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1311,
															"src": "5974:20:13",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1693,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5974:22:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1694,
													"nodeType": "RevertStatement",
													"src": "5967:29:13"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													},
													"id": 1698,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1696,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1649,
														"src": "6010:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1697,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6021:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6010:12:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1702,
												"nodeType": "IfStatement",
												"src": "6006:54:13",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1699,
															"name": "AmountMustBeGreaterThanZero",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1313,
															"src": "6031:27:13",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1700,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6031:29:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1701,
													"nodeType": "RevertStatement",
													"src": "6024:36:13"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1706,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1703,
														"name": "_deadline",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1651,
														"src": "6074:9:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"expression": {
															"id": 1704,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "6087:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1705,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6093:9:13",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "6087:15:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6074:28:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1710,
												"nodeType": "IfStatement",
												"src": "6070:65:13",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1707,
															"name": "DeadlineMustBeInFuture",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1315,
															"src": "6111:22:13",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1708,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6111:24:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1709,
													"nodeType": "RevertStatement",
													"src": "6104:31:13"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1717,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1713,
																	"name": "_briefHash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1653,
																	"src": "6155:10:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1712,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6149:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																	"typeString": "type(bytes storage pointer)"
																},
																"typeName": {
																	"id": 1711,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "6149:5:13",
																	"typeDescriptions": {}
																}
															},
															"id": 1714,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6149:17:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1715,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6167:6:13",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6149:24:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1716,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6177:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6149:29:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1721,
												"nodeType": "IfStatement",
												"src": "6145:61:13",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1718,
															"name": "BriefHashRequired",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1317,
															"src": "6187:17:13",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1719,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6187:19:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1720,
													"nodeType": "RevertStatement",
													"src": "6180:26:13"
												}
											},
											{
												"assignments": [
													1724
												],
												"declarations": [
													{
														"constant": false,
														"id": 1724,
														"mutability": "mutable",
														"name": "deal",
														"nameLocation": "6301:4:13",
														"nodeType": "VariableDeclaration",
														"scope": 1816,
														"src": "6288:17:13",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Deal_$1409_storage_ptr",
															"typeString": "struct EtharisEscrow.Deal"
														},
														"typeName": {
															"id": 1723,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1722,
																"name": "Deal",
																"nameLocations": [
																	"6288:4:13"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1409,
																"src": "6288:4:13"
															},
															"referencedDeclaration": 1409,
															"src": "6288:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Deal_$1409_storage_ptr",
																"typeString": "struct EtharisEscrow.Deal"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1728,
												"initialValue": {
													"baseExpression": {
														"id": 1725,
														"name": "_deals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1414,
														"src": "6308:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_Deal_$1409_storage_$",
															"typeString": "mapping(string memory => struct EtharisEscrow.Deal storage ref)"
														}
													},
													"id": 1727,
													"indexExpression": {
														"id": 1726,
														"name": "_dealId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1643,
														"src": "6315:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6308:15:13",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Deal_$1409_storage",
														"typeString": "struct EtharisEscrow.Deal storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6288:35:13"
											},
											{
												"expression": {
													"id": 1733,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1729,
															"name": "deal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1724,
															"src": "6333:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Deal_$1409_storage_ptr",
																"typeString": "struct EtharisEscrow.Deal storage pointer"
															}
														},
														"id": 1731,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6338:6:13",
														"memberName": "dealId",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1387,
														"src": "6333:11:13",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1732,
														"name": "_dealId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1643,
														"src": "6347:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "6333:21:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 1734,
												"nodeType": "ExpressionStatement",
												"src": "6333:21:13"
											},
											{
												"expression": {
													"id": 1739,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1735,
															"name": "deal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1724,
															"src": "6364:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Deal_$1409_storage_ptr",
																"typeString": "struct EtharisEscrow.Deal storage pointer"
															}
														},
														"id": 1737,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6369:5:13",
														"memberName": "brand",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1383,
														"src": "6364:10:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1738,
														"name": "_brandAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1645,
														"src": "6377:13:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6364:26:13",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1740,
												"nodeType": "ExpressionStatement",
												"src": "6364:26:13"
											},
											{
												"expression": {
													"id": 1745,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1741,
															"name": "deal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1724,
															"src": "6400:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Deal_$1409_storage_ptr",
																"typeString": "struct EtharisEscrow.Deal storage pointer"
															}
														},
														"id": 1743,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6405:7:13",
														"memberName": "creator",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1385,
														"src": "6400:12:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1744,
														"name": "_creatorAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1647,
														"src": "6415:15:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6400:30:13",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1746,
												"nodeType": "ExpressionStatement",
												"src": "6400:30:13"
											},
											{
												"expression": {
													"id": 1751,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1747,
															"name": "deal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1724,
															"src": "6440:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Deal_$1409_storage_ptr",
																"typeString": "struct EtharisEscrow.Deal storage pointer"
															}
														},
														"id": 1749,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6445:6:13",
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1393,
														"src": "6440:11:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1750,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1649,
														"src": "6454:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"src": "6440:21:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"id": 1752,
												"nodeType": "ExpressionStatement",
												"src": "6440:21:13"
											},
											{
												"expression": {
													"id": 1757,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1753,
															"name": "deal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1724,
															"src": "6471:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Deal_$1409_storage_ptr",
																"typeString": "struct EtharisEscrow.Deal storage pointer"
															}
														},
														"id": 1755,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6476:8:13",
														"memberName": "deadline",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1395,
														"src": "6471:13:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1756,
														"name": "_deadline",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1651,
														"src": "6487:9:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "6471:25:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 1758,
												"nodeType": "ExpressionStatement",
												"src": "6471:25:13"
											},
											{
												"expression": {
													"id": 1763,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1759,
															"name": "deal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1724,
															"src": "6506:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Deal_$1409_storage_ptr",
																"typeString": "struct EtharisEscrow.Deal storage pointer"
															}
														},
														"id": 1761,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6511:9:13",
														"memberName": "briefHash",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1389,
														"src": "6506:14:13",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1762,
														"name": "_briefHash",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1653,
														"src": "6523:10:13",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "6506:27:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 1764,
												"nodeType": "ExpressionStatement",
												"src": "6506:27:13"
											},
											{
												"expression": {
													"id": 1770,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1765,
															"name": "deal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1724,
															"src": "6543:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Deal_$1409_storage_ptr",
																"typeString": "struct EtharisEscrow.Deal storage pointer"
															}
														},
														"id": 1767,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6548:6:13",
														"memberName": "status",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1406,
														"src": "6543:11:13",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_ContractStatus_$1381",
															"typeString": "enum EtharisEscrow.ContractStatus"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1768,
															"name": "ContractStatus",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1381,
															"src": "6557:14:13",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_ContractStatus_$1381_$",
																"typeString": "type(enum EtharisEscrow.ContractStatus)"
															}
														},
														"id": 1769,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "6572:7:13",
														"memberName": "PENDING",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1375,
														"src": "6557:22:13",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_ContractStatus_$1381",
															"typeString": "enum EtharisEscrow.ContractStatus"
														}
													},
													"src": "6543:36:13",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_ContractStatus_$1381",
														"typeString": "enum EtharisEscrow.ContractStatus"
													}
												},
												"id": 1771,
												"nodeType": "ExpressionStatement",
												"src": "6543:36:13"
											},
											{
												"expression": {
													"id": 1780,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1772,
															"name": "deal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1724,
															"src": "6589:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Deal_$1409_storage_ptr",
																"typeString": "struct EtharisEscrow.Deal storage pointer"
															}
														},
														"id": 1774,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6594:9:13",
														"memberName": "createdAt",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1403,
														"src": "6589:14:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 1777,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "6613:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1778,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6619:9:13",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "6613:15:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1776,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6606:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint64_$",
																"typeString": "type(uint64)"
															},
															"typeName": {
																"id": 1775,
																"name": "uint64",
																"nodeType": "ElementaryTypeName",
																"src": "6606:6:13",
																"typeDescriptions": {}
															}
														},
														"id": 1779,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6606:23:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "6589:40:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 1781,
												"nodeType": "ExpressionStatement",
												"src": "6589:40:13"
											},
											{
												"expression": {
													"id": 1786,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1782,
															"name": "deal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1724,
															"src": "6639:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Deal_$1409_storage_ptr",
																"typeString": "struct EtharisEscrow.Deal storage pointer"
															}
														},
														"id": 1784,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6644:10:13",
														"memberName": "contentUrl",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1391,
														"src": "6639:15:13",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "",
														"id": 1785,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6657:2:13",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
															"typeString": "literal_string \"\""
														},
														"value": ""
													},
													"src": "6639:20:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 1787,
												"nodeType": "ExpressionStatement",
												"src": "6639:20:13"
											},
											{
												"expression": {
													"id": 1792,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1788,
															"name": "deal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1724,
															"src": "6669:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Deal_$1409_storage_ptr",
																"typeString": "struct EtharisEscrow.Deal storage pointer"
															}
														},
														"id": 1790,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6674:6:13",
														"memberName": "exists",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1408,
														"src": "6669:11:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1791,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6683:4:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "6669:18:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1793,
												"nodeType": "ExpressionStatement",
												"src": "6669:18:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1798,
															"name": "_dealId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1643,
															"src": "6792:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"expression": {
															"baseExpression": {
																"id": 1794,
																"name": "_brandDeals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1419,
																"src": "6760:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_string_storage_$dyn_storage_$",
																	"typeString": "mapping(address => string storage ref[] storage ref)"
																}
															},
															"id": 1796,
															"indexExpression": {
																"id": 1795,
																"name": "_brandAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1645,
																"src": "6772:13:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "6760:26:13",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
																"typeString": "string storage ref[] storage ref"
															}
														},
														"id": 1797,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6787:4:13",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "6760:31:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_string_storage_$dyn_storage_ptr_$_t_string_storage_$returns$__$attached_to$_t_array$_t_string_storage_$dyn_storage_ptr_$",
															"typeString": "function (string storage ref[] storage pointer,string storage ref)"
														}
													},
													"id": 1799,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6760:40:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1800,
												"nodeType": "ExpressionStatement",
												"src": "6760:40:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1805,
															"name": "_dealId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1643,
															"src": "6846:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"expression": {
															"baseExpression": {
																"id": 1801,
																"name": "_creatorDeals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1424,
																"src": "6810:13:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_string_storage_$dyn_storage_$",
																	"typeString": "mapping(address => string storage ref[] storage ref)"
																}
															},
															"id": 1803,
															"indexExpression": {
																"id": 1802,
																"name": "_creatorAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1647,
																"src": "6824:15:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "6810:30:13",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
																"typeString": "string storage ref[] storage ref"
															}
														},
														"id": 1804,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6841:4:13",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "6810:35:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_string_storage_$dyn_storage_ptr_$_t_string_storage_$returns$__$attached_to$_t_array$_t_string_storage_$dyn_storage_ptr_$",
															"typeString": "function (string storage ref[] storage pointer,string storage ref)"
														}
													},
													"id": 1806,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6810:44:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1807,
												"nodeType": "ExpressionStatement",
												"src": "6810:44:13"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1809,
															"name": "_dealId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1643,
															"src": "6895:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"id": 1810,
															"name": "_brandAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1645,
															"src": "6916:13:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1811,
															"name": "_creatorAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1647,
															"src": "6943:15:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1812,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1649,
															"src": "6972:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														},
														{
															"id": 1813,
															"name": "_deadline",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1651,
															"src": "6993:9:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															},
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														],
														"id": 1808,
														"name": "DealCreated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1436,
														"src": "6870:11:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_address_$_t_address_$_t_uint96_$_t_uint64_$returns$__$",
															"typeString": "function (string memory,address,address,uint96,uint64)"
														}
													},
													"id": 1814,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6870:142:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1815,
												"nodeType": "EmitStatement",
												"src": "6865:147:13"
											}
										]
									},
									"documentation": {
										"id": 1641,
										"nodeType": "StructuredDocumentation",
										"src": "5350:116:13",
										"text": " @notice [CUSTODIAL] Brand creates a new deal.\n @dev Only SERVER_ROLE can call this function"
									},
									"functionSelector": "e4abd4cb",
									"id": 1817,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1656,
													"name": "SERVER_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1374,
													"src": "5694:11:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 1657,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1655,
												"name": "onlyRole",
												"nameLocations": [
													"5685:8:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 41,
												"src": "5685:8:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "5685:21:13"
										},
										{
											"id": 1659,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1658,
												"name": "whenNotPaused",
												"nameLocations": [
													"5707:13:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 504,
												"src": "5707:13:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "5707:13:13"
										}
									],
									"name": "createDeal",
									"nameLocation": "5480:10:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1654,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1643,
												"mutability": "mutable",
												"name": "_dealId",
												"nameLocation": "5514:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 1817,
												"src": "5500:21:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1642,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5500:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1645,
												"mutability": "mutable",
												"name": "_brandAddress",
												"nameLocation": "5539:13:13",
												"nodeType": "VariableDeclaration",
												"scope": 1817,
												"src": "5531:21:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1644,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5531:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1647,
												"mutability": "mutable",
												"name": "_creatorAddress",
												"nameLocation": "5570:15:13",
												"nodeType": "VariableDeclaration",
												"scope": 1817,
												"src": "5562:23:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1646,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5562:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1649,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "5602:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 1817,
												"src": "5595:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 1648,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "5595:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1651,
												"mutability": "mutable",
												"name": "_deadline",
												"nameLocation": "5626:9:13",
												"nodeType": "VariableDeclaration",
												"scope": 1817,
												"src": "5619:16:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 1650,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "5619:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1653,
												"mutability": "mutable",
												"name": "_briefHash",
												"nameLocation": "5659:10:13",
												"nodeType": "VariableDeclaration",
												"scope": 1817,
												"src": "5645:24:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1652,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5645:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5490:185:13"
									},
									"returnParameters": {
										"id": 1660,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5721:0:13"
									},
									"scope": 3154,
									"src": "5471:1548:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1981,
										"nodeType": "Block",
										"src": "7622:1146:13",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1860,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1856,
																	"name": "_dealId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1820,
																	"src": "7642:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1855,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7636:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																	"typeString": "type(bytes storage pointer)"
																},
																"typeName": {
																	"id": 1854,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "7636:5:13",
																	"typeDescriptions": {}
																}
															},
															"id": 1857,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7636:14:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1858,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7651:6:13",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "7636:21:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1859,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7661:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7636:26:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1864,
												"nodeType": "IfStatement",
												"src": "7632:54:13",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1861,
															"name": "InvalidDealID",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1351,
															"src": "7671:13:13",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1862,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7671:15:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1863,
													"nodeType": "RevertStatement",
													"src": "7664:22:13"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													},
													"id": 1867,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1865,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1824,
														"src": "7700:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1866,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7711:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7700:12:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1871,
												"nodeType": "IfStatement",
												"src": "7696:40:13",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1868,
															"name": "InvalidAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1353,
															"src": "7721:13:13",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1869,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7721:15:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1870,
													"nodeType": "RevertStatement",
													"src": "7714:22:13"
												}
											},
											{
												"assignments": [
													1874
												],
												"declarations": [
													{
														"constant": false,
														"id": 1874,
														"mutability": "mutable",
														"name": "deal",
														"nameLocation": "7760:4:13",
														"nodeType": "VariableDeclaration",
														"scope": 1981,
														"src": "7747:17:13",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Deal_$1409_storage_ptr",
															"typeString": "struct EtharisEscrow.Deal"
														},
														"typeName": {
															"id": 1873,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1872,
																"name": "Deal",
																"nameLocations": [
																	"7747:4:13"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1409,
																"src": "7747:4:13"
															},
															"referencedDeclaration": 1409,
															"src": "7747:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Deal_$1409_storage_ptr",
																"typeString": "struct EtharisEscrow.Deal"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1878,
												"initialValue": {
													"baseExpression": {
														"id": 1875,
														"name": "_deals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1414,
														"src": "7767:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_Deal_$1409_storage_$",
															"typeString": "mapping(string memory => struct EtharisEscrow.Deal storage ref)"
														}
													},
													"id": 1877,
													"indexExpression": {
														"id": 1876,
														"name": "_dealId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1820,
														"src": "7774:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7767:15:13",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Deal_$1409_storage",
														"typeString": "struct EtharisEscrow.Deal storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7747:35:13"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													},
													"id": 1882,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1879,
															"name": "deal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1874,
															"src": "7797:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Deal_$1409_storage_ptr",
																"typeString": "struct EtharisEscrow.Deal storage pointer"
															}
														},
														"id": 1880,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7802:8:13",
														"memberName": "fundedAt",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1397,
														"src": "7797:13:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1881,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7814:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7797:18:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1886,
												"nodeType": "IfStatement",
												"src": "7793:50:13",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1883,
															"name": "DealAlreadyFunded",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1325,
															"src": "7824:17:13",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1884,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7824:19:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1885,
													"nodeType": "RevertStatement",
													"src": "7817:26:13"
												}
											},
											{
												"assignments": [
													1888
												],
												"declarations": [
													{
														"constant": false,
														"id": 1888,
														"mutability": "mutable",
														"name": "cachedThis",
														"nameLocation": "7905:10:13",
														"nodeType": "VariableDeclaration",
														"scope": 1981,
														"src": "7897:18:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1887,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "7897:7:13",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1893,
												"initialValue": {
													"arguments": [
														{
															"id": 1891,
															"name": "this",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967268,
															"src": "7926:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_EtharisEscrow_$3154",
																"typeString": "contract EtharisEscrow"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_EtharisEscrow_$3154",
																"typeString": "contract EtharisEscrow"
															}
														],
														"id": 1890,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "7918:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 1889,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "7918:7:13",
															"typeDescriptions": {}
														}
													},
													"id": 1892,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7918:13:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7897:34:13"
											},
											{
												"assignments": [
													1896
												],
												"declarations": [
													{
														"constant": false,
														"id": 1896,
														"mutability": "mutable",
														"name": "token",
														"nameLocation": "7948:5:13",
														"nodeType": "VariableDeclaration",
														"scope": 1981,
														"src": "7941:12:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$720",
															"typeString": "contract IERC20"
														},
														"typeName": {
															"id": 1895,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1894,
																"name": "IERC20",
																"nameLocations": [
																	"7941:6:13"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 720,
																"src": "7941:6:13"
															},
															"referencedDeclaration": 720,
															"src": "7941:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$720",
																"typeString": "contract IERC20"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1898,
												"initialValue": {
													"id": 1897,
													"name": "_idrxToken",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1358,
													"src": "7956:10:13",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$720",
														"typeString": "contract IERC20"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7941:25:13"
											},
											{
												"assignments": [
													1900
												],
												"declarations": [
													{
														"constant": false,
														"id": 1900,
														"mutability": "mutable",
														"name": "brandBalance",
														"nameLocation": "7985:12:13",
														"nodeType": "VariableDeclaration",
														"scope": 1981,
														"src": "7977:20:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1899,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7977:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1905,
												"initialValue": {
													"arguments": [
														{
															"id": 1903,
															"name": "_brandAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1822,
															"src": "8016:13:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1901,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1896,
															"src": "8000:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$720",
																"typeString": "contract IERC20"
															}
														},
														"id": 1902,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8006:9:13",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 677,
														"src": "8000:15:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1904,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8000:30:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7977:53:13"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1908,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1906,
														"name": "brandBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1900,
														"src": "8044:12:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1907,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1824,
														"src": "8059:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"src": "8044:22:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1912,
												"nodeType": "IfStatement",
												"src": "8040:56:13",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1909,
															"name": "InsufficientBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1327,
															"src": "8075:19:13",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1910,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8075:21:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1911,
													"nodeType": "RevertStatement",
													"src": "8068:28:13"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1929,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 1922,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															"id": 1915,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1913,
																"name": "_v",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1828,
																"src": "8173:2:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 1914,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8179:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8173:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															"id": 1921,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1916,
																"name": "_r",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1830,
																"src": "8184:2:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1919,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8198:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1918,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8190:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes32_$",
																		"typeString": "type(bytes32)"
																	},
																	"typeName": {
																		"id": 1917,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "8190:7:13",
																		"typeDescriptions": {}
																	}
																},
																"id": 1920,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8190:10:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"src": "8184:16:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "8173:27:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"id": 1928,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1923,
															"name": "_s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1832,
															"src": "8204:2:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1926,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8218:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1925,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8210:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 1924,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "8210:7:13",
																	"typeDescriptions": {}
																}
															},
															"id": 1927,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8210:10:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"src": "8204:16:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "8173:47:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1941,
												"nodeType": "IfStatement",
												"src": "8169:277:13",
												"trueBody": {
													"id": 1940,
													"nodeType": "Block",
													"src": "8222:224:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1931,
																		"name": "_brandAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1822,
																		"src": "8268:13:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1932,
																		"name": "cachedThis",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1888,
																		"src": "8299:10:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1933,
																		"name": "_amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1824,
																		"src": "8327:7:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint96",
																			"typeString": "uint96"
																		}
																	},
																	{
																		"id": 1934,
																		"name": "_deadline",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1826,
																		"src": "8352:9:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1935,
																		"name": "_v",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1828,
																		"src": "8379:2:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	{
																		"id": 1936,
																		"name": "_r",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1830,
																		"src": "8399:2:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 1937,
																		"name": "_s",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1832,
																		"src": "8419:2:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint96",
																			"typeString": "uint96"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 1930,
																	"name": "_executePermit",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3153,
																	"src": "8236:14:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$__$",
																		"typeString": "function (address,address,uint256,uint256,uint8,bytes32,bytes32)"
																	}
																},
																"id": 1938,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8236:199:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1939,
															"nodeType": "ExpressionStatement",
															"src": "8236:199:13"
														}
													]
												}
											},
											{
												"assignments": [
													1943
												],
												"declarations": [
													{
														"constant": false,
														"id": 1943,
														"mutability": "mutable",
														"name": "allowance",
														"nameLocation": "8464:9:13",
														"nodeType": "VariableDeclaration",
														"scope": 1981,
														"src": "8456:17:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1942,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8456:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1949,
												"initialValue": {
													"arguments": [
														{
															"id": 1946,
															"name": "_brandAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1822,
															"src": "8492:13:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1947,
															"name": "cachedThis",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1888,
															"src": "8507:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1944,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1896,
															"src": "8476:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$720",
																"typeString": "contract IERC20"
															}
														},
														"id": 1945,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8482:9:13",
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 697,
														"src": "8476:15:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 1948,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8476:42:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8456:62:13"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1952,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1950,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1943,
														"src": "8532:9:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1951,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1824,
														"src": "8544:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"src": "8532:19:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1956,
												"nodeType": "IfStatement",
												"src": "8528:55:13",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1953,
															"name": "InsufficientAllowance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1329,
															"src": "8560:21:13",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1954,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8560:23:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1955,
													"nodeType": "RevertStatement",
													"src": "8553:30:13"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1960,
															"name": "_brandAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1822,
															"src": "8617:13:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1961,
															"name": "cachedThis",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1888,
															"src": "8632:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1962,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1824,
															"src": "8644:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														],
														"expression": {
															"id": 1957,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1896,
															"src": "8594:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$720",
																"typeString": "contract IERC20"
															}
														},
														"id": 1959,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8600:16:13",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 828,
														"src": "8594:22:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$720_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$720_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 1963,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8594:58:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1964,
												"nodeType": "ExpressionStatement",
												"src": "8594:58:13"
											},
											{
												"expression": {
													"id": 1973,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1965,
															"name": "deal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1874,
															"src": "8663:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Deal_$1409_storage_ptr",
																"typeString": "struct EtharisEscrow.Deal storage pointer"
															}
														},
														"id": 1967,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "8668:8:13",
														"memberName": "fundedAt",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1397,
														"src": "8663:13:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 1970,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "8686:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1971,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8692:9:13",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "8686:15:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1969,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8679:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint64_$",
																"typeString": "type(uint64)"
															},
															"typeName": {
																"id": 1968,
																"name": "uint64",
																"nodeType": "ElementaryTypeName",
																"src": "8679:6:13",
																"typeDescriptions": {}
															}
														},
														"id": 1972,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8679:23:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "8663:39:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 1974,
												"nodeType": "ExpressionStatement",
												"src": "8663:39:13"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1976,
															"name": "_dealId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1820,
															"src": "8729:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"id": 1977,
															"name": "_brandAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1822,
															"src": "8738:13:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1978,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1824,
															"src": "8753:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														],
														"id": 1975,
														"name": "DealFunded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1444,
														"src": "8718:10:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_address_$_t_uint96_$returns$__$",
															"typeString": "function (string memory,address,uint96)"
														}
													},
													"id": 1979,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8718:43:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1980,
												"nodeType": "EmitStatement",
												"src": "8713:48:13"
											}
										]
									},
									"documentation": {
										"id": 1818,
										"nodeType": "StructuredDocumentation",
										"src": "7025:179:13",
										"text": " @notice [CUSTODIAL] Brand fund deal with gasless permit support\n @dev Brands sign permit off-chain, server executes with signature for gasless transaction"
									},
									"functionSelector": "9f1cf42d",
									"id": 1982,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1835,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1834,
												"name": "nonReentrant",
												"nameLocations": [
													"7429:12:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 607,
												"src": "7429:12:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "7429:12:13"
										},
										{
											"arguments": [
												{
													"id": 1837,
													"name": "SERVER_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1374,
													"src": "7459:11:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 1838,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1836,
												"name": "onlyRole",
												"nameLocations": [
													"7450:8:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 41,
												"src": "7450:8:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "7450:21:13"
										},
										{
											"id": 1840,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1839,
												"name": "whenNotPaused",
												"nameLocations": [
													"7480:13:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 504,
												"src": "7480:13:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "7480:13:13"
										},
										{
											"arguments": [
												{
													"id": 1842,
													"name": "_dealId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1820,
													"src": "7513:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												}
											],
											"id": 1843,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1841,
												"name": "dealExists",
												"nameLocations": [
													"7502:10:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1561,
												"src": "7502:10:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "7502:19:13"
										},
										{
											"arguments": [
												{
													"id": 1845,
													"name": "_dealId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1820,
													"src": "7544:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												{
													"id": 1846,
													"name": "_brandAddress",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1822,
													"src": "7553:13:13",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1847,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1844,
												"name": "onlyDealBrand",
												"nameLocations": [
													"7530:13:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1528,
												"src": "7530:13:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "7530:37:13"
										},
										{
											"arguments": [
												{
													"id": 1849,
													"name": "_dealId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1820,
													"src": "7585:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												{
													"expression": {
														"id": 1850,
														"name": "ContractStatus",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1381,
														"src": "7594:14:13",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_enum$_ContractStatus_$1381_$",
															"typeString": "type(enum EtharisEscrow.ContractStatus)"
														}
													},
													"id": 1851,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberLocation": "7609:7:13",
													"memberName": "PENDING",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1375,
													"src": "7594:22:13",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_ContractStatus_$1381",
														"typeString": "enum EtharisEscrow.ContractStatus"
													}
												}
											],
											"id": 1852,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1848,
												"name": "inStatus",
												"nameLocations": [
													"7576:8:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1580,
												"src": "7576:8:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "7576:41:13"
										}
									],
									"name": "fundDeal",
									"nameLocation": "7218:8:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1820,
												"mutability": "mutable",
												"name": "_dealId",
												"nameLocation": "7250:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 1982,
												"src": "7236:21:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1819,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7236:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1822,
												"mutability": "mutable",
												"name": "_brandAddress",
												"nameLocation": "7275:13:13",
												"nodeType": "VariableDeclaration",
												"scope": 1982,
												"src": "7267:21:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1821,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7267:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1824,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "7305:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 1982,
												"src": "7298:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 1823,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "7298:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1826,
												"mutability": "mutable",
												"name": "_deadline",
												"nameLocation": "7330:9:13",
												"nodeType": "VariableDeclaration",
												"scope": 1982,
												"src": "7322:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1825,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7322:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1828,
												"mutability": "mutable",
												"name": "_v",
												"nameLocation": "7355:2:13",
												"nodeType": "VariableDeclaration",
												"scope": 1982,
												"src": "7349:8:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1827,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "7349:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1830,
												"mutability": "mutable",
												"name": "_r",
												"nameLocation": "7375:2:13",
												"nodeType": "VariableDeclaration",
												"scope": 1982,
												"src": "7367:10:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1829,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7367:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1832,
												"mutability": "mutable",
												"name": "_s",
												"nameLocation": "7395:2:13",
												"nodeType": "VariableDeclaration",
												"scope": 1982,
												"src": "7387:10:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1831,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7387:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7226:177:13"
									},
									"returnParameters": {
										"id": 1853,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7622:0:13"
									},
									"scope": 3154,
									"src": "7209:1559:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2034,
										"nodeType": "Block",
										"src": "9140:209:13",
										"statements": [
											{
												"assignments": [
													2009
												],
												"declarations": [
													{
														"constant": false,
														"id": 2009,
														"mutability": "mutable",
														"name": "deal",
														"nameLocation": "9163:4:13",
														"nodeType": "VariableDeclaration",
														"scope": 2034,
														"src": "9150:17:13",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Deal_$1409_storage_ptr",
															"typeString": "struct EtharisEscrow.Deal"
														},
														"typeName": {
															"id": 2008,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2007,
																"name": "Deal",
																"nameLocations": [
																	"9150:4:13"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1409,
																"src": "9150:4:13"
															},
															"referencedDeclaration": 1409,
															"src": "9150:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Deal_$1409_storage_ptr",
																"typeString": "struct EtharisEscrow.Deal"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2013,
												"initialValue": {
													"baseExpression": {
														"id": 2010,
														"name": "_deals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1414,
														"src": "9170:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_Deal_$1409_storage_$",
															"typeString": "mapping(string memory => struct EtharisEscrow.Deal storage ref)"
														}
													},
													"id": 2012,
													"indexExpression": {
														"id": 2011,
														"name": "_dealId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1985,
														"src": "9177:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9170:15:13",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Deal_$1409_storage",
														"typeString": "struct EtharisEscrow.Deal storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9150:35:13"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													},
													"id": 2017,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 2014,
															"name": "deal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2009,
															"src": "9200:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Deal_$1409_storage_ptr",
																"typeString": "struct EtharisEscrow.Deal storage pointer"
															}
														},
														"id": 2015,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9205:8:13",
														"memberName": "fundedAt",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1397,
														"src": "9200:13:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2016,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9217:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "9200:18:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2021,
												"nodeType": "IfStatement",
												"src": "9196:46:13",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 2018,
															"name": "DealNotFunded",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1331,
															"src": "9227:13:13",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 2019,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9227:15:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 2020,
													"nodeType": "RevertStatement",
													"src": "9220:22:13"
												}
											},
											{
												"expression": {
													"id": 2027,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2022,
															"name": "deal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2009,
															"src": "9253:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Deal_$1409_storage_ptr",
																"typeString": "struct EtharisEscrow.Deal storage pointer"
															}
														},
														"id": 2024,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "9258:6:13",
														"memberName": "status",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1406,
														"src": "9253:11:13",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_ContractStatus_$1381",
															"typeString": "enum EtharisEscrow.ContractStatus"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 2025,
															"name": "ContractStatus",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1381,
															"src": "9267:14:13",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_ContractStatus_$1381_$",
																"typeString": "type(enum EtharisEscrow.ContractStatus)"
															}
														},
														"id": 2026,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "9282:6:13",
														"memberName": "ACTIVE",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1376,
														"src": "9267:21:13",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_ContractStatus_$1381",
															"typeString": "enum EtharisEscrow.ContractStatus"
														}
													},
													"src": "9253:35:13",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_ContractStatus_$1381",
														"typeString": "enum EtharisEscrow.ContractStatus"
													}
												},
												"id": 2028,
												"nodeType": "ExpressionStatement",
												"src": "9253:35:13"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2030,
															"name": "_dealId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1985,
															"src": "9317:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"id": 2031,
															"name": "_creatorAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1987,
															"src": "9326:15:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2029,
														"name": "DealApproved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1460,
														"src": "9304:12:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_address_$returns$__$",
															"typeString": "function (string memory,address)"
														}
													},
													"id": 2032,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9304:38:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2033,
												"nodeType": "EmitStatement",
												"src": "9299:43:13"
											}
										]
									},
									"documentation": {
										"id": 1983,
										"nodeType": "StructuredDocumentation",
										"src": "8774:70:13",
										"text": " @notice [CUSTODIAL] Creator accepts the funded deal"
									},
									"functionSelector": "9b1221ab",
									"id": 2035,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1990,
													"name": "SERVER_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1374,
													"src": "8973:11:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 1991,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1989,
												"name": "onlyRole",
												"nameLocations": [
													"8964:8:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 41,
												"src": "8964:8:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "8964:21:13"
										},
										{
											"id": 1993,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1992,
												"name": "whenNotPaused",
												"nameLocations": [
													"8994:13:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 504,
												"src": "8994:13:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "8994:13:13"
										},
										{
											"arguments": [
												{
													"id": 1995,
													"name": "_dealId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1985,
													"src": "9027:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												}
											],
											"id": 1996,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1994,
												"name": "dealExists",
												"nameLocations": [
													"9016:10:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1561,
												"src": "9016:10:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "9016:19:13"
										},
										{
											"arguments": [
												{
													"id": 1998,
													"name": "_dealId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1985,
													"src": "9060:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												{
													"id": 1999,
													"name": "_creatorAddress",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1987,
													"src": "9069:15:13",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 2000,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1997,
												"name": "onlyDealCreator",
												"nameLocations": [
													"9044:15:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1546,
												"src": "9044:15:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "9044:41:13"
										},
										{
											"arguments": [
												{
													"id": 2002,
													"name": "_dealId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1985,
													"src": "9103:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												{
													"expression": {
														"id": 2003,
														"name": "ContractStatus",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1381,
														"src": "9112:14:13",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_enum$_ContractStatus_$1381_$",
															"typeString": "type(enum EtharisEscrow.ContractStatus)"
														}
													},
													"id": 2004,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberLocation": "9127:7:13",
													"memberName": "PENDING",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1375,
													"src": "9112:22:13",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_ContractStatus_$1381",
														"typeString": "enum EtharisEscrow.ContractStatus"
													}
												}
											],
											"id": 2005,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2001,
												"name": "inStatus",
												"nameLocations": [
													"9094:8:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1580,
												"src": "9094:8:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "9094:41:13"
										}
									],
									"name": "acceptDeal",
									"nameLocation": "8858:10:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1988,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1985,
												"mutability": "mutable",
												"name": "_dealId",
												"nameLocation": "8892:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 2035,
												"src": "8878:21:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1984,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8878:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1987,
												"mutability": "mutable",
												"name": "_creatorAddress",
												"nameLocation": "8917:15:13",
												"nodeType": "VariableDeclaration",
												"scope": 2035,
												"src": "8909:23:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1986,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8909:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8868:70:13"
									},
									"returnParameters": {
										"id": 2006,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9140:0:13"
									},
									"scope": 3154,
									"src": "8849:500:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2132,
										"nodeType": "Block",
										"src": "9755:572:13",
										"statements": [
											{
												"assignments": [
													2064
												],
												"declarations": [
													{
														"constant": false,
														"id": 2064,
														"mutability": "mutable",
														"name": "deal",
														"nameLocation": "9778:4:13",
														"nodeType": "VariableDeclaration",
														"scope": 2132,
														"src": "9765:17:13",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Deal_$1409_storage_ptr",
															"typeString": "struct EtharisEscrow.Deal"
														},
														"typeName": {
															"id": 2063,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2062,
																"name": "Deal",
																"nameLocations": [
																	"9765:4:13"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1409,
																"src": "9765:4:13"
															},
															"referencedDeclaration": 1409,
															"src": "9765:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Deal_$1409_storage_ptr",
																"typeString": "struct EtharisEscrow.Deal"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2068,
												"initialValue": {
													"baseExpression": {
														"id": 2065,
														"name": "_deals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1414,
														"src": "9785:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_Deal_$1409_storage_$",
															"typeString": "mapping(string memory => struct EtharisEscrow.Deal storage ref)"
														}
													},
													"id": 2067,
													"indexExpression": {
														"id": 2066,
														"name": "_dealId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2038,
														"src": "9792:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9785:15:13",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Deal_$1409_storage",
														"typeString": "struct EtharisEscrow.Deal storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9765:35:13"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2073,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 2069,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "9815:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 2070,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9821:9:13",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "9815:15:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"id": 2071,
															"name": "deal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2064,
															"src": "9833:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Deal_$1409_storage_ptr",
																"typeString": "struct EtharisEscrow.Deal storage pointer"
															}
														},
														"id": 2072,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9838:8:13",
														"memberName": "deadline",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1395,
														"src": "9833:13:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "9815:31:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2077,
												"nodeType": "IfStatement",
												"src": "9811:70:13",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 2074,
															"name": "SubmissionDeadlinePassed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1333,
															"src": "9855:24:13",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 2075,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9855:26:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 2076,
													"nodeType": "RevertStatement",
													"src": "9848:33:13"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2084,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2080,
																	"name": "_contentUrl",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2042,
																	"src": "9901:11:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 2079,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9895:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																	"typeString": "type(bytes storage pointer)"
																},
																"typeName": {
																	"id": 2078,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "9895:5:13",
																	"typeDescriptions": {}
																}
															},
															"id": 2081,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9895:18:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 2082,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9914:6:13",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "9895:25:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2083,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9924:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "9895:30:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2088,
												"nodeType": "IfStatement",
												"src": "9891:63:13",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 2085,
															"name": "ContentUrlRequired",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1335,
															"src": "9934:18:13",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 2086,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9934:20:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 2087,
													"nodeType": "RevertStatement",
													"src": "9927:27:13"
												}
											},
											{
												"expression": {
													"id": 2094,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2089,
															"name": "deal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2064,
															"src": "9965:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Deal_$1409_storage_ptr",
																"typeString": "struct EtharisEscrow.Deal storage pointer"
															}
														},
														"id": 2091,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "9970:6:13",
														"memberName": "status",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1406,
														"src": "9965:11:13",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_ContractStatus_$1381",
															"typeString": "enum EtharisEscrow.ContractStatus"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 2092,
															"name": "ContractStatus",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1381,
															"src": "9979:14:13",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_ContractStatus_$1381_$",
																"typeString": "type(enum EtharisEscrow.ContractStatus)"
															}
														},
														"id": 2093,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "9994:14:13",
														"memberName": "PENDING_REVIEW",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1377,
														"src": "9979:29:13",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_ContractStatus_$1381",
															"typeString": "enum EtharisEscrow.ContractStatus"
														}
													},
													"src": "9965:43:13",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_ContractStatus_$1381",
														"typeString": "enum EtharisEscrow.ContractStatus"
													}
												},
												"id": 2095,
												"nodeType": "ExpressionStatement",
												"src": "9965:43:13"
											},
											{
												"expression": {
													"id": 2104,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2096,
															"name": "deal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2064,
															"src": "10018:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Deal_$1409_storage_ptr",
																"typeString": "struct EtharisEscrow.Deal storage pointer"
															}
														},
														"id": 2098,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "10023:11:13",
														"memberName": "submittedAt",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1399,
														"src": "10018:16:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 2101,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "10044:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 2102,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "10050:9:13",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "10044:15:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 2100,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10037:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint64_$",
																"typeString": "type(uint64)"
															},
															"typeName": {
																"id": 2099,
																"name": "uint64",
																"nodeType": "ElementaryTypeName",
																"src": "10037:6:13",
																"typeDescriptions": {}
															}
														},
														"id": 2103,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10037:23:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "10018:42:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 2105,
												"nodeType": "ExpressionStatement",
												"src": "10018:42:13"
											},
											{
												"expression": {
													"id": 2116,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2106,
															"name": "deal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2064,
															"src": "10070:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Deal_$1409_storage_ptr",
																"typeString": "struct EtharisEscrow.Deal storage pointer"
															}
														},
														"id": 2108,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "10075:14:13",
														"memberName": "reviewDeadline",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1401,
														"src": "10070:19:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2114,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 2111,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "10099:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 2112,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "10105:9:13",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "10099:15:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 2113,
																	"name": "REVIEW_PERIOD",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1367,
																	"src": "10117:13:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"src": "10099:31:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 2110,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10092:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint64_$",
																"typeString": "type(uint64)"
															},
															"typeName": {
																"id": 2109,
																"name": "uint64",
																"nodeType": "ElementaryTypeName",
																"src": "10092:6:13",
																"typeDescriptions": {}
															}
														},
														"id": 2115,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10092:39:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "10070:61:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 2117,
												"nodeType": "ExpressionStatement",
												"src": "10070:61:13"
											},
											{
												"expression": {
													"id": 2122,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2118,
															"name": "deal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2064,
															"src": "10141:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Deal_$1409_storage_ptr",
																"typeString": "struct EtharisEscrow.Deal storage pointer"
															}
														},
														"id": 2120,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "10146:10:13",
														"memberName": "contentUrl",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1391,
														"src": "10141:15:13",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2121,
														"name": "_contentUrl",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2042,
														"src": "10159:11:13",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "10141:29:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 2123,
												"nodeType": "ExpressionStatement",
												"src": "10141:29:13"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2125,
															"name": "_dealId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2038,
															"src": "10216:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"id": 2126,
															"name": "_creatorAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2040,
															"src": "10237:15:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2127,
															"name": "_contentUrl",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2042,
															"src": "10266:11:13",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"expression": {
																"id": 2128,
																"name": "deal",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2064,
																"src": "10291:4:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Deal_$1409_storage_ptr",
																	"typeString": "struct EtharisEscrow.Deal storage pointer"
																}
															},
															"id": 2129,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10296:14:13",
															"memberName": "reviewDeadline",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1401,
															"src": "10291:19:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														],
														"id": 2124,
														"name": "ContentSubmitted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1454,
														"src": "10186:16:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_address_$_t_string_memory_ptr_$_t_uint64_$returns$__$",
															"typeString": "function (string memory,address,string memory,uint64)"
														}
													},
													"id": 2130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10186:134:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2131,
												"nodeType": "EmitStatement",
												"src": "10181:139:13"
											}
										]
									},
									"documentation": {
										"id": 2036,
										"nodeType": "StructuredDocumentation",
										"src": "9355:67:13",
										"text": " @notice [CUSTODIAL] Creator submits the content."
									},
									"functionSelector": "4971716f",
									"id": 2133,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 2045,
													"name": "SERVER_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1374,
													"src": "9589:11:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 2046,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2044,
												"name": "onlyRole",
												"nameLocations": [
													"9580:8:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 41,
												"src": "9580:8:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "9580:21:13"
										},
										{
											"id": 2048,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2047,
												"name": "whenNotPaused",
												"nameLocations": [
													"9610:13:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 504,
												"src": "9610:13:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "9610:13:13"
										},
										{
											"arguments": [
												{
													"id": 2050,
													"name": "_dealId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2038,
													"src": "9643:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												}
											],
											"id": 2051,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2049,
												"name": "dealExists",
												"nameLocations": [
													"9632:10:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1561,
												"src": "9632:10:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "9632:19:13"
										},
										{
											"arguments": [
												{
													"id": 2053,
													"name": "_dealId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2038,
													"src": "9676:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												{
													"id": 2054,
													"name": "_creatorAddress",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2040,
													"src": "9685:15:13",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 2055,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2052,
												"name": "onlyDealCreator",
												"nameLocations": [
													"9660:15:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1546,
												"src": "9660:15:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "9660:41:13"
										},
										{
											"arguments": [
												{
													"id": 2057,
													"name": "_dealId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2038,
													"src": "9719:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												{
													"expression": {
														"id": 2058,
														"name": "ContractStatus",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1381,
														"src": "9728:14:13",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_enum$_ContractStatus_$1381_$",
															"typeString": "type(enum EtharisEscrow.ContractStatus)"
														}
													},
													"id": 2059,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberLocation": "9743:6:13",
													"memberName": "ACTIVE",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1376,
													"src": "9728:21:13",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_ContractStatus_$1381",
														"typeString": "enum EtharisEscrow.ContractStatus"
													}
												}
											],
											"id": 2060,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2056,
												"name": "inStatus",
												"nameLocations": [
													"9710:8:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1580,
												"src": "9710:8:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "9710:40:13"
										}
									],
									"name": "submitContent",
									"nameLocation": "9436:13:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2043,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2038,
												"mutability": "mutable",
												"name": "_dealId",
												"nameLocation": "9473:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 2133,
												"src": "9459:21:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2037,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "9459:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2040,
												"mutability": "mutable",
												"name": "_creatorAddress",
												"nameLocation": "9498:15:13",
												"nodeType": "VariableDeclaration",
												"scope": 2133,
												"src": "9490:23:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2039,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9490:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2042,
												"mutability": "mutable",
												"name": "_contentUrl",
												"nameLocation": "9537:11:13",
												"nodeType": "VariableDeclaration",
												"scope": 2133,
												"src": "9523:25:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2041,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "9523:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9449:105:13"
									},
									"returnParameters": {
										"id": 2061,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9755:0:13"
									},
									"scope": 3154,
									"src": "9427:900:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2234,
										"nodeType": "Block",
										"src": "10731:696:13",
										"statements": [
											{
												"assignments": [
													2162
												],
												"declarations": [
													{
														"constant": false,
														"id": 2162,
														"mutability": "mutable",
														"name": "deal",
														"nameLocation": "10754:4:13",
														"nodeType": "VariableDeclaration",
														"scope": 2234,
														"src": "10741:17:13",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Deal_$1409_storage_ptr",
															"typeString": "struct EtharisEscrow.Deal"
														},
														"typeName": {
															"id": 2161,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2160,
																"name": "Deal",
																"nameLocations": [
																	"10741:4:13"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1409,
																"src": "10741:4:13"
															},
															"referencedDeclaration": 1409,
															"src": "10741:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Deal_$1409_storage_ptr",
																"typeString": "struct EtharisEscrow.Deal"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2166,
												"initialValue": {
													"baseExpression": {
														"id": 2163,
														"name": "_deals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1414,
														"src": "10761:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_Deal_$1409_storage_$",
															"typeString": "mapping(string memory => struct EtharisEscrow.Deal storage ref)"
														}
													},
													"id": 2165,
													"indexExpression": {
														"id": 2164,
														"name": "_dealId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2136,
														"src": "10768:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "10761:15:13",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Deal_$1409_storage",
														"typeString": "struct EtharisEscrow.Deal storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10741:35:13"
											},
											{
												"assignments": [
													2168
												],
												"declarations": [
													{
														"constant": false,
														"id": 2168,
														"mutability": "mutable",
														"name": "platformFee",
														"nameLocation": "10872:11:13",
														"nodeType": "VariableDeclaration",
														"scope": 2234,
														"src": "10865:18:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														},
														"typeName": {
															"id": 2167,
															"name": "uint96",
															"nodeType": "ElementaryTypeName",
															"src": "10865:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2176,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													},
													"id": 2175,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																},
																"id": 2172,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 2169,
																		"name": "deal",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2162,
																		"src": "10887:4:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Deal_$1409_storage_ptr",
																			"typeString": "struct EtharisEscrow.Deal storage pointer"
																		}
																	},
																	"id": 2170,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "10892:6:13",
																	"memberName": "amount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1393,
																	"src": "10887:11:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint96",
																		"typeString": "uint96"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2171,
																	"name": "_platformFeeBps",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1361,
																	"src": "10901:15:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint96",
																		"typeString": "uint96"
																	}
																},
																"src": "10887:29:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															}
														],
														"id": 2173,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "10886:31:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 2174,
														"name": "BPS_DENOMINATOR",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1364,
														"src": "10920:15:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"src": "10886:49:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10865:70:13"
											},
											{
												"assignments": [
													2178
												],
												"declarations": [
													{
														"constant": false,
														"id": 2178,
														"mutability": "mutable",
														"name": "creatorAmount",
														"nameLocation": "10952:13:13",
														"nodeType": "VariableDeclaration",
														"scope": 2234,
														"src": "10945:20:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														},
														"typeName": {
															"id": 2177,
															"name": "uint96",
															"nodeType": "ElementaryTypeName",
															"src": "10945:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2183,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													},
													"id": 2182,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 2179,
															"name": "deal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2162,
															"src": "10968:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Deal_$1409_storage_ptr",
																"typeString": "struct EtharisEscrow.Deal storage pointer"
															}
														},
														"id": 2180,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "10973:6:13",
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1393,
														"src": "10968:11:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 2181,
														"name": "platformFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2168,
														"src": "10982:11:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"src": "10968:25:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10945:48:13"
											},
											{
												"expression": {
													"id": 2189,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2184,
															"name": "deal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2162,
															"src": "11004:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Deal_$1409_storage_ptr",
																"typeString": "struct EtharisEscrow.Deal storage pointer"
															}
														},
														"id": 2186,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "11009:6:13",
														"memberName": "status",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1406,
														"src": "11004:11:13",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_ContractStatus_$1381",
															"typeString": "enum EtharisEscrow.ContractStatus"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 2187,
															"name": "ContractStatus",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1381,
															"src": "11018:14:13",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_ContractStatus_$1381_$",
																"typeString": "type(enum EtharisEscrow.ContractStatus)"
															}
														},
														"id": 2188,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "11033:9:13",
														"memberName": "COMPLETED",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1379,
														"src": "11018:24:13",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_ContractStatus_$1381",
															"typeString": "enum EtharisEscrow.ContractStatus"
														}
													},
													"src": "11004:38:13",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_ContractStatus_$1381",
														"typeString": "enum EtharisEscrow.ContractStatus"
													}
												},
												"id": 2190,
												"nodeType": "ExpressionStatement",
												"src": "11004:38:13"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2192,
															"name": "_dealId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2136,
															"src": "11071:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"id": 2193,
															"name": "_brandAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2138,
															"src": "11080:13:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2191,
														"name": "DealApproved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1460,
														"src": "11058:12:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_address_$returns$__$",
															"typeString": "function (string memory,address)"
														}
													},
													"id": 2194,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11058:36:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2195,
												"nodeType": "EmitStatement",
												"src": "11053:41:13"
											},
											{
												"assignments": [
													2198
												],
												"declarations": [
													{
														"constant": false,
														"id": 2198,
														"mutability": "mutable",
														"name": "token",
														"nameLocation": "11112:5:13",
														"nodeType": "VariableDeclaration",
														"scope": 2234,
														"src": "11105:12:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$720",
															"typeString": "contract IERC20"
														},
														"typeName": {
															"id": 2197,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2196,
																"name": "IERC20",
																"nameLocations": [
																	"11105:6:13"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 720,
																"src": "11105:6:13"
															},
															"referencedDeclaration": 720,
															"src": "11105:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$720",
																"typeString": "contract IERC20"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2200,
												"initialValue": {
													"id": 2199,
													"name": "_idrxToken",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1358,
													"src": "11120:10:13",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$720",
														"typeString": "contract IERC20"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11105:25:13"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													},
													"id": 2203,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2201,
														"name": "creatorAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2178,
														"src": "11144:13:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2202,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11161:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "11144:18:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2213,
												"nodeType": "IfStatement",
												"src": "11140:96:13",
												"trueBody": {
													"id": 2212,
													"nodeType": "Block",
													"src": "11164:72:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 2207,
																			"name": "deal",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2162,
																			"src": "11197:4:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Deal_$1409_storage_ptr",
																				"typeString": "struct EtharisEscrow.Deal storage pointer"
																			}
																		},
																		"id": 2208,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "11202:7:13",
																		"memberName": "creator",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1385,
																		"src": "11197:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2209,
																		"name": "creatorAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2178,
																		"src": "11211:13:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint96",
																			"typeString": "uint96"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint96",
																			"typeString": "uint96"
																		}
																	],
																	"expression": {
																		"id": 2204,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2198,
																		"src": "11178:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$720",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 2206,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "11184:12:13",
																	"memberName": "safeTransfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 801,
																	"src": "11178:18:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$720_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$720_$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 2210,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11178:47:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2211,
															"nodeType": "ExpressionStatement",
															"src": "11178:47:13"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													},
													"id": 2216,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2214,
														"name": "platformFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2168,
														"src": "11250:11:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2215,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11265:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "11250:16:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2225,
												"nodeType": "IfStatement",
												"src": "11246:93:13",
												"trueBody": {
													"id": 2224,
													"nodeType": "Block",
													"src": "11268:71:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2220,
																		"name": "_feeRecipient",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1369,
																		"src": "11301:13:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2221,
																		"name": "platformFee",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2168,
																		"src": "11316:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint96",
																			"typeString": "uint96"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint96",
																			"typeString": "uint96"
																		}
																	],
																	"expression": {
																		"id": 2217,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2198,
																		"src": "11282:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$720",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 2219,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "11288:12:13",
																	"memberName": "safeTransfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 801,
																	"src": "11282:18:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$720_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$720_$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 2222,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11282:46:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2223,
															"nodeType": "ExpressionStatement",
															"src": "11282:46:13"
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2227,
															"name": "_dealId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2136,
															"src": "11370:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"expression": {
																"id": 2228,
																"name": "deal",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2162,
																"src": "11379:4:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Deal_$1409_storage_ptr",
																	"typeString": "struct EtharisEscrow.Deal storage pointer"
																}
															},
															"id": 2229,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "11384:7:13",
															"memberName": "creator",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1385,
															"src": "11379:12:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2230,
															"name": "creatorAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2178,
															"src": "11393:13:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														},
														{
															"id": 2231,
															"name": "platformFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2168,
															"src": "11408:11:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															},
															{
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														],
														"id": 2226,
														"name": "PaymentReleased",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1470,
														"src": "11354:15:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_address_$_t_uint96_$_t_uint96_$returns$__$",
															"typeString": "function (string memory,address,uint96,uint96)"
														}
													},
													"id": 2232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11354:66:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2233,
												"nodeType": "EmitStatement",
												"src": "11349:71:13"
											}
										]
									},
									"documentation": {
										"id": 2134,
										"nodeType": "StructuredDocumentation",
										"src": "10333:79:13",
										"text": " @notice [CUSTODIAL] Brand approve content & release payment."
									},
									"functionSelector": "24d956c8",
									"id": 2235,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2141,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2140,
												"name": "nonReentrant",
												"nameLocations": [
													"10531:12:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 607,
												"src": "10531:12:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "10531:12:13"
										},
										{
											"arguments": [
												{
													"id": 2143,
													"name": "SERVER_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1374,
													"src": "10561:11:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 2144,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2142,
												"name": "onlyRole",
												"nameLocations": [
													"10552:8:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 41,
												"src": "10552:8:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "10552:21:13"
										},
										{
											"id": 2146,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2145,
												"name": "whenNotPaused",
												"nameLocations": [
													"10582:13:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 504,
												"src": "10582:13:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "10582:13:13"
										},
										{
											"arguments": [
												{
													"id": 2148,
													"name": "_dealId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2136,
													"src": "10615:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												}
											],
											"id": 2149,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2147,
												"name": "dealExists",
												"nameLocations": [
													"10604:10:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1561,
												"src": "10604:10:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "10604:19:13"
										},
										{
											"arguments": [
												{
													"id": 2151,
													"name": "_dealId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2136,
													"src": "10646:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												{
													"id": 2152,
													"name": "_brandAddress",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2138,
													"src": "10655:13:13",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 2153,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2150,
												"name": "onlyDealBrand",
												"nameLocations": [
													"10632:13:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1528,
												"src": "10632:13:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "10632:37:13"
										},
										{
											"arguments": [
												{
													"id": 2155,
													"name": "_dealId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2136,
													"src": "10687:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												{
													"expression": {
														"id": 2156,
														"name": "ContractStatus",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1381,
														"src": "10696:14:13",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_enum$_ContractStatus_$1381_$",
															"typeString": "type(enum EtharisEscrow.ContractStatus)"
														}
													},
													"id": 2157,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberLocation": "10711:14:13",
													"memberName": "PENDING_REVIEW",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1377,
													"src": "10696:29:13",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_ContractStatus_$1381",
														"typeString": "enum EtharisEscrow.ContractStatus"
													}
												}
											],
											"id": 2158,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2154,
												"name": "inStatus",
												"nameLocations": [
													"10678:8:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1580,
												"src": "10678:8:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "10678:48:13"
										}
									],
									"name": "approveDeal",
									"nameLocation": "10426:11:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2136,
												"mutability": "mutable",
												"name": "_dealId",
												"nameLocation": "10461:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 2235,
												"src": "10447:21:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2135,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "10447:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2138,
												"mutability": "mutable",
												"name": "_brandAddress",
												"nameLocation": "10486:13:13",
												"nodeType": "VariableDeclaration",
												"scope": 2235,
												"src": "10478:21:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2137,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10478:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10437:68:13"
									},
									"returnParameters": {
										"id": 2159,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10731:0:13"
									},
									"scope": 3154,
									"src": "10417:1010:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2334,
										"nodeType": "Block",
										"src": "11749:710:13",
										"statements": [
											{
												"assignments": [
													2258
												],
												"declarations": [
													{
														"constant": false,
														"id": 2258,
														"mutability": "mutable",
														"name": "deal",
														"nameLocation": "11772:4:13",
														"nodeType": "VariableDeclaration",
														"scope": 2334,
														"src": "11759:17:13",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Deal_$1409_storage_ptr",
															"typeString": "struct EtharisEscrow.Deal"
														},
														"typeName": {
															"id": 2257,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2256,
																"name": "Deal",
																"nameLocations": [
																	"11759:4:13"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1409,
																"src": "11759:4:13"
															},
															"referencedDeclaration": 1409,
															"src": "11759:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Deal_$1409_storage_ptr",
																"typeString": "struct EtharisEscrow.Deal"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2262,
												"initialValue": {
													"baseExpression": {
														"id": 2259,
														"name": "_deals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1414,
														"src": "11779:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_Deal_$1409_storage_$",
															"typeString": "mapping(string memory => struct EtharisEscrow.Deal storage ref)"
														}
													},
													"id": 2261,
													"indexExpression": {
														"id": 2260,
														"name": "_dealId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2238,
														"src": "11786:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "11779:15:13",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Deal_$1409_storage",
														"typeString": "struct EtharisEscrow.Deal storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11759:35:13"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2267,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 2263,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "11808:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 2264,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "11814:9:13",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "11808:15:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 2265,
															"name": "deal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2258,
															"src": "11826:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Deal_$1409_storage_ptr",
																"typeString": "struct EtharisEscrow.Deal storage pointer"
															}
														},
														"id": 2266,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "11831:14:13",
														"memberName": "reviewDeadline",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1401,
														"src": "11826:19:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "11808:37:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2271,
												"nodeType": "IfStatement",
												"src": "11804:84:13",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 2268,
															"name": "ReviewPeriodNotEnded",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1337,
															"src": "11866:20:13",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 2269,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11866:22:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 2270,
													"nodeType": "RevertStatement",
													"src": "11859:29:13"
												}
											},
											{
												"assignments": [
													2273
												],
												"declarations": [
													{
														"constant": false,
														"id": 2273,
														"mutability": "mutable",
														"name": "platformFee",
														"nameLocation": "11956:11:13",
														"nodeType": "VariableDeclaration",
														"scope": 2334,
														"src": "11949:18:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														},
														"typeName": {
															"id": 2272,
															"name": "uint96",
															"nodeType": "ElementaryTypeName",
															"src": "11949:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2281,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													},
													"id": 2280,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																},
																"id": 2277,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 2274,
																		"name": "deal",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2258,
																		"src": "11971:4:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Deal_$1409_storage_ptr",
																			"typeString": "struct EtharisEscrow.Deal storage pointer"
																		}
																	},
																	"id": 2275,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "11976:6:13",
																	"memberName": "amount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1393,
																	"src": "11971:11:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint96",
																		"typeString": "uint96"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2276,
																	"name": "_platformFeeBps",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1361,
																	"src": "11985:15:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint96",
																		"typeString": "uint96"
																	}
																},
																"src": "11971:29:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															}
														],
														"id": 2278,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "11970:31:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 2279,
														"name": "BPS_DENOMINATOR",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1364,
														"src": "12004:15:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"src": "11970:49:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11949:70:13"
											},
											{
												"assignments": [
													2283
												],
												"declarations": [
													{
														"constant": false,
														"id": 2283,
														"mutability": "mutable",
														"name": "creatorAmount",
														"nameLocation": "12036:13:13",
														"nodeType": "VariableDeclaration",
														"scope": 2334,
														"src": "12029:20:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														},
														"typeName": {
															"id": 2282,
															"name": "uint96",
															"nodeType": "ElementaryTypeName",
															"src": "12029:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2288,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													},
													"id": 2287,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 2284,
															"name": "deal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2258,
															"src": "12052:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Deal_$1409_storage_ptr",
																"typeString": "struct EtharisEscrow.Deal storage pointer"
															}
														},
														"id": 2285,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "12057:6:13",
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1393,
														"src": "12052:11:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 2286,
														"name": "platformFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2273,
														"src": "12066:11:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"src": "12052:25:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12029:48:13"
											},
											{
												"expression": {
													"id": 2294,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2289,
															"name": "deal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2258,
															"src": "12088:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Deal_$1409_storage_ptr",
																"typeString": "struct EtharisEscrow.Deal storage pointer"
															}
														},
														"id": 2291,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "12093:6:13",
														"memberName": "status",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1406,
														"src": "12088:11:13",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_ContractStatus_$1381",
															"typeString": "enum EtharisEscrow.ContractStatus"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 2292,
															"name": "ContractStatus",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1381,
															"src": "12102:14:13",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_ContractStatus_$1381_$",
																"typeString": "type(enum EtharisEscrow.ContractStatus)"
															}
														},
														"id": 2293,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "12117:9:13",
														"memberName": "COMPLETED",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1379,
														"src": "12102:24:13",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_ContractStatus_$1381",
															"typeString": "enum EtharisEscrow.ContractStatus"
														}
													},
													"src": "12088:38:13",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_ContractStatus_$1381",
														"typeString": "enum EtharisEscrow.ContractStatus"
													}
												},
												"id": 2295,
												"nodeType": "ExpressionStatement",
												"src": "12088:38:13"
											},
											{
												"assignments": [
													2298
												],
												"declarations": [
													{
														"constant": false,
														"id": 2298,
														"mutability": "mutable",
														"name": "token",
														"nameLocation": "12144:5:13",
														"nodeType": "VariableDeclaration",
														"scope": 2334,
														"src": "12137:12:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$720",
															"typeString": "contract IERC20"
														},
														"typeName": {
															"id": 2297,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2296,
																"name": "IERC20",
																"nameLocations": [
																	"12137:6:13"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 720,
																"src": "12137:6:13"
															},
															"referencedDeclaration": 720,
															"src": "12137:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$720",
																"typeString": "contract IERC20"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2300,
												"initialValue": {
													"id": 2299,
													"name": "_idrxToken",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1358,
													"src": "12152:10:13",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$720",
														"typeString": "contract IERC20"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12137:25:13"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													},
													"id": 2303,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2301,
														"name": "creatorAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2283,
														"src": "12176:13:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2302,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12193:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "12176:18:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2313,
												"nodeType": "IfStatement",
												"src": "12172:96:13",
												"trueBody": {
													"id": 2312,
													"nodeType": "Block",
													"src": "12196:72:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 2307,
																			"name": "deal",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2258,
																			"src": "12229:4:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Deal_$1409_storage_ptr",
																				"typeString": "struct EtharisEscrow.Deal storage pointer"
																			}
																		},
																		"id": 2308,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "12234:7:13",
																		"memberName": "creator",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1385,
																		"src": "12229:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2309,
																		"name": "creatorAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2283,
																		"src": "12243:13:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint96",
																			"typeString": "uint96"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint96",
																			"typeString": "uint96"
																		}
																	],
																	"expression": {
																		"id": 2304,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2298,
																		"src": "12210:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$720",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 2306,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "12216:12:13",
																	"memberName": "safeTransfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 801,
																	"src": "12210:18:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$720_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$720_$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 2310,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12210:47:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2311,
															"nodeType": "ExpressionStatement",
															"src": "12210:47:13"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													},
													"id": 2316,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2314,
														"name": "platformFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2273,
														"src": "12282:11:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2315,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12297:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "12282:16:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2325,
												"nodeType": "IfStatement",
												"src": "12278:93:13",
												"trueBody": {
													"id": 2324,
													"nodeType": "Block",
													"src": "12300:71:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2320,
																		"name": "_feeRecipient",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1369,
																		"src": "12333:13:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2321,
																		"name": "platformFee",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2273,
																		"src": "12348:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint96",
																			"typeString": "uint96"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint96",
																			"typeString": "uint96"
																		}
																	],
																	"expression": {
																		"id": 2317,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2298,
																		"src": "12314:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$720",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 2319,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "12320:12:13",
																	"memberName": "safeTransfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 801,
																	"src": "12314:18:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$720_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$720_$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 2322,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12314:46:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2323,
															"nodeType": "ExpressionStatement",
															"src": "12314:46:13"
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2327,
															"name": "_dealId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2238,
															"src": "12402:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"expression": {
																"id": 2328,
																"name": "deal",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2258,
																"src": "12411:4:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Deal_$1409_storage_ptr",
																	"typeString": "struct EtharisEscrow.Deal storage pointer"
																}
															},
															"id": 2329,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "12416:7:13",
															"memberName": "creator",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1385,
															"src": "12411:12:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2330,
															"name": "creatorAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2283,
															"src": "12425:13:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														},
														{
															"id": 2331,
															"name": "platformFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2273,
															"src": "12440:11:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															},
															{
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														],
														"id": 2326,
														"name": "PaymentReleased",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1470,
														"src": "12386:15:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_address_$_t_uint96_$_t_uint96_$returns$__$",
															"typeString": "function (string memory,address,uint96,uint96)"
														}
													},
													"id": 2332,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12386:66:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2333,
												"nodeType": "EmitStatement",
												"src": "12381:71:13"
											}
										]
									},
									"documentation": {
										"id": 2236,
										"nodeType": "StructuredDocumentation",
										"src": "11433:67:13",
										"text": " @notice Auto-release payment after review period"
									},
									"functionSelector": "38a13287",
									"id": 2335,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2241,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2240,
												"name": "nonReentrant",
												"nameLocations": [
													"11595:12:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 607,
												"src": "11595:12:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "11595:12:13"
										},
										{
											"arguments": [
												{
													"id": 2243,
													"name": "SERVER_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1374,
													"src": "11625:11:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 2244,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2242,
												"name": "onlyRole",
												"nameLocations": [
													"11616:8:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 41,
												"src": "11616:8:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "11616:21:13"
										},
										{
											"id": 2246,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2245,
												"name": "whenNotPaused",
												"nameLocations": [
													"11646:13:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 504,
												"src": "11646:13:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "11646:13:13"
										},
										{
											"arguments": [
												{
													"id": 2248,
													"name": "_dealId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2238,
													"src": "11679:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												}
											],
											"id": 2249,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2247,
												"name": "dealExists",
												"nameLocations": [
													"11668:10:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1561,
												"src": "11668:10:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "11668:19:13"
										},
										{
											"arguments": [
												{
													"id": 2251,
													"name": "_dealId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2238,
													"src": "11705:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												{
													"expression": {
														"id": 2252,
														"name": "ContractStatus",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1381,
														"src": "11714:14:13",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_enum$_ContractStatus_$1381_$",
															"typeString": "type(enum EtharisEscrow.ContractStatus)"
														}
													},
													"id": 2253,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberLocation": "11729:14:13",
													"memberName": "PENDING_REVIEW",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1377,
													"src": "11714:29:13",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_ContractStatus_$1381",
														"typeString": "enum EtharisEscrow.ContractStatus"
													}
												}
											],
											"id": 2254,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2250,
												"name": "inStatus",
												"nameLocations": [
													"11696:8:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1580,
												"src": "11696:8:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "11696:48:13"
										}
									],
									"name": "autoReleasePayment",
									"nameLocation": "11514:18:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2238,
												"mutability": "mutable",
												"name": "_dealId",
												"nameLocation": "11556:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 2335,
												"src": "11542:21:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2237,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "11542:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11532:37:13"
									},
									"returnParameters": {
										"id": 2255,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11749:0:13"
									},
									"scope": 3154,
									"src": "11505:954:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2402,
										"nodeType": "Block",
										"src": "12860:310:13",
										"statements": [
											{
												"assignments": [
													2364
												],
												"declarations": [
													{
														"constant": false,
														"id": 2364,
														"mutability": "mutable",
														"name": "deal",
														"nameLocation": "12883:4:13",
														"nodeType": "VariableDeclaration",
														"scope": 2402,
														"src": "12870:17:13",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Deal_$1409_storage_ptr",
															"typeString": "struct EtharisEscrow.Deal"
														},
														"typeName": {
															"id": 2363,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2362,
																"name": "Deal",
																"nameLocations": [
																	"12870:4:13"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1409,
																"src": "12870:4:13"
															},
															"referencedDeclaration": 1409,
															"src": "12870:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Deal_$1409_storage_ptr",
																"typeString": "struct EtharisEscrow.Deal"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2368,
												"initialValue": {
													"baseExpression": {
														"id": 2365,
														"name": "_deals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1414,
														"src": "12890:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_Deal_$1409_storage_$",
															"typeString": "mapping(string memory => struct EtharisEscrow.Deal storage ref)"
														}
													},
													"id": 2367,
													"indexExpression": {
														"id": 2366,
														"name": "_dealId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2338,
														"src": "12897:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "12890:15:13",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Deal_$1409_storage",
														"typeString": "struct EtharisEscrow.Deal storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12870:35:13"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2373,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 2369,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "12919:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 2370,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "12925:9:13",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "12919:15:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"expression": {
															"id": 2371,
															"name": "deal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2364,
															"src": "12938:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Deal_$1409_storage_ptr",
																"typeString": "struct EtharisEscrow.Deal storage pointer"
															}
														},
														"id": 2372,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "12943:14:13",
														"memberName": "reviewDeadline",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1401,
														"src": "12938:19:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "12919:38:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2377,
												"nodeType": "IfStatement",
												"src": "12915:70:13",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 2374,
															"name": "ReviewPeriodEnded",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1339,
															"src": "12966:17:13",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 2375,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12966:19:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 2376,
													"nodeType": "RevertStatement",
													"src": "12959:26:13"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2384,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2380,
																	"name": "_reason",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2342,
																	"src": "13005:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 2379,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12999:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																	"typeString": "type(bytes storage pointer)"
																},
																"typeName": {
																	"id": 2378,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "12999:5:13",
																	"typeDescriptions": {}
																}
															},
															"id": 2381,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12999:14:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 2382,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "13014:6:13",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "12999:21:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2383,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "13024:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "12999:26:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2388,
												"nodeType": "IfStatement",
												"src": "12995:55:13",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 2385,
															"name": "ReasonRequired",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1341,
															"src": "13034:14:13",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 2386,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "13034:16:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 2387,
													"nodeType": "RevertStatement",
													"src": "13027:23:13"
												}
											},
											{
												"expression": {
													"id": 2394,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2389,
															"name": "deal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2364,
															"src": "13061:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Deal_$1409_storage_ptr",
																"typeString": "struct EtharisEscrow.Deal storage pointer"
															}
														},
														"id": 2391,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "13066:6:13",
														"memberName": "status",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1406,
														"src": "13061:11:13",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_ContractStatus_$1381",
															"typeString": "enum EtharisEscrow.ContractStatus"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 2392,
															"name": "ContractStatus",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1381,
															"src": "13075:14:13",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_ContractStatus_$1381_$",
																"typeString": "type(enum EtharisEscrow.ContractStatus)"
															}
														},
														"id": 2393,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "13090:8:13",
														"memberName": "DISPUTED",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1378,
														"src": "13075:23:13",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_ContractStatus_$1381",
															"typeString": "enum EtharisEscrow.ContractStatus"
														}
													},
													"src": "13061:37:13",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_ContractStatus_$1381",
														"typeString": "enum EtharisEscrow.ContractStatus"
													}
												},
												"id": 2395,
												"nodeType": "ExpressionStatement",
												"src": "13061:37:13"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2397,
															"name": "_dealId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2338,
															"src": "13131:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"id": 2398,
															"name": "_brandAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2340,
															"src": "13140:13:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2399,
															"name": "_reason",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2342,
															"src": "13155:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 2396,
														"name": "DisputeInitiated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1478,
														"src": "13114:16:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_address_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory,address,string memory)"
														}
													},
													"id": 2400,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13114:49:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2401,
												"nodeType": "EmitStatement",
												"src": "13109:54:13"
											}
										]
									},
									"documentation": {
										"id": 2336,
										"nodeType": "StructuredDocumentation",
										"src": "12465:62:13",
										"text": " @notice [CUSTODIAL] Brand initiate dispute."
									},
									"functionSelector": "0e59a395",
									"id": 2403,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 2345,
													"name": "SERVER_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1374,
													"src": "12690:11:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 2346,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2344,
												"name": "onlyRole",
												"nameLocations": [
													"12681:8:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 41,
												"src": "12681:8:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "12681:21:13"
										},
										{
											"id": 2348,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2347,
												"name": "whenNotPaused",
												"nameLocations": [
													"12711:13:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 504,
												"src": "12711:13:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "12711:13:13"
										},
										{
											"arguments": [
												{
													"id": 2350,
													"name": "_dealId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2338,
													"src": "12744:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												}
											],
											"id": 2351,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2349,
												"name": "dealExists",
												"nameLocations": [
													"12733:10:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1561,
												"src": "12733:10:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "12733:19:13"
										},
										{
											"arguments": [
												{
													"id": 2353,
													"name": "_dealId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2338,
													"src": "12775:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												{
													"id": 2354,
													"name": "_brandAddress",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2340,
													"src": "12784:13:13",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 2355,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2352,
												"name": "onlyDealBrand",
												"nameLocations": [
													"12761:13:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1528,
												"src": "12761:13:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "12761:37:13"
										},
										{
											"arguments": [
												{
													"id": 2357,
													"name": "_dealId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2338,
													"src": "12816:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												{
													"expression": {
														"id": 2358,
														"name": "ContractStatus",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1381,
														"src": "12825:14:13",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_enum$_ContractStatus_$1381_$",
															"typeString": "type(enum EtharisEscrow.ContractStatus)"
														}
													},
													"id": 2359,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberLocation": "12840:14:13",
													"memberName": "PENDING_REVIEW",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1377,
													"src": "12825:29:13",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_ContractStatus_$1381",
														"typeString": "enum EtharisEscrow.ContractStatus"
													}
												}
											],
											"id": 2360,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2356,
												"name": "inStatus",
												"nameLocations": [
													"12807:8:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1580,
												"src": "12807:8:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "12807:48:13"
										}
									],
									"name": "initiateDispute",
									"nameLocation": "12541:15:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2343,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2338,
												"mutability": "mutable",
												"name": "_dealId",
												"nameLocation": "12580:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 2403,
												"src": "12566:21:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2337,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "12566:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2340,
												"mutability": "mutable",
												"name": "_brandAddress",
												"nameLocation": "12605:13:13",
												"nodeType": "VariableDeclaration",
												"scope": 2403,
												"src": "12597:21:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2339,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12597:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2342,
												"mutability": "mutable",
												"name": "_reason",
												"nameLocation": "12642:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 2403,
												"src": "12628:21:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2341,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "12628:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12556:99:13"
									},
									"returnParameters": {
										"id": 2361,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12860:0:13"
									},
									"scope": 3154,
									"src": "12532:638:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2592,
										"nodeType": "Block",
										"src": "13587:1455:13",
										"statements": [
											{
												"assignments": [
													2434
												],
												"declarations": [
													{
														"constant": false,
														"id": 2434,
														"mutability": "mutable",
														"name": "deal",
														"nameLocation": "13610:4:13",
														"nodeType": "VariableDeclaration",
														"scope": 2592,
														"src": "13597:17:13",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Deal_$1409_storage_ptr",
															"typeString": "struct EtharisEscrow.Deal"
														},
														"typeName": {
															"id": 2433,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2432,
																"name": "Deal",
																"nameLocations": [
																	"13597:4:13"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1409,
																"src": "13597:4:13"
															},
															"referencedDeclaration": 1409,
															"src": "13597:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Deal_$1409_storage_ptr",
																"typeString": "struct EtharisEscrow.Deal"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2438,
												"initialValue": {
													"baseExpression": {
														"id": 2435,
														"name": "_deals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1414,
														"src": "13617:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_Deal_$1409_storage_$",
															"typeString": "mapping(string memory => struct EtharisEscrow.Deal storage ref)"
														}
													},
													"id": 2437,
													"indexExpression": {
														"id": 2436,
														"name": "_dealId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2406,
														"src": "13624:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "13617:15:13",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Deal_$1409_storage",
														"typeString": "struct EtharisEscrow.Deal storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13597:35:13"
											},
											{
												"assignments": [
													2440
												],
												"declarations": [
													{
														"constant": false,
														"id": 2440,
														"mutability": "mutable",
														"name": "totalEscrow",
														"nameLocation": "13685:11:13",
														"nodeType": "VariableDeclaration",
														"scope": 2592,
														"src": "13678:18:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														},
														"typeName": {
															"id": 2439,
															"name": "uint96",
															"nodeType": "ElementaryTypeName",
															"src": "13678:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2443,
												"initialValue": {
													"expression": {
														"id": 2441,
														"name": "deal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2434,
														"src": "13699:4:13",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Deal_$1409_storage_ptr",
															"typeString": "struct EtharisEscrow.Deal storage pointer"
														}
													},
													"id": 2442,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "13704:6:13",
													"memberName": "amount",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1393,
													"src": "13699:11:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13678:32:13"
											},
											{
												"assignments": [
													2445
												],
												"declarations": [
													{
														"constant": false,
														"id": 2445,
														"mutability": "mutable",
														"name": "creator",
														"nameLocation": "13728:7:13",
														"nodeType": "VariableDeclaration",
														"scope": 2592,
														"src": "13720:15:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2444,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "13720:7:13",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2448,
												"initialValue": {
													"expression": {
														"id": 2446,
														"name": "deal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2434,
														"src": "13738:4:13",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Deal_$1409_storage_ptr",
															"typeString": "struct EtharisEscrow.Deal storage pointer"
														}
													},
													"id": 2447,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "13743:7:13",
													"memberName": "creator",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1385,
													"src": "13738:12:13",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13720:30:13"
											},
											{
												"assignments": [
													2450
												],
												"declarations": [
													{
														"constant": false,
														"id": 2450,
														"mutability": "mutable",
														"name": "brand",
														"nameLocation": "13768:5:13",
														"nodeType": "VariableDeclaration",
														"scope": 2592,
														"src": "13760:13:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2449,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "13760:7:13",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2453,
												"initialValue": {
													"expression": {
														"id": 2451,
														"name": "deal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2434,
														"src": "13776:4:13",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Deal_$1409_storage_ptr",
															"typeString": "struct EtharisEscrow.Deal storage pointer"
														}
													},
													"id": 2452,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "13781:5:13",
													"memberName": "brand",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1383,
													"src": "13776:10:13",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13760:26:13"
											},
											{
												"assignments": [
													2455
												],
												"declarations": [
													{
														"constant": false,
														"id": 2455,
														"mutability": "mutable",
														"name": "feeRecip",
														"nameLocation": "13804:8:13",
														"nodeType": "VariableDeclaration",
														"scope": 2592,
														"src": "13796:16:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2454,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "13796:7:13",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2457,
												"initialValue": {
													"id": 2456,
													"name": "_feeRecipient",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1369,
													"src": "13815:13:13",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13796:32:13"
											},
											{
												"assignments": [
													2459
												],
												"declarations": [
													{
														"constant": false,
														"id": 2459,
														"mutability": "mutable",
														"name": "feeBps",
														"nameLocation": "13845:6:13",
														"nodeType": "VariableDeclaration",
														"scope": 2592,
														"src": "13838:13:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														},
														"typeName": {
															"id": 2458,
															"name": "uint96",
															"nodeType": "ElementaryTypeName",
															"src": "13838:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2461,
												"initialValue": {
													"id": 2460,
													"name": "_platformFeeBps",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1361,
													"src": "13854:15:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13838:31:13"
											},
											{
												"expression": {
													"id": 2467,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2462,
															"name": "deal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2434,
															"src": "13880:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Deal_$1409_storage_ptr",
																"typeString": "struct EtharisEscrow.Deal storage pointer"
															}
														},
														"id": 2464,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "13885:6:13",
														"memberName": "status",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1406,
														"src": "13880:11:13",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_ContractStatus_$1381",
															"typeString": "enum EtharisEscrow.ContractStatus"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 2465,
															"name": "ContractStatus",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1381,
															"src": "13894:14:13",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_ContractStatus_$1381_$",
																"typeString": "type(enum EtharisEscrow.ContractStatus)"
															}
														},
														"id": 2466,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "13909:9:13",
														"memberName": "COMPLETED",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1379,
														"src": "13894:24:13",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_ContractStatus_$1381",
															"typeString": "enum EtharisEscrow.ContractStatus"
														}
													},
													"src": "13880:38:13",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_ContractStatus_$1381",
														"typeString": "enum EtharisEscrow.ContractStatus"
													}
												},
												"id": 2468,
												"nodeType": "ExpressionStatement",
												"src": "13880:38:13"
											},
											{
												"assignments": [
													2470
												],
												"declarations": [
													{
														"constant": false,
														"id": 2470,
														"mutability": "mutable",
														"name": "creatorAmount",
														"nameLocation": "13936:13:13",
														"nodeType": "VariableDeclaration",
														"scope": 2592,
														"src": "13929:20:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														},
														"typeName": {
															"id": 2469,
															"name": "uint96",
															"nodeType": "ElementaryTypeName",
															"src": "13929:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2471,
												"nodeType": "VariableDeclarationStatement",
												"src": "13929:20:13"
											},
											{
												"assignments": [
													2473
												],
												"declarations": [
													{
														"constant": false,
														"id": 2473,
														"mutability": "mutable",
														"name": "brandRefund",
														"nameLocation": "13966:11:13",
														"nodeType": "VariableDeclaration",
														"scope": 2592,
														"src": "13959:18:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														},
														"typeName": {
															"id": 2472,
															"name": "uint96",
															"nodeType": "ElementaryTypeName",
															"src": "13959:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2474,
												"nodeType": "VariableDeclarationStatement",
												"src": "13959:18:13"
											},
											{
												"assignments": [
													2476
												],
												"declarations": [
													{
														"constant": false,
														"id": 2476,
														"mutability": "mutable",
														"name": "platformFee",
														"nameLocation": "13994:11:13",
														"nodeType": "VariableDeclaration",
														"scope": 2592,
														"src": "13987:18:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														},
														"typeName": {
															"id": 2475,
															"name": "uint96",
															"nodeType": "ElementaryTypeName",
															"src": "13987:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2477,
												"nodeType": "VariableDeclarationStatement",
												"src": "13987:18:13"
											},
											{
												"assignments": [
													2480
												],
												"declarations": [
													{
														"constant": false,
														"id": 2480,
														"mutability": "mutable",
														"name": "token",
														"nameLocation": "14023:5:13",
														"nodeType": "VariableDeclaration",
														"scope": 2592,
														"src": "14016:12:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$720",
															"typeString": "contract IERC20"
														},
														"typeName": {
															"id": 2479,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2478,
																"name": "IERC20",
																"nameLocations": [
																	"14016:6:13"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 720,
																"src": "14016:6:13"
															},
															"referencedDeclaration": 720,
															"src": "14016:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$720",
																"typeString": "contract IERC20"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2482,
												"initialValue": {
													"id": 2481,
													"name": "_idrxToken",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1358,
													"src": "14031:10:13",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$720",
														"typeString": "contract IERC20"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14016:25:13"
											},
											{
												"condition": {
													"id": 2483,
													"name": "_accept5050",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2410,
													"src": "14056:11:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2575,
													"nodeType": "Block",
													"src": "14607:185:13",
													"statements": [
														{
															"expression": {
																"id": 2554,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2552,
																	"name": "creatorAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2470,
																	"src": "14621:13:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint96",
																		"typeString": "uint96"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "30",
																	"id": 2553,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14637:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "14621:17:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															"id": 2555,
															"nodeType": "ExpressionStatement",
															"src": "14621:17:13"
														},
														{
															"expression": {
																"id": 2558,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2556,
																	"name": "brandRefund",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2473,
																	"src": "14652:11:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint96",
																		"typeString": "uint96"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 2557,
																	"name": "totalEscrow",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2440,
																	"src": "14666:11:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint96",
																		"typeString": "uint96"
																	}
																},
																"src": "14652:25:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															"id": 2559,
															"nodeType": "ExpressionStatement",
															"src": "14652:25:13"
														},
														{
															"expression": {
																"id": 2562,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2560,
																	"name": "platformFee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2476,
																	"src": "14691:11:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint96",
																		"typeString": "uint96"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "30",
																	"id": 2561,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14705:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "14691:15:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															"id": 2563,
															"nodeType": "ExpressionStatement",
															"src": "14691:15:13"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																},
																"id": 2566,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2564,
																	"name": "brandRefund",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2473,
																	"src": "14725:11:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint96",
																		"typeString": "uint96"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 2565,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14740:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "14725:16:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2574,
															"nodeType": "IfStatement",
															"src": "14721:60:13",
															"trueBody": {
																"expression": {
																	"arguments": [
																		{
																			"id": 2570,
																			"name": "brand",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2450,
																			"src": "14762:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 2571,
																			"name": "brandRefund",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2473,
																			"src": "14769:11:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint96",
																				"typeString": "uint96"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint96",
																				"typeString": "uint96"
																			}
																		],
																		"expression": {
																			"id": 2567,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2480,
																			"src": "14743:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$720",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 2569,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "14749:12:13",
																		"memberName": "safeTransfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 801,
																		"src": "14743:18:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$720_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$720_$",
																			"typeString": "function (contract IERC20,address,uint256)"
																		}
																	},
																	"id": 2572,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "14743:38:13",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 2573,
																"nodeType": "ExpressionStatement",
																"src": "14743:38:13"
															}
														}
													]
												},
												"id": 2576,
												"nodeType": "IfStatement",
												"src": "14052:740:13",
												"trueBody": {
													"id": 2551,
													"nodeType": "Block",
													"src": "14069:532:13",
													"statements": [
														{
															"assignments": [
																2485
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2485,
																	"mutability": "mutable",
																	"name": "grossPayout",
																	"nameLocation": "14090:11:13",
																	"nodeType": "VariableDeclaration",
																	"scope": 2551,
																	"src": "14083:18:13",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint96",
																		"typeString": "uint96"
																	},
																	"typeName": {
																		"id": 2484,
																		"name": "uint96",
																		"nodeType": "ElementaryTypeName",
																		"src": "14083:6:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint96",
																			"typeString": "uint96"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2492,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																},
																"id": 2491,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint96",
																				"typeString": "uint96"
																			},
																			"id": 2488,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2486,
																				"name": "totalEscrow",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2440,
																				"src": "14105:11:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint96",
																					"typeString": "uint96"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"hexValue": "35303030",
																				"id": 2487,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "14119:4:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_5000_by_1",
																					"typeString": "int_const 5000"
																				},
																				"value": "5000"
																			},
																			"src": "14105:18:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint96",
																				"typeString": "uint96"
																			}
																		}
																	],
																	"id": 2489,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "14104:20:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint96",
																		"typeString": "uint96"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 2490,
																	"name": "BPS_DENOMINATOR",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1364,
																	"src": "14127:15:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint96",
																		"typeString": "uint96"
																	}
																},
																"src": "14104:38:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "14083:59:13"
														},
														{
															"expression": {
																"id": 2497,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2493,
																	"name": "brandRefund",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2473,
																	"src": "14156:11:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint96",
																		"typeString": "uint96"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint96",
																		"typeString": "uint96"
																	},
																	"id": 2496,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2494,
																		"name": "totalEscrow",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2440,
																		"src": "14170:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint96",
																			"typeString": "uint96"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 2495,
																		"name": "grossPayout",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2485,
																		"src": "14184:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint96",
																			"typeString": "uint96"
																		}
																	},
																	"src": "14170:25:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint96",
																		"typeString": "uint96"
																	}
																},
																"src": "14156:39:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															"id": 2498,
															"nodeType": "ExpressionStatement",
															"src": "14156:39:13"
														},
														{
															"expression": {
																"id": 2506,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2499,
																	"name": "platformFee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2476,
																	"src": "14210:11:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint96",
																		"typeString": "uint96"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint96",
																		"typeString": "uint96"
																	},
																	"id": 2505,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint96",
																					"typeString": "uint96"
																				},
																				"id": 2502,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2500,
																					"name": "grossPayout",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2485,
																					"src": "14225:11:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint96",
																						"typeString": "uint96"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"id": 2501,
																					"name": "feeBps",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2459,
																					"src": "14239:6:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint96",
																						"typeString": "uint96"
																					}
																				},
																				"src": "14225:20:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint96",
																					"typeString": "uint96"
																				}
																			}
																		],
																		"id": 2503,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "14224:22:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint96",
																			"typeString": "uint96"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2504,
																		"name": "BPS_DENOMINATOR",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1364,
																		"src": "14249:15:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint96",
																			"typeString": "uint96"
																		}
																	},
																	"src": "14224:40:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint96",
																		"typeString": "uint96"
																	}
																},
																"src": "14210:54:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															"id": 2507,
															"nodeType": "ExpressionStatement",
															"src": "14210:54:13"
														},
														{
															"assignments": [
																2509
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2509,
																	"mutability": "mutable",
																	"name": "creatorNet",
																	"nameLocation": "14285:10:13",
																	"nodeType": "VariableDeclaration",
																	"scope": 2551,
																	"src": "14278:17:13",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint96",
																		"typeString": "uint96"
																	},
																	"typeName": {
																		"id": 2508,
																		"name": "uint96",
																		"nodeType": "ElementaryTypeName",
																		"src": "14278:6:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint96",
																			"typeString": "uint96"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2513,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																},
																"id": 2512,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2510,
																	"name": "grossPayout",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2485,
																	"src": "14298:11:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint96",
																		"typeString": "uint96"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 2511,
																	"name": "platformFee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2476,
																	"src": "14312:11:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint96",
																		"typeString": "uint96"
																	}
																},
																"src": "14298:25:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "14278:45:13"
														},
														{
															"expression": {
																"id": 2516,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2514,
																	"name": "creatorAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2470,
																	"src": "14338:13:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint96",
																		"typeString": "uint96"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 2515,
																	"name": "creatorNet",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2509,
																	"src": "14354:10:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint96",
																		"typeString": "uint96"
																	}
																},
																"src": "14338:26:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															"id": 2517,
															"nodeType": "ExpressionStatement",
															"src": "14338:26:13"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																},
																"id": 2520,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2518,
																	"name": "creatorNet",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2509,
																	"src": "14383:10:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint96",
																		"typeString": "uint96"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 2519,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14397:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "14383:15:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2528,
															"nodeType": "IfStatement",
															"src": "14379:60:13",
															"trueBody": {
																"expression": {
																	"arguments": [
																		{
																			"id": 2524,
																			"name": "creator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2445,
																			"src": "14419:7:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 2525,
																			"name": "creatorNet",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2509,
																			"src": "14428:10:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint96",
																				"typeString": "uint96"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint96",
																				"typeString": "uint96"
																			}
																		],
																		"expression": {
																			"id": 2521,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2480,
																			"src": "14400:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$720",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 2523,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "14406:12:13",
																		"memberName": "safeTransfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 801,
																		"src": "14400:18:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$720_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$720_$",
																			"typeString": "function (contract IERC20,address,uint256)"
																		}
																	},
																	"id": 2526,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "14400:39:13",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 2527,
																"nodeType": "ExpressionStatement",
																"src": "14400:39:13"
															}
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																},
																"id": 2531,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2529,
																	"name": "brandRefund",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2473,
																	"src": "14457:11:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint96",
																		"typeString": "uint96"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 2530,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14472:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "14457:16:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2539,
															"nodeType": "IfStatement",
															"src": "14453:60:13",
															"trueBody": {
																"expression": {
																	"arguments": [
																		{
																			"id": 2535,
																			"name": "brand",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2450,
																			"src": "14494:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 2536,
																			"name": "brandRefund",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2473,
																			"src": "14501:11:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint96",
																				"typeString": "uint96"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint96",
																				"typeString": "uint96"
																			}
																		],
																		"expression": {
																			"id": 2532,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2480,
																			"src": "14475:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$720",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 2534,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "14481:12:13",
																		"memberName": "safeTransfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 801,
																		"src": "14475:18:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$720_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$720_$",
																			"typeString": "function (contract IERC20,address,uint256)"
																		}
																	},
																	"id": 2537,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "14475:38:13",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 2538,
																"nodeType": "ExpressionStatement",
																"src": "14475:38:13"
															}
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																},
																"id": 2542,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2540,
																	"name": "platformFee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2476,
																	"src": "14531:11:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint96",
																		"typeString": "uint96"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 2541,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14546:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "14531:16:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2550,
															"nodeType": "IfStatement",
															"src": "14527:63:13",
															"trueBody": {
																"expression": {
																	"arguments": [
																		{
																			"id": 2546,
																			"name": "feeRecip",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2455,
																			"src": "14568:8:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 2547,
																			"name": "platformFee",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2476,
																			"src": "14578:11:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint96",
																				"typeString": "uint96"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint96",
																				"typeString": "uint96"
																			}
																		],
																		"expression": {
																			"id": 2543,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2480,
																			"src": "14549:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$720",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 2545,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "14555:12:13",
																		"memberName": "safeTransfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 801,
																		"src": "14549:18:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$720_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$720_$",
																			"typeString": "function (contract IERC20,address,uint256)"
																		}
																	},
																	"id": 2548,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "14549:41:13",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 2549,
																"nodeType": "ExpressionStatement",
																"src": "14549:41:13"
															}
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2578,
															"name": "_dealId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2406,
															"src": "14836:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"id": 2579,
															"name": "_creatorAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2408,
															"src": "14857:15:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2580,
															"name": "_accept5050",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2410,
															"src": "14886:11:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 2581,
															"name": "creatorAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2470,
															"src": "14911:13:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														},
														{
															"id": 2582,
															"name": "brandRefund",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2473,
															"src": "14938:11:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															},
															{
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														],
														"id": 2577,
														"name": "DisputeResolved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1490,
														"src": "14807:15:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_address_$_t_bool_$_t_uint96_$_t_uint96_$returns$__$",
															"typeString": "function (string memory,address,bool,uint96,uint96)"
														}
													},
													"id": 2583,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14807:152:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2584,
												"nodeType": "EmitStatement",
												"src": "14802:157:13"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2586,
															"name": "_dealId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2406,
															"src": "14990:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"id": 2587,
															"name": "creator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2445,
															"src": "14999:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2588,
															"name": "creatorAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2470,
															"src": "15008:13:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														},
														{
															"id": 2589,
															"name": "platformFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2476,
															"src": "15023:11:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															},
															{
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														],
														"id": 2585,
														"name": "PaymentReleased",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1470,
														"src": "14974:15:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_address_$_t_uint96_$_t_uint96_$returns$__$",
															"typeString": "function (string memory,address,uint96,uint96)"
														}
													},
													"id": 2590,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14974:61:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2591,
												"nodeType": "EmitStatement",
												"src": "14969:66:13"
											}
										]
									},
									"documentation": {
										"id": 2404,
										"nodeType": "StructuredDocumentation",
										"src": "13176:63:13",
										"text": " @notice [CUSTODIAL] Creator resolve dispute."
									},
									"functionSelector": "ef03c10e",
									"id": 2593,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2413,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2412,
												"name": "nonReentrant",
												"nameLocations": [
													"13389:12:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 607,
												"src": "13389:12:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "13389:12:13"
										},
										{
											"arguments": [
												{
													"id": 2415,
													"name": "SERVER_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1374,
													"src": "13419:11:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 2416,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2414,
												"name": "onlyRole",
												"nameLocations": [
													"13410:8:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 41,
												"src": "13410:8:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "13410:21:13"
										},
										{
											"id": 2418,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2417,
												"name": "whenNotPaused",
												"nameLocations": [
													"13440:13:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 504,
												"src": "13440:13:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "13440:13:13"
										},
										{
											"arguments": [
												{
													"id": 2420,
													"name": "_dealId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2406,
													"src": "13473:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												}
											],
											"id": 2421,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2419,
												"name": "dealExists",
												"nameLocations": [
													"13462:10:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1561,
												"src": "13462:10:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "13462:19:13"
										},
										{
											"arguments": [
												{
													"id": 2423,
													"name": "_dealId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2406,
													"src": "13506:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												{
													"id": 2424,
													"name": "_creatorAddress",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2408,
													"src": "13515:15:13",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 2425,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2422,
												"name": "onlyDealCreator",
												"nameLocations": [
													"13490:15:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1546,
												"src": "13490:15:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "13490:41:13"
										},
										{
											"arguments": [
												{
													"id": 2427,
													"name": "_dealId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2406,
													"src": "13549:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												{
													"expression": {
														"id": 2428,
														"name": "ContractStatus",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1381,
														"src": "13558:14:13",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_enum$_ContractStatus_$1381_$",
															"typeString": "type(enum EtharisEscrow.ContractStatus)"
														}
													},
													"id": 2429,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberLocation": "13573:8:13",
													"memberName": "DISPUTED",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1378,
													"src": "13558:23:13",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_ContractStatus_$1381",
														"typeString": "enum EtharisEscrow.ContractStatus"
													}
												}
											],
											"id": 2430,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2426,
												"name": "inStatus",
												"nameLocations": [
													"13540:8:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1580,
												"src": "13540:8:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "13540:42:13"
										}
									],
									"name": "resolveDispute",
									"nameLocation": "13253:14:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2411,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2406,
												"mutability": "mutable",
												"name": "_dealId",
												"nameLocation": "13291:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 2593,
												"src": "13277:21:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2405,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "13277:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2408,
												"mutability": "mutable",
												"name": "_creatorAddress",
												"nameLocation": "13316:15:13",
												"nodeType": "VariableDeclaration",
												"scope": 2593,
												"src": "13308:23:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2407,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13308:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2410,
												"mutability": "mutable",
												"name": "_accept5050",
												"nameLocation": "13346:11:13",
												"nodeType": "VariableDeclaration",
												"scope": 2593,
												"src": "13341:16:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2409,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "13341:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13267:96:13"
									},
									"returnParameters": {
										"id": 2431,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13587:0:13"
									},
									"scope": 3154,
									"src": "13244:1798:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2662,
										"nodeType": "Block",
										"src": "15416:391:13",
										"statements": [
											{
												"assignments": [
													2616
												],
												"declarations": [
													{
														"constant": false,
														"id": 2616,
														"mutability": "mutable",
														"name": "deal",
														"nameLocation": "15439:4:13",
														"nodeType": "VariableDeclaration",
														"scope": 2662,
														"src": "15426:17:13",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Deal_$1409_storage_ptr",
															"typeString": "struct EtharisEscrow.Deal"
														},
														"typeName": {
															"id": 2615,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2614,
																"name": "Deal",
																"nameLocations": [
																	"15426:4:13"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1409,
																"src": "15426:4:13"
															},
															"referencedDeclaration": 1409,
															"src": "15426:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Deal_$1409_storage_ptr",
																"typeString": "struct EtharisEscrow.Deal"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2620,
												"initialValue": {
													"baseExpression": {
														"id": 2617,
														"name": "_deals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1414,
														"src": "15446:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_Deal_$1409_storage_$",
															"typeString": "mapping(string memory => struct EtharisEscrow.Deal storage ref)"
														}
													},
													"id": 2619,
													"indexExpression": {
														"id": 2618,
														"name": "_dealId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2596,
														"src": "15453:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "15446:15:13",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Deal_$1409_storage",
														"typeString": "struct EtharisEscrow.Deal storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "15426:35:13"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2625,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 2621,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "15476:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 2622,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "15482:9:13",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "15476:15:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"expression": {
															"id": 2623,
															"name": "deal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2616,
															"src": "15495:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Deal_$1409_storage_ptr",
																"typeString": "struct EtharisEscrow.Deal storage pointer"
															}
														},
														"id": 2624,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "15500:8:13",
														"memberName": "deadline",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1395,
														"src": "15495:13:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "15476:32:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2629,
												"nodeType": "IfStatement",
												"src": "15472:64:13",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 2626,
															"name": "DeadlineNotPassed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1343,
															"src": "15517:17:13",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 2627,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "15517:19:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 2628,
													"nodeType": "RevertStatement",
													"src": "15510:26:13"
												}
											},
											{
												"assignments": [
													2631
												],
												"declarations": [
													{
														"constant": false,
														"id": 2631,
														"mutability": "mutable",
														"name": "refundAmount",
														"nameLocation": "15554:12:13",
														"nodeType": "VariableDeclaration",
														"scope": 2662,
														"src": "15547:19:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														},
														"typeName": {
															"id": 2630,
															"name": "uint96",
															"nodeType": "ElementaryTypeName",
															"src": "15547:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2634,
												"initialValue": {
													"expression": {
														"id": 2632,
														"name": "deal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2616,
														"src": "15569:4:13",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Deal_$1409_storage_ptr",
															"typeString": "struct EtharisEscrow.Deal storage pointer"
														}
													},
													"id": 2633,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "15574:6:13",
													"memberName": "amount",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1393,
													"src": "15569:11:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "15547:33:13"
											},
											{
												"expression": {
													"id": 2640,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2635,
															"name": "deal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2616,
															"src": "15591:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Deal_$1409_storage_ptr",
																"typeString": "struct EtharisEscrow.Deal storage pointer"
															}
														},
														"id": 2637,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "15596:6:13",
														"memberName": "status",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1406,
														"src": "15591:11:13",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_ContractStatus_$1381",
															"typeString": "enum EtharisEscrow.ContractStatus"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 2638,
															"name": "ContractStatus",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1381,
															"src": "15605:14:13",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_ContractStatus_$1381_$",
																"typeString": "type(enum EtharisEscrow.ContractStatus)"
															}
														},
														"id": 2639,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "15620:9:13",
														"memberName": "CANCELLED",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1380,
														"src": "15605:24:13",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_ContractStatus_$1381",
															"typeString": "enum EtharisEscrow.ContractStatus"
														}
													},
													"src": "15591:38:13",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_ContractStatus_$1381",
														"typeString": "enum EtharisEscrow.ContractStatus"
													}
												},
												"id": 2641,
												"nodeType": "ExpressionStatement",
												"src": "15591:38:13"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													},
													"id": 2644,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2642,
														"name": "refundAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2631,
														"src": "15644:12:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2643,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15660:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "15644:17:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2654,
												"nodeType": "IfStatement",
												"src": "15640:97:13",
												"trueBody": {
													"id": 2653,
													"nodeType": "Block",
													"src": "15663:74:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 2648,
																			"name": "deal",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2616,
																			"src": "15701:4:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Deal_$1409_storage_ptr",
																				"typeString": "struct EtharisEscrow.Deal storage pointer"
																			}
																		},
																		"id": 2649,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "15706:5:13",
																		"memberName": "brand",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1383,
																		"src": "15701:10:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2650,
																		"name": "refundAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2631,
																		"src": "15713:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint96",
																			"typeString": "uint96"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint96",
																			"typeString": "uint96"
																		}
																	],
																	"expression": {
																		"id": 2645,
																		"name": "_idrxToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1358,
																		"src": "15677:10:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$720",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 2647,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "15688:12:13",
																	"memberName": "safeTransfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 801,
																	"src": "15677:23:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$720_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$720_$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 2651,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15677:49:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2652,
															"nodeType": "ExpressionStatement",
															"src": "15677:49:13"
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2656,
															"name": "_dealId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2596,
															"src": "15766:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"expression": {
																"id": 2657,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "15775:3:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2658,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "15779:6:13",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "15775:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2659,
															"name": "refundAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2631,
															"src": "15787:12:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														],
														"id": 2655,
														"name": "DealCancelled",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1498,
														"src": "15752:13:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_address_$_t_uint96_$returns$__$",
															"typeString": "function (string memory,address,uint96)"
														}
													},
													"id": 2660,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15752:48:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2661,
												"nodeType": "EmitStatement",
												"src": "15747:53:13"
											}
										]
									},
									"documentation": {
										"id": 2594,
										"nodeType": "StructuredDocumentation",
										"src": "15048:122:13",
										"text": " @notice Triggers a full refund to the Brand if the Creator fails to submit content before the deadline."
									},
									"functionSelector": "e39fff38",
									"id": 2663,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2599,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2598,
												"name": "nonReentrant",
												"nameLocations": [
													"15270:12:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 607,
												"src": "15270:12:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "15270:12:13"
										},
										{
											"arguments": [
												{
													"id": 2601,
													"name": "SERVER_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1374,
													"src": "15300:11:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 2602,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2600,
												"name": "onlyRole",
												"nameLocations": [
													"15291:8:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 41,
												"src": "15291:8:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "15291:21:13"
										},
										{
											"id": 2604,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2603,
												"name": "whenNotPaused",
												"nameLocations": [
													"15321:13:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 504,
												"src": "15321:13:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "15321:13:13"
										},
										{
											"arguments": [
												{
													"id": 2606,
													"name": "_dealId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2596,
													"src": "15354:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												}
											],
											"id": 2607,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2605,
												"name": "dealExists",
												"nameLocations": [
													"15343:10:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1561,
												"src": "15343:10:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "15343:19:13"
										},
										{
											"arguments": [
												{
													"id": 2609,
													"name": "_dealId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2596,
													"src": "15380:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												{
													"expression": {
														"id": 2610,
														"name": "ContractStatus",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1381,
														"src": "15389:14:13",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_enum$_ContractStatus_$1381_$",
															"typeString": "type(enum EtharisEscrow.ContractStatus)"
														}
													},
													"id": 2611,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberLocation": "15404:6:13",
													"memberName": "ACTIVE",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1376,
													"src": "15389:21:13",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_ContractStatus_$1381",
														"typeString": "enum EtharisEscrow.ContractStatus"
													}
												}
											],
											"id": 2612,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2608,
												"name": "inStatus",
												"nameLocations": [
													"15371:8:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1580,
												"src": "15371:8:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "15371:40:13"
										}
									],
									"name": "autoRefundAfterDeadline",
									"nameLocation": "15184:23:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2597,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2596,
												"mutability": "mutable",
												"name": "_dealId",
												"nameLocation": "15231:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 2663,
												"src": "15217:21:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2595,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "15217:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15207:37:13"
									},
									"returnParameters": {
										"id": 2613,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15416:0:13"
									},
									"scope": 3154,
									"src": "15175:632:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2700,
										"nodeType": "Block",
										"src": "16156:122:13",
										"statements": [
											{
												"expression": {
													"id": 2692,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 2686,
																"name": "_deals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1414,
																"src": "16166:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_Deal_$1409_storage_$",
																	"typeString": "mapping(string memory => struct EtharisEscrow.Deal storage ref)"
																}
															},
															"id": 2688,
															"indexExpression": {
																"id": 2687,
																"name": "_dealId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2666,
																"src": "16173:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "16166:15:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Deal_$1409_storage",
																"typeString": "struct EtharisEscrow.Deal storage ref"
															}
														},
														"id": 2689,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "16182:6:13",
														"memberName": "status",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1406,
														"src": "16166:22:13",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_ContractStatus_$1381",
															"typeString": "enum EtharisEscrow.ContractStatus"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 2690,
															"name": "ContractStatus",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1381,
															"src": "16191:14:13",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_ContractStatus_$1381_$",
																"typeString": "type(enum EtharisEscrow.ContractStatus)"
															}
														},
														"id": 2691,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "16206:9:13",
														"memberName": "CANCELLED",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1380,
														"src": "16191:24:13",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_ContractStatus_$1381",
															"typeString": "enum EtharisEscrow.ContractStatus"
														}
													},
													"src": "16166:49:13",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_ContractStatus_$1381",
														"typeString": "enum EtharisEscrow.ContractStatus"
													}
												},
												"id": 2693,
												"nodeType": "ExpressionStatement",
												"src": "16166:49:13"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2695,
															"name": "_dealId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2666,
															"src": "16245:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"id": 2696,
															"name": "_brandAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2668,
															"src": "16254:13:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "30",
															"id": 2697,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16269:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 2694,
														"name": "DealCancelled",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1498,
														"src": "16231:13:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_address_$_t_uint96_$returns$__$",
															"typeString": "function (string memory,address,uint96)"
														}
													},
													"id": 2698,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16231:40:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2699,
												"nodeType": "EmitStatement",
												"src": "16226:45:13"
											}
										]
									},
									"documentation": {
										"id": 2664,
										"nodeType": "StructuredDocumentation",
										"src": "15813:75:13",
										"text": " @notice [CUSTODIAL] Cancel the deal before it is funded."
									},
									"functionSelector": "03f715da",
									"id": 2701,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 2671,
													"name": "SERVER_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1374,
													"src": "16015:11:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 2672,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2670,
												"name": "onlyRole",
												"nameLocations": [
													"16006:8:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 41,
												"src": "16006:8:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "16006:21:13"
										},
										{
											"arguments": [
												{
													"id": 2674,
													"name": "_dealId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2666,
													"src": "16047:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												}
											],
											"id": 2675,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2673,
												"name": "dealExists",
												"nameLocations": [
													"16036:10:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1561,
												"src": "16036:10:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "16036:19:13"
										},
										{
											"arguments": [
												{
													"id": 2677,
													"name": "_dealId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2666,
													"src": "16078:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												{
													"id": 2678,
													"name": "_brandAddress",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2668,
													"src": "16087:13:13",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 2679,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2676,
												"name": "onlyDealBrand",
												"nameLocations": [
													"16064:13:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1528,
												"src": "16064:13:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "16064:37:13"
										},
										{
											"arguments": [
												{
													"id": 2681,
													"name": "_dealId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2666,
													"src": "16119:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												{
													"expression": {
														"id": 2682,
														"name": "ContractStatus",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1381,
														"src": "16128:14:13",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_enum$_ContractStatus_$1381_$",
															"typeString": "type(enum EtharisEscrow.ContractStatus)"
														}
													},
													"id": 2683,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberLocation": "16143:7:13",
													"memberName": "PENDING",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1375,
													"src": "16128:22:13",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_ContractStatus_$1381",
														"typeString": "enum EtharisEscrow.ContractStatus"
													}
												}
											],
											"id": 2684,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2680,
												"name": "inStatus",
												"nameLocations": [
													"16110:8:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1580,
												"src": "16110:8:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "16110:41:13"
										}
									],
									"name": "cancelDeal",
									"nameLocation": "15902:10:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2669,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2666,
												"mutability": "mutable",
												"name": "_dealId",
												"nameLocation": "15936:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 2701,
												"src": "15922:21:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2665,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "15922:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2668,
												"mutability": "mutable",
												"name": "_brandAddress",
												"nameLocation": "15961:13:13",
												"nodeType": "VariableDeclaration",
												"scope": 2701,
												"src": "15953:21:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2667,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15953:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15912:68:13"
									},
									"returnParameters": {
										"id": 2685,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16156:0:13"
									},
									"scope": 3154,
									"src": "15893:385:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2771,
										"nodeType": "Block",
										"src": "16487:572:13",
										"statements": [
											{
												"assignments": [
													2717
												],
												"declarations": [
													{
														"constant": false,
														"id": 2717,
														"mutability": "mutable",
														"name": "deal",
														"nameLocation": "16510:4:13",
														"nodeType": "VariableDeclaration",
														"scope": 2771,
														"src": "16497:17:13",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Deal_$1409_storage_ptr",
															"typeString": "struct EtharisEscrow.Deal"
														},
														"typeName": {
															"id": 2716,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2715,
																"name": "Deal",
																"nameLocations": [
																	"16497:4:13"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1409,
																"src": "16497:4:13"
															},
															"referencedDeclaration": 1409,
															"src": "16497:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Deal_$1409_storage_ptr",
																"typeString": "struct EtharisEscrow.Deal"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2721,
												"initialValue": {
													"baseExpression": {
														"id": 2718,
														"name": "_deals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1414,
														"src": "16517:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_Deal_$1409_storage_$",
															"typeString": "mapping(string memory => struct EtharisEscrow.Deal storage ref)"
														}
													},
													"id": 2720,
													"indexExpression": {
														"id": 2719,
														"name": "_dealId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2704,
														"src": "16524:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "16517:15:13",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Deal_$1409_storage",
														"typeString": "struct EtharisEscrow.Deal storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16497:35:13"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_enum$_ContractStatus_$1381",
														"typeString": "enum EtharisEscrow.ContractStatus"
													},
													"id": 2726,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 2722,
															"name": "deal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2717,
															"src": "16616:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Deal_$1409_storage_ptr",
																"typeString": "struct EtharisEscrow.Deal storage pointer"
															}
														},
														"id": 2723,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "16621:6:13",
														"memberName": "status",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1406,
														"src": "16616:11:13",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_ContractStatus_$1381",
															"typeString": "enum EtharisEscrow.ContractStatus"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"id": 2724,
															"name": "ContractStatus",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1381,
															"src": "16631:14:13",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_ContractStatus_$1381_$",
																"typeString": "type(enum EtharisEscrow.ContractStatus)"
															}
														},
														"id": 2725,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "16646:6:13",
														"memberName": "ACTIVE",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1376,
														"src": "16631:21:13",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_ContractStatus_$1381",
															"typeString": "enum EtharisEscrow.ContractStatus"
														}
													},
													"src": "16616:36:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2738,
												"nodeType": "IfStatement",
												"src": "16612:178:13",
												"trueBody": {
													"id": 2737,
													"nodeType": "Block",
													"src": "16654:136:13",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_enum$_ContractStatus_$1381",
																	"typeString": "enum EtharisEscrow.ContractStatus"
																},
																"id": 2731,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 2727,
																		"name": "deal",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2717,
																		"src": "16672:4:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Deal_$1409_storage_ptr",
																			"typeString": "struct EtharisEscrow.Deal storage pointer"
																		}
																	},
																	"id": 2728,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "16677:6:13",
																	"memberName": "status",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1406,
																	"src": "16672:11:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_ContractStatus_$1381",
																		"typeString": "enum EtharisEscrow.ContractStatus"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"expression": {
																		"id": 2729,
																		"name": "ContractStatus",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1381,
																		"src": "16687:14:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_enum$_ContractStatus_$1381_$",
																			"typeString": "type(enum EtharisEscrow.ContractStatus)"
																		}
																	},
																	"id": 2730,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "16702:14:13",
																	"memberName": "PENDING_REVIEW",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1377,
																	"src": "16687:29:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_ContractStatus_$1381",
																		"typeString": "enum EtharisEscrow.ContractStatus"
																	}
																},
																"src": "16672:44:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2736,
															"nodeType": "IfStatement",
															"src": "16668:112:13",
															"trueBody": {
																"id": 2735,
																"nodeType": "Block",
																"src": "16718:62:13",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 2732,
																				"name": "CannotCancelThisDeal",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1345,
																				"src": "16743:20:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 2733,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "16743:22:13",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2734,
																		"nodeType": "RevertStatement",
																		"src": "16736:29:13"
																	}
																]
															}
														}
													]
												}
											},
											{
												"assignments": [
													2740
												],
												"declarations": [
													{
														"constant": false,
														"id": 2740,
														"mutability": "mutable",
														"name": "refundAmount",
														"nameLocation": "16807:12:13",
														"nodeType": "VariableDeclaration",
														"scope": 2771,
														"src": "16800:19:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														},
														"typeName": {
															"id": 2739,
															"name": "uint96",
															"nodeType": "ElementaryTypeName",
															"src": "16800:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2743,
												"initialValue": {
													"expression": {
														"id": 2741,
														"name": "deal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2717,
														"src": "16822:4:13",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Deal_$1409_storage_ptr",
															"typeString": "struct EtharisEscrow.Deal storage pointer"
														}
													},
													"id": 2742,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "16827:6:13",
													"memberName": "amount",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1393,
													"src": "16822:11:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16800:33:13"
											},
											{
												"expression": {
													"id": 2749,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2744,
															"name": "deal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2717,
															"src": "16843:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Deal_$1409_storage_ptr",
																"typeString": "struct EtharisEscrow.Deal storage pointer"
															}
														},
														"id": 2746,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "16848:6:13",
														"memberName": "status",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1406,
														"src": "16843:11:13",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_ContractStatus_$1381",
															"typeString": "enum EtharisEscrow.ContractStatus"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 2747,
															"name": "ContractStatus",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1381,
															"src": "16857:14:13",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_ContractStatus_$1381_$",
																"typeString": "type(enum EtharisEscrow.ContractStatus)"
															}
														},
														"id": 2748,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "16872:9:13",
														"memberName": "CANCELLED",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1380,
														"src": "16857:24:13",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_ContractStatus_$1381",
															"typeString": "enum EtharisEscrow.ContractStatus"
														}
													},
													"src": "16843:38:13",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_ContractStatus_$1381",
														"typeString": "enum EtharisEscrow.ContractStatus"
													}
												},
												"id": 2750,
												"nodeType": "ExpressionStatement",
												"src": "16843:38:13"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													},
													"id": 2753,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2751,
														"name": "refundAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2740,
														"src": "16896:12:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2752,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "16912:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "16896:17:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2763,
												"nodeType": "IfStatement",
												"src": "16892:97:13",
												"trueBody": {
													"id": 2762,
													"nodeType": "Block",
													"src": "16915:74:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 2757,
																			"name": "deal",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2717,
																			"src": "16953:4:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Deal_$1409_storage_ptr",
																				"typeString": "struct EtharisEscrow.Deal storage pointer"
																			}
																		},
																		"id": 2758,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "16958:5:13",
																		"memberName": "brand",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1383,
																		"src": "16953:10:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2759,
																		"name": "refundAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2740,
																		"src": "16965:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint96",
																			"typeString": "uint96"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint96",
																			"typeString": "uint96"
																		}
																	],
																	"expression": {
																		"id": 2754,
																		"name": "_idrxToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1358,
																		"src": "16929:10:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$720",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 2756,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "16940:12:13",
																	"memberName": "safeTransfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 801,
																	"src": "16929:23:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$720_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$720_$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 2760,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16929:49:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2761,
															"nodeType": "ExpressionStatement",
															"src": "16929:49:13"
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2765,
															"name": "_dealId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2704,
															"src": "17018:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"expression": {
																"id": 2766,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "17027:3:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2767,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "17031:6:13",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "17027:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2768,
															"name": "refundAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2740,
															"src": "17039:12:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														],
														"id": 2764,
														"name": "DealCancelled",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1498,
														"src": "17004:13:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_address_$_t_uint96_$returns$__$",
															"typeString": "function (string memory,address,uint96)"
														}
													},
													"id": 2769,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17004:48:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2770,
												"nodeType": "EmitStatement",
												"src": "16999:53:13"
											}
										]
									},
									"documentation": {
										"id": 2702,
										"nodeType": "StructuredDocumentation",
										"src": "16284:68:13",
										"text": " @notice Emergency cancel deal (SERVER_ROLE only)."
									},
									"functionSelector": "1a1aaeed",
									"id": 2772,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2707,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2706,
												"name": "nonReentrant",
												"nameLocations": [
													"16432:12:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 607,
												"src": "16432:12:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "16432:12:13"
										},
										{
											"arguments": [
												{
													"id": 2709,
													"name": "SERVER_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1374,
													"src": "16454:11:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 2710,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2708,
												"name": "onlyRole",
												"nameLocations": [
													"16445:8:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 41,
												"src": "16445:8:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "16445:21:13"
										},
										{
											"arguments": [
												{
													"id": 2712,
													"name": "_dealId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2704,
													"src": "16478:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												}
											],
											"id": 2713,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2711,
												"name": "dealExists",
												"nameLocations": [
													"16467:10:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1561,
												"src": "16467:10:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "16467:19:13"
										}
									],
									"name": "emergencyCancelDeal",
									"nameLocation": "16366:19:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2705,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2704,
												"mutability": "mutable",
												"name": "_dealId",
												"nameLocation": "16409:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 2772,
												"src": "16395:21:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2703,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "16395:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16385:37:13"
									},
									"returnParameters": {
										"id": 2714,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16487:0:13"
									},
									"scope": 3154,
									"src": "16357:702:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2782,
										"nodeType": "Block",
										"src": "17297:43:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2779,
															"name": "_idrxToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1358,
															"src": "17322:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$720",
																"typeString": "contract IERC20"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$720",
																"typeString": "contract IERC20"
															}
														],
														"id": 2778,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "17314:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 2777,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "17314:7:13",
															"typeDescriptions": {}
														}
													},
													"id": 2780,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17314:19:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2776,
												"id": 2781,
												"nodeType": "Return",
												"src": "17307:26:13"
											}
										]
									},
									"functionSelector": "d6bc7c63",
									"id": 2783,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "idrxToken",
									"nameLocation": "17253:9:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2773,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17262:2:13"
									},
									"returnParameters": {
										"id": 2776,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2775,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2783,
												"src": "17288:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2774,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17288:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17287:9:13"
									},
									"scope": 3154,
									"src": "17244:96:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2790,
										"nodeType": "Block",
										"src": "17403:39:13",
										"statements": [
											{
												"expression": {
													"id": 2788,
													"name": "_platformFeeBps",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1361,
													"src": "17420:15:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"functionReturnParameters": 2787,
												"id": 2789,
												"nodeType": "Return",
												"src": "17413:22:13"
											}
										]
									},
									"functionSelector": "22dcd13e",
									"id": 2791,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "platformFeeBps",
									"nameLocation": "17355:14:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2784,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17369:2:13"
									},
									"returnParameters": {
										"id": 2787,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2786,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2791,
												"src": "17395:6:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 2785,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "17395:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17394:8:13"
									},
									"scope": 3154,
									"src": "17346:96:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2798,
										"nodeType": "Block",
										"src": "17504:37:13",
										"statements": [
											{
												"expression": {
													"id": 2796,
													"name": "_feeRecipient",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1369,
													"src": "17521:13:13",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2795,
												"id": 2797,
												"nodeType": "Return",
												"src": "17514:20:13"
											}
										]
									},
									"functionSelector": "46904840",
									"id": 2799,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "feeRecipient",
									"nameLocation": "17457:12:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2792,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17469:2:13"
									},
									"returnParameters": {
										"id": 2795,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2794,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2799,
												"src": "17495:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2793,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17495:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17494:9:13"
									},
									"scope": 3154,
									"src": "17448:93:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2811,
										"nodeType": "Block",
										"src": "17621:39:13",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 2807,
														"name": "_deals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1414,
														"src": "17638:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_Deal_$1409_storage_$",
															"typeString": "mapping(string memory => struct EtharisEscrow.Deal storage ref)"
														}
													},
													"id": 2809,
													"indexExpression": {
														"id": 2808,
														"name": "_dealId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2801,
														"src": "17645:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "17638:15:13",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Deal_$1409_storage",
														"typeString": "struct EtharisEscrow.Deal storage ref"
													}
												},
												"functionReturnParameters": 2806,
												"id": 2810,
												"nodeType": "Return",
												"src": "17631:22:13"
											}
										]
									},
									"functionSelector": "a0a57dac",
									"id": 2812,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "deals",
									"nameLocation": "17556:5:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2802,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2801,
												"mutability": "mutable",
												"name": "_dealId",
												"nameLocation": "17576:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 2812,
												"src": "17562:21:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2800,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "17562:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17561:23:13"
									},
									"returnParameters": {
										"id": 2806,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2805,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2812,
												"src": "17608:11:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Deal_$1409_memory_ptr",
													"typeString": "struct EtharisEscrow.Deal"
												},
												"typeName": {
													"id": 2804,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2803,
														"name": "Deal",
														"nameLocations": [
															"17608:4:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1409,
														"src": "17608:4:13"
													},
													"referencedDeclaration": 1409,
													"src": "17608:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Deal_$1409_storage_ptr",
														"typeString": "struct EtharisEscrow.Deal"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17607:13:13"
									},
									"scope": 3154,
									"src": "17547:113:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2824,
										"nodeType": "Block",
										"src": "17756:43:13",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 2820,
														"name": "_brandDeals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1419,
														"src": "17773:11:13",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_string_storage_$dyn_storage_$",
															"typeString": "mapping(address => string storage ref[] storage ref)"
														}
													},
													"id": 2822,
													"indexExpression": {
														"id": 2821,
														"name": "_brand",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2814,
														"src": "17785:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "17773:19:13",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
														"typeString": "string storage ref[] storage ref"
													}
												},
												"functionReturnParameters": 2819,
												"id": 2823,
												"nodeType": "Return",
												"src": "17766:26:13"
											}
										]
									},
									"functionSelector": "f0c3cd20",
									"id": 2825,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "brandDeals",
									"nameLocation": "17675:10:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2815,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2814,
												"mutability": "mutable",
												"name": "_brand",
												"nameLocation": "17703:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 2825,
												"src": "17695:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2813,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17695:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17685:30:13"
									},
									"returnParameters": {
										"id": 2819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2818,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2825,
												"src": "17739:15:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
													"typeString": "string[]"
												},
												"typeName": {
													"baseType": {
														"id": 2816,
														"name": "string",
														"nodeType": "ElementaryTypeName",
														"src": "17739:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage_ptr",
															"typeString": "string"
														}
													},
													"id": 2817,
													"nodeType": "ArrayTypeName",
													"src": "17739:8:13",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
														"typeString": "string[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17738:17:13"
									},
									"scope": 3154,
									"src": "17666:133:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2837,
										"nodeType": "Block",
										"src": "17899:47:13",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 2833,
														"name": "_creatorDeals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1424,
														"src": "17916:13:13",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_string_storage_$dyn_storage_$",
															"typeString": "mapping(address => string storage ref[] storage ref)"
														}
													},
													"id": 2835,
													"indexExpression": {
														"id": 2834,
														"name": "_creator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2827,
														"src": "17930:8:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "17916:23:13",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
														"typeString": "string storage ref[] storage ref"
													}
												},
												"functionReturnParameters": 2832,
												"id": 2836,
												"nodeType": "Return",
												"src": "17909:30:13"
											}
										]
									},
									"functionSelector": "aed1505d",
									"id": 2838,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "creatorDeals",
									"nameLocation": "17814:12:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2828,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2827,
												"mutability": "mutable",
												"name": "_creator",
												"nameLocation": "17844:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 2838,
												"src": "17836:16:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2826,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17836:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17826:32:13"
									},
									"returnParameters": {
										"id": 2832,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2831,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2838,
												"src": "17882:15:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
													"typeString": "string[]"
												},
												"typeName": {
													"baseType": {
														"id": 2829,
														"name": "string",
														"nodeType": "ElementaryTypeName",
														"src": "17882:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage_ptr",
															"typeString": "string"
														}
													},
													"id": 2830,
													"nodeType": "ArrayTypeName",
													"src": "17882:8:13",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
														"typeString": "string[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17881:17:13"
									},
									"scope": 3154,
									"src": "17805:141:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2912,
										"nodeType": "Block",
										"src": "18474:481:13",
										"statements": [
											{
												"assignments": [
													2872
												],
												"declarations": [
													{
														"constant": false,
														"id": 2872,
														"mutability": "mutable",
														"name": "deal",
														"nameLocation": "18497:4:13",
														"nodeType": "VariableDeclaration",
														"scope": 2912,
														"src": "18484:17:13",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Deal_$1409_storage_ptr",
															"typeString": "struct EtharisEscrow.Deal"
														},
														"typeName": {
															"id": 2871,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2870,
																"name": "Deal",
																"nameLocations": [
																	"18484:4:13"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1409,
																"src": "18484:4:13"
															},
															"referencedDeclaration": 1409,
															"src": "18484:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Deal_$1409_storage_ptr",
																"typeString": "struct EtharisEscrow.Deal"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2876,
												"initialValue": {
													"baseExpression": {
														"id": 2873,
														"name": "_deals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1414,
														"src": "18504:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_Deal_$1409_storage_$",
															"typeString": "mapping(string memory => struct EtharisEscrow.Deal storage ref)"
														}
													},
													"id": 2875,
													"indexExpression": {
														"id": 2874,
														"name": "_dealId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2840,
														"src": "18511:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "18504:15:13",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Deal_$1409_storage",
														"typeString": "struct EtharisEscrow.Deal storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "18484:35:13"
											},
											{
												"condition": {
													"id": 2879,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "18533:12:13",
													"subExpression": {
														"expression": {
															"id": 2877,
															"name": "deal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2872,
															"src": "18534:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Deal_$1409_storage_ptr",
																"typeString": "struct EtharisEscrow.Deal storage pointer"
															}
														},
														"id": 2878,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "18539:6:13",
														"memberName": "exists",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1408,
														"src": "18534:11:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2883,
												"nodeType": "IfStatement",
												"src": "18529:39:13",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 2880,
															"name": "DealNotFound",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1319,
															"src": "18554:12:13",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 2881,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "18554:14:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 2882,
													"nodeType": "RevertStatement",
													"src": "18547:21:13"
												}
											},
											{
												"expression": {
													"components": [
														{
															"expression": {
																"id": 2884,
																"name": "deal",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2872,
																"src": "18600:4:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Deal_$1409_storage_ptr",
																	"typeString": "struct EtharisEscrow.Deal storage pointer"
																}
															},
															"id": 2885,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "18605:6:13",
															"memberName": "dealId",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1387,
															"src": "18600:11:13",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage",
																"typeString": "string storage ref"
															}
														},
														{
															"expression": {
																"id": 2886,
																"name": "deal",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2872,
																"src": "18625:4:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Deal_$1409_storage_ptr",
																	"typeString": "struct EtharisEscrow.Deal storage pointer"
																}
															},
															"id": 2887,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "18630:5:13",
															"memberName": "brand",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1383,
															"src": "18625:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 2888,
																"name": "deal",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2872,
																"src": "18649:4:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Deal_$1409_storage_ptr",
																	"typeString": "struct EtharisEscrow.Deal storage pointer"
																}
															},
															"id": 2889,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "18654:7:13",
															"memberName": "creator",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1385,
															"src": "18649:12:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 2890,
																"name": "deal",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2872,
																"src": "18675:4:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Deal_$1409_storage_ptr",
																	"typeString": "struct EtharisEscrow.Deal storage pointer"
																}
															},
															"id": 2891,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "18680:6:13",
															"memberName": "amount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1393,
															"src": "18675:11:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														},
														{
															"expression": {
																"id": 2892,
																"name": "deal",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2872,
																"src": "18700:4:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Deal_$1409_storage_ptr",
																	"typeString": "struct EtharisEscrow.Deal storage pointer"
																}
															},
															"id": 2893,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "18705:8:13",
															"memberName": "deadline",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1395,
															"src": "18700:13:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														{
															"expression": {
																"id": 2894,
																"name": "deal",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2872,
																"src": "18727:4:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Deal_$1409_storage_ptr",
																	"typeString": "struct EtharisEscrow.Deal storage pointer"
																}
															},
															"id": 2895,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "18732:6:13",
															"memberName": "status",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1406,
															"src": "18727:11:13",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_ContractStatus_$1381",
																"typeString": "enum EtharisEscrow.ContractStatus"
															}
														},
														{
															"expression": {
																"id": 2896,
																"name": "deal",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2872,
																"src": "18752:4:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Deal_$1409_storage_ptr",
																	"typeString": "struct EtharisEscrow.Deal storage pointer"
																}
															},
															"id": 2897,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "18757:9:13",
															"memberName": "briefHash",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1389,
															"src": "18752:14:13",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage",
																"typeString": "string storage ref"
															}
														},
														{
															"expression": {
																"id": 2898,
																"name": "deal",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2872,
																"src": "18780:4:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Deal_$1409_storage_ptr",
																	"typeString": "struct EtharisEscrow.Deal storage pointer"
																}
															},
															"id": 2899,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "18785:10:13",
															"memberName": "contentUrl",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1391,
															"src": "18780:15:13",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage",
																"typeString": "string storage ref"
															}
														},
														{
															"expression": {
																"id": 2900,
																"name": "deal",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2872,
																"src": "18809:4:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Deal_$1409_storage_ptr",
																	"typeString": "struct EtharisEscrow.Deal storage pointer"
																}
															},
															"id": 2901,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "18814:14:13",
															"memberName": "reviewDeadline",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1401,
															"src": "18809:19:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														{
															"expression": {
																"id": 2902,
																"name": "deal",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2872,
																"src": "18842:4:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Deal_$1409_storage_ptr",
																	"typeString": "struct EtharisEscrow.Deal storage pointer"
																}
															},
															"id": 2903,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "18847:8:13",
															"memberName": "fundedAt",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1397,
															"src": "18842:13:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														{
															"expression": {
																"id": 2904,
																"name": "deal",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2872,
																"src": "18869:4:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Deal_$1409_storage_ptr",
																	"typeString": "struct EtharisEscrow.Deal storage pointer"
																}
															},
															"id": 2905,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "18874:11:13",
															"memberName": "submittedAt",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1399,
															"src": "18869:16:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														{
															"expression": {
																"id": 2906,
																"name": "deal",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2872,
																"src": "18899:4:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Deal_$1409_storage_ptr",
																	"typeString": "struct EtharisEscrow.Deal storage pointer"
																}
															},
															"id": 2907,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "18904:9:13",
															"memberName": "createdAt",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1403,
															"src": "18899:14:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														{
															"expression": {
																"id": 2908,
																"name": "deal",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2872,
																"src": "18927:4:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Deal_$1409_storage_ptr",
																	"typeString": "struct EtharisEscrow.Deal storage pointer"
																}
															},
															"id": 2909,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "18932:6:13",
															"memberName": "exists",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1408,
															"src": "18927:11:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"id": 2910,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "18586:362:13",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_string_storage_$_t_address_$_t_address_$_t_uint96_$_t_uint64_$_t_enum$_ContractStatus_$1381_$_t_string_storage_$_t_string_storage_$_t_uint64_$_t_uint64_$_t_uint64_$_t_uint64_$_t_bool_$",
														"typeString": "tuple(string storage ref,address,address,uint96,uint64,enum EtharisEscrow.ContractStatus,string storage ref,string storage ref,uint64,uint64,uint64,uint64,bool)"
													}
												},
												"functionReturnParameters": 2869,
												"id": 2911,
												"nodeType": "Return",
												"src": "18579:369:13"
											}
										]
									},
									"functionSelector": "e7079180",
									"id": 2913,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getDeal",
									"nameLocation": "17961:7:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2841,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2840,
												"mutability": "mutable",
												"name": "_dealId",
												"nameLocation": "17992:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 2913,
												"src": "17978:21:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2839,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "17978:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17968:37:13"
									},
									"returnParameters": {
										"id": 2869,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2843,
												"mutability": "mutable",
												"name": "dealId",
												"nameLocation": "18080:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 2913,
												"src": "18066:20:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2842,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "18066:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2845,
												"mutability": "mutable",
												"name": "brand",
												"nameLocation": "18108:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 2913,
												"src": "18100:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2844,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18100:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2847,
												"mutability": "mutable",
												"name": "creator",
												"nameLocation": "18135:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 2913,
												"src": "18127:15:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2846,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18127:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2849,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "18163:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 2913,
												"src": "18156:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 2848,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "18156:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2851,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "18190:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 2913,
												"src": "18183:15:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 2850,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "18183:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2854,
												"mutability": "mutable",
												"name": "status",
												"nameLocation": "18227:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 2913,
												"src": "18212:21:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_ContractStatus_$1381",
													"typeString": "enum EtharisEscrow.ContractStatus"
												},
												"typeName": {
													"id": 2853,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2852,
														"name": "ContractStatus",
														"nameLocations": [
															"18212:14:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1381,
														"src": "18212:14:13"
													},
													"referencedDeclaration": 1381,
													"src": "18212:14:13",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_ContractStatus_$1381",
														"typeString": "enum EtharisEscrow.ContractStatus"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2856,
												"mutability": "mutable",
												"name": "briefHash",
												"nameLocation": "18261:9:13",
												"nodeType": "VariableDeclaration",
												"scope": 2913,
												"src": "18247:23:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2855,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "18247:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2858,
												"mutability": "mutable",
												"name": "contentUrl",
												"nameLocation": "18298:10:13",
												"nodeType": "VariableDeclaration",
												"scope": 2913,
												"src": "18284:24:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2857,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "18284:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2860,
												"mutability": "mutable",
												"name": "reviewDeadline",
												"nameLocation": "18329:14:13",
												"nodeType": "VariableDeclaration",
												"scope": 2913,
												"src": "18322:21:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 2859,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "18322:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2862,
												"mutability": "mutable",
												"name": "fundedAt",
												"nameLocation": "18364:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 2913,
												"src": "18357:15:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 2861,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "18357:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2864,
												"mutability": "mutable",
												"name": "submittedAt",
												"nameLocation": "18393:11:13",
												"nodeType": "VariableDeclaration",
												"scope": 2913,
												"src": "18386:18:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 2863,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "18386:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2866,
												"mutability": "mutable",
												"name": "createdAt",
												"nameLocation": "18425:9:13",
												"nodeType": "VariableDeclaration",
												"scope": 2913,
												"src": "18418:16:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 2865,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "18418:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2868,
												"mutability": "mutable",
												"name": "exists",
												"nameLocation": "18453:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 2913,
												"src": "18448:11:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2867,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "18448:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18052:417:13"
									},
									"scope": 3154,
									"src": "17952:1003:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2932,
										"nodeType": "Block",
										"src": "19078:102:13",
										"statements": [
											{
												"expression": {
													"condition": {
														"id": 2923,
														"name": "_isBrand",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2917,
														"src": "19107:8:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"baseExpression": {
															"id": 2927,
															"name": "_creatorDeals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1424,
															"src": "19146:13:13",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_string_storage_$dyn_storage_$",
																"typeString": "mapping(address => string storage ref[] storage ref)"
															}
														},
														"id": 2929,
														"indexExpression": {
															"id": 2928,
															"name": "_userAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2915,
															"src": "19160:12:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "19146:27:13",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
															"typeString": "string storage ref[] storage ref"
														}
													},
													"id": 2930,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "19107:66:13",
													"trueExpression": {
														"baseExpression": {
															"id": 2924,
															"name": "_brandDeals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1419,
															"src": "19118:11:13",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_string_storage_$dyn_storage_$",
																"typeString": "mapping(address => string storage ref[] storage ref)"
															}
														},
														"id": 2926,
														"indexExpression": {
															"id": 2925,
															"name": "_userAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2915,
															"src": "19130:12:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "19118:25:13",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
															"typeString": "string storage ref[] storage ref"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
														"typeString": "string storage ref[] storage pointer"
													}
												},
												"functionReturnParameters": 2922,
												"id": 2931,
												"nodeType": "Return",
												"src": "19088:85:13"
											}
										]
									},
									"functionSelector": "9fad59b4",
									"id": 2933,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getDeals",
									"nameLocation": "18970:8:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2918,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2915,
												"mutability": "mutable",
												"name": "_userAddress",
												"nameLocation": "18996:12:13",
												"nodeType": "VariableDeclaration",
												"scope": 2933,
												"src": "18988:20:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2914,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18988:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2917,
												"mutability": "mutable",
												"name": "_isBrand",
												"nameLocation": "19023:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 2933,
												"src": "19018:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2916,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "19018:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18978:59:13"
									},
									"returnParameters": {
										"id": 2922,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2921,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2933,
												"src": "19061:15:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
													"typeString": "string[]"
												},
												"typeName": {
													"baseType": {
														"id": 2919,
														"name": "string",
														"nodeType": "ElementaryTypeName",
														"src": "19061:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage_ptr",
															"typeString": "string"
														}
													},
													"id": 2920,
													"nodeType": "ArrayTypeName",
													"src": "19061:8:13",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
														"typeString": "string[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19060:17:13"
									},
									"scope": 3154,
									"src": "18961:219:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2962,
										"nodeType": "Block",
										"src": "19276:206:13",
										"statements": [
											{
												"assignments": [
													2942
												],
												"declarations": [
													{
														"constant": false,
														"id": 2942,
														"mutability": "mutable",
														"name": "deal",
														"nameLocation": "19299:4:13",
														"nodeType": "VariableDeclaration",
														"scope": 2962,
														"src": "19286:17:13",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Deal_$1409_storage_ptr",
															"typeString": "struct EtharisEscrow.Deal"
														},
														"typeName": {
															"id": 2941,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2940,
																"name": "Deal",
																"nameLocations": [
																	"19286:4:13"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1409,
																"src": "19286:4:13"
															},
															"referencedDeclaration": 1409,
															"src": "19286:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Deal_$1409_storage_ptr",
																"typeString": "struct EtharisEscrow.Deal"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2946,
												"initialValue": {
													"baseExpression": {
														"id": 2943,
														"name": "_deals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1414,
														"src": "19306:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_Deal_$1409_storage_$",
															"typeString": "mapping(string memory => struct EtharisEscrow.Deal storage ref)"
														}
													},
													"id": 2945,
													"indexExpression": {
														"id": 2944,
														"name": "_dealId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2935,
														"src": "19313:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "19306:15:13",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Deal_$1409_storage",
														"typeString": "struct EtharisEscrow.Deal storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "19286:35:13"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2960,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 2954,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 2947,
																"name": "deal",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2942,
																"src": "19350:4:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Deal_$1409_storage_ptr",
																	"typeString": "struct EtharisEscrow.Deal storage pointer"
																}
															},
															"id": 2948,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "19355:6:13",
															"memberName": "exists",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1408,
															"src": "19350:11:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_enum$_ContractStatus_$1381",
																"typeString": "enum EtharisEscrow.ContractStatus"
															},
															"id": 2953,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 2949,
																	"name": "deal",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2942,
																	"src": "19377:4:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Deal_$1409_storage_ptr",
																		"typeString": "struct EtharisEscrow.Deal storage pointer"
																	}
																},
																"id": 2950,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "19382:6:13",
																"memberName": "status",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1406,
																"src": "19377:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_ContractStatus_$1381",
																	"typeString": "enum EtharisEscrow.ContractStatus"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 2951,
																	"name": "ContractStatus",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1381,
																	"src": "19392:14:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_ContractStatus_$1381_$",
																		"typeString": "type(enum EtharisEscrow.ContractStatus)"
																	}
																},
																"id": 2952,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "19407:14:13",
																"memberName": "PENDING_REVIEW",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1377,
																"src": "19392:29:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_ContractStatus_$1381",
																	"typeString": "enum EtharisEscrow.ContractStatus"
																}
															},
															"src": "19377:44:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "19350:71:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2959,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 2955,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "19437:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 2956,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "19443:9:13",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "19437:15:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"expression": {
																"id": 2957,
																"name": "deal",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2942,
																"src": "19456:4:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Deal_$1409_storage_ptr",
																	"typeString": "struct EtharisEscrow.Deal storage pointer"
																}
															},
															"id": 2958,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "19461:14:13",
															"memberName": "reviewDeadline",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1401,
															"src": "19456:19:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"src": "19437:38:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "19350:125:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2939,
												"id": 2961,
												"nodeType": "Return",
												"src": "19331:144:13"
											}
										]
									},
									"functionSelector": "76492d3f",
									"id": 2963,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "canAutoRelease",
									"nameLocation": "19195:14:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2936,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2935,
												"mutability": "mutable",
												"name": "_dealId",
												"nameLocation": "19233:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 2963,
												"src": "19219:21:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2934,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "19219:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19209:37:13"
									},
									"returnParameters": {
										"id": 2939,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2938,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2963,
												"src": "19270:4:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2937,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "19270:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19269:6:13"
									},
									"scope": 3154,
									"src": "19186:296:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2996,
										"nodeType": "Block",
										"src": "19749:236:13",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													},
													"id": 2973,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2971,
														"name": "_newFeeBps",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2965,
														"src": "19763:10:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31303030",
														"id": 2972,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "19776:4:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000_by_1",
															"typeString": "int_const 1000"
														},
														"value": "1000"
													},
													"src": "19763:17:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2977,
												"nodeType": "IfStatement",
												"src": "19759:42:13",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 2974,
															"name": "FeeTooHigh",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1347,
															"src": "19789:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 2975,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "19789:12:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 2976,
													"nodeType": "RevertStatement",
													"src": "19782:19:13"
												}
											},
											{
												"assignments": [
													2979
												],
												"declarations": [
													{
														"constant": false,
														"id": 2979,
														"mutability": "mutable",
														"name": "oldFee",
														"nameLocation": "19819:6:13",
														"nodeType": "VariableDeclaration",
														"scope": 2996,
														"src": "19812:13:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														},
														"typeName": {
															"id": 2978,
															"name": "uint96",
															"nodeType": "ElementaryTypeName",
															"src": "19812:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2981,
												"initialValue": {
													"id": 2980,
													"name": "_platformFeeBps",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1361,
													"src": "19828:15:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "19812:31:13"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													},
													"id": 2984,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2982,
														"name": "oldFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2979,
														"src": "19857:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 2983,
														"name": "_newFeeBps",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2965,
														"src": "19867:10:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"src": "19857:20:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2986,
												"nodeType": "IfStatement",
												"src": "19853:33:13",
												"trueBody": {
													"functionReturnParameters": 2970,
													"id": 2985,
													"nodeType": "Return",
													"src": "19879:7:13"
												}
											},
											{
												"expression": {
													"id": 2989,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2987,
														"name": "_platformFeeBps",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1361,
														"src": "19896:15:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2988,
														"name": "_newFeeBps",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2965,
														"src": "19914:10:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"src": "19896:28:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"id": 2990,
												"nodeType": "ExpressionStatement",
												"src": "19896:28:13"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2992,
															"name": "oldFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2979,
															"src": "19959:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														},
														{
															"id": 2993,
															"name": "_newFeeBps",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2965,
															"src": "19967:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															},
															{
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														],
														"id": 2991,
														"name": "PlatformFeeUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1504,
														"src": "19940:18:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint96_$_t_uint96_$returns$__$",
															"typeString": "function (uint96,uint96)"
														}
													},
													"id": 2994,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19940:38:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2995,
												"nodeType": "EmitStatement",
												"src": "19935:43:13"
											}
										]
									},
									"functionSelector": "317b8c5b",
									"id": 2997,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 2968,
													"name": "SERVER_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1374,
													"src": "19736:11:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 2969,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2967,
												"name": "onlyRole",
												"nameLocations": [
													"19727:8:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 41,
												"src": "19727:8:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "19727:21:13"
										}
									],
									"name": "updatePlatformFee",
									"nameLocation": "19667:17:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2966,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2965,
												"mutability": "mutable",
												"name": "_newFeeBps",
												"nameLocation": "19701:10:13",
												"nodeType": "VariableDeclaration",
												"scope": 2997,
												"src": "19694:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 2964,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "19694:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19684:33:13"
									},
									"returnParameters": {
										"id": 2970,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19749:0:13"
									},
									"scope": 3154,
									"src": "19658:327:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3033,
										"nodeType": "Block",
										"src": "20087:275:13",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 3010,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3005,
														"name": "_newRecipient",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2999,
														"src": "20101:13:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 3008,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "20126:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 3007,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "20118:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 3006,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "20118:7:13",
																"typeDescriptions": {}
															}
														},
														"id": 3009,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "20118:10:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "20101:27:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3014,
												"nodeType": "IfStatement",
												"src": "20097:56:13",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 3011,
															"name": "InvalidAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1309,
															"src": "20137:14:13",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 3012,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "20137:16:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 3013,
													"nodeType": "RevertStatement",
													"src": "20130:23:13"
												}
											},
											{
												"assignments": [
													3016
												],
												"declarations": [
													{
														"constant": false,
														"id": 3016,
														"mutability": "mutable",
														"name": "oldRecipient",
														"nameLocation": "20172:12:13",
														"nodeType": "VariableDeclaration",
														"scope": 3033,
														"src": "20164:20:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 3015,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "20164:7:13",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3018,
												"initialValue": {
													"id": 3017,
													"name": "_feeRecipient",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1369,
													"src": "20187:13:13",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "20164:36:13"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 3021,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3019,
														"name": "oldRecipient",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3016,
														"src": "20214:12:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 3020,
														"name": "_newRecipient",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2999,
														"src": "20230:13:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "20214:29:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3023,
												"nodeType": "IfStatement",
												"src": "20210:42:13",
												"trueBody": {
													"functionReturnParameters": 3004,
													"id": 3022,
													"nodeType": "Return",
													"src": "20245:7:13"
												}
											},
											{
												"expression": {
													"id": 3026,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3024,
														"name": "_feeRecipient",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1369,
														"src": "20262:13:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3025,
														"name": "_newRecipient",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2999,
														"src": "20278:13:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "20262:29:13",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 3027,
												"nodeType": "ExpressionStatement",
												"src": "20262:29:13"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 3029,
															"name": "oldRecipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3016,
															"src": "20327:12:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3030,
															"name": "_newRecipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2999,
															"src": "20341:13:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 3028,
														"name": "FeeRecipientUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1510,
														"src": "20307:19:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 3031,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20307:48:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3032,
												"nodeType": "EmitStatement",
												"src": "20302:53:13"
											}
										]
									},
									"functionSelector": "f160d369",
									"id": 3034,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 3002,
													"name": "SERVER_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1374,
													"src": "20074:11:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 3003,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3001,
												"name": "onlyRole",
												"nameLocations": [
													"20065:8:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 41,
												"src": "20065:8:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "20065:21:13"
										}
									],
									"name": "updateFeeRecipient",
									"nameLocation": "20000:18:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3000,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2999,
												"mutability": "mutable",
												"name": "_newRecipient",
												"nameLocation": "20036:13:13",
												"nodeType": "VariableDeclaration",
												"scope": 3034,
												"src": "20028:21:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2998,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20028:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20018:37:13"
									},
									"returnParameters": {
										"id": 3004,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20087:0:13"
									},
									"scope": 3154,
									"src": "19991:371:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3043,
										"nodeType": "Block",
										"src": "20416:25:13",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 3040,
														"name": "_pause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 560,
														"src": "20426:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 3041,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20426:8:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3042,
												"nodeType": "ExpressionStatement",
												"src": "20426:8:13"
											}
										]
									},
									"functionSelector": "8456cb59",
									"id": 3044,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 3037,
													"name": "SERVER_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1374,
													"src": "20403:11:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 3038,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3036,
												"name": "onlyRole",
												"nameLocations": [
													"20394:8:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 41,
												"src": "20394:8:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "20394:21:13"
										}
									],
									"name": "pause",
									"nameLocation": "20377:5:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3035,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20382:2:13"
									},
									"returnParameters": {
										"id": 3039,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20416:0:13"
									},
									"scope": 3154,
									"src": "20368:73:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3053,
										"nodeType": "Block",
										"src": "20497:27:13",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 3050,
														"name": "_unpause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 576,
														"src": "20507:8:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 3051,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20507:10:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3052,
												"nodeType": "ExpressionStatement",
												"src": "20507:10:13"
											}
										]
									},
									"functionSelector": "3f4ba83a",
									"id": 3054,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 3047,
													"name": "SERVER_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1374,
													"src": "20484:11:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 3048,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3046,
												"name": "onlyRole",
												"nameLocations": [
													"20475:8:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 41,
												"src": "20475:8:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "20475:21:13"
										}
									],
									"name": "unpause",
									"nameLocation": "20456:7:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3045,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20463:2:13"
									},
									"returnParameters": {
										"id": 3049,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20497:0:13"
									},
									"scope": 3154,
									"src": "20447:77:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3090,
										"nodeType": "Block",
										"src": "20643:187:13",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 3069,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3064,
														"name": "_token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3056,
														"src": "20657:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"id": 3067,
																"name": "_idrxToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1358,
																"src": "20675:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$720",
																	"typeString": "contract IERC20"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$720",
																	"typeString": "contract IERC20"
																}
															],
															"id": 3066,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "20667:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 3065,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "20667:7:13",
																"typeDescriptions": {}
															}
														},
														"id": 3068,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "20667:19:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "20657:29:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3073,
												"nodeType": "IfStatement",
												"src": "20653:62:13",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 3070,
															"name": "CannotWithdrawIDRX",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1349,
															"src": "20695:18:13",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 3071,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "20695:20:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 3072,
													"nodeType": "RevertStatement",
													"src": "20688:27:13"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3076,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3074,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3058,
														"src": "20729:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 3075,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "20740:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "20729:12:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3080,
												"nodeType": "IfStatement",
												"src": "20725:40:13",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 3077,
															"name": "InvalidAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1353,
															"src": "20750:13:13",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 3078,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "20750:15:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 3079,
													"nodeType": "RevertStatement",
													"src": "20743:22:13"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 3085,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "20803:3:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 3086,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "20807:6:13",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "20803:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3087,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3058,
															"src": "20815:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 3082,
																	"name": "_token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3056,
																	"src": "20782:6:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 3081,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 720,
																"src": "20775:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$720_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 3083,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "20775:14:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$720",
																"typeString": "contract IERC20"
															}
														},
														"id": 3084,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "20790:12:13",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 801,
														"src": "20775:27:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$720_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$720_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 3088,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20775:48:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3089,
												"nodeType": "ExpressionStatement",
												"src": "20775:48:13"
											}
										]
									},
									"functionSelector": "95ccea67",
									"id": 3091,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 3061,
													"name": "SERVER_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1374,
													"src": "20630:11:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 3062,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3060,
												"name": "onlyRole",
												"nameLocations": [
													"20621:8:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 41,
												"src": "20621:8:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "20621:21:13"
										}
									],
									"name": "emergencyWithdraw",
									"nameLocation": "20539:17:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3059,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3056,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "20574:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 3091,
												"src": "20566:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3055,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20566:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3058,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "20598:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 3091,
												"src": "20590:15:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3057,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20590:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20556:55:13"
									},
									"returnParameters": {
										"id": 3063,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20643:0:13"
									},
									"scope": 3154,
									"src": "20530:300:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3152,
										"nodeType": "Block",
										"src": "21179:394:13",
										"statements": [
											{
												"assignments": [
													3111
												],
												"declarations": [
													{
														"constant": false,
														"id": 3111,
														"mutability": "mutable",
														"name": "token",
														"nameLocation": "21202:5:13",
														"nodeType": "VariableDeclaration",
														"scope": 3152,
														"src": "21189:18:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20Permit_$756",
															"typeString": "contract IERC20Permit"
														},
														"typeName": {
															"id": 3110,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 3109,
																"name": "IERC20Permit",
																"nameLocations": [
																	"21189:12:13"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 756,
																"src": "21189:12:13"
															},
															"referencedDeclaration": 756,
															"src": "21189:12:13",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Permit_$756",
																"typeString": "contract IERC20Permit"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3118,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 3115,
																	"name": "_idrxToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1358,
																	"src": "21231:10:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$720",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$720",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 3114,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "21223:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 3113,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "21223:7:13",
																	"typeDescriptions": {}
																}
															},
															"id": 3116,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "21223:19:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 3112,
														"name": "IERC20Permit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 756,
														"src": "21210:12:13",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_IERC20Permit_$756_$",
															"typeString": "type(contract IERC20Permit)"
														}
													},
													"id": 3117,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21210:33:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Permit_$756",
														"typeString": "contract IERC20Permit"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "21189:54:13"
											},
											{
												"clauses": [
													{
														"block": {
															"id": 3144,
															"nodeType": "Block",
															"src": "21313:201:13",
															"statements": [
																{
																	"assignments": [
																		3130
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 3130,
																			"mutability": "mutable",
																			"name": "allowance",
																			"nameLocation": "21388:9:13",
																			"nodeType": "VariableDeclaration",
																			"scope": 3144,
																			"src": "21380:17:13",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"typeName": {
																				"id": 3129,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "21380:7:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"visibility": "internal"
																		}
																	],
																	"id": 3136,
																	"initialValue": {
																		"arguments": [
																			{
																				"id": 3133,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3094,
																				"src": "21421:5:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 3134,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3096,
																				"src": "21428:7:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"expression": {
																				"id": 3131,
																				"name": "_idrxToken",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1358,
																				"src": "21400:10:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$720",
																					"typeString": "contract IERC20"
																				}
																			},
																			"id": 3132,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "21411:9:13",
																			"memberName": "allowance",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 697,
																			"src": "21400:20:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																				"typeString": "function (address,address) view external returns (uint256)"
																			}
																		},
																		"id": 3135,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "21400:36:13",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "VariableDeclarationStatement",
																	"src": "21380:56:13"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 3139,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 3137,
																			"name": "allowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3130,
																			"src": "21454:9:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<",
																		"rightExpression": {
																			"id": 3138,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3098,
																			"src": "21466:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "21454:17:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 3143,
																	"nodeType": "IfStatement",
																	"src": "21450:53:13",
																	"trueBody": {
																		"errorCall": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 3140,
																				"name": "InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1329,
																				"src": "21480:21:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 3141,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "21480:23:13",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 3142,
																		"nodeType": "RevertStatement",
																		"src": "21473:30:13"
																	}
																}
															]
														},
														"errorName": "",
														"id": 3145,
														"nodeType": "TryCatchClause",
														"src": "21313:201:13"
													},
													{
														"block": {
															"id": 3149,
															"nodeType": "Block",
															"src": "21521:46:13",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 3146,
																			"name": "PermitFailed",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1355,
																			"src": "21542:12:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 3147,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "21542:14:13",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 3148,
																	"nodeType": "RevertStatement",
																	"src": "21535:21:13"
																}
															]
														},
														"errorName": "",
														"id": 3150,
														"nodeType": "TryCatchClause",
														"src": "21515:52:13"
													}
												],
												"externalCall": {
													"arguments": [
														{
															"id": 3121,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3094,
															"src": "21271:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3122,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3096,
															"src": "21278:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3123,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3098,
															"src": "21287:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 3124,
															"name": "deadline",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3100,
															"src": "21294:8:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 3125,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3102,
															"src": "21304:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 3126,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3104,
															"src": "21307:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 3127,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3106,
															"src": "21310:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"id": 3119,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3111,
															"src": "21258:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Permit_$756",
																"typeString": "contract IERC20Permit"
															}
														},
														"id": 3120,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "21264:6:13",
														"memberName": "permit",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 741,
														"src": "21258:12:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (address,address,uint256,uint256,uint8,bytes32,bytes32) external"
														}
													},
													"id": 3128,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21258:54:13",
													"tryCall": true,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3151,
												"nodeType": "TryStatement",
												"src": "21254:313:13"
											}
										]
									},
									"documentation": {
										"id": 3092,
										"nodeType": "StructuredDocumentation",
										"src": "20889:94:13",
										"text": " @dev Internal function to perform a safe permit with proper error handling."
									},
									"id": 3153,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_executePermit",
									"nameLocation": "20997:14:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3107,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3094,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "21029:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 3153,
												"src": "21021:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3093,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21021:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3096,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "21052:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 3153,
												"src": "21044:15:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3095,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21044:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3098,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "21077:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 3153,
												"src": "21069:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3097,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21069:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3100,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "21100:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 3153,
												"src": "21092:16:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3099,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21092:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3102,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "21124:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 3153,
												"src": "21118:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 3101,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "21118:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3104,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "21143:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 3153,
												"src": "21135:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 3103,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "21135:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3106,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "21162:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 3153,
												"src": "21154:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 3105,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "21154:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21011:158:13"
									},
									"returnParameters": {
										"id": 3108,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21179:0:13"
									},
									"scope": 3154,
									"src": "20988:585:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3155,
							"src": "680:20895:13",
							"usedErrors": [
								306,
								309,
								768,
								1307,
								1309,
								1311,
								1313,
								1315,
								1317,
								1319,
								1321,
								1323,
								1325,
								1327,
								1329,
								1331,
								1333,
								1335,
								1337,
								1339,
								1341,
								1343,
								1345,
								1347,
								1349,
								1351,
								1353,
								1355
							],
							"usedEvents": [
								318,
								327,
								336,
								480,
								485,
								1436,
								1444,
								1454,
								1460,
								1470,
								1478,
								1490,
								1498,
								1504,
								1510
							]
						}
					],
					"src": "32:21544:13"
				},
				"id": 13
			}
		}
	}
}